{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","sorting","cellEditing","matcher","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureCreatedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","SchemaThemeSetEvent","VerticalFormationRepository","inMemoryStructureQueryStore","verticalFormation$","getAggregateId","getById","ifPresent","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureDialogColumnManagerService","injector","fabricDialogService","open","compositionId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","Renderer2","CompositionRepository","ReadModelRepository","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","composition","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","CompositionCommandService","compositionDispatcher","enableColumn","disableColumn","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","hostValue","[class.gui-structure-column-manager-icon]","[class.gui-icon]","StructureColumnManagerIconComponent","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","ColumnEntity","sortStatus","SortOrder","getDefaultAlign","getDefaultView","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","ColumnId","NumberColumnPresentation","getInstance","NumberColumnPresentation_1","getPossibleViews","ValueObject","ColumnPresentation","BooleanColumnPresentation","BooleanColumnPresentation_1","DateColumnPresentation","DateColumnPresentation_1","StringColumnPresentation","StringColumnPresentation_1","UnknownColumnPresentation","UnknownColumnPresentation_1","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","getColoring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureCommandService","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","LocalStructureSearchDispatcher","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","simpleChanges","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseSetDomainEvent","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","enterEditMode","exitEditMode","cell","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","SchemaSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureAggregationsChangedEvent","getAggregations","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","aggregationEnabled","possibleAggregations","assignPossibleAggregations","assignAggregations","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","of","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","AGGREGATION_CALCULATORS","AggregationCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","StructureAggregationsChangedAggregateEvent","AggregationManager","calculators","calculations","calc","allFields","remove","update","AggregationManagerFactory","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","setConfig","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","enabledDataTypes","addSearchPhrase","searchableFields","removeSearchFilters","searchedItems","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","AggregateFactory","SetPagingCommandHandler","structureAggregate","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaCommandHandlers","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","isAggregateTypePresent","[class.gui-structure-aggregation-panel]","StructureAggregationPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","submitChanges","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { Structure } from './structure';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport abstract class StructureRepository {\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.10.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../command/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\nimport { Structure } from '../structure';\nimport { SchemaThemeSetEvent } from '../../../schema/command/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\t\t\tconst verticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate fabricDialogService: FabricDialogService) {\n\t}\n\n\topen(compositionId: CompositionId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, injector);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\nimport { DomainEventBus, ReadModelRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionRepository extends ReadModelRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<Composition>>;\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/command/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CreateCompositionCommand } from './create-composition/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nconst selector = 'gui-structure-column-manager-icon',\n\thostSelector = '[class.' + selector + ']';\n\nlet hostValue = {};\n\nhostValue[hostSelector] = 'true';\nhostValue['[class.gui-icon]'] = 'true';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: hostValue\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nconst selector = 'gui-structure-info-icon',\n\thostSelector = '[class.' + selector + ']';\n\nlet hostValue = {};\n\nhostValue[hostSelector] = 'true';\nhostValue['[class.gui-icon]'] = 'true';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: hostValue\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span> \n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\t\t\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template> \n\t\t\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { ColumnAlign } from '../../column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity {\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from '../../column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign();\n\t\t}\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { ColumnId } from '../../command/column/column.id';\nimport { ColumnAlign } from '../../column-align';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { ColumnAlign } from '../../column-align';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/command/create-composition/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<Composition>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: Composition) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { CellView } from '../../../cell-view';\nimport { ColumnAlign } from '../../../column-align';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(): ColumnAlign;\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.CHECKBOX;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.CENTER;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ValueObject } from '@generic-ui/hermes';\n\nimport { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../../../column-align';\nimport { CellView } from '../../../../cell-view';\n\n\n@ValueObject\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../../structure/domain/structure/command/field/data-type/type.field';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/command/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../../../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/command/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/command/create-composition/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../domain/read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../domain/read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../domain/read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { globalStructureId } from '../../../../global-structure-id';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { globalStructureId } from '../../../../global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../../structure-id';\nimport { globalStructureId } from '../../../global-structure-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { CreateStructureCommand } from '../../domain/structure/command/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/command/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { LocalStructureSearchDispatcher } from './search/local-structure-search.dispatcher';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchDispatcher }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\nimport { globalStructureId } from '../../../domain/global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId, AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureAggregate> {\n\n\tabstract getById(aggregateId: AggregateId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../../domain/structure/command/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tSchemaSetEvent,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\tconst key = structure.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 32;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../../domain/structure/command/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../../structure/command/field/data-type/type.field';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortOrder } from '../../../../../composition/domain/command/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28; // ?\n\n\tprivate pagerHeight = 35; // ?\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { StructureId } from '../../../../structure-id';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../schema/schema-theme';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.getSchema().setTheme(theme);\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(32);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(32);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(32);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\nimport { AggregateFactory } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tschema = aggregate.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<StructureAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaBottomHeaderCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaBottomHeaderCommand> {\n\t\treturn ChangeSchemaBottomHeaderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaBottomHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderBottom(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaTopHeaderCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaTopHeaderCommand> {\n\t\treturn ChangeSchemaTopHeaderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaTopHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderTop(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<StructureAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowColoringCommand): void {\n\n\t\t// missing implementation\n\t\tconst schema = structure.getSchema(),\n\t\t\tcoloring = command.getColoring();\n\n\t\tschema.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler implements CommandHandler<StructureAggregate, SetSchemaCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaCommand> {\n\t\treturn SetSchemaCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetSchemaCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaBottomHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaTopHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, 'StructureAggregate')\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon class=\"gui-header-menu-icon\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nconst selector = 'gui-structure-column-menu-icon',\n\thostSelector = '[class.' + selector + ']';\n\nlet hostValue = {};\n\nhostValue[hostSelector] = 'true';\nhostValue['[class.gui-icon]'] = 'true';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: hostValue\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-aggregation-panel]': 'true'\n\t}\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, Command, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, Input, SimpleChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandService } from '../../../../ui-api/source/source-command.service';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { SourceReadModelService } from './source/source-read-model.service';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/command/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/command/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { schemaCommandHandlers } from './schema/schema.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...schemaCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}