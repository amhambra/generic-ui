{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-grid/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/attribute/attribute-modifier.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-grid/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain-read/paging.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain-read/paging.domain.event-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.facade.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/translation.domain-facade.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field-read-model.archive.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/filter-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/quick-filter-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/search-phrase.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/enabled/searching-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain-read/search.domain-event-repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.source-origin.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain-read/source.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-grid/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.initial-values-ready.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/common/cdk/resize-detector/resize.detector.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/enabled/summaries-enabled-archive.service.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.event-repository.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries-translations.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/panel/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/group/composition-group.archive.ts","ng://@generic-ui/ngx-grid/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gate.ts","ng://@generic-ui/ngx-grid/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-grid/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/gate/structure-summaries.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-grid/schema/feature/gate/grid/theme-grid.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/source-loading.gate.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/gate/structure-sorting.gate.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/gate/structure-filter.gate.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/gate/structure-quick-filters.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-grid/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-grid/common/cdk/resize-detector/resize-detector.module.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiDefaultTranslation","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","configs","map","columns","convertColumn","header","guiColumn","columnConfig","field","width","summaries","sorting","cellEditing","formatter","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","getSource","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","structureCommandInvoker","summariesCommandInvoker","sortingCommandInvoker","pagingCommandInvoker","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","enablePaging","enable","disablePaging","disable","nextPage","prevPage","changePageSize","setPagingConfig","setPaging","setSearchingConfig","search","phrase","clearSearchPhrase","scrollToTop","scrollToBottom","scrollToRowByIndex","scrollToIndex","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","enableVirtualScroll","disableVirtualScroll","enableSummaries","setSummariesEnabled","disableSummaries","setSortConfig","setSortingConfig","StructureCommand","Command","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","SourceCommandInvoker","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SourceWarehouse","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","items","getPreparedEntities","selectedItemIds","getSelectedItemIds","selectedItems","some","getId","toString","getData","onRowSelectedReadModel","on","getValueOrNullOrThrowError","getAll","onSelectedRows","pipe","hermesMap","rm","onMode","SearchCommandInvoker","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SchemaCommandInvoker","StructureCommandInvoker","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","add","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","StyleModifier","setStyleByName","name","setWidth","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","AttributeModifier","setAttribute","PagingCommandInvoker","SummariesCommandInvoker","SetSortingCommand","getSortingConfig","ToggleSortCommand","compositionId","fieldId","getCompositionId","getFieldId","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","structureCommandDispatcher","classModifier","nativeElement","styleModifier","attributeModifier","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","ngOnDestroy","getElementRef","getGridId","detectChanges","GUI_GRID_ID","schemaReadModelRootId","Component","args","selector","template","providers","useExisting","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","StreamCloser","unsubscribe$","HermesSubject","takeUntil","hermesTakeUntil","unsubscribe","isCompleted","complete","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","streamCloser","hermesUnsubscribe$","ngAfterViewInit","hermesUnsubscribe","reRender","isViewInDom","hermesSubscribe","stream$","callback","subscribe","streamValues","hermesSubscribeWithoutRender","subscribeAndEmit","emitter","mapper","PagingWarehouse","PagingDisplayModeArchive","Archive","TOP","BOTTOM","CssClassModifier","select","CssClass","unselect","clazzName","toggle","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","PagingComponent","elRef","cssClassModifier","pagingWarehouse","pagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","position","PagingPosition","onPaging","calculatePagingVisibility","onOriginSize","size","sourceSize","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","currentPage","numberOfVisiblePages","sample","slice","compare","JSON","stringify","ReadModelObject","Boolean","Number","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","goToPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","pagingCommandService","calculate","pages","isSourceNotEmpty","pageNumber","activePage","PagingEventRepository","domainEventBus","DomainEventBus","EventRepository","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","handle","structureAggregate","command","changePaging","publish","aggregate","DomainEventPublisher","NextPageEvent","NextPageCommandHandler","PrevPageEvent","PrevPageCommandHandler","structure","ChangePagesizeCommandHandler","aggregateEvents","getEvents","event","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","StructureReadModelRepository","ofEvent","forEvents","subs","console","Reactive","PagingRepository","structureRepository","hermesFilter","getPaging","PagingDomainWarehouse","pagingRepository","oncePaging","hermesTake","PagingDomainCommandInvoker","pagingDispatcher","changePagerTop","changePagerBottom","PagingDomainEventRepository","eventBus","hermesSwitchMap","PagingApiModule","useClass","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationFacade","Dictionary","resolver","changeTranslation","_b","keys","_c","getTranslation","from","reduce","obj","setResolver","TranslationDomainFacade","dictionary","dictionary$","HermesReplaySubject","toObservable","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StaticComponent","detach","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","Theme","SchemaWarehouse","StructureDialogColumnManagerService","injector","schemaWarehouse","structureThemeConverter","fabricDialogService","open","readModelId","parentInjector","Injector","parent","onceTheme","FabricDialogService","SchemaId","SchemaReadModelRootId","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","onPreparedEntities","preparedItems","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionWarehouse","CompositionCommandInvoker","StructureColumnManagerComponent","compositionCommandInvoker","compositionWarehouse","onAllColumns","enabledColumnsCount","accumulator","toggleColumn","column","stopPropagation","disableColumn","getColumnDefinitionId","enableColumn","StructureMenuColumnManagerComponent","IconComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","coloring","SchemaRowColoring","filter","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","FieldReadModelArchive","FieldWarehouse","fieldReadModelArchive","onFields","FilterEnabledArchive","QuickFilterEnabledArchive","FilterTypeMap","getFilterTypes","FilterTypeArchive","ActiveFilterArchive","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","values","UniqueValuesArchive","FilterWarehouse","filterEnabledArchive","structureQuickFilterRepository","filterTypeArchive","uniqueValuesArchive","activeFilterArchive","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","filterTypeId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","FilterMenuComponent","fieldWarehouse","filterWarehouse","filterCommandDispatcher","fields","activeFilters","filterTypeMap","fieldReadModels","onHeaderColumns","onColumnSelect","selectedColumn","filterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","FormBuilder","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","publishFromAggregate","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","getEnabled","SetConfigFilterCommandHandler","setFilterConfig","SetConfigQuickFilterCommand","quickFiltersConfig","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","setQuickFiltersConfig","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","entities","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","f","fields_1","fields_1_1","addField","dataType","getDataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","forEvent","ofMessageType","ConfigFilterSetEventHandler","structureFilterRepository","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFilterRepository","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","uniqueValuesRepository","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","fieldConfigs","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","domainEventHandlers","registerDomainEventHandler","FilterApiModule","ActiveFilterListComponent","SearchWarehouse","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","onPhrase","clearSearch","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","StructureIdGenerator","increment","SchemaCssClassManager","cssClass","init","cssHostRef","onCssClasses","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","SUBMIT","CANCEL","InitFieldsCommand","getFieldConfigs","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","setGroups","getConfigs","groups","initCommand","columnFieldIds","convertColumnFieldIds","params","convertColumns","setColumns","columnConfigs","groupConfigs","columnFieldId","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","compositionCommandDispatcher","compositionEventRepository","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureInitialValuesReadyArchive","changeAfterInit","structureColumnInputHandler","editMode","rowHeight","setRowHeight","autoResizeWidth","setResizeWidth","maxHeight","setContainerHeight","onColumnsChanged","onContainerWidthChanged","onSourceEdited","state","StructureCellEditState","onThemeChanged","componentInitialized","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionEventRepository","SelectedRowChangedEvent","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","subject$","itemsMap","j","onItemSelected","has","StructureWarehouse","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","SetConfigSearchingCommand","searchConfig","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchPhraseSetDomainEvent","OriginSetEvent","origin","getOrigin","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchHighlightArchive","HIGHLIGHTING","SearchPlaceholderArchive","PLACEHOLDER","SearchDispatcher","searchHighlightArchive","searchPlaceholderArchive","highlighting","placeholder","searchOnInit","SearchPhraseArchive","SEARCH_PHRASE","SearchPhraseSetEventHandler","searchPhraseRepository","SearchingEnabledArchive","ENABLED","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","SearchDomainWarehouse","searchingEnabledArchive","searchPhraseArchive","onSearchEnabled","onHighlight","onPlaceholder","SearchDomainEventRepository","onEvent","SearchDomainCommandInvoker","searchDispatcher","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","FORM_SEARCH_NAME","searchForm","observeChanges","searchingEnabled","stopObserveChanges","setValue","reset","searchInputSubscription","fromRxJsObservable","debounceTime","SearchFeatureModule","searchApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","ifPresent","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","equals","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldId","FieldIdGenerator","RandomStringGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldReadModelRepository","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","Source","loading","isLoading","SourceConverter","SetSourceLoadingEvent","SourceSetLoadingCommand","SourceSetLoadingCommandHandler","SetOriginCommand","getItems","SetOriginCommandHandler","StructureEditSourceItemCommand","getParams","StructureEditSourceItemCommandHandler","editItem","SourceDispatcher","OriginItemEntity","rawData","version","getVersion","getPosition","bumpVersion","setPosition","clone","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","EntityId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","ent","recalculatePositions","getEntities","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","payload","isArray","deleteOneOriginItem","deleteOriginItemByIndex","addOriginItem","toggleRow","getFormation","findOriginItemIndex","findIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","indexes","deleteManyOriginItemByItemID","itemIds","ADD","RANGE","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isSelected","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","byIndex","DeleteCommandPayloadType","byManyIndex","byItemId","byManyItemId","getPayload","DeleteOriginItemCommandHandler","deleteItem","StructureSourceOriginArchive","StructureOriginChangedEventHandler","structureSourceOriginRepository","origin_1","StructurePreparedItemsArchive","StructurePreparedItemsEventHandler","structurePreparedItemsRepository","SourceDomainModule","SourceDomainWarehouse","getStructure","onEntities","hermesDistinctUntilChanged","ents1","ents2","flag","onEntitiesSize","onceEntities","onLoading","StructureEditSourceItemParams","getColumnFieldId","SourceDomainCommandInvoker","sourceDispatcher","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","toRxJsObservable","fieldId$","zip","array","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaDomainEvent","SchemaThemeSetEvent","getTheme","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","changeTheme","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemoryStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","findById","save","schemaAggregate","CreateSchemaCommand","CreateAggregateCommand","CreateSchemaCommandHandler","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaKey","SchemaVerticalGridRepository","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","registerMultiDomainEventHandler","SchemaDispatcher","SchemaDomainCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","toFabricTheme","setRowHeightBasedOnTheme","toSchemaRowColoring","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","SchemaDomainEventRepository","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","StructureInitialValuesReadyArchive","v","once","structureIdFactoryForGrid","generator","compositionIdFactoryForGrid","schemaIdFactoryForGrid","structureComponentSelfProviders","useFactory","deps","StructureComponent","schemaCommandDispatcher","detectorRef","structureDefinition","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureReadModelRoot","isLoaderVisible","offsetWidth","setContainerWidth","hermesTimer","onWidth","host","[class.gui-structure-border]","[id]","CellTemplateWithContext","viewTemplate","editTemplate","context","columnDefinitionId","sortStatus","sortable","getSortStatus","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","StructureColumnConfigComponent","compositionReadModelService","translationFacade","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","StructureColumnConfigService","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","structureFilterCommandService","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","VerticalFormationWarehouse","StructureHeaderComponent","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","showGroups","onContainerWidth","containerRef","onGroups","collection","isVisible","getGroups","onRowHeight","headerHeight","filtersRef","read","ChangedValueEmitter","StructureHeaderFilterComponent","sub","editContext","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","getUiId","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","onVerticalScrollEnabled","onVerticalFormation","onContainerHeight","onTopMargin","idToVerticalFormation","StructureContentComponent","formationCommandService","verticalFormationRepository","rowDetailOpened","schemaRowClass","schemaRowStyle","combineLatest","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","clazz","classFunction","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getCellView","txt","lowerCasedText","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","ResizeDetector","Observable","observer","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","throttleTime","hermesEmpty","destroy","StructureContainerComponent","ngZone","verticalFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","flatMap","onTemplateColumns","onResizeWidth","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","onScrollBarPosition","scrollPosition","scrollTop","height","runOutsideAngular","hermesFromEvent","setScrollPosition","NgZone","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","hermesStructure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","VerticalFormation_1","ROW_HEIGHT","HIDDEN_ITEMS_TOP","HIDDEN_ITEMS_BOTTOM","container","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setEnabled","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","update","SummariesManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","Override","getPrototypeOf","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","setConfig","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","tslib_1.__decorate","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multi","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SummariesEnabledArchive","StructureCreatedEventHandler","summariesEnabledArchive","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","SetScrollPositionCommand","SetRowHeightCommand","StructureSetHeightCommand","SetRowHeightBasedOnThemeCommand","StructureDomainCommandInvoker","MAX_SAFE_INTEGER","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","onSortOrder","isNoneSort","StructureColumnConfigColumnHideComponent","compositionCommandService","hideColumn","StructureColumnConfigColumnMoveComponent","moveLeft","moveRight","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","[class.gui-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","filterCommandInvoker","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","onBannerPanelConfig","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","EmptySourceComponent","EmptySourceFeatureModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","StructureSetSummariesEnabledCommand","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesEnabledSetEventHandler","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","provideSummariesCalculator","summariesProviders","SummariesDomainModule","SummariesEventRepository","SummariesWarehouse","SummariesDomainWarehouse","structureSummariesRepository","onSummariesEnabled","SummariesDomainCommandInvoker","SummariesDomainEventRepository","onSummariesChanged","SummariesApiModule","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesEventRepository","summariesTranslations","isSummariesTypePresent","SummariesFeatureModule","summariesApiModule","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","VerticalFormationScrollBarPositionArchive","DEFAULT_POSITION","ScrollBarPositionSetEventHandler","positionRepository","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationDomainWarehouse","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","getWidth","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","changeSort","sortParams","setSortStatus","param","sortParams_1","sortParams_1_1","columnId","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","presentation","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","ColumnId","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CompositionCommand","CreateCompositionCommand","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommand","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","composition","domainEvents","SetCompositionWidthCommand","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommand","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommand","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommand","getColumnId","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommand","getSortParams","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommand","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommand","CompositionMoveRightColumnCommandHandler","SetGroupsCommand","CompositionDispatcher","createComposition","setColumnEnabled","ChangeSortParams","CompositionChangeSortStatusEventHandler","compositionDispatcher","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateRef","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isResizeWidthEnabled","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionReadModelRootRepository","ReadModelRootRepository","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","CompositionDomainModule","GroupCollection","CompositionGroupArchive","CompositionDomainCommandInvoker","compositionGroupRepository","toColumnId","defId","CompositionDomainEventRepository","CompositionDomainWarehouse","compositionRepository","compositionGroupArchive","onWidthForEachColumn","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","ContentChild","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","Gate","isDefined","propertyName","SearchingGate","searching","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","PagingGate","StructurePagingGate","SelectionGate","StructureSelectionGate","StructureL10nGate","localization","translationResolver","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","StructureRowStyleGate","ThemeGridGate","SourceLoadingGate","VerticalFormationGate","virtualScroll","StructureSortingGate","StructureFilterGate","filtering","StructureQuickFiltersGate","quickFilters","structureGates","CssClassModule","StructureSharedModule","ResizeDetectorModule","createStructureDefinition","StructureModule","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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ACAK,GACAE,IAID2b,GAAA,SAAA7jD,GAmDC,SAAA6jD,EAAY18C,EACT0J,EACAqM,EACAkkB,EACAvvB,EACA2vB,EACAH,EACApF,EACAqF,EACAwiB,EACAriB,EACAC,EACAC,EACAsgB,EACArgB,EACAC,EACA9X,EACAgY,EACAC,EACAC,EACA/B,EACAgC,EACAnpB,EACAqpB,EACAC,EACAC,EACAC,EACA36B,EACA46B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAje,EACAke,EACiBtxB,EACAsyC,EACD77B,EACC87B,EACAjW,EACA9iB,EACAg5B,EACAhxC,EACjBwK,EACAnS,EACiB44C,GA/CpB,IAAAjpD,EAiDC+E,EAAA5N,KAAAZ,KACCuyD,EACAtyC,EACAgM,EACAnS,EACAnE,EACA0J,EACAoC,EACAgvC,EACA/kC,EACAkkB,EACAC,EACApF,EACAqF,EACAzvB,EACA2vB,EACAsiB,EACAriB,EACAC,EACAC,EACAC,EACAC,EACA9X,EACAgY,EACAC,EACAC,EACA/B,EACAgC,EACAnpB,EACAqpB,EACAC,EACAC,EACAC,EACA36B,EACA46B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAje,EACAke,IACAvxC,YAvDkByJ,EAAAwW,WAAAA,EACAxW,EAAA8oD,YAAAA,EACD9oD,EAAAitB,SAAAA,EACCjtB,EAAA+oD,oBAAAA,EACA/oD,EAAA8yC,mBAAAA,EACA9yC,EAAAgwB,qBAAAA,EACAhwB,EAAAgpD,oBAAAA,EACAhpD,EAAAgY,sBAAAA,EAGAhY,EAAAipD,2BAAAA,EA3DpBjpD,EAAAkpD,eAAyB,EAEzBlpD,EAAAmpD,qBAA+B,EAE/BnpD,EAAAopD,wBAAkC,EAIjBppD,EAAAie,kBAAoB,IAAI7D,GAiGxCpa,EAAKgX,cAAgB,IAAItC,GAAc1U,EAAKwW,WAAWO,eACvDiwC,EAAwBtwD,OAAOsJ,EAAKkM,aACpCs6B,EAA6B9vC,OAAOsJ,EAAK4V,eACzCizC,EAAwBnyD,OAAOsJ,EAAK0M,YA0FtC,OAxMwCzH,EAAAA,EAAAA,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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue: any, item?: any) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (source: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (source: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tsource?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tconst columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tconst columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tconst builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tsource: row.getSource(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: any;\n\n\tconstructor(source: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): any {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandInvoker } from '../../../../../structure/core/api/structure.command-invoker';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\nimport { PagingCommandInvoker } from '../../../../../structure/paging/core/api/paging.command-invoker';\nimport { SearchConfig } from '../../../../../structure/search/core/api/search-config';\nimport { SummariesCommandInvoker } from '../../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { SortingConfig } from '../../../../../structure/sorting/core/api/sorting-config';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t/**\n\t * Paging\n\t */\n\tenablePaging(): void;\n\n\tdisablePaging(): void;\n\n\tnextPage(): void;\n\n\tprevPage(): void;\n\n\tchangePageSize(pageSize: number): void;\n\n\tsetPagingConfig(config: PagingConfig): void;\n\n\t/**\n\t * Searching\n\t */\n\tsetSearchingConfig(config: SearchConfig): void;\n\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t/**\n\t * View port\n\t */\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t/**\n\t * Visual - Schema\n\t */\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n\t/**\n\t * Virtual scroll\n\t */\n\tenableVirtualScroll(): void;\n\n\tdisableVirtualScroll(): void;\n\n\t/**\n\t * Summaries\n\t */\n\tenableSummaries(): void;\n\n\tdisableSummaries(): void;\n\n\t/**\n\t * Sorting\n\t */\n\tsetSortConfig(config: SortingConfig): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandInvoker: StructureCommandInvoker;\n\n\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker;\n\n\tprivate readonly sortingCommandInvoker: SortingCommandInvoker;\n\n\tprivate readonly pagingCommandInvoker: PagingCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandInvoker: StructureCommandInvoker,\n\t\t\t\tsummariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tsortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tpagingCommandInvoker: PagingCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandInvoker = structureCommandInvoker;\n\t\tthis.summariesCommandInvoker = summariesCommandInvoker;\n\t\tthis.sortingCommandInvoker = sortingCommandInvoker;\n\t\tthis.pagingCommandInvoker = pagingCommandInvoker;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandInvoker = this.structureCommandInvoker,\n\t\t\tsummariesCommandInvoker = this.summariesCommandInvoker,\n\t\t\tsortingCommandInvoker = this.sortingCommandInvoker,\n\t\t\tpagingCommandInvoker = this.pagingCommandInvoker;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.source, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.source, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { source: r.getSource(), index: r.getIndex(), itemId: r.getItemId() } as GuiSelectedRow;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Paging\n\t\t\t */\n\n\t\t\tenablePaging(): void {\n\t\t\t\tpagingCommandInvoker.enable(structureId);\n\t\t\t},\n\n\t\t\tdisablePaging(): void {\n\t\t\t\tpagingCommandInvoker.disable(structureId);\n\t\t\t},\n\n\t\t\tnextPage(): void {\n\t\t\t\tpagingCommandInvoker.nextPage(structureId);\n\t\t\t},\n\n\t\t\tprevPage(): void {\n\t\t\t\tpagingCommandInvoker.prevPage(structureId);\n\t\t\t},\n\n\t\t\tchangePageSize(pageSize: number): void {\n\t\t\t\tpagingCommandInvoker.changePageSize(pageSize, structureId);\n\t\t\t},\n\n\t\t\tsetPagingConfig(config: PagingConfig): void {\n\t\t\t\tpagingCommandInvoker.setPaging(config, structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Searching\n\t\t\t */\n\t\t\tsetSearchingConfig(config: SearchConfig): void {\n\t\t\t\tsearchCommandInvoker.setSearchingConfig(config, structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * View port\n\t\t\t */\n\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandInvoker.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandInvoker.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandInvoker.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Visual - Schema\n\t\t\t */\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Virtual scroll\n\t\t\t */\n\t\t\tenableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.enableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\tdisableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.disableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Summaries\n\t\t\t */\n\t\t\tenableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(true, structureId);\n\t\t\t},\n\n\t\t\tdisableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(false, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sorting\n\t\t\t */\n\t\t\tsetSortConfig(config: SortingConfig): void {\n\t\t\t\tsortingCommandInvoker.setSortingConfig(config, structureId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId, structureId: StructureId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnDestroy, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandInvoker } from '../../../../structure/core/api/structure.command-invoker';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\nimport { PagingCommandInvoker } from '../../../../structure/paging/core/api/paging.command-invoker';\nimport { SummariesCommandInvoker } from '../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../structure/sorting/core/api/sorting.command-invoker';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tpublic api: GuiGridApi;\n\n\tprivate localGridId: string;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandInvoker,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher,\n\t\t\tthis.summariesCommandInvoker,\n\t\t\tthis.sortingCommandInvoker,\n\t\t\tthis.pagingCommandInvoker\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\n\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\thermesSubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\thermesSubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<Paging>;\n\n\tabstract oncePaging(structureId: StructureId): HermesObservable<Paging>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from '../api/read/paging.repository';\nimport { Paging } from '../api/read/paging';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from '../api/read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from '../domain/composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelArchive extends AggregateArchive<ReadonlyArray<FieldReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldReadModelArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldReadModelArchive) {\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldReadModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeMap> {\n\n\tstatic readonly default = new FilterTypeMap(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesArchive extends AggregateArchive<UniqueValuesReadModel> {\n\n\tstatic readonly default = new UniqueValuesReadModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValuesArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValuesArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeMap> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesArchive } from './unique-values.archive';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValuesArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { SummariesCommandInvoker } from '../core/api/summaries.command-invoker';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SummariesConfig } from '../core/api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: SummariesCommandInvoker,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../../../summaries/feature/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width, this.compositionId);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValue: SelectedRow;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './field-read-model.archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelArchive,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.get(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../api/formation/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn this.on(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/domain/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../../summaries/feature/structure.summaries.archive';\nimport { StructureSummariesConfigService } from '../../summaries/feature/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationReadModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureCellEditArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getData(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getData(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getData());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getData());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n}\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.hermesSubscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../../../summaries/feature/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../../../summaries/feature/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesArchive.on(),\n\t\t\t(config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\t{{'headerMenuMainTabHideColumn' | guiTranslate}}\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\nimport { CompositionId } from '../../../../../../../composition/core/domain/composition.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\t{{'headerMenuMainTabMoveLeft' | guiTranslate}}\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\t{{'headerMenuMainTabMoveRight' | guiTranslate}}\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-arrow-icon',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-title-panel gui-p-6 gui-border-b gui-border-b-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplate: `\n\t\t<div [innerHTML]=\"bannerPanel | guiSafe: 'html'\"\n\t\t\t class=\"gui-footer-panel gui-p-6 gui-border-t gui-border-t-solid\">\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSummariesEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: SummariesEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureSummariesRepository.on(structureId);\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\nimport { Injectable } from '@angular/core';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceReadModelService.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onHeaderColumns(this.structureId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from '../api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../domain-read/definition/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/domain/composition.id';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/domain/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { StructureSummariesConfigService } from '../structure.summaries-config.service';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureSummariesConfigService: StructureSummariesConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tif (this.isDefined('sorting', changes)) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/filter-config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tif (this.isDefined('filtering', changes)) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tif (this.isDefined('quickFilters', changes)) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}