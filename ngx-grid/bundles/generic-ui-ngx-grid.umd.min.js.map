{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/domain-api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.id.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/schema/domain-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/domain-api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/quick-filter-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filter.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-values.repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/searching.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source-counter/feature/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.id.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/domain-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/domain-api/composition.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/structure/core/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/core/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/core/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/core/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/core/feature/gateway/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/core/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/core/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/structure/core/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/structure/core/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.warehouse.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.event-repository.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain-api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/domain/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/domain-api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/core/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/domain-api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/structure.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/core/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/field/domain-api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/domain-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/horizontal-grid/schema.horizontal-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/row-coloring/schema.row-coloring-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/vertical-grid/schema.vertical-grid-set.event-handler.ts","ng://@generic-ui/ngx-grid/schema/domain-api/schema.module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/core/feature/panel/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/empty-source/feature/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/gateway/schema/structure-theme.gateway.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/domain-api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/core/feature/header/columns/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/domain-api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","data","getData","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","search","phrase","clearSearchPhrase","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","ToggleSelectedRowCommand","selectedRow","getSelectedRow","Command","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","StructureReadModelRootId","id","toAggregateId","StructureId","toString","ReadModelRootId","toReadModelRootId","getId","AggregateId","structureGlobalId","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","Reactive","unsubscribe$","Subject","ngOnDestroy","unsubscribe","isStopped","complete","takeUntil","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","params","getParams","SourceDispatcher","editItem","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","StructureSourceOriginRepository","origin","origin$","ReplaySubject","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","getPreparedItems","onPreparedItems","SourceWarehouse","structureRepository","structurePreparedItemsRepository","structureSourceOriginRepository","getEntities","getStructure","onEntities","onStructure","structure","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","take","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","getPreparedEntities","StructureEditSourceItemParams","columnFieldId","getColumnFieldId","getValue","FieldReadModelRepository","AggregateArchive","FieldWarehouse","fieldReadModelRepository","onFields","on","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","payload","byIndex","DeleteCommandPayloadType","byManyIndex","indexes","byItemId","byManyItemId","itemIds","getPayload","SourceCommandInvoker","sourceDispatcher","fieldWarehouse","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","fields","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","RowSelectedRepository","RowSelectionModeRepository","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","selectedItemIds","getSelectedItemIds","selectedItems","some","onRowSelectedReadModel","getAll","onSelectedRows","rm","onMode","SetConfigSearchingCommand","searchConfig","getConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchHighlightArchive","idToHighlight","idToHighlight$","onValue","HIGHLIGHTING","SearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","SearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","searchOnInit","SearchCommandInvoker","searchDispatcher","SchemaId","SchemaReadModelRootId","schemaGlobalId","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SetSchemaThemeCommand","getTheme","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","SetConfigFilterCommand","filterConfig","RemoveAllFiltersCommand","AddFilterCommand","fieldId","filterTypeId","getFieldId","getFilterTypeId","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","add","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetConfigQuickFilterCommand","quickFiltersConfig","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","StructureCommandDispatcher","structureFilterCommandService","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setFilterConfig","setQuickFiltersConfig","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","SchemaCommandInvoker","schemaDispatcher","structureCommandService","toSchemaRowColoring","SchemaRowColoring","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","getElementRef","getGridId","detectChanges","nativeElement","setAttribute","schemaReadModelRootId","Component","args","selector","template","providers","useExisting","host","[class.gui-grid]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","SmartComponent","detector","render","PagingRepository","filter","getPaging","PagingWarehouse","pagingRepository","onPaging","onSinglePaging","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","setPaging","changePageSize","nextPage","prevPage","PagingCommandInvoker","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","PagingDisplayModeArchive","Archive","TOP","BOTTOM","PagingComponent","renderer2","structurePagingWarehouse","pagingCommandService","structureSourceWarehouse","structurePagingDisplayModeArchive","alternativeDisplay","PagingPosition","removeClass","addClass","size","sourceSize","isPagingVisible","isPagerTop","isPagerBottom","[class.gui-paging]","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","PagingSelectComponent","[class.gui-paging-select]","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","lastPage","numberOfPages","Math","ceil","[class.gui-alternative-paging-navigator]","AlternativePagingPagesComponent","calculate","pages","isSourceNotEmpty","activePage","[class.gui-alternative-paging-pages]","NextPageEvent","aggregateId","DomainEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventRepository","eventBus","pagingReadModelService","getAggregateId","switchMap","onEvent","DomainEventBus","EventRepository","PageChangedAggregateEvent","toDomainEvent","AggregateEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","publishDomainEvents","aggregate","command","publish","handleAggregate","structureAggregate","changePaging","DomainEventPublisher","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","aggregateEvents","getEvents","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","PagingApiModule","ApiModule","PagingNavigatorComponent","[class.gui-paging-navigator]","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","PagingStatsComponent","firstItemIndex","lastItemIndex","[class.gui-paging-stats]","PagingFeatureModule","forComponent","FabricModule","FeatureModule","NumberFormatterPipe","transform","number","replace","Pipe","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","Theme","SchemaThemeRepository","SchemaCssClassesRepository","theme$","setCssClass","SchemaHorizontalGridRepository","SchemaRowColoringRepository","SchemaVerticalGridRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelEnabledArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","openSchemaManager","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandInvoker","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class]","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","schemaCommandService","schemaReadModelService","dialogThemeService","keys","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","nextTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","FabricDialogThemeService","StructureSchemaManagerIconComponent","[class.gui-structure-schema-manager-icon]","StructureSchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","[class.gui-filter-icon]","FilterEnabledRepository","enabled$","setEnabled","onFilterEnabled","QuickFilterEnabledRepository","onQuickFilterEnabled","FilterTypeRepository","ActiveFilterRepository","UniqueValuesRepository","FilterWarehouse","structureFilterRepository","structureQuickFilterRepository","filterTypeRepository","uniqueValuesRepository","activeFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","FilterMenuComponent","filterWarehouse","filterCommandDispatcher","compositionWarehouse","activeFilters","filterTypeMap","fieldReadModels","onColumnSelect","selectedColumn","filterTypes","getFilterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","[class.gui-filter-menu]","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","[class.gui-filter-menu-trigger]","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","[class.gui-filter-value]","FormBuilder","ActiveFilterListComponent","FieldSelectorComponent","fieldSelected","SearchingRepository","onSearchingEnabled","SearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","SearchWarehouse","structureSearchingRepository","searchPhraseRepository","onSearchEnabled","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","clearSearch","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","filterFieldName","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","NumberEditTemplateComponent","fb","Override","container","getPrototypeOf","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","HTML","CellValue","text","CellValueType","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","cellEditingEnabled","isBooleanDataType","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","sort","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","commandProviders","readProviders","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","direction","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","getAggregateRepository","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","className","[class.gui-text-view]","Attribute","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","ofMessageType","dir","components","exportDeclarations","compositionKey","CompositionModule","FabricDatePickerModule","defineAggregate","registerMultiDomainEventHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","ADD","RANGE","LocalFormationCommandDispatcher","setDefault","LocalFormationWarehouse","rowSelectedArchive","LocalStructureCommandDispatcher","StructureWarehouse","LocalStructureWarehouse","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","LocalSchemaCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getUiId","getVersion","isSelected","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","SearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureVerticalFormationWarehouse","verticalFormationRepository","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","InitFieldsCommand","fieldConfigs","getFieldConfigs","FieldsInitedEvent","getFields","ColumnParams","StructureColumnInputHandler","columnFieldFactory","compositionCommandInvoker","simpleChanges","initCommand","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelConfigService","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureColumnInputHandler","rowDetail","titlePanel","footerPanel","nextConfig","editMode","autoResizeWidth","columnHeaderTop","columnHeaderBottom","maxHeight","virtualScroll","setSortingConfig","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowChangedEvent","allSelected","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","s$","itemsMap","j","StructureColumnMenuConfig","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","structureInfoPanelArchive","SetSortingCommand","getSortingConfig","ToggleSortCommand","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","SortingWarehouse","SortingEventRepository","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchableFields","removeSearchFilters","searchedItems","Set","from","SearchManagerFactory","SearchPhraseSetEventHandler","structureSearchPhraseRepository","forEvent","ConfigSearchingSetEventHandler","SearchDomainModule","domainEventHandlers","registerDomainEventHandler","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","verticalFormationWarehouse","searchingEnabled","FORM_SEARCH_NAME","searchForm","stopObserveChanges","clear","reset","searchInputSubscription","debounceTime","[class.gui-search-bar]","SearchFeatureModule","searchApiModule","FieldReadModel","getName","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","addFields","fields_1","fields_1_1","addField","Field","of","dataField","getKey","getDisplayValue","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","matchers","accessorMethod","getMatchers","getSearchMatcher","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","NumberDataField","numOne","numTwo","StringDataField","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","Optional","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldIdGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","configs","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","publishFromAggregate","createFields","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","SetSourceLoadingEvent","SourceSetLoadingCommandHandler","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","deleteOneOriginItem","deleteOriginItemByIndex","findOriginItemIndex","removedElements","removedElements_1","removedElements_1_1","unselectRow","calculateAllSelected","f","calculateAllUnselected","deleteManyOriginItemByIndex","deleteManyOriginItemByItemID","addOriginItem","toggleRow","getFormation","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","StructureOriginChangedEventHandler","origin_1","StructurePreparedItemsEventHandler","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isIndeterminate","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","DeleteOriginItemCommandHandler","deleteItem","SourceDomainModule","SourceApiModule","SourceFeatureModule","sourceApiModule","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","compositionEventRepository","pagingDisplayModeArchive","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure]","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","uniqueValues","uniqueValuesReadModel","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","checkboxSelection","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","rowDetailOpened","combineLatest","trackByFn","translateY","clearSelectedRows","selectedElements","querySelectorAll","StructureRowComponent","elRef","detailsEnabled","selectedItem","checkSelectedItem","prevValue","selectRow","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","arr","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterToggledEvent","FilterAddedEvent","ActiveFiltersSetEvent","filters","getFilters","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","SummariesCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","FieldsInitedEventHandler","fieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","Filter","filterValue","getFilterValue","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","filterEntity","filterOne","ContainsFilterType","includes","FilterTypeId","FilterTypeIdGenerator","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","getFilterType","getFieldIdsToFilterTypes","readModels","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","getSettings","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","FilterTypesInitedEvent","getMap","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setConfig","toggleFilter","externalFilterId","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","select","unselect","searchedEntities","filterAll","ents","ae","calculateAll","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","displayValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","allDisabled","getNotSelected","uv","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","selectAllChecked","isSelectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","SchemaHorizontalGridSetEventHandler","horizontalGridRepository","SchemaRowColoringSetEventHandler","SchemaVerticalGridSetEventHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","EmptySourceComponent","[class.gui-empty-source]","EmptySourceFeatureModule","StructureThemeGateway","theme2","ToggleFilterCommand","getExternalFilterId","ToggleFilterCommandHandler","externalFieldId","AddFilterCommandHandler","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","SetConfigFilterCommandHandler","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","ConfigQuickFilterSetEventHandler","ConfigFilterSetEventHandler","FilterTypeMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEventHandler","activeFiltersSetEvent","UniqueValuesReadModel","calculateSelection","areAllSelected","areAllDisabled","UniqueValueReadModel","geDisplayValue","UniqueFilterCalculatedEventHandler","calculatedEvent","uvRM_1","valuesRM","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","FilterApiModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","[class.gui-select-all]","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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KAGF,CACC3tC,QAAS2N,GACT4/C,WAAYF,GACZG,KAAM,CACL7f,MAGCwF,GAAc,CAEjBC,GACA4B,GACA0H,GACAzH,GACAC,GACA7vB,GACA+4B,GACA5I,GACAK,GACAyG,GAEAt6B,GAAoBC,eACpB29B,GAAqB39B,eACrBgmC,GAAmBhmC,eACnB4gC,GAAoB5gC,eACpB+qC,GAAoB/qC,eAEpBu6B,GACAO,GACAD,GACAS,GACAK,GACAK,GACAE,KAIDsP,GAAA,SAAAj0D,GAkDC,SAAAi0D,EAAY5sD,EACT0jB,EACAjM,EACAg/B,EACA3kC,EACA+kC,EACAH,EACAvlB,EACAwlB,EACAG,EACAC,EACA8V,EACA5V,EACA5lC,EACA6lC,EACAC,EACAsG,EACArG,EACAC,EACAC,EACAxB,EACAyB,EACAuV,EACAtV,EACAC,EACAh3C,EACAi3C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACiBtmC,EACAC,EACAiT,EACAmoC,EACAC,EACA5jC,EACA6jC,EACAp6C,EACjB3N,EACAzC,EACiByqD,GA3CpB,IAAAn5D,EA6CC4E,EAAA3K,KAAAZ,KACC8X,EACAzC,EACAzC,EACA0jB,EACA7Q,EACAxB,EACAoG,EACAg/B,EACAC,EACAvlB,EACAwlB,EACA7kC,EACA+kC,EACAC,EACAC,EACA8V,EACA5V,EACAC,EACAC,EACAsG,EACArG,EACAC,EACAC,EACAxB,EACAyB,EACAuV,EACAtV,EACAC,EACAh3C,EACAi3C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IACA5qD,YAjDkB2G,EAAA2d,WAAAA,EACA3d,EAAA4d,kBAAAA,EACA5d,EAAA6wB,SAAAA,EACA7wB,EAAAg5D,oBAAAA,EACAh5D,EAAAi5D,0BAAAA,EACAj5D,EAAAq1B,4BAAAA,EACAr1B,EAAAk5D,oBAAAA,EACAl5D,EAAA8e,sBAAAA,EAGA9e,EAAAm5D,2BAAAA,EAnDpBn5D,EAAAo5D,eAAyB,EAEzBp5D,EAAAq5D,qBAA+B,EAE/Br5D,EAAAs5D,wBAAkC,EAwFjCh8C,EAAwBX,kBACxBqm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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tdata?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../domain-api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/domain/core/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/core/domain/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../domain-api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/domain/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../domain-api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../domain-api/gui.grid.public-api';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../domain-api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../domain-api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/domain-api/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../domain-api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/core/domain-api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../domain-api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/domain-api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../domain-api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/domain-api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tlet builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../domain-api/gui.grid.public-api';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/core/domain-api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/domain-api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/domain-api/formation/selected-row';\n\nexport abstract class GuiGridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tdata: row.getData(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/core/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/core/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly data: any;\n\n\tconstructor(data: any,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.data = data;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../domain-api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/domain-api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/domain-api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/domain-api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/domain-api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t// Searching\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t// Visual\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.data, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.data, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { data: r.getData(), index: r.getIndex(), itemId: r.getItemId() };\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../domain-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SetEnabledSelectionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SetSelectionModeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SelectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class UnselectAllRowsCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(aggregateId: AggregateId): StructureReadModelRoot;\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<OriginItemEntity>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<OriginItemEntity>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tgetPreparedItems(structureId: StructureId): Array<OriginItemEntity> {\n\t\treturn this.origin.get(structureId.getId());\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take, tap } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../core/domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../core/domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SourceWarehouse implements Warehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tgetEntities(structureId: StructureId = structureGlobalId): Array<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   // tap(() => {\n\t\t\t\t\t\t//    console.log('onEntities');\n\t\t\t\t\t   // }),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<Array<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n\tgetPreparedEntities(structureId: StructureId = structureGlobalId): Array<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelRepository extends AggregateArchive<Array<FieldReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<FieldReadModel>> {\n\t\treturn this.fieldReadModelRepository.on(structureId);\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { OriginId } from '../origin-id';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends Command {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { SourceWarehouse } from './source.warehouse';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../field/domain-api/field.warehouse';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\n\n\n@Injectable()\nexport class SourceCommandInvoker extends Reactive implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.fieldWarehouse\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId = structureGlobalId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tlet selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tlet item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getData(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId = structureGlobalId): Observable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId = structureGlobalId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId = structureGlobalId): Observable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SearchConfig } from '../../domain-api/search-config';\n\n\nexport class SetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { structureGlobalId } from '../../../core/domain-api/structure.global-id';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || SearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../domain-api/search-config';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from '../domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SearchConfig } from './search-config';\nimport { SearchDispatcher } from '../domain/search.dispatcher';\n\n\n@Injectable()\nexport class SearchCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../domain-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { SchemaCommandInvoker } from '../../../../../schema/domain-api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { schemaGlobalId } from '../../../../../schema/domain-api/read/schema.global-id';\nimport { StructureId } from '../../../../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../../../../structure/core/domain-api/structure.global-id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../domain-api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterConfig } from '../../domain-api/filter-config';\n\nexport class SetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class RemoveAllFiltersCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class AddFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterId } from '../../filter.id';\n\n\nexport class RemoveFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class SelectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\nexport class UnselectAllUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class SelectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\n\n\nexport class UnselectUniqueFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from '../domain/filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { QuickFiltersConfig } from '../../domain-api/quick-filters.config';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from '../../filter/domain-api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/domain/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/vertical-formation/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/domain-api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../domain/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../domain/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/core/domain/structure.id';\nimport { structureGlobalId } from '../../structure/core/domain-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/core/domain-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/core/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/domain-api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/domain-api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/domain-api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/domain-api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/domain-api/schema.command-invoker';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class.gui-grid]': `\"true\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tpublic api: GuiGridApi;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\t}\n\n\tngOnInit() {\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTooltipModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ChangeDetectorRef } from '@angular/core';\n\nimport { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n\n\tprotected constructor(protected readonly detector?: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n\trender(): void {\n\t\tthis.detector.detectChanges();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../../core/domain-api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../core/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingWarehouse implements Warehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagingConfig } from '../../domain-api/paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../domain/paging.dispatcher';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport class PagingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\n\nimport { Paging } from '../domain-api/read/paging';\nimport { PagingWarehouse } from '../domain-api/paging.warehouse';\nimport { PagingCommandInvoker } from '../domain-api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\n\n\n@Component({\n\tselector: 'gui-paging[position]',\n\ttemplateUrl: 'paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\thost: {\n\t\t'[class.gui-paging]': `\"true\"`\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structurePagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly structurePagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t} else {\n\t\t\t\tthis.renderer2.removeClass(this.elementRef.nativeElement, 'gui-paging-bottom');\n\t\t\t\tthis.renderer2.addClass(this.elementRef.nativeElement, 'gui-paging-top');\n\t\t\t}\n\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structurePagingWarehouse\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisPagingVisible(): boolean {\n\t\treturn this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-select',\n\ttemplateUrl: `paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-select]': `\"true\"`\n\t}\n})\nexport class PagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandInvoker } from '../../../domain-api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-navigator',\n\ttemplateUrl: `alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-navigator]': `\"true\"`\n\t}\n})\nexport class AlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\nimport { PagingCommandInvoker } from '../../../domain-api/paging.command-invoker';\n\n\n@Component({\n\tselector: 'gui-alternative-paging-pages',\n\ttemplateUrl: `alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-alternative-paging-pages]': `\"true\"`\n\t}\n})\nexport class AlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandInvoker) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { PagingWarehouse } from './paging.warehouse';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(structureId, PagesizeChangedEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../domain-api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from './structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\tPagingCommandInvoker,\n\t\tPagingWarehouse,\n\t\tPagingEventRepository,\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-navigator',\n\ttemplateUrl: `paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-navigator]': `\"true\"`\n\t}\n})\nexport class PagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\nimport { Paging } from '../../../domain-api/read/paging';\n\n\n@Component({\n\tselector: 'gui-paging-stats',\n\ttemplateUrl: `paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-paging-stats]': `\"true\"`\n\t}\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../domain-api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.12.4\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../domain-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends AggregateArchive<SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetCssClass(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaRowColoringRepository extends AggregateArchive<SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse implements Warehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\t\treturn this.schemaVerticalGridRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository.on(schemaId.toAggregateId());\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled?: boolean = false;\n\tprivate readonly infoDialog?: boolean = true;\n\tprivate readonly columnsManager?: boolean = true;\n\tprivate readonly schemaManager?: boolean = true;\n\tprivate readonly sourceSize?: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager-dialog\">\n\t\t\t<gui-structure-schema-manager></gui-structure-schema-manager>\n\t\t</div>\n\t`\n})\nexport class StructureDialogSchemaManagerComponent {\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../structure/core/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../domain/theme/schema-theme';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<div *ngIf=\"infoPanelConfig.isSourceSizeEnabled()\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</ng-container>\n\n\t\t\t\t\t<span *ngIf=\"preparedItemsSize !== totalItemsSize\"\n\t\t\t\t\t\t  gui-active-filter-menu-trigger>\n\t\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t\t</span>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isSchemaManagerEnabled()\"\n\t\t\t\t\t (click)=\"openSchemaManager()\">\n\t\t\t\t\t<gui-structure-schema-manager-icon [gui-tooltip]=\"'Theme manager'\"></gui-structure-schema-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isColumnsManagerEnabled()\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon [gui-tooltip]=\"'Column manager'\"></gui-structure-column-manager-icon>\n\t\t\t\t</div>\n\n\t\t\t\t<div *ngIf=\"infoPanelConfig.isInfoDialogEnabled()\"\n\t\t\t\t\t (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon [gui-tooltip]=\"'Info'\"></gui-structure-info-icon>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe(\n\t\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t);\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse implements Warehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/core/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandInvoker implements CommandInvoker {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { Reactive } from '../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../domain-api/schema.warehouse';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../domain-api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../domain-api/row-coloring';\nimport { FabricDialogThemeService } from '@generic-ui/fabric';\n\n@Component({\n\tselector: 'gui-structure-schema-manager',\n\ttemplate: `\n\t\t<div class=\"gui-schema-manager\">\n\t\t\t<div class=\"gui-dialog-title\">Theme manager:</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Theme:</span>\n\t\t\t\t<gui-select [options]=\"themes\"\n\t\t\t\t\t\t\t[selected]=\"selectedTheme\"\n\t\t\t\t\t\t\t[placeholder]=\"'Select theme'\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleTheme($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<div class=\"gui-structure-schema-manager-select\">\n\t\t\t\t<span>Row coloring:</span>\n\t\t\t\t<gui-select [options]=\"coloring\"\n\t\t\t\t\t\t\t[selected]=\"selectedRowColoring\"\n\t\t\t\t\t\t\t(optionChanged)=\"toggleRowColoring($event)\">\n\t\t\t\t</gui-select>\n\t\t\t</div>\n\t\t\t<gui-checkbox [checked]=\"verticalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleVerticalGrid($event)\">Vertical grid\n\t\t\t</gui-checkbox>\n\t\t\t<gui-checkbox [checked]=\"horizontalGrid\"\n\t\t\t\t\t\t  (changed)=\"toggleHorizontalGrid($event)\">Horizontal grid\n\t\t\t</gui-checkbox>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends Reactive {\n\n\tcoloring = Object.keys(SchemaRowColoring)\n\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t .filter((val) => !Number.isInteger(val));\n\n\tthemes = Object.keys(SchemaTheme)\n\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t   .filter((val) => !Number.isInteger(val));\n\n\tselectedRowColoring: string;\n\tselectedTheme: string;\n\tverticalGrid: boolean;\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandService: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaReadModelService: SchemaWarehouse,\n\t\t\t\tprivate readonly dialogThemeService: FabricDialogThemeService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.schemaReadModelService\n\t\t\t.onRowColoring(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = SchemaRowColoring[rowColoring];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = SchemaTheme[schemaTheme];\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onVerticalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHorizontalGrid(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleTheme(theme: string): void {\n\t\tthis.schemaCommandService.setTheme(this.toTheme(theme), this.schemaReadModelRootId);\n\t\tthis.dialogThemeService.nextTheme(theme);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: string): void {\n\t\tthis.schemaCommandService.setRowColoring(this.toRowColoring(schemaRowColoring), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandService.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandService.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-schema-manager-icon';\n\n\n@Component({\n\tselector: 'gui-structure-schema-manager-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"24\" viewBox=\"0 0 32 24\">\n\t\t\t<g transform=\"translate(0 -4)\">\n\t\t\t\t<path id=\"Path_303\" data-name=\"Path 303\" d=\"M23.337,4H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_304\" data-name=\"Path 304\" d=\"M11.662,4h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_305\" data-name=\"Path 305\" d=\"M0,4H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_306\" data-name=\"Path 306\" d=\"M23.337,22H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_307\" data-name=\"Path 307\" d=\"M0,22H8.662v6H0Z\"/>\n\t\t\t\t<path id=\"Path_308\" data-name=\"Path 308\" d=\"M11.662,22h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_309\" data-name=\"Path 309\" d=\"M23.337,13H32v6H23.337Z\"/>\n\t\t\t\t<path id=\"Path_310\" data-name=\"Path 310\" d=\"M11.662,13h8.662v6H11.662Z\"/>\n\t\t\t\t<path id=\"Path_311\" data-name=\"Path 311\" d=\"M0,13H8.662v6H0Z\"/>\n\t\t\t</g>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-schema-manager-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureSchemaManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/core/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class StructureSchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<h3>Active filters</h3>\n\n\t\t<gui-active-filter-list></gui-active-filter-list>\n\n\t\t<div>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../core/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\n}\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly renderer: Renderer2,\n\t\t\t\tprivate readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-filter-icon',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-icon]': 'true'\n\t}\n})\nexport class FilterIconComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class QuickFilterEnabledRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeRepository extends AggregateArchive<FilterTypeMap> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterRepository extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesRepository extends AggregateArchive<UniqueValuesReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledRepository,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledRepository,\n\t\t\t\tprivate readonly filterTypeRepository: FilterTypeRepository,\n\t\t\t\tprivate readonly uniqueValuesRepository: UniqueValuesRepository,\n\t\t\t\tprivate readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.onFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.onQuickFilterEnabled(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): Observable<FilterTypeMap> {\n\t\treturn this.filterTypeRepository.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): Observable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterRepository.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): Observable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesRepository.on(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/domain-api/field.warehouse';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { FilterTypeMap } from '../../domain-api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\n\n@Component({\n\tselector: 'gui-filter-menu',\n\ttemplate: `\n\n\t\t<div>\n\t\t\t<gui-active-filter-list></gui-active-filter-list>\n\t\t</div>\n\n\t\t<!--\t\t<div>-->\n\t\t<!--\t\t\t<gui-column-selector-->\n\t\t<!--\t\t\t\t\t[columns]=\"columns\"-->\n\t\t<!--\t\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">-->\n\t\t<!--\t\t\t</gui-column-selector>-->\n\n\t\t<!--\t\t\t<ng-container *ngIf=\"selectedColumn\">-->\n\t\t<!--\t\t\t\t{{selectedColumn.getFieldId()}}-->\n\t\t<!--\t\t\t</ng-container>-->\n\t\t<!--\t\t</div>-->\n\n\t\t<div>\n\t\t\t<gui-field-selector\n\t\t\t\t\t[fields]=\"fields\"\n\t\t\t\t\t(fieldSelected)=\"onFieldSelect($event)\">\n\t\t\t</gui-field-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedColumn\">\n\t\t\t\t{{selectedColumn.getFieldId()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<gui-filter-type-selector\n\t\t\t\t\t[filterTypes]=\"filterTypes\"\n\t\t\t\t\t(filterTypeSelected)=\"onFilterTypeSelect($event)\">\n\t\t\t</gui-filter-type-selector>\n\n\t\t\t<ng-container *ngIf=\"selectedFilterTypeId\">\n\t\t\t\t{{selectedFilterTypeId.toString()}}\n\t\t\t</ng-container>\n\t\t</div>\n\n\t\t<div>\n\n\t\t\t<gui-filter-value *ngIf=\"selectedFilterTypeId\"\n\t\t\t\t\t\t\t  (valueChanged)=\"onValueChanged($event)\">\n\t\t\t</gui-filter-value>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t[disabled]=\"!selectedFilterTypeId\"\n\t\t\t\t\t(click)=\"addFilter()\">\n\t\t\t\tFilter\n\t\t\t</button>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<button gui-button\n\t\t\t\t\t[secondary]=\"true\"\n\t\t\t\t\t(click)=\"removeAllFilters()\">\n\t\t\t\tClear filters\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-menu]': 'true'\n\t}\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.filterWarehouse\n\t\t\t.onFilterTypes(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.fieldWarehouse\n\t\t\t.onFields(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, Component, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { filterContainerToken } from './config/filter-container-token';\nimport { FilterContainerRef } from './config/filter-container-ref';\n\n@Component({\n\tselector: 'gui-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-filter-icon-wrapper\">\n\t\t\t<gui-filter-icon></gui-filter-icon>\n\t\t</div>\n\t`,\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\thost: {\n\t\t'[class.gui-filter-menu-trigger]': 'true'\n\t},\n\tstyleUrls: [\n\t\t'./style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-column-selector[columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../domain/type/filter-type.id';\nimport { PureComponent } from '../../../../common/cdk/pure-component';\n\n@Component({\n\tselector: 'gui-filter-type-selector[filterTypes]',\n\ttemplate: `\n\n\t\t<ng-container>\n\t\t\tFilter Type:\n\t\t</ng-container>\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let filterType of filterTypes\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(filterType)\">\n\t\t\t\t{{filterType.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n\tselector: 'gui-filter-value',\n\ttemplate: `\n\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"filterForm\">\n\n\t\t\t<input formControlName=\"filterValue\"/>\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-filter-value]': `\"true\"`\n\t}\n})\nexport class FilterValueComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(private readonly formBuilder: FormBuilder) {\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'gui-active-filter-list',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let filter of activeFilters\">\n\t\t\t{{filter.getText()}}\n\t\t\t<span (click)=\"removeFilter(filter)\">X</span>\n\t\t</div>\n\n\t\t<gui-active-search></gui-active-search>\n\n\n\t`\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.filterWarehouse\n\t\t\t.onActiveFilters(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../field/domain-api/read/field.read-model';\n\n@Component({\n\tselector: 'gui-field-selector[fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Warehouse } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './enabled/searching.repository';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\n\n\n@Injectable()\nexport class SearchWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingRepository,\n\t\t\t\tprivate readonly searchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.searchPhraseRepository.onPhrase(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/domain-api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/domain-api/search.command-invoker';\n\n@Component({\n\tselector: 'gui-active-search',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"phrase\">\n\t\t\t<div>\n\t\t\t\tActive search by:\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<gui-chip>{{phrase}}</gui-chip>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<button gui-button\n\t\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t\t(click)=\"clearSearch()\">\n\t\t\t\t\tClear search\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './menu/filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './menu/value/filter-value.component';\nimport { ActiveFilterListComponent } from './active-filters/active-filter-list.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { ActiveSearchComponent } from './active-filters/search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tActiveFilterListComponent,\n\t\tFieldSelectorComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent,\n\t\tActiveFilterListComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../filter/feature/filter-menu.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\nimport { StructureSchemaManagerModule } from '../../../../../schema/feature/manager/structure.schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source-counter/feature/source-counter.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tStructureSchemaManagerModule,\n\t\tSourceCounterFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/domain/core/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../domain-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/field/domain/core/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../structure/source/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/field/domain/core/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionReadModelRootId } from './read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): Observable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandInvoker,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className;\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/sorting/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/sorting/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t], [\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandInvoker } from '../../../../paging/domain-api/paging.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../../paging/domain/paging.manager-factory';\nimport { PagingDispatcher } from '../../../../paging/domain/paging.dispatcher';\nimport { PagingConfig } from '../../../../paging/domain-api/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends PagingCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingWarehouse } from '../../../../paging/domain-api/paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../../paging/domain-api/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../../paging/domain-api/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends PagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../../source/domain/formation/formation.dispatcher';\nimport { RowSelectToggleType } from '../../../../source/domain/formation/core/row-select-toggle-type';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandInvoker {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(commandDispatcher, formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType): void {\n\t\tsuper.toggleSelectedRow(selectedRow, type, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationWarehouse } from '../../../../source/domain-api/formation/formation.warehouse';\nimport { RowSelectedRepository } from '../../../../source/domain-api/formation/row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from '../../../../source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../source/domain-api/formation/mode/row-selection-mode.repository';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends FormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\trowSelectedArchive: RowSelectedRepository,\n\t\t\t\trowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tsourceWarehouse: SourceWarehouse) {\n\t\tsuper(rowSelectedArchive, rowSelectionModeRepository, sourceWarehouse);\n\t}\n\n\t@Override\n\tonRowSelectedReadModel(): Observable<RowSelectedReadModel> {\n\t\treturn super.onRowSelectedReadModel(this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { SourceDispatcher } from '../../../../source/domain/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { FilterConfig } from '../../../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../../filter/domain-api/quick-filters.config';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../domain-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandInvoker } from '../../../../source/domain-api/source.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../../source/domain/source.dispatcher';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { FieldWarehouse } from '../../../../field/domain-api/field.warehouse';\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandInvoker {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tfieldWarehouse: FieldWarehouse,\n\t\t\t\tsourceReadModelService: SourceWarehouse) {\n\t\tsuper(commandDispatcher, sourceDispatcher, fieldWarehouse, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../../source/domain-api/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../../source/domain-api/prepared/structure.prepared-items.repository';\nimport { structureGlobalId } from '../../../domain-api/structure.global-id';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends SourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn super.getEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<Array<OriginItemEntity>> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandInvoker } from '../../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../../composition/domain-api/composition.global-id';\nimport { ColumnParams } from '../../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../../composition/domain-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../../composition/domain-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../../composition/domain-api/composition.global-id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchDispatcher } from '../../../../search/domain/search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../../search/domain-api/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SearchHighlightArchive } from '../../../../search/domain-api/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../../../../search/domain-api/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends SearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../../schema/domain-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../../schema/domain-api/theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from '../../../../../schema/domain-api/horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from '../../../../../schema/domain-api/row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from '../../../../../schema/domain-api/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaRowColoring } from '../../../../../schema/domain/coloring/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tschemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tschemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tschemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository, schemaHorizontalGridRepository,\n\t\t\tschemaRowColoringRepository, schemaVerticalGridRepository);\n\t}\n\n\t@Override\n\tonTheme(): Observable<SchemaTheme> {\n\t\treturn super.onTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonHorizontalGrid(): Observable<boolean> {\n\t\treturn super.onHorizontalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonVerticalGrid(): Observable<boolean> {\n\t\treturn super.onVerticalGrid(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonRowColoring(): Observable<SchemaRowColoring> {\n\t\treturn super.onRowColoring(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/domain-api/schema.command-invoker';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../../schema/domain-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../paging/domain-api/read/paging';\nimport { Source } from '../../../source/domain-api/read/source';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../paging/domain-api/read/paging.converter';\nimport { SourceConverter } from '../../../source/domain-api/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../domain-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/domain-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/domain/set-phrase/search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../domain-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/domain-api/paging.command-invoker';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandInvoker } from '../../../source/domain-api/source.command-invoker';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { PagingWarehouse } from '../../../paging/domain-api/paging.warehouse';\nimport { SearchDispatcher } from '../../../search/domain/search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandInvoker } from '../../../../schema/domain-api/schema.command-invoker';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\nimport { Provider } from '@angular/core';\n\nexport const localProviders = [\n\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandInvoker, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandInvoker, useClass: LocalSchemaCommandDispatcher }\n];\n\nexport function provideComponentServices(): Array<Provider> {\n\treturn [\n\t\t{ provide: PagingCommandInvoker, useClass: LocalPagingCommandDispatcher },\n\t\t{ provide: PagingWarehouse, useClass: LocalPagingWarehouse },\n\t\t{ provide: FormationCommandInvoker, useClass: LocalFormationCommandDispatcher },\n\t\t{ provide: FormationWarehouse, useClass: LocalFormationWarehouse },\n\t\t// { provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t\t{ provide: SourceCommandInvoker, useClass: LocalSourceCommandDispatcher },\n\t\t{ provide: SourceWarehouse, useClass: LocalSourceWarehouse },\n\t\t{ provide: SearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\t\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse }\n\t];\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/domain-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/domain-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../domain-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../domain-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { SimpleChanges } from '@angular/core';\nimport { filter, take } from 'rxjs/operators';\n\nimport { CommandDispatcher, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/domain-api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Field } from '../../../../field/domain/core/field/field';\nimport { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { ColumnParams } from '../../../../../composition/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/domain/column/field/colum-field.factory';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(simpleChanges: SimpleChanges): void {\n\n\t\tconst fieldConfigs = simpleChanges.columns.currentValue;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs as Array<FieldConfig>);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tfilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tcolumns = event.fieldConfigs,\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../../paging/domain-api/paging-config';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../../sorting/domain-api/sorting-config';\nimport { FilterConfig } from '../../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../../filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../../search/domain-api/search-config';\nimport { SummariesConfig } from '../../domain-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../../source/domain-api/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { PagingCommandInvoker } from '../../../paging/domain-api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/domain-api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/domain-api/source.command-invoker';\nimport { SourceEventService } from '../../../source/domain-api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/domain-api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/domain-api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../domain-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/domain-api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/domain-api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/domain-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/domain-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../../schema/domain-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { InfoPanelConfig } from '../panel/info/info-panel.config';\nimport { StructureInfoPanelConfigService } from '../panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/domain-api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/domain-api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/domain-api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/domain/column/field/colum-field.factory';\nimport { RowSelection } from '../../../source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { SelectedRow } from '../../../source/domain-api/formation/selected-row';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprotected constructor(\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelection !== undefined && simpleChanges.rowSelection.currentValue !== undefined) {\n\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.structurePagingCommandDispatcher.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns !== undefined && simpleChanges.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(simpleChanges);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandDispatcher.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandDispatcher.setSearchingConfig(searching, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventRepository\n\t\t\t.onPageSizeChange(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getData()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchEventRepository\n\t\t\t.onSearchPhrase(this.structureId.toReadModelRootId())\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SelectedRowChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly s$ = new Subject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   take(1),\n\t\t\t\t\t\t\t\t   map((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   let item = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getData(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.s$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<SelectedRow>> {\n\t\treturn this.s$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../domain-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { SearchPhraseSetDomainEvent } from '../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): Observable<string> {\n\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   map((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   filter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { map, share, multicast, refCount } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t   \treturn event.getTheme()\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/domain-api/formation/formation.event-repository';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/domain-api/formation/selected-row';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SortingConfig } from '../../domain-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../core/domain-api/read/structure.read-model-repository';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { StructureReadModelRoot } from '../../core/domain-api/read/structure.read-model-root';\n\n\n@Injectable()\nexport class SortingWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../core/domain-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SortingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingWarehouse } from './sorting.warehouse';\nimport { SortingEventRepository } from './sorting.event-repository';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker,\n\t\tSortingWarehouse,\n\t\tSortingEventRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../domain-api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../../core/domain/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../core/domain/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../source/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { DataType } from '../../field/domain/core/field/data/data-type';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseRepository } from './search-phrase.repository';\nimport { SearchPhraseSetDomainEvent } from '../../domain/set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private structureSearchPhraseRepository: SearchPhraseRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingRepository } from './searching.repository';\n\nimport { ConfigSearchingSetEvent } from '../../domain/config/config-searching-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private structureSearchingRepository: SearchingRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from '../domain-api/phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from '../domain-api/enabled/config-searching-set.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseRepository } from './phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\nimport { SearchingRepository } from './enabled/searching.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\tSearchCommandInvoker,\n\t\tSearchWarehouse,\n\t\tSearchEventRepository,\n\n\t\tSearchPhraseRepository,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-search-icon',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class SearchIconComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { SmartComponent } from '../../../common/cdk/smart-component';\nimport { StructureWarehouse } from '../../core/domain-api/structure.warehouse';\nimport { SearchPlaceholderArchive } from '../domain-api/placeholder/search-placeholder.archive';\nimport { StructureId } from '../../core/domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../core/domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { SearchCommandInvoker } from '../domain-api/search.command-invoker';\nimport { SearchWarehouse } from '../domain-api/search.warehouse';\n\n\n@Component({\n\tselector: 'gui-search-bar',\n\ttemplate: `\n\t\t<ng-container *ngIf=\"searchingEnabled\">\n\t\t\t<form #formRef\n\t\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t\t<gui-search-icon></gui-search-icon>\n\t\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t\t\t<span *ngIf=\"searchForm.controls['searchPhrase'].value\" class=\"gui-clear-search-icon\" (click)=\"clear()\"></span>\n\t\t\t</form>\n\t\t</ng-container>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-search-bar]': `\"true\"`\n\t},\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t]\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tsearchingEnabled: boolean = false;\n\n\tsearchInputSubscription: Subscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSearchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.searchWarehouse\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tthis.searchForm\n\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(200),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../domain-api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\t// SearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/core/field/field.id';\nimport { DataType } from '../../domain/core/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/core/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../../domain-api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../core/domain/summaries/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../core/domain/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../core/domain/summaries/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../../domain-api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tlet matcher = fieldConfig.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../../domain-api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './core/field-collection.factory';\nimport { DataFieldFactory } from './core/field/data/data-field.factory';\nimport { FieldIdGenerator } from './core/field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './core/field/field.factory';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../core/domain/structure.id';\nimport { structureGlobalId } from '../../core/domain-api/structure.global-id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './read/field.read-model-repository';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelRepository,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../domain-api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (let element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tlet events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tlet rows = Array.from(this.selectedRows),\n\t\t\t\tequal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i+= 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(rowChangedEvent.getSelectedRows(), rowChangedEvent.isAllSelected(), rowChangedEvent.isAllUnselected());\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { StructureOriginChangedEventHandler } from '../domain-api/origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from '../domain-api/prepared/structure.prepared-items.event-handler';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../domain-api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../domain-api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginRepository,\n\t\tStructurePreparedItemsRepository,\n\t\tSourceConverter,\n\n\t\tSourceCommandInvoker,\n\t\tSourceWarehouse,\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../domain-api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../domain-api/source.api-module';\nimport { RowSelectionModeRepository } from '../domain-api/formation/mode/row-selection-mode.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive,\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from './panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../domain-api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/domain-api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/domain-api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/domain-api/source.command-invoker';\nimport { SourceEventService } from '../../source/domain-api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/domain-api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/domain-api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/domain-api/formation/formation.event-repository';\nimport { StructureCommandDispatcher } from '../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../domain-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/domain-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/domain-api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/domain-api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/domain-api/read/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/domain-api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/domain-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from './panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/domain-api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/domain-api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/domain-api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/feature/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/feature/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/domain-api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/domain-api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\n\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t// '../../../structure/paging/feature/style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t// '../../../structure/filter/feature/style/structure-filter.ngx.scss',\n\t\t'../../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure]': `\"true\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandDispatcher.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../filter/domain-api/filter.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { UniqueValuesReadModel } from '../../../../filter/domain-api/unique/unique-values.read-model';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>-->\n\n\t\t\t\t\t\t<gui-unique-value-list\n\t\t\t\t\t\t\t\t[fieldId]=\"column.getFieldId()\">\n\t\t\t\t\t\t</gui-unique-value-list>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/domain-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/domain-api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { FilterWarehouse } from '../../../filter/domain-api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/domain-api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/domain-api/filter.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../domain-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SearchPhraseRepository } from '../../../search/domain-api/phrase/search-phrase.repository';\nimport { SearchHighlightArchive } from '../../../search/domain-api/highlight/search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/domain-api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/domain-api/row-selection';\nimport { RowSelectToggleType } from '../../../source/domain/formation/core/row-select-toggle-type';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: SearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: SearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.rowSelectionTypeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\t// this.formationWarehouse\n\t\t// \t.onRowSelectedReadModel()\n\t\t// \t.pipe(\n\t\t// \t\tfilter(() => !this.checkboxSelection),\n\t\t// \t\tthis.takeUntil()\n\t\t// \t)\n\t\t// \t.subscribe((rowSelected: RowSelectedReadModel) => {\n\t\t//\n\t\t// \t\tthis.clearSelectedRows();\n\t\t//\n\t\t// \t\trowSelected.getAll()\n\t\t// \t\t\t\t   .forEach((id: string) => {\n\t\t//\n\t\t// \t\t\t\t\t   const strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t// \t\t\t\t\t\t   selectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\t\t//\n\t\t// \t\t\t\t\t   if (selectedRowEl) {\n\t\t// \t\t\t\t\t\t   this.renderer.addClass(selectedRowEl, 'selected');\n\t\t// \t\t\t\t\t   }\n\t\t// \t\t\t\t   });\n\t\t// \t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit, ViewEncapsulation, SimpleChanges, OnChanges, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/domain-api/formation/formation.command-invoker';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowSelectToggleType } from '../../../../source/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/domain-api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/domain-api/formation/row-selected.read-model';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `./structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly renderer2: Renderer2,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tlet prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.renderer2.removeClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t} else {\n\t\t\t\t\tthis.renderer2.addClass(this.elRef.nativeElement, 'selected');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/domain-api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `./structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../domain-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/domain-api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/domain-api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/domain-api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/domain-api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/domain/core/item/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../domain-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSourceWarehouse.onEntities(),\n\t\t\tthis.compositionWarehouse.onTemplateColumns()\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\n\t\t\t\tthis.render();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../domain-api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/domain-api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../domain-api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/domain-api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../panel/info/structure.info-panel.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { FilterWarehouse } from '../../../filter/domain-api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/domain-api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../domain-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/footer-panel/structure.footer-panel.config-archive';\nimport { TitlePanelConfig } from '../panel/title-panel/title-panel.config';\nimport { FooterPanelConfig } from '../panel/footer-panel/footer-panel.config';\nimport { StructureInfoPanelConfig } from '../panel/info/structure.info-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingReadModelService: PagingWarehouse,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: FilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/domain/structure.id';\n\nexport class SelectionEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class FilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterToggledEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\nexport class FilterAddedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ActiveFilterReadModel } from '../../domain-api/active/active-filter.read-model';\n\nexport class ActiveFiltersSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class UniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class AllUniqueFilterSelectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class UniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\n\n\nexport class AllUniqueFilterUnselectedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../domain-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../domain-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/domain/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(aggregateId: AggregateId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(aggregateId.getId());\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './domain-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../domain-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './domain-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/domain/core/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/domain/core/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/domain/core/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelRepository } from './field.read-model-repository';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelRepository,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { DomainEvent, DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/summaries/structure.summaries-changed.event';\nimport { StructureReadModelRootId } from '../read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): Observable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../domain-api/filter-config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { QuickFiltersConfig } from '../domain-api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/domain/core/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../field/domain/core/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../domain-api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (let fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (let filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../../domain/filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../field/domain/core/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../domain-api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from './filter.id-generator';\nimport { ActiveFilterReadModel } from '../domain-api/active/active-filter.read-model';\nimport { FilterId } from './filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (let filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { Field } from '../core/field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../domain-api/field.config';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\n\nexport class FilterTypesInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterTypeReadModel } from '../../../domain-api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\n\n\nexport class FilterTypesInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\n\n\nexport class FilterAddedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../domain-api/active/active-filter.read-model';\n\n\nexport class FilterRemovedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\n\nexport class UniqueFilterCalculatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\n\nexport class SelectedRowChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\n\nexport class SelectionEnabledSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../domain-api/row-selection';\n\nexport class SelectionModeSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/domain/paging.manager';\nimport { SourceManager } from '../../source/domain/core/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from '../../sorting/domain/sorter.collection';\nimport { FilterManager } from '../../filter/domain/filter.manager';\nimport { FieldCollection } from '../../field/domain/core/field-collection';\nimport { FormationManager } from '../../source/domain/formation/core/formation-manager';\nimport { StructureId } from './structure.id';\nimport { StructureEditSourceItemParams } from '../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/domain-api/paging-config';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/domain-api/sorting-config';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { StructureSorter } from '../../sorting/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/domain-api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/domain-api/quick-filters.config';\nimport { SearchConfig } from '../../search/domain-api/search-config';\nimport { SearchManager } from '../../search/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/domain-api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/domain/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/domain-api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/domain/origin/origin-id';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tlet activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../field/domain/core/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../domain-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../source/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { Field } from '../../field/domain/core/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../field/domain/core/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (let value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { OriginItemEntity } from '../../../source/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/domain/core/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (let entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (let field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (let notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tlet map = new Map();\n\n\t\tfor (let field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/domain/core/field-collection.factory';\nimport { StructureId } from './structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../domain-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/vertical-formation/vertical-formation.factory';\nimport { summariesProviders } from '../domain/summaries/summaries.providers';\nimport { FieldsInitedEventHandler } from '../../field/domain-api/read/fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from '../domain/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\n\tVerticalFormationFactory,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureDomainEventHandlers = [\n\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler),\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler),\n\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-search-bar></gui-search-bar>\n<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../domain-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/domain-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/domain-api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../../../domain/structure.id';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/domain-api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../../../../composition/domain-api/composition.command-invoker';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandInvoker,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-column-menu-icon',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValuesReadModel } from '../../domain-api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterWarehouse } from '../../domain-api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../domain-api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../domain-api/filter.command-invoker';\n\n@Component({\n\tselector: 'gui-unique-value-list',\n\ttemplate: `\n\n\t\t<gui-checkbox [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  (changed)=\"toggleAllSelect()\">\n\t\t\tSelect all\n\t\t</gui-checkbox>\n\t\t<div class=\"gui-unique-value-list\">\n\t\t\t<div *ngFor=\"let value of uniqueValues\">\n\t\t\t\t<gui-checkbox [checked]=\"value.isEnabled()\"\n\t\t\t\t\t\t\t  (changed)=\"toggleSelect(value)\">\n\t\t\t\t\t{{value.getValue()}}\n\t\t\t\t</gui-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"gui-unique-value-list-actions\">\n<!--\t\t\t<button gui-button-->\n<!--\t\t\t\t\t[outline]=\"true\"-->\n<!--\t\t\t\t\t(click)=\"clearFilters()\">-->\n<!--\t\t\t\tCancel-->\n<!--\t\t\t</button>-->\n\t\t\t\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\"\n\t\t\t\t\t(click)=\"clearFilters()\">\n\t\t\t\tClear\n\t\t\t</button>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: ['../style/unique-value-list.ngx.scss']\n})\nexport class UniqueValueListComponent extends SmartComponent {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.filterWarehouse\n\t\t\t.onUniqueValues(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandDispatcher.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandDispatcher.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandDispatcher.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandDispatcher.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { fabricImports } from '../../../core/feature/structure-fabric.imports';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/domain-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../domain-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../../composition/domain-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceWarehouse } from '../../../../source/domain-api/source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/domain-api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setCssClass(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler implements DomainEventHandler<SchemaId, SchemaThemeSetEvent> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.themeRepository.next(event.getAggregateId(), event.getTheme());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaHorizontalGridRepository } from './schema.horizontal-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaHorizontalGridSetEvent> {\n\n\tconstructor(private horizontalGridRepository: SchemaHorizontalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n\thandle(event: SchemaHorizontalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGridRepository.next(event.getAggregateId(), event.getHorizontalGrid());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaRowColoringRepository } from './schema.row-coloring.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\n\n\n@Injectable()\nexport class SchemaRowColoringSetEventHandler implements DomainEventHandler<SchemaId, RowColoringSetEvent> {\n\n\tconstructor(private schemaRowColoringRepository: SchemaRowColoringRepository) {\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n\thandle(event: RowColoringSetEvent): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.schemaRowColoringRepository.next(event.getAggregateId(), event.getRowColoring());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SchemaVerticalGridRepository } from './schema.vertical-grid.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridSetEventHandler implements DomainEventHandler<SchemaId, SchemaVerticalGridSetEvent> {\n\n\tconstructor(private schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n\thandle(event: SchemaVerticalGridSetEvent): void {\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.schemaVerticalGridRepository.next(event.getAggregateId(), event.getVerticalGrid());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaHorizontalGridSetEventHandler } from './horizontal-grid/schema.horizontal-grid-set.event-handler';\nimport { SchemaRowColoringSetEventHandler } from './row-coloring/schema.row-coloring-set.event-handler';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaVerticalGridSetEventHandler } from './vertical-grid/schema.vertical-grid-set.event-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t],\n\t\t\t[\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringSetEventHandler),\n\t\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridSetEventHandler),\n\t\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandInvoker,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository,\n\t\tSchemaHorizontalGridRepository,\n\t\tSchemaRowColoringRepository,\n\t\tSchemaVerticalGridRepository\n\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/domain-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/domain-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/domain-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/domain-api/source.command-invoker';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { TitlePanelConfig } from './title-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { FooterPanelConfig } from './footer-panel.config';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-empty-source[items]',\n\ttemplateUrl: `empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [`\n\t\t.gui-empty-source div {\n\t\t\tdisplay: block;\n\t\t\tpadding: 42px 8px;\n\t\t}\n\t`],\n\thost: {\n\t\t'[class.gui-empty-source]': 'true'\n\t}\n})\nexport class EmptySourceComponent {\n\n\t@Input()\n\titems: Array<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule {\n}\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../../../../schema/domain-api/schema.command-invoker';\n\n@Directive({\n\tselector: 'gui-structure[theme2]'\n})\nexport class StructureThemeGateway implements OnChanges {\n\n\t@Input()\n\ttheme2: SchemaTheme;\n\n\tconstructor(private readonly schemaCommandDispatcher: SchemaCommandInvoker) {\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges): void {\n\n\t\tif (simpleChanges.theme2 !== undefined && simpleChanges.theme2.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme2);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class ToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\nexport class ConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\nexport class ConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledRepository } from './quick-filter-enabled.repository';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledRepository } from './filter-enabled.repository';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../core/domain/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private structureFilterRepository: FilterEnabledRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../field/domain/core/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { FilterTypeRepository } from './filter-type.repository';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeRepository: FilterTypeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeRepository.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterRepository } from './active-filter.repository';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterRepository) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tlet activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../../field/domain/core/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (let key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/domain/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesRepository } from './unique-values.repository';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesRepository) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tlet uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tlet uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/domain/structure.id';\nimport { FieldsInitedEvent } from '../../../../field/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../field/domain/core/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../domain-api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../domain-api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../domain-api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../domain-api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../domain-api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, 'StructureAggregate'),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, 'StructureAggregate')\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeRepository } from './type/filter-type.repository';\nimport { ActiveFilterRepository } from './active/active-filter.repository';\nimport { UniqueValuesRepository } from './unique/unique-values.repository';\nimport { FilterEnabledRepository } from './read/filter-enabled.repository';\nimport { QuickFilterEnabledRepository } from './read/quick-filter-enabled.repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeRepository,\n\t\tActiveFilterRepository,\n\t\tUniqueValuesRepository,\n\t\tFilterEnabledRepository,\n\t\tQuickFilterEnabledRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/domain-api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { FormationWarehouse } from '../../../../../source/domain-api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/domain-api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/domain-api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/domain-api/row-selection';\n\n@Component({\n\tselector: 'gui-select-all',\n\ttemplate: `\n\n\t\t<gui-checkbox *ngIf=\"modeMulti\"\n\t\t\t\t\t  [checked]=\"selectAllChecked\"\n\t\t\t\t\t  [indeterminate]=\"selectAllIndeterminate\"\n\t\t\t\t\t  [gui-tooltip]=\"'Select'\"\n\t\t\t\t\t  (changed)=\"toggleSelectAll()\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-select-all]': 'true',\n\t}\n})\nexport class SelectAllComponent extends SmartComponent {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationWarehouse\n\t\t\t.onMode(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.formationWarehouse\n\t\t\t.onRowSelectedReadModel(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../../composition/domain-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { SourceWarehouse } from '../../source/domain-api/source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../source/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../../schema/domain-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/panel/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/panel/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../paging/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../empty-source/feature/empty-source.feature-module';\nimport { SortingDomainModule } from '../../sorting/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../field/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { SearchApiModule } from '../../search/domain-api/search.api-module';\nimport { SearchDomainModule } from '../../search/domain/search.domain-module';\nimport { StructureThemeGateway } from '../feature/gateway/schema/structure-theme.gateway';\nimport { StructureSchemaManagerModule } from '../../../schema/feature/manager/structure.schema-manager.module';\nimport { FilterDomainModule } from '../../filter/domain/filter.domain-module';\nimport { FilterApiModule } from '../../filter/domain-api/filter.api-module';\nimport { SourceDomainModule } from '../../source/domain/source.domain-module';\nimport { SourceApiModule } from '../../source/domain-api/source.api-module';\nimport { SelectAllComponent } from '../feature/header/columns/select-all/select-all.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tSearchApiModule,\n\tFilterApiModule,\n\tSourceApiModule,\n\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tStructureSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\tStructureThemeGateway\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureThemeGateway,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../structure/core/domain-api/structure.module';\n\nimport { GuiGridIdGenerator } from '../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../feature/grid/register/gui.grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}