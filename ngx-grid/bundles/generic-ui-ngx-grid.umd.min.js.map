{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/common/cdk/pure-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","StructurePagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","StructurePagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructurePagingDisplayModeArchive","onValue","Archive","StructurePagingComponent","pagingReadModelService","pagingCommandService","sourceReadModelService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","PureComponent","subClassConstructor","subClassNgOnInit","isEmptyConstructor","throwError","split","reason","Error","name","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","schemaId","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","schemaReadModelRootId","menuColumnManagerService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","Renderer2","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","HTML","CellValue","text","CellValueType","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","cellView","templateFunction","cellValue","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","pos","ph","join","ColumnDefinition","sort","setField","setTemplateFunction","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getAggregateId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","DomainEventBus","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","toDomainEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","TextViewComponent","isBold","isItalic","isHtml","addClass","className","[class.gui-text-view]","Attribute","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedEvent","PageChangedAggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","StructureGateway","pagingEventService","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","simpleChanges","rowDetail","titlePanel","footerPanel","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","NextPageEvent","PrevPageEvent","StructurePagingEventRepository","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","drawerService","ref","turnOn","turnOff","close","FabricDrawerService","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","structureSourceWarehouse","compositionWarehouse","structureFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","PagingSetEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEventName","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEventName","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","assignDefaultSummaries","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SUMMARIES_CALCULATORS","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","structureAggregate","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n}\n\nexport interface GuiTitlePanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiFooterPanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../feature-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../feature-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../feature-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../feature-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/theme/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../feature-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/feature-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../feature-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/feature-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/feature/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../feature-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering, GuiFooterPanel,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme, GuiTitlePanel\n} from '../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/feature-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { SchemaTheme } from '../../../../lib/schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../lib/schema/feature-api/row-coloring';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"gui-grid\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class StructurePagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","export abstract class PureComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (this.isEmptyConstructor() || arguments.length !== 0) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate isEmptyConstructor(): boolean {\n\t\treturn this.subClassConstructor.toString().split('(')[1][0] !== ')';\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/pure-component';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.3\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CellValue } from '../../definition/cell-value';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellValue } from '../../feature-api/read/definition/cell-value';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (cellValue: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { CellValue } from './cell-value';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value);\n\n\t\treturn cellValue;\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tlet header: any = this.header || '',\n\t\t\theaderCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation, Attribute, ElementRef, Renderer2 } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\t\t\n\t\t<ng-template #text>\n\t\t\t<span >\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\thost: {\n\t\t'[class.gui-text-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\n\t\tif (isBold !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.renderer.addClass(this.elementRef.nativeElement, 'gui-italic');\n\t\t}\n\n\t\tthis.elementRef.nativeElement.className\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from './read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingWarehouse } from '../../../feature-api/paging/structure-paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../feature-api/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends StructurePagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../paging/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../paging/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { StructureTitlePanelConfigArchive } from './title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './footer-panel/structure.footer-panel.config-archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tstructureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil, auditTime } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureSourceWarehouse: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly structureFormationWarehouse: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.structureSourceWarehouse\n\t\t\t.onEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from './read/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { pagingProviders } from './paging/paging.providers';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { TitlePanelConfig } from './title-panel.config';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { FooterPanelConfig } from './footer-panel.config';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { StructurePagingModule } from '../feature/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../feature/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/footer-panel/structure.footer-panel.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider, Compiler } from '@angular/core';\n\nimport { GridComponent } from '../feature/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\n\nimport { GridIdGenerator } from '../feature/grid/register/grid-id.generator';\nimport { GridRegister } from '../feature/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}