{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/column-manager/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","BASIC","ADVANCED","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","PagingRepository","structureRepository","on","onStructure","pipe","filter","structure","getId","toString","getPaging","StructureRepository","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","Command","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","subscribe","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureInitedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","VerticalFormationRepository","domainEventBus","inMemoryStructureQueryStore","verticalFormation$","ofEvent","event","getById","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","StructureInfoPanelComponent","renderer","dialog","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","setStyle","openInfo","open","Renderer2","FabricDialogService","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","injector","Injector","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortStatus","SortStatus","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","getFieldId","getSortStatus","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionInitedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","CompositionRepository","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","ColumnId","ColumnEntityFactory","isArray","createColumn","params","columnEntity","convertWidth","columnEntities","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","compositionId","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","setColumns","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","changeSort","sortParams","param","direction","this_1","sortParams_1","sortParams_1_1","moveLeft","findColumnIndex","move","moveRight","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","enableColumn","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","init","setColumnEnabled","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handle","command","compositionAggregate","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","getAggregateId","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","events","getEvents","domainEvents","publish","SetCompositionWidthCommandHandler","columnConverter","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","getValue","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onWidthChanged","onContainerWidthChanged","getPayload","CompositionId","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","CompositionSetColumnEnabledCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","StructureSetConfigSearchingCommand","searchConfig","InitFieldsCommand","StructureSetSearchPhraseCommand","phrase","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","StructureCommandService","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setSearchingConfig","search","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","simpleChanges","nextConfig","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","parent","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","isSortAsc","isSortDesc","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowsList","clearSelectedRows","strippedId","selectedRowEl","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combineLatest","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","StructureAggregationsChangedEvent","getAggregations","StructureAggregationUiEventsRepository","onAggregationsChanged","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","aggregations","isAggregateTypePresent","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","StructureAggregateRepository","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","StructureSearchPhraseSetDomainEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","indexOf","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","hasDirection","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","setConfig","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchPhrase","searchableFields","removeSearchFilters","searchedItems","Set","e_1","StructurePreparedEntitiesSetAggregateEvent","getPreparedItems","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","getEnabled","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructurePreparedEntitiesSetEvent","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","newPageSize","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","console","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","searchForm","formRef","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureMenuColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","stopPropagation","[class.gui-structure-menu-column-manager]","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuModule","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$1","elementComponents","GridModule","imports$1","declarations$2","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue()\n\t\t\t\t\t// .pipe(\n\t\t\t\t\t// \tdistinctUntilChanged()\n\t\t\t\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\t\t\t\n\t\t\t<p class=\"gui-info-title\">Generic UI Grid</p>\n\t\t\t\n\t\t\t<p class=\"gui-info-version\">version 0.5.7</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureInitedEvent } from '../../command/init/structure-inited.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tverticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation, Renderer2, ElementRef } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\t\t\t\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'line-height', '30px');\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t{{ element }}\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t{{ element }}\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\" >\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\" >\n\t\t\t<gui-function-view [element]=\"element\" ></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortStatus } from './sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortStatus,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId) {\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.columnId, this.sortStatus, this.enabled);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId());\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortStatus\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract on(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, takeUntil, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../domain/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\nimport { Structure } from '../../../../structure/domain/structure/read/structure';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tCompositionColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\t\tCompositionColumnMovedRightEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = composition.getId().toString();\n\n\t\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortStatus } from '../sort/sort-status';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortStatus } from '../sort/sort-status';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortStatus.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]/tree-content.assert.ts\n\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tconst aggregateEvent = composition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortStatus } from '../domain/command/column/sort/sort-status';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortStatus> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionSetColumnEnabledCommand);\n\t}\n\n\thandle(command: CompositionSetColumnEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.enableColumn(columnId, enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveLeftColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveLeftColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveLeft(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveRightColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveRightColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveRight(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../domain/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionSetColumnEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveLeftColumnCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveRightColumnCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortStatus) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortStatus {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set/structure.set-search-phrase.command';\nimport { SortStatus } from '../../../composition/domain/command/column/sort/sort-status';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortStatus> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation, AfterViewInit } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.containerRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * this.rowHeight}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.accessor(entity) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\t\t\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges, OnDestroy {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.accessor(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\nimport { Reactive } from '../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&sum;</span> Sum</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-mean\"><span>_</span><span>X Average</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&and;</span> Min</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&or;</span> Max</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-median\"><span>~</span><span>X Median</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\t\tSortOrderSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortStatus } from '../../../../../composition/domain/command/column/sort/sort-status';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortStatus): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortStatus.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortStatus.ASC || sortOrder === SortStatus.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortStatus.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowHeightCommand);\n\t}\n\n\thandle(command: SetRowHeightCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\trowHeight = command.rowHeight;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(structureId));\n\t}\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowHeightCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t\t<span class=\"gui-header-menu-icon\"></span>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../composition/ui-api/composition.command-service';\n\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let column of columns\">\n\n\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\"\n\t\t\t\t\t\t  (click)=\"toggleColumn(column)\">\n\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-checkbox>\n\t\t\t\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId());\n\t\t}\n\t}\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortStatus;\n\n\tsortStatus: SortStatus;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortStatus) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tsetSortOrder(sort: SortStatus): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureMenuColumnManagerComponent } from './column-manager/structure.menu-column-manager.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureAggregationPanelComponent } from './panel/aggregation/structure.aggregation-panel.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureAggregationPanelConfigConverter } from './panel/aggregation/structure.aggregation-panel.config-converter';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from './header/menu/structure.column-menu.module';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureAggregationPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\tStructureAggregationPanelConfigConverter,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}