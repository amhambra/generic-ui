{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/create-composition/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","columnSortingConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","sorting","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","StructureRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureCreatedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","VerticalFormationRepository","inMemoryStructureQueryStore","verticalFormation$","getAggregateId","getById","ifPresent","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureDialogColumnManagerService","injector","fabricDialogService","open","compositionId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","setStyle","openInfo","openColumnManager","Renderer2","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortOrder","SortOrder","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","getSortingEnabled","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","sortStatus","sortable","getFieldId","getSortStatus","isSortEnabled","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","getValue","searchPhrase","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionRepository","ReadModelRepository","CompositionCreatedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","ColumnEntityFactory","isArray","createColumn","columnEntity","convertWidth","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onContainerWidthChanged","getPayload","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","enableColumn","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","publishDomainEvents","command","publish","getAggregateRepository","forCommand","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","handleAggregate","publishEvents","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","getColoring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","getSortOrder","SetRowHeightCommand","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureCommandService","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","LocalStructureSearchDispatcher","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","simpleChanges","nextConfig","rowSelecting","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseSetDomainEvent","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureAggregationsChangedEvent","getAggregations","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","AGGREGATION_CALCULATORS","AggregationCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","StructureAggregationsChangedAggregateEvent","AggregationManager","calculators","calculations","calc","remove","update","AggregationManagerFactory","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","setConfig","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchableFields","removeSearchFilters","searchedItems","e_1","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","AggregateFactory","SetPagingCommandHandler","structureAggregate","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaCommandHandlers","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","stopPropagation","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerModule","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","isAggregateTypePresent","StructureAggregationPanelModule","CreateStructureCommandHandler","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { GridColumnSortingConverter } from './column/sorting/grid.column-sorting.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { Structure } from './structure';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport abstract class StructureRepository {\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.8.1\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../command/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\nimport { Structure } from '../structure';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\t\t\tconst verticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate fabricDialogService: FabricDialogService) {\n\t}\n\n\topen(compositionId: CompositionId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, injector);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\t\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\t\t\t\t\n\t\t\t</ng-container>\n\n\t\t</div>\n\t\t\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\t\t\t\t<div [gui-tooltip]=\"'Manage Columns'\"\n\t\t\t\t\t (click)=\"openColumnManager()\">\n\t\t\t\t\t<button>C</button>\n\t\t\t\t</div>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\t\tInfo\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'line-height', '30px');\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortOrder = SortOrder.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortOrder = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { ColumnId } from '../../command/column/column.id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.accessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\taccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortOrder,\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\nimport { DomainEventBus, ReadModelRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionRepository extends ReadModelRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<Composition>>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/command/create-composition/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<Composition>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: Composition) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { CreateCompositionCommand } from './create-composition/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tcolumnEntity.setEnabled(columnConfig.enabled);\n\t\t}\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/command/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeUrl, SafeScript, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortOrder } from '../sort/sort-order';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config || {};\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.getConfig();\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]/tree-content.assert.ts\n\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, AggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { HermesModule } from '@generic-ui/hermes';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/command/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/command/create-composition/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t]\n\t\t),\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { globalStructureId } from '../../../../global-structure-id';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { globalStructureId } from '../../../../global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t   \treturn idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../../structure-id';\nimport { globalStructureId } from '../../../global-structure-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { CreateStructureCommand } from '../../domain/structure/command/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/command/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { LocalStructureSearchDispatcher } from './search/local-structure-search.dispatcher';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchDispatcher }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchReadModelRepository } from '../../../ui-api/structure/search/structure-search.read-model.repository';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t// \tthis.structureSearchReadModelRepository\n\t// \t\t.onSearchEnabled()\n\t// \t\t.pipe(\n\t// \t\t\tthis.takeUntil()\n\t// \t\t)\n\t// \t\t.subscribe((searching: boolean) => {\n\t// \t\t\tthis.globalSearching = searching;\n\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.containerRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t \tconst searchPhrase = args[0],\n\t\t\t\thighlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t \tthis.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\nimport { globalStructureId } from '../../../domain/global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId, AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureAggregate> {\n\n\tabstract getById(aggregateId: AggregateId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, map, takeUntil, catchError } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../../domain/structure/command/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tSchemaSetEvent,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\tconst key = structure.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fields = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fields));\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortOrder } from '../../../../../composition/domain/command/column/sort/sort-order';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, fields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\nimport { AggregateFactory } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tschema = aggregate.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<StructureAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHorizontalGrid(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<StructureAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\ttheme = command.getTheme();\n\n\t\tschema.setTheme(theme);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaBottomHeaderCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaBottomHeaderCommand> {\n\t\treturn ChangeSchemaBottomHeaderCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\n\t\tconst schema = structure.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderBottom(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaBottomHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaBottomHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler implements CommandHandler<StructureAggregate, ChangeSchemaTopHeaderCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangeSchemaTopHeaderCommand> {\n\t\treturn ChangeSchemaTopHeaderCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\n\t\tconst schema = aggregate.getSchema(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tschema.setHeaderTop(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangeSchemaTopHeaderCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaTopHeaderChangedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<StructureAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowColoringCommand): void {\n\n\t\t// missing implementation\n\t\tconst schema = structure.getSchema(),\n\t\t\tcoloring = command.getColoring();\n\n\t\tschema.setRowColoring(coloring);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler implements CommandHandler<StructureAggregate, SetSchemaCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaCommand> {\n\t\treturn SetSchemaCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetSchemaCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaBottomHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangeSchemaTopHeaderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, 'StructureAggregate')\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\nimport { structureKey } from '../structure.module';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\nimport { structureKey } from '../structure.module';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { structureKey } from '../structure.module';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t\t<span class=\"gui-header-menu-icon\"></span>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, AggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { SourceReadModelService } from './source/source-read-model.service';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/command/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/command/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { schemaCommandHandlers } from './schema/schema.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...schemaCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}