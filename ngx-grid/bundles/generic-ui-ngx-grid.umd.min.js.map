{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/l10n/core/domain/lang/en.ts","ng://@generic-ui/ngx-grid/l10n/core/api/default-translation.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.public-api.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/gui.grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/gui.grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/gui.grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/gui.grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid.column.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/coloring/gui.grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/gui.grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/gui.grid.paging.converter.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/row-selection.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/row-selection/gui.grid.row-selection.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/gui.grid-column.component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-gateway.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-definition.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.providers.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/gui.grid.register.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/selected-row.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/api/gui.grid.api-provider.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/row-selected.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/row-selection-mode.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/gui.grid.theme.command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.command-invoker.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/core/modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/class/class-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-name.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/style/style-modifier.ts","ng://@generic-ui/ngx-grid/common/cdk/dom/attribute/attribute-modifier.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.command-invoker.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/gui.grid.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gui-component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/smart-component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/mode/paging-display-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging-position.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive/stream-closer.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.modifier.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.id.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.ts","ng://@generic-ui/ngx-grid/common/cdk/component/pure-component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/select/paging-select.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/navigator/alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/advanced/pages/alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.event-repository.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/structure/core/api/structre.key.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain-module.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/read/paging.repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain-read/paging.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain/paging.domain.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/paging/core/domain-read/paging.domain.event-repository.ts","ng://@generic-ui/ngx-grid/structure/paging/core/api/paging.api-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/navigator/paging-navigator.component.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/basic/stats/paging-stats.component.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.api-module.ts","ng://@generic-ui/ngx-grid/l10n/core/api/translation.facade.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.pipe.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/dictionary.ts","ng://@generic-ui/ngx-grid/l10n/core/domain/translation.domain-facade.ts","ng://@generic-ui/ngx-grid/l10n/feature/translation.feature-module.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/paging.feature-module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/common/cdk/component/static-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/info-modal/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.id.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.config.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.archive.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/dialog/structure.dialog-schema-manager.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/icon-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel.config-converter.ts","ng://@generic-ui/ngx-grid/schema/core/api/row-coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/structure.schema-manger.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/manager-icon/structure.schema-manager-icon.component.ts","ng://@generic-ui/ngx-grid/schema/feature/manager/schema-manager.module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter.service.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/filter/active-filter-menu-trigger.directive.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/icon/filter-icon.component.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field-read-model.archive.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/filter-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/quick-filter-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type-map.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-values.archive.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/config/filter-container-token.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/column-selector/column-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-selector/filter-type-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/value/filter-value.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/field-selector/field-selector.component.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/filter-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/toggle/toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/add-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/remove-all-filters.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/remove-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/config-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/config/set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/quick/set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.settings.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/base-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-types/contains/contains-filter-type.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/filter-type.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filter.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/read/config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/type/filter-type.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/active-filters-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/active/active-filters-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-value.read-model.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/unique/unique-filter-calculated.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-type.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/unselect-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unselect-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/select-all-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/select-unique-filter.command-handler.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/filter.domain-module.ts","ng://@generic-ui/ngx-grid/structure/filter/core/api/filter.api-module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.component.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.warehouse.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/search/active-search.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/active-filters/active-filter-list.module.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/menu/filter-menu.feature-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/counter/source-counter.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/structure-column.input-handler.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gateway.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/event/source-event.service.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/formation.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/set-enabled/row-select-enabled.repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/common/cdk/component/dynamically-created-component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/panel/info/structure.info-panel-config.service.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorting.domain-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorting.api-module.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/sorting.feature-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/config-searching-set.event.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/config/set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/highlight/search-highlight.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/placeholder/search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/search-phrase.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/phrase/search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/enabled/searching-enabled.archive.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/enabled/config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-module.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain-read/search.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain-read/search.domain-event-repository.ts","ng://@generic-ui/ngx-grid/structure/search/core/domain/search.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/search/core/api/search.api-module.ts","ng://@generic-ui/ngx-grid/structure/search/feature/icon/search-icon.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.component.ts","ng://@generic-ui/ngx-grid/structure/search/feature/search.feature-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.read-model.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/field.ui-converter.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/base-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/unknown-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/number-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/string-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/boolean-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/type/date-data-field.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/data/data-field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.id.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field/field.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field-collection.factory.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/read/fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/field.domain-module.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/field/core/api/field.api-module.ts","ng://@generic-ui/ngx-grid/structure/field/feature/field.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/type/row-selection-type.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/read/source.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.converter.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.dispatcher.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/origin-id.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/row-select-toggle-type.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation-manager.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/core/formation.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/source.manager-factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/set-enabled-selection.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected.read-model.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/row-selected/selected-row-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/set-selection-mode.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/select-all/select-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/unselect-all/unselect-all-rows.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.event.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/formation/mode/selection-mode-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/delete/delete-origin-item.command-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.source-origin.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-items.archive.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain-module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain-read/source.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/source.domain.command-invoker.ts","ng://@generic-ui/ngx-grid/structure/source/core/api/source.api-module.ts","ng://@generic-ui/ngx-grid/structure/source/feature/source.feature-module.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-class.archive.ts","ng://@generic-ui/ngx-grid/schema/core/api/styling/schema.row-style.archive.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/schema/core/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/row-coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/schema/core/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.key.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/vertical-grid/schema.vertical-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/row-coloring/schema.row-coloring.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/horizontal-grid/schema.horizontal-grid.repository.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-module.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/schema/core/domain-read/schema.domain-warehouse.ts","ng://@generic-ui/ngx-grid/schema/core/domain/schema.domain-event-repository.ts","ng://@generic-ui/ngx-grid/schema/core/api/schema.api-module.ts","ng://@generic-ui/ngx-grid/schema/feature/schema.feature-module.ts","ng://@generic-ui/ngx-grid/structure/core/api/structure.initial-values-ready.archive.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.event-repository.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/enabled/summaries-enabled-archive.service.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.providers.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/config/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/config/structure.summaries-config.archive.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain-read/summaries.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/config/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain/summaries.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/domain-read/summaries.domain-event-repository.ts","ng://@generic-ui/ngx-grid/structure/summaries/core/api/summaries.api-module.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/structure.summaries-translations.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/panel/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/summaries.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/structure.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/config/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-value.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column.id.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/common/cdk/resize-detector/resize.detector.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure-tokens.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/structure/core/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-range.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/scroll-bar-position-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/field/core/domain/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/type/init/filter-types-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove-all/all-filters-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/add/filter-added.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/core/remove/filter-removed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select/unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/selected-row-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/formation/mode/selection-mode-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/structure.sorter.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/api/sorter.id.ts","ng://@generic-ui/ngx-grid/structure/sorting/core/domain/sorter.collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-id.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value.id-generator.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-value-collection.ts","ng://@generic-ui/ngx-grid/structure/filter/core/domain/unique/unique-filter-manager.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/structure/core/domain/structure.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/structure/source/core/domain/core/item/item.entity-factory.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/trigger/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.component.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/unique/unique-value-list.module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/structure/core/domain/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/structure-banner-panel.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/panel/banner-panels/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.component.ts","ng://@generic-ui/ngx-grid/structure/source/feature/empty/empty-source.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/column/select-all/select-all.component.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/scroll-bar/scroll-bar-position-set.event-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command-handler.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain/vertical-formation.domain-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/domain-read/vertical-formation.domain-warehouse.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/core/api/vertical-formation.api-module.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/vertical-formation.feature-module.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.key.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.id.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/empty-group.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/composition.group.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.events.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/composition.groups-set.event.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/composition/core/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/template/template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/composition/core/api/column/column-definition-id.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/composition/core/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/composition/core/domain/group/set-groups/set-groups.command-handler.ts","ng://@generic-ui/ngx-grid/composition/core/domain/highlight/column-highlight.manager.ts","ng://@generic-ui/ngx-grid/composition/core/domain/highlight/column-highlight.archive.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-module.ts","ng://@generic-ui/ngx-grid/composition/core/api/group/group.collection.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/group/composition-group.archive.ts","ng://@generic-ui/ngx-grid/composition/core/domain/compositon.domain-command-invoker.ts","ng://@generic-ui/ngx-grid/composition/core/domain/composition.domain-event-repository.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/composition.domain-warehouse.ts","ng://@generic-ui/ngx-grid/composition/core/api/composition.api-module.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/composition/feature/column/column-query.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/composition/core/domain-read/view/text/text-view.component.ts","ng://@generic-ui/ngx-grid/composition/feature/composition.feature-module.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/header/group/structure-header-groups.component.ts","ng://@generic-ui/ngx-grid/common/cdk/component/gate.ts","ng://@generic-ui/ngx-grid/structure/search/feature/gate/searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/searching/structure-searching.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/header/structure-column-header.gate.ts","ng://@generic-ui/ngx-grid/structure/paging/feature/gate/paging.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/paging/structure-paging.gate.ts","ng://@generic-ui/ngx-grid/structure/source/feature/gate/selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/structure-selection.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/l10n/structure-l10n.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/structure-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/detail/structure-row-detail.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/column/menu/structure-column-menu.gate.ts","ng://@generic-ui/ngx-grid/structure/summaries/feature/gate/structure-summaries.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/panel/info/structure-info-panel.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/class/structure-row-class.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/coloring/structure-row-coloring.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/row/style/structure-row-style.gate.ts","ng://@generic-ui/ngx-grid/schema/feature/gate/grid/theme-grid.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/source/source-loading.gate.ts","ng://@generic-ui/ngx-grid/structure/vertical-formation/feature/gate/vertical-formation.gate.ts","ng://@generic-ui/ngx-grid/structure/sorting/feature/gate/structure-sorting.gate.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/gate/structure-filter.gate.ts","ng://@generic-ui/ngx-grid/structure/filter/feature/gate/structure-quick-filters.gate.ts","ng://@generic-ui/ngx-grid/structure/grid/feature/gate/structure.gates.ts","ng://@generic-ui/ngx-grid/structure/common/css-class/css-class.module.ts","ng://@generic-ui/ngx-grid/structure/common/structure-shared.module.ts","ng://@generic-ui/ngx-grid/common/cdk/resize-detector/resize-detector.module.ts","ng://@generic-ui/ngx-grid/structure/grid/core/api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/core/api/gui.grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","enTranslation","sourceEmpty","pagingItemsPerPage","pagingOf","pagingNextPage","pagingPrevPage","pagingNoItems","infoPanelShowing","infoPanelItems","infoPanelOutOf","infoPanelThemeMangerTooltipText","infoPanelColumnManagerTooltipText","infoPanelInfoTooltipText","themeManagerModalTitle","themeManagerModalTheme","themeManagerModalRowColoring","themeManagerModalVerticalGrid","themeManagerModalHorizontalGrid","columnManagerModalTitle","headerMenuMainTab","headerMenuMainTabColumnSort","headerMenuMainTabHideColumn","headerMenuMainTabHighlightColumn","headerMenuMainTabMoveLeft","headerMenuMainTabMoveRight","headerMenuMainTabColumnSortAscending","headerMenuMainTabColumnSortDescending","headerMenuMainTabColumnSortNone","headerMenuFilterTab","headerMenuColumnsTab","summariesCount","summariesDist","summariesSum","summariesAvg","summariesMin","summariesMax","summariesMed","summariesTruthy","summariesFalsy","summariesDistinctValuesTooltip","summariesAverageTooltip","summariesMinTooltip","summariesMaxTooltip","summariesMedTooltip","summariesCountTooltip","defaultTranslation","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","ROW","SINGLE","MULTIPLE","GuiDefaultTranslation","GuiGridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GuiGridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","NG_TEMPLATE","GuiGridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GuiGridColumnSortingConverter","sortingConfig","GuiGridColumnCellEditingConverter","config","GuiGridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GuiGridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","configs","map","columns","convertColumn","header","guiColumn","columnConfig","field","width","summaries","sorting","cellEditing","formatter","matcher","templateRef","GuiGridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GuiGridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GuiGridColumnMenuConverter","Injectable","GuiGridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GenericBuilder","build","buildObject","RowSelection","mode","isModeDefined","isTypeDefined","isEnabledDefined","isEnabled","getMode","getType","Builder","_super","RowSelectionBuilder","tslib_1.__extends","withEnabled","withType","withMode","GuiGridRowSelectionConverter","selection","builder","convertMode","RowSelectionMode","GuiRowSelectionMode","RowSelectionType","GuiRowSelectionType","GuiGridColumnComponent","Component","args","selector","template","ContentChild","TemplateRef","static","Input","GuiGridGateway","source","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","selectedRows","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","gridRowSelectionConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","rowSelection","rowSelectionConfig","paging","ngAfterContentInit","guiGridColumnComponent","toArray","onPageChange","emit","onPageSizeChange","onItemSelect","item","onRowsSelect","rows","guiRows","row","index","getIndex","getSource","itemId","getItemId","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","ContentChildren","Output","StructurePagingDefinitionBuilder","PagingDefinition","StructurePagingDefinitionDefaultBuilder","defaultEnabled","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","guiGridStructureDefinition","guiGridProviders","provide","useValue","structureParentComponent","InjectionToken","GuiGridIdGenerator","generateId","PREFIX","GuiGridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","SelectedRow","GuiGridApiProvider","schemaId","formationCommandDispatcher","formationWarehouse","sourceCommandInvoker","searchCommandInvoker","gridThemeCommandInvoker","structureCommandInvoker","summariesCommandInvoker","sortingCommandInvoker","pagingCommandInvoker","formationCommandInvoker","fcd","fw","scd","setSource","setOrigin","showLoading","setLoading","hideLoading","deleteRow","deleteRows","deleteSelectedRows","getSelectedRows","selectAll","unselectAll","enablePaging","enable","disablePaging","disable","nextPage","prevPage","changePageSize","setPagingConfig","setPaging","setSearchingConfig","search","phrase","clearSearchPhrase","scrollToTop","scrollToBottom","scrollToRowByIndex","scrollToIndex","setTheme","setVerticalGrid","setHorizontalGrid","setRowColoring","enableVirtualScroll","disableVirtualScroll","enableSummaries","setSummariesEnabled","disableSummaries","setSortConfig","setSortingConfig","StructureCommand","Command","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","commandDispatcher","toggleSelectedRow","dispatch","CommandDispatcher","SetEnabledSelectionCommand","SetSelectionModeCommand","SelectAllRowsCommand","UnselectAllRowsCommand","FormationCommandInvoker","formationDispatcher","setDefaultFormation","changeMode","setSelection","SourceCommandInvoker","RowSelectedRepository","AggregateArchive","RowSelectionModeRepository","SourceWarehouse","FormationWarehouse","rowSelectedRepository","rowSelectionModeRepository","sourceWarehouse","items","getPreparedEntities","selectedItemIds","getSelectedItemIds","selectedItems","some","getId","toString","getSourceItem","onRowSelectedReadModel","on","getValueOrNullOrThrowError","getAll","onSelectedRows","pipe","hermesMap","rm","onMode","SearchCommandInvoker","GuiGridThemeCommandInvoker","schemaCommandInvoker","schemaTheme","schemaRowColoring","verticalGrid","horizontalGrid","SchemaCommandInvoker","StructureCommandInvoker","Modifier","hostElement","getElement","htmlElement","createModifier","getHost","Error","ClassModifier","_a","class_1","add","classes","_i","addClassToDomElement","remove","removeClassFromDomElement","clear","removeAttribute","CLASS","classList","StyleModifier","setStyleByName","name","setWidth","StyleName","toPx","setHeight","setPaddingTop","styleName","STYLE","removeStyleByName","AttributeModifier","setAttribute","PagingCommandInvoker","SummariesCommandInvoker","SetSortingCommand","getSortingConfig","ToggleSortCommand","compositionId","fieldId","getCompositionId","getFieldId","SetSortOrderCommand","sortOrder","getSortOrder","SortingCommandInvoker","toggleSort","setSortOrder","GuiGridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","sourceCommandDispatcher","structureCommandDispatcher","classModifier","nativeElement","styleModifier","attributeModifier","ngOnInit","initApi","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","api","ngOnDestroy","getElementRef","getGridId","detectChanges","GUI_GRID_ID","schemaReadModelRootId","providers","useExisting","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricTooltipModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","GuiComponent","innerElementRef","innerClassModifier","addHostClass","addClassToHost","className","removeClassFromHost","hasChanged","prop","getSelectorName","SmartComponent","detector","viewInDom","hermesUnsubscribe$","HermesSubject","ngAfterViewInit","hermesUnsubscribe","reRender","isViewInDom","hermesSubscribe","stream$","callback","hermesTakeUntil","subscribe","streamValues","hermesSubscribeWithoutRender","subscribeAndEmit","emitter","mapper","unsubscribe","complete","PagingWarehouse","PagingDisplayModeArchive","Archive","TOP","BOTTOM","StreamCloser","unsubscribe$","takeUntil","isCompleted","CssClassModifier","select","CssClass","unselect","clazzName","toggle","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","PagingComponent","elRef","cssClassModifier","pagingWarehouse","pagingDisplayModeArchive","alternativeDisplay","isPagingVisible","localStreamCloser","position","PagingPosition","onPaging","calculatePagingVisibility","onOriginSize","size","sourceSize","isPagerTop","isPagerBottom","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","currentPage","numberOfVisiblePages","sample","slice","compare","JSON","stringify","ReadModelObject","Boolean","Number","PureComponent","subClassConstructor","subClassNgOnInit","hasConstructorOnlyElementRefInjected","throwError","isElementRef","reason","PagingSelectComponent","selectPageSizes","getSelectPageSizes","selectPageSize","getSelectPageSize","selectOption","AlternativePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","firstPage","goToPage","lastPage","numberOfPages","Math","ceil","AlternativePagingPagesComponent","pagingCommandService","calculate","pages","isSourceNotEmpty","pageNumber","activePage","PagingEventRepository","domainEventBus","DomainEventBus","EventRepository","StructureDomainEvent","DomainEvent","PageChangedEvent","aggregateId","StructureAggregateEvent","AggregateEvent","PageChangedAggregateEvent","toDomainEvent","getAggregateId","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","events","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","clearEvents","PagingManagerFactory","createDefault","createFromConfig","Logger","SetPagingCommand","getPagingConfig","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","StructureAggregateRepository","AggregateRepository","PagingSetEvent","SetPagingCommandHandler","structureAggregateRepository","domainEventPublisher","forCommand","handle","structureAggregate","command","changePaging","publish","aggregate","DomainEventPublisher","NextPageEvent","NextPageCommandHandler","PrevPageEvent","PrevPageCommandHandler","structure","ChangePagesizeCommandHandler","aggregateEvents","getEvents","event","publishAggregateEvents","events_1","tslib_1.__values","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","structureKey","PagingDomainModule","commandHandlers","HermesModule","registerCommandHandler","NgModule","imports","CommonModule","declarations","exports","DomainModule","PagingConverter","StructureReadModelRepository","ofEvent","forEvents","subs","console","Reactive","PagingRepository","structureRepository","hermesFilter","getPaging","PagingDomainWarehouse","pagingRepository","oncePaging","hermesTake","PagingDomainCommandInvoker","pagingDispatcher","changePagerTop","changePagerBottom","PagingDomainEventRepository","eventBus","hermesSwitchMap","PagingApiModule","useClass","ApiModule","PagingNavigatorComponent","PagingStatsComponent","firstItemIndex","lastItemIndex","TranslationApiModule","TranslationPipe","translationService","actualTranslationValue","subscription","transform","onTranslation","translation","markForCheck","Pipe","pure","TranslationFacade","Dictionary","resolver","changeTranslation","_b","keys","_c","getTranslation","from","reduce","obj","setResolver","TranslationDomainFacade","dictionary","dictionary$","HermesReplaySubject","toObservable","setDefaultTranslation","changeTranslationAndPropagate","setResolverAndPropagate","TranslationFeatureModule","apiModule","forComponent","entryComponents","Optional","FeatureModule","PagingFeatureModule","pagingApiModule","FabricModule","NumberFormatterPipe","number","replace","NumberFormatterModule","StaticComponent","detach","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","StructureThemeConverter","convertTheme","Theme","SchemaWarehouse","StructureDialogColumnManagerService","injector","schemaWarehouse","structureThemeConverter","fabricDialogService","open","readModelId","parentInjector","Injector","parent","onceTheme","FabricDialogService","SchemaId","SchemaReadModelRootId","StructureInfoPanelConfig","infoDialog","columnsManager","schemaManager","isNotUndefinedOrNull","isInfoDialogEnabled","isColumnsManagerEnabled","isSourceSizeEnabled","isSchemaManagerEnabled","StructureInfoPanelArchive","StructureDialogSchemaManagerComponent","StructureDialogSchemaManagerService","StructureInfoPanelComponent","dialog","menuColumnManagerService","schemaManagerService","structureInfoPanelArchive","infoModal","infoPanel","infoPanelConfig","totalItemsSize","onPreparedEntities","preparedItems","preparedItemsSize","themeManagerTooltipText","columnManagerTooltipText","infoTooltipText","openInfo","openColumnManager","openSchemaManager","CompositionWarehouse","CompositionCommandInvoker","StructureColumnManagerComponent","compositionCommandInvoker","compositionWarehouse","onAllColumns","enabledColumnsCount","accumulator","toggleColumn","column","stopPropagation","disableColumn","getColumnDefinitionId","enableColumn","StructureMenuColumnManagerComponent","IconComponent","StructureColumnManagerIconComponent","StructureColumnManagerModule","StructureInfoIconComponent","cdr","StructureInfoPanelConfigConverter","StructureSchemaMangerComponent","coloring","SchemaRowColoring","filter","val","isInteger","themes","selectedRowColoring","selectedTheme","toggleTheme","toTheme","toggleRowColoring","toRowColoring","toggleVerticalGrid","toggleHorizontalGrid","toLowerCase","StructureSchemaManagerIconComponent","SchemaManagerModule","ActiveFilterMenuComponent","ActiveFilterService","schemaReadModelRepository","ActiveFilterMenuTriggerDirective","el","activeFilterService","Directive","FilterIconComponent","FieldReadModelArchive","FieldWarehouse","fieldReadModelArchive","onFields","FilterEnabledArchive","QuickFilterEnabledArchive","FilterTypeMap","getFilterTypes","FilterTypeArchive","ActiveFilterArchive","UniqueValuesReadModel","allSelected","allDisabled","calculateSelection","areAllSelected","areAllDisabled","isSelectAllChecked","isIndeterminate","values","UniqueValuesArchive","FilterWarehouse","filterEnabledArchive","structureQuickFilterRepository","filterTypeArchive","uniqueValuesArchive","activeFilterArchive","onFilteringEnabled","onQuickFiltersEnabled","onFilterTypes","onActiveFilters","onUniqueValues","SetConfigFilterCommand","filterConfig","getConfig","RemoveAllFiltersCommand","AddFilterCommand","filterTypeId","getFilterTypeId","getValue","RemoveFilterCommand","filterId","getFilterId","SelectAllUniqueFilterCommand","UnselectAllUniqueFilterCommand","SelectUniqueFilterCommand","uniqueValueId","getUniqueValueId","UnselectUniqueFilterCommand","FilterCommandInvoker","setFilteringEnabled","removeAllFilters","removeFilter","selectAllUniqueFilter","unselectAllUniqueFilter","selectUniqueFilter","unselectUniqueFilter","FilterMenuComponent","fieldWarehouse","filterWarehouse","filterCommandDispatcher","fields","activeFilters","filterTypeMap","fieldReadModels","onHeaderColumns","onColumnSelect","selectedColumn","filterTypes","onFieldSelect","selectedField","onFilterTypeSelect","selectedFilterTypeId","addFilter","selectedValue","clearAddFilterForm","onValueChanged","filterContainerToken","FilterMenuTriggerComponent","drawerService","filterContainerRef","openDrawer","FabricDrawerService","ColumnSelectorComponent","columnSelected","onSelectChange","FilterTypeSelectorComponent","filterTypeSelected","filterType","FilterValueComponent","formBuilder","valueChanged","controlsConfig","FORM_FILTER_VALUE","filterForm","group","controls","valueChanges","FormBuilder","FieldSelectorComponent","fieldSelected","ToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","FilterToggledEvent","ToggleFilterCommandHandler","externalFieldId","toggleFilter","AddFilterCommandHandler","publishFromAggregate","RemoveAllFiltersCommandHandler","RemoveFilterCommandHandler","ConfigFilterSetEvent","getEnabled","SetConfigFilterCommandHandler","setFilterConfig","SetConfigQuickFilterCommand","quickFiltersConfig","ConfigQuickFilterSetEvent","SetConfigQuickFilterCommandHandler","setQuickFiltersConfig","Filter","FilterSettings","filteringEnabled","searchEnabled","quickFiltersEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","BaseFilterType","filterMany","entities","filterEntity","filterOne","entity","ContainsFilterType","getName","includes","FilterTypeId","FilterTypeIdGenerator","generate","FilterTypeReadModel","FilterTypeManager","fieldIds","WeakMap","dataTypeToFilterType","filterTypeIdGenerator","assignFilterTypes","addFields","getFilterType","getFieldIdsToFilterTypes","readModels","f","fields_1","fields_1_1","addField","dataType","getDataType","filterTypesFromDataType","assignFilterTypesForDataTypeUnknown","assignFilterTypesForDataTypeNumber","assignFilterTypesForDataTypeString","assignFilterTypesForDataTypeBoolean","assignFilterTypesForDataTypeDate","assignFilterTypesForDataTypeCustom","addFilterTypes","filterTypes_1","filterTypes_1_1","FilterId","FilterIdGenerator","ActiveFilterReadModel","fieldName","filterTypeName","getText","FilterManager","filterSettings","filters","getSettings","arr","getAllActiveFilters","af","filterTypeManager","filteredEntities","removeAll","FilterManagerFactory","ConfigQuickFilterSetEventHandler","forEvent","ofMessageType","ConfigFilterSetEventHandler","structureFilterRepository","FilterTypesInitedEvent","getMap","FilterTypeConfigFilterSetEventHandler","filterTypesInitedEvent","ActiveFiltersSetEvent","getFilters","ActiveFiltersSetEventHandler","activeFilterRepository","activeFiltersSetEvent","UniqueFilterCalculatedEvent","getUniqueValues","UniqueValueReadModel","geDisplayValue","displayValue","UniqueFilterCalculatedEventHandler","uniqueValuesRepository","calculatedEvent","uvRM_1","valuesRM","uv","getDisplayValue","uniqueValues","FieldsInitedEvent","fieldConfigs","getFields","FilterTypeFieldsInitedEventHandler","fieldsInitedEvent","UnselectAllUniqueFilterCommandHandler","UnselectUniqueFilterCommandHandler","SelectAllUniqueFilterCommandHandler","SelectUniqueFilterCommandHandler","FilterDomainModule","domainEventHandlers","registerDomainEventHandler","FilterApiModule","ActiveFilterListComponent","SearchWarehouse","ActiveSearchComponent","searchCommandDispatcher","searchWarehouse","onPhrase","clearSearch","ActiveFilterListModule","filterApiModule","FilterMenuFeatureModule","ReactiveFormsModule","SourceCounterFeatureModule","StructureInfoPanelModule","StructureIdGenerator","increment","SchemaCssClassManager","cssClass","init","cssHostRef","onCssClasses","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","structureComponentToken","ENTER","SUBMIT","CANCEL","InitFieldsCommand","getFieldConfigs","ColumnFieldId","ColumnParams","getColumn","getField","StructureColumnInputHandler","columnFieldFactory","setGroups","getConfigs","groups","initCommand","columnFieldIds","convertColumnFieldIds","params","convertColumns","setColumns","columnConfigs","groupConfigs","columnFieldId","columnField","getAccessorMethod","getSearchAccessorMethod","StructureGateway","structurePagingCommandDispatcher","pagingEventRepository","sortingCommandDispatcher","fieldCommandDispatcher","sourceCommandService","sourceEventService","compositionCommandDispatcher","compositionEventRepository","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureInfoPanelConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structurePagingDisplayModeArchive","rowSelectEnabledArchive","rowSelectionTypeArchive","schemaRowClassArchive","schemaRowStyleArchive","searchEventRepository","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","structureInitialValuesReadyArchive","changeAfterInit","structureColumnInputHandler","editMode","rowHeight","setRowHeight","autoResizeWidth","setResizeWidth","maxHeight","setContainerHeight","onColumnsChanged","onContainerWidthChanged","onSourceEdited","state","StructureCellEditState","onThemeChanged","componentInitialized","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","CompositionEventRepository","SelectedRowChangedEvent","allUnselected","isAllSelected","isAllUnselected","FormationEventRepository","subject$","itemsMap","j","onItemSelected","has","StructureWarehouse","StructureColumnMenuConfig","sort","mainMenu","filterMenu","columnsMenu","isMainEnabled","isSortingEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","setMainMenu","setFilterMenu","setColumnsMenu","StructureColumnMenuConfigArchive","nextConfig","menuConfig","RowSelectEnabledRepository","SearchEventRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaEventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","DynamicallyCreatedComponent","hasInputs","isEmpty","StructureRowDetailViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","selectedRowValue","DomSanitizer","StructureRowDetailService","ref","turnOn","turnOff","close","StructureTitlePanelConfigArchive","titlePanelConfig","StructureFooterPanelConfigArchive","footerPanelConfig","StructureInfoPanelConfigService","structureInfoPanelConfigConverter","SortToggledEvent","directions","getDirections","ToggleSortCommandHandler","sorters","publishSortEvent","sorter","direction","hasDirection","SortingSetEvent","SetSortingCommandHandler","SortOrderSetEvent","SetSortOrderCommandHandler","SortingDomainModule","SortingApiModule","SortingFeatureModule","sortingApiModule","SetConfigSearchingCommand","searchConfig","ConfigSearchingSetEvent","SetConfigSearchingCommandHandler","searchingConfig","SetSearchPhraseCommand","initial","getPhrase","isInitial","SearchPhraseSetDomainEvent","OriginSetEvent","origin","getOrigin","StructureSummariesChangedEvent","getSummaries","StructurePreparedEntitiesSetEvent","getPreparedItems","SourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSetSearchPhraseCommandHandler","structureSourceDomainEventPublisher","addSearchPhrase","SearchManager","searchFields","enabledDataTypes","searchPhrase","searchableFields","dt","removeSearchFilters","searchedItems","Set","this_1","SearchManagerFactory","SearchHighlightArchive","HIGHLIGHTING","SearchPlaceholderArchive","PLACEHOLDER","SearchDispatcher","searchHighlightArchive","searchPlaceholderArchive","highlighting","placeholder","searchOnInit","SearchPhraseArchive","SEARCH_PHRASE","SearchPhraseSetEventHandler","searchPhraseRepository","SearchingEnabledArchive","ENABLED","ConfigSearchingSetEventHandler","structureSearchingRepository","SearchDomainModule","SearchDomainWarehouse","searchingEnabledArchive","searchPhraseArchive","onSearchEnabled","onHighlight","onPlaceholder","SearchDomainEventRepository","onEvent","SearchDomainCommandInvoker","searchDispatcher","SearchApiModule","SearchIconComponent","SearchComponent","structureWarehouse","FORM_SEARCH_NAME","searchForm","observeChanges","searchingEnabled","stopObserveChanges","setValue","reset","searchInputSubscription","fromRxJsObservable","debounceTime","SearchFeatureModule","searchApiModule","FieldReadModel","FieldUiConverter","convertOne","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","getFieldsAsMap","initFields","Field","of","dataField","getKey","getAccessor","isSummaries","isSummariesEnabled","filterPhrase","entityOne","entityTwo","valueOne","getSortValue","valueTwo","BaseDataField","accessor","matchers","accessorMethod","getMatchers","getSearchMatcher","ifPresent","getSortMatcher","getSearchValue","DataField","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","assignDefaultSummaries","UnknownDataField","one","two","equals","NumberDataField","numOne","numTwo","StringDataField","indexOf","strOne","strTwo","localeCompare","BooleanDataField","booleanOne","booleanTwo","sureBoolTwo","DateDataField","dateOne","dateTwo","getTime","toDateString","FieldMatchers","sortMatcher","searchMatcher","getMatcher","DataFieldFactory","fieldConfig","fieldMatchers","createMatchers","columnType","FieldId","FieldIdGenerator","RandomStringGenerator","FieldFactory","fieldIdGenerator","dataFieldFactory","getFieldName","FieldCollectionFactory","InitFieldsCommandHandler","createFields","FieldsInitedEventHandler","fieldReadModelRepository","fieldUiConverter","FieldDomainModule","FieldCommandInvoker","FieldApiModule","FieldFeatureModule","fieldApiModule","ColumnField","searchAccessor","getSearchAccessor","ColumnFieldFactory","RowSelectionTypeArchive","DEFAULT_ROW_SELECTION_TYPE","Source","loading","isLoading","SourceConverter","SetSourceLoadingEvent","SourceSetLoadingCommand","SourceSetLoadingCommandHandler","SetOriginCommand","getItems","SetOriginCommandHandler","StructureEditSourceItemCommand","getParams","StructureEditSourceItemCommandHandler","editItem","SourceDispatcher","OriginItemEntity","sourceItem","version","getVersion","getPosition","bumpVersion","setPosition","clone","rawData","Entity","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","EntityId","SourceManager","formationManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","ent","recalculatePositions","getEntities","setPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","deleteAllSelected","deleteOriginItemByItemId","deleteOriginItem","payload","isArray","deleteOneOriginItem","deleteOriginItemByIndex","addOriginItem","toggleRow","getFormation","findOriginItemIndex","findIndex","removedElements","splice","removedElements_1","removedElements_1_1","element","unselectRow","calculateAllSelected","calculateAllUnselected","deleteManyOriginItemByIndex","indexes","deleteManyOriginItemByItemID","itemIds","ADD","RANGE","FormationManager","setMode","allItemIds","RowSelectToggleType","equal","FormationManagerFactory","SourceManagerFactory","formationManagerFactory","fm","SetEnabledSelectionCommandHandler","ToggleSelectedRowCommandHandler","RowSelectedReadModel","isSelected","SelectedRowChangedEventHandler","rowChangedEvent","rowSelectedRead","SetSelectionModeCommandHandler","setSelectionMode","SelectAllRowsCommandHandler","UnselectAllRowsCommandHandler","SelectionModeSetEvent","SelectionModeSetEventHandler","modeSetEvent","INDEX","ITEM_ID","MANY_INDEX","MANY_ITEM_ID","DeleteOriginItemCommand","byIndex","DeleteCommandPayloadType","byManyIndex","byItemId","byManyItemId","getPayload","DeleteOriginItemCommandHandler","deleteItem","StructureSourceOriginArchive","StructureOriginChangedEventHandler","structureSourceOriginRepository","origin_1","StructurePreparedItemsArchive","StructurePreparedItemsEventHandler","structurePreparedItemsRepository","SourceDomainModule","SourceDomainWarehouse","getStructure","onEntities","hermesDistinctUntilChanged","ents1","ents2","flag","onEntitiesSize","onceEntities","onLoading","StructureEditSourceItemParams","getColumnFieldId","SourceDomainCommandInvoker","sourceDispatcher","sourceReadModelService","editItemByIndex","itemIndex","fieldIndex","itemId$","toRxJsObservable","fieldId$","zip","array","deleteItemById","deleteItemByIndex","deleteManyItemsByItemIds","deleteManyItemsByIndex","SourceApiModule","SourceFeatureModule","sourceApiModule","SchemaRowClassArchive","SchemaRowStyleArchive","SchemaDomainEvent","SchemaThemeSetEvent","getTheme","SchemaAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetEvent","getRowColoring","RowColoringSetAggregateEvent","SchemaVerticalGridSetEvent","getVerticalGrid","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","createEvent","changeTheme","addEvent","AggregateRoot","SchemaAggregateFactory","AggregateFactory","SchemaAggregateRepository","InMemorySchemaStore","InMemoryStore","InMemorySchemaAggregateStore","inMemorySchemaStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","findById","save","schemaAggregate","CreateSchemaCommand","CreateAggregateCommand","CreateSchemaCommandHandler","SchemaCommand","SetSchemaThemeCommand","SetSchemaThemeCommandHandler","SetRowColoringCommand","getColoring","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommand","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommand","SetSchemaVerticalGridCommandHandler","SchemaCssClassesRepository","SchemaCssClass","SchemaCssClassesEventHandler","schemaCssClassesRepository","schemaKey","SchemaVerticalGridRepository","EventDrivenRepository","SchemaThemeRepository","SchemaRowColoringRepository","SchemaHorizontalGridRepository","SchemaDomainModule","registerMultiDomainEventHandler","SchemaDispatcher","SchemaDomainCommandInvoker","schemaDispatcher","structureCommandService","fabricModalThemeService","toFabricTheme","setRowHeightBasedOnTheme","toSchemaRowColoring","FabricModalThemeService","SchemaDomainWarehouse","schemaThemeRepository","schemaHorizontalGridRepository","schemaRowColoringRepository","schemaVerticalGridRepository","SchemaDomainEventRepository","onHorizontalGridChanged","onVerticalGridChanged","SchemaApiModule","defineAggregate","SchemaFeatureModule","schemaApiModule","StructureInitialValuesReadyArchive","v","once","SummariesEventRepository","StructureSetSummariesEnabledCommand","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","StructureSummariesChangedAggregateEvent","summarizedValues","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","aggregatedValues","setEnabled","update","SummariesEnabledArchive","StructureSummariesEnabledSetEventHandler","summariesEnabledArchive","SummariesCalculator","filteredFields","forDataType","count","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","sum","min","max","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","floor","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManagerFactory","provideSummariesCalculator","clazz","multi","summariesProviders","SummariesDomainModule","SummariesWarehouse","StructureSummariesPanelConfig","top","defaultTop","bottom","defaultBottom","setTop","setBottom","isTopEnabled","isBottomEnabled","StructureSummariesConfigArchive","SummariesDomainWarehouse","structureSummariesArchive","onEnabled","onBottomEnabled","onTopEnabled","StructureSummariesPanelConfigConverter","panelConfig","SummariesDomainCommandInvoker","configConverter","structureSummariesConfigArchive","setConfig","summariesPanelConfig","SummariesDomainEventRepository","onSummariesChanged","SummariesApiModule","SummariesTranslations","distinctTooltip","averageTooltip","minTooltip","maxTooltip","medTooltip","countTooltip","StructureSummariesPanelComponent","structureSummariesEventRepository","checkboxSelection","headerColumns","summariesTranslations","isSummariesTypePresent","SummariesFeatureModule","summariesApiModule","structureIdFactoryForGrid","generator","compositionIdFactoryForGrid","schemaIdFactoryForGrid","structureComponentSelfProviders","useFactory","deps","StructureComponent","schemaCommandDispatcher","detectorRef","structureDefinition","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureReadModelRoot","isLoaderVisible","offsetWidth","setContainerWidth","hermesTimer","onWidth","host","[class.gui-structure-border]","[id]","CellTemplateWithContext","viewTemplate","editTemplate","context","columnDefinitionId","sortStatus","sortable","getSortStatus","isSortEnabled","isAscSort","SortOrder","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","StructureColumnConfigComponent","compositionReadModelService","translationFacade","structureColumnConfigService","StructureColumnConfigService","uniqueValuesReadModel","setTabTitles","dropdownTextTranslation","hideColumn","moveLeft","moveRight","highlightColumn","inlineDialogService","placement","FabricPlacement","offset","customClass","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureHeaderFiltersComponent","structureFilterCommandService","cd","closed","filterFieldName","filterMode","clearFilters","turnOnFilterMode","turnOffFilterMode","VerticalFormationWarehouse","StructureHeaderComponent","structureVerticalFormationWarehouse","filterRowEnabled","showGroups","onContainerWidth","containerRef","onGroups","collection","isVisible","getGroups","onRowHeight","headerHeight","filtersRef","read","ChangedValueEmitter","StructureHeaderFilterComponent","sub","editContext","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","uid","getVerticalFormation","isReadyToDisplay","isVerticalScrollEnabled","ReadModelRoot","ItemEntity","getUiId","isEven","isOdd","equalsById","StructureReadModelRootConverter","pagingConverter","sourceConverter","verticalFormationConverter","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","StructureHeightSetEvent","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","getById","onVerticalScrollEnabled","onVerticalFormation","onContainerHeight","onTopMargin","idToVerticalFormation","StructureContentComponent","formationCommandService","verticalFormationRepository","rowDetailOpened","schemaRowClass","schemaRowStyle","combineLatest","trackByFn","translateY","StructureRowComponent","detailsEnabled","selectedItem","checkSelectedItem","updateRowClass","previousValue","updateRowStyle","rowClass","rowStyle","prevValue","selectRow","calculateRowStyle","style","styleFunction","prevEntity","rowStylesToRemove","removeRowStyles","rowStylesToAdd","renderRowStyles","styles","split","separatedStyles","trim","toRemoveClass","calculateRowClass","toAddClass","class","classFunction","HTML","CellValue","text","CellValueType","CellTemplateWithAccessor","editable","templateFun","formatterFun","cellEditingEnabled","isCellEditingEnabled","isBooleanDataType","cellValue","findValue","getClasses","getCellView","txt","lowerCasedText","loweredSearchPhrase","positions","found","arr_1","pos","ph","join","BLUR","ColumnId","StructureCellComponent","cellEditCloseAllService","inEditMode","onHighlightedColumn","cell","isHighlighted","exitEditMode","enterEditMode","forceCheck","valueChanges$","status$","status","focus","observeFieldStatus","observeValueChanges","publishEditEnter","submitChangesAndExit","updatedValue","actualValue","EditEventType","publishEditSubmit","publishEditCancel","publishEditState","ResizeDetector","Observable","observer","resizeObserver","ResizeObserver","entries","contentRect","observe","disconnect","throttleTime","hermesEmpty","destroy","StructureContainerComponent","ngZone","verticalFormationWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","flatMap","onTemplateColumns","onResizeWidth","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","str","setSourceHeight","onScrollBarPosition","scrollPosition","scrollTop","height","runOutsideAngular","hermesFromEvent","setScrollPosition","NgZone","StructureQuickFiltersComponent","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","summariesWarehouse","topSummariesPanelEnabled","bottomSummariesPanelEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanel","titlePanelEnabled","footerPanel","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SelectionEnabledSetEvent","FilterAddedEvent","UniqueFilterSelectedEvent","AllUniqueFilterSelectedEvent","UniqueFilterUnselectedEvent","AllUniqueFilterUnselectedEvent","InMemoryStructureRepository","structureIdToStructure","hermesStructure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getVisibleContainerHeight","getHeight","getContainerHeight","DomainObject","ScrollBarPositionSetEvent","ScrollBarPositionSetAggregateEvent","VerticalFormation","hiddenItemsTop","hiddenItemsBottom","VerticalFormation_1","ROW_HEIGHT","HIDDEN_ITEMS_TOP","HIDDEN_ITEMS_BOTTOM","container","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","setTopHiddenItemsCount","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","StructureCreatedAggregateEvent","Override","getPrototypeOf","FilterTypesInitedAggregateEvent","AllFiltersRemovedAggregateEvent","FilterAddedAggregateEvent","FilterRemovedAggregateEvent","UniqueFilterCalculatedAggregateEvent","UniqueFilterSelectedAggregateEvent","UniqueFilterUnselectedAggregateEvent","AllUniqueFilterUnselectedAggregateEvent","AllUniqueFilterSelectedAggregateEvent","SelectedRowChangedAggregateEvent","SelectionEnabledSetAggregateEvent","SelectionModeSetAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterManager","uniqueFilterManager","searchManager","fieldCollection","pagingManager","initTheme","setVerticalFormationEnabled","calculateSource","calculateUniqueValues","generateSelectedRowChangedEvent","editParams","calculateSourceBasedOnVirtualScroll","removeSearchPhrase","generateCalculateUniqueValuesAggregateEvent","searchedEntities","filterAll","ents","ae","calculateAll","tslib_1.__decorate","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","UniqueValue","UniqueValueId","UniqueValueIdGenerator","UniqueValueCollection","values_1","values_1_1","calculateAllDisabled","isAllDisabled","getNotSelected","UniqueFilterManager","uniqueValueMap","KeyMap","ifEmpty","entities_1","entities_1_1","sortedValues","a","uvc","fields_2","fields_2_1","itemEntity","notSelectedValue","fields_3","fields_3_1","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","StructureCreatedEventHandler","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollBarPositionCommand","SetScrollPositionCommand","SetRowHeightCommand","StructureSetHeightCommand","SetRowHeightBasedOnThemeCommand","StructureDomainCommandInvoker","commandProviders","readProviders","structureCommandHandlers","structureDomainEventHandlers","structureProviders","ConsoleLogger","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureTopPanelModule","StructureColumnConfigTriggerComponent","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","onSortOrder","isNoneSort","StructureColumnConfigColumnHideComponent","columnHidden","StructureColumnConfigColumnMoveComponent","movedLeft","movedRight","StructureColumnMenuIconComponent","StructureColumnMenuArrowIconComponent","rotateDeg","UniqueValueListComponent","filterCommandInvoker","selectAllChecked","selectAllIndeterminate","toggleAllSelect","toggleSelect","uniqueValueReadModel","UniqueValueListModule","StructureColumnMenuModule","CreateStructureCommandHandler","getAggregateRepository","publishDomainEvents","StructureCellEditComponent","initEditContext","cellContainerRef","StructureCellEditBooleanComponent","submitChanges","StructureBannerPanel","onBannerPanelConfig","bannerPanel","StructureTitlePanelComponent","getPanelTitle","StructureFooterPanelComponent","EmptySourceComponent","EmptySourceFeatureModule","SelectAllComponent","modeMulti","rowSelectedReadModel","toggleSelectAll","SetScrollPositionCommandHandler","SetVerticalScrollEnabledCommandHandler","SetRowHeightBasedOnThemeCommandHandler","SetRowHeightCommandHandler","StructureSetHeightCommandHandler","VerticalFormationScrollBarPositionArchive","DEFAULT_POSITION","ScrollBarPositionSetEventHandler","positionRepository","SetScrollBarPositionCommandHandler","VerticalFormationDomainModule","VerticalFormationDomainWarehouse","VerticalFormationApiModule","VerticalFormationFeatureModule","verticalFormationApiModule","compositionKey","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","getWidth","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionDomainEvent","CompositionWidthSetEvent","CompositionAggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledEvent","CompositionColumnSetEnabledAggregateEvent","activeColumns","getActiveColumns","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","getMinColumnWidth","calculator","CompositionChangeSortStatusEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","getColumns","addColumn","removeColumn","updatedWidths","changeSort","sortParams","setSortStatus","param","sortParams_1","sortParams_1_1","columnId","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","ViewEntity","cellView","templateFunction","fromDataType","getTemplateFunction","AbstractColumnEntity","presentation","setInitialAlign","getPresentation","getColumnConfig","getHeader","getFormatterFunction","setView","setHeader","getView","getAlign","getSortingEnabled","ColumnEntity","getDefaultView","getDefaultAlign","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftEvent","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightEvent","CompositionColumnMovedRightAggregateEvent","CompositionColumnsSetEvent","ColumnsSetAggregateEvent","CompositionCreatedEvent","CompositionCreatedAggregateEvent","Group","GroupId","HermesId","emptyGroup","CompositionAggregate","columnFactory","groupFactory","columnsParams","resizeWidth","allColumns","resizeWidthEnabled","activeColumnEntityConverter","columnNameToGroupId","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","isResizeEnabled","isReady","group_1","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","NumberColumnPresentation","getInstance","instance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","createColumns","createColumn","convertWidth","columnEntity","columnEntities","CompositionGroupFactory","CompositionAggregateFactory","CompositionAggregateRepository","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","CompositionCommand","CreateCompositionCommand","CreateCompositionCommandHandler","compositionAggregateRepository","CompositionAggregateEvents","CompositionGroupsSetEvent","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvent","SetColumnsCommand","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","composition","domainEvents","SetCompositionWidthCommand","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommand","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommand","SetCompositionContainerWidthCommandHandler","CompositionSetColumnEnabledCommand","getColumnId","CompositionSetColumnEnabledCommandHandler","CompositionChangeSortStatusCommand","getSortParams","CompositionChangeSortStatusCommandHandler","CompositionMoveLeftColumnCommand","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommand","CompositionMoveRightColumnCommandHandler","SetGroupsCommand","CompositionDispatcher","createComposition","setColumnEnabled","ChangeSortParams","CompositionChangeSortStatusEventHandler","compositionDispatcher","dir","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","ViewTemplateFactory","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplatesComponent","stringTemplate","booleanTemplate","emptyTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellContext","ColumnDefinition","setField","setTemplateFunction","setFormatterFunction","formatterFunction","toHeaderCellTemplateWithContext","headerCellContext","headerTemplate","toContentCellTemplateWithAccessor","cellTemplate","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","CompositionReadModeRoot","ready","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isResizeWidthEnabled","equalsByColumns","CompositionReadModelRootConverter","columnDefinitionFactory","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionReadModelRootRepository","ReadModelRootRepository","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","SetGroupsCommandHandler","ColumnHighlightManager","highlightedColumns","ColumnHighlightArchive","manager","createDefaultValue","defaultValue","CompositionDomainModule","GroupCollection","CompositionGroupArchive","CompositionDomainCommandInvoker","compositionGroupRepository","columnHighlightArchive","toColumnId","defId","CompositionDomainEventRepository","CompositionDomainWarehouse","compositionRepository","compositionGroupArchive","onWidthForEachColumn","CompositionApiModule","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","cancel","InputEditTemplateComponent","inputElement","inputRef","focusField","emitValueChange","keyup$","keyCode","StringEditTemplateComponent","fb","setSelectionRange","NumberEditTemplateComponent","BooleanEditTemplateComponent","changed","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","ColumnQueryComponent","FunctionViewComponent","BarViewComponent","showPercentage","PercentageViewComponent","TextViewComponent","isBold","isItalic","renderer","isHtml","Attribute","Renderer2","components","exportDeclarations","CompositionFeatureModule","compositionApiModule","FabricDatePickerModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureHeaderGroupsComponent","Gate","streamCloser","isDefined","propertyName","SearchingGate","searching","StructureSearchingGate","StructureColumnHeaderGate","columnHeaderTop","columnHeaderBottom","PagingGate","StructurePagingGate","SelectionGate","StructureSelectionGate","StructureL10nGate","localization","translationResolver","StructurePanelGate","StructureRowDetailGate","rowDetail","StructureColumnMenuGate","StructureSummariesGate","StructureInfoPanelGate","StructureRowClassGate","StructureRowColoringGate","StructureRowStyleGate","ThemeGridGate","SourceLoadingGate","VerticalFormationGate","virtualScroll","StructureSortingGate","StructureFilterGate","filtering","StructureQuickFiltersGate","quickFilters","structureGates","CssClassModule","StructureSharedModule","ResizeDetectorModule","createStructureDefinition","StructureModule","HERMES_API","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GuiGridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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D,GAC3C,OAAO,IAAIzhC,GAAc,YAAcyhC,EAAUniD,cAIlD,SAAgBqiD,GAAuBF,GACtC,OAAO,IAAItgC,GAAsB,YAAcsgC,EAAUniD,cAI1D,IAAasiD,GAAkC,CAC9C,CACC3iD,QAAS2R,GACTixC,WAAYL,GACZM,KAAM,CACL9sB,KAGF,CACC/1B,QAAS+gB,GACT6hC,WAAYH,GACZI,KAAM,CACL9sB,KAGF,CACC/1B,QAASkiB,GACT0gC,WAAYF,GACZG,KAAM,CACL9sB,KAIFE,GACA2B,GACAsH,GACArH,GACAC,GACAlV,GACAke,GAEAjC,GAEAze,GAAoBJ,eACpB+hB,GAAqB/hB,eACrBusB,GAAmBvsB,eACnBknB,GAAoBlnB,eACpBk2B,GAAoBl2B,eACpB07B,GAAoB17B,eACpBqiC,GAAuBriC,eACvBF,GAAyBE,eAEzBgf,GACAO,GACAD,GACAG,GACAY,GACAK,GACAE,IAIDkiB,GAAA,SAAAhqD,GAiDC,SAAAgqD,EAAYjiD,EACT0J,EACA+L,EACAsjB,EACAruB,EACAyuB,EACAH,EACAxE,EACAyE,EACAipB,EACA9oB,EACAC,EACAC,EACAugB,EACAtgB,EACAC,EACAlX,EACAoX,EACAC,EACA9B,EACA+B,EACAtoB,EACAwoB,EACAC,EACAC,EACAC,EACAx5B,EACAy5B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACApd,EACAqd,EACiBnwB,EACA63C,EACD1hC,EACC2hC,EACA1c,EACAliB,EACA6+B,EACAv2C,EACjBkK,EACA7R,EACiBm+C,GA9CpB,IAAAtvD,EAgDCiF,EAAA/N,KAAAZ,KACC64D,EACA73C,EACA0L,EACA7R,EACAnE,EACA0J,EACAoC,EACA+tC,EACApkC,EACAsjB,EACAC,EACAxE,EACAyE,EACAvuB,EACAyuB,EACA+oB,EACA9oB,EACAC,EACAC,EACAC,EACAC,EACAlX,EACAoX,EACAC,EACA9B,EACA+B,EACAtoB,EACAwoB,EACAC,EACAC,EACAC,EACAx5B,EACAy5B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Translation } from '../../api/translation';\n\nexport const enTranslation: Translation = {\n\n\tsourceEmpty: 'There are no items to show.',\n\n\tpagingItemsPerPage: 'Items per page:',\n\tpagingOf: 'of',\n\tpagingNextPage: 'Next',\n\tpagingPrevPage: 'Prev',\n\tpagingNoItems: 'There is no items.',\n\n\tinfoPanelShowing: 'Showing',\n\tinfoPanelItems: 'items',\n\tinfoPanelOutOf: 'out of',\n\n\tinfoPanelThemeMangerTooltipText: 'Theme manager',\n\tinfoPanelColumnManagerTooltipText: 'Column manager',\n\tinfoPanelInfoTooltipText: 'info',\n\n\tthemeManagerModalTitle: 'Theme manager',\n\tthemeManagerModalTheme: 'Theme:',\n\tthemeManagerModalRowColoring: 'Row coloring:',\n\tthemeManagerModalVerticalGrid: 'Vertical grid',\n\tthemeManagerModalHorizontalGrid: 'HorizontalGrid',\n\n\tcolumnManagerModalTitle: 'Manage columns',\n\n\theaderMenuMainTab: 'Menu',\n\theaderMenuMainTabColumnSort: 'Column sort',\n\theaderMenuMainTabHideColumn: 'Hide column',\n\theaderMenuMainTabHighlightColumn: 'Highlight',\n\theaderMenuMainTabMoveLeft: 'Move left',\n\theaderMenuMainTabMoveRight: 'Move right',\n\theaderMenuMainTabColumnSortAscending: 'Ascending',\n\theaderMenuMainTabColumnSortDescending: 'Descending',\n\theaderMenuMainTabColumnSortNone: 'None',\n\theaderMenuFilterTab: 'Filter',\n\theaderMenuColumnsTab: 'Columns',\n\n\tsummariesCount: 'Count',\n\tsummariesDist: 'Dist',\n\tsummariesSum: 'Sum',\n\tsummariesAvg: 'Avg',\n\tsummariesMin: 'Min',\n\tsummariesMax: 'Max',\n\tsummariesMed: 'Med',\n\tsummariesTruthy: 'Truthy',\n\tsummariesFalsy: 'Falsy',\n\tsummariesDistinctValuesTooltip: 'Distinct values',\n\tsummariesAverageTooltip: 'Average',\n\tsummariesMinTooltip: 'Min',\n\tsummariesMaxTooltip: 'Max',\n\tsummariesMedTooltip: 'Median',\n\tsummariesCountTooltip: 'Number of items in the grid'\n};\n","import { enTranslation } from '../domain/lang/en';\n\nexport const defaultTranslation = enTranslation;\n","import { TranslationChange } from '../../../../l10n/core/api/translation-change';\nimport { defaultTranslation } from '../../../../l10n/core/api/default-translation';\n\nexport type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateFunction = (cellValue?: any, item?: any, index?: number) => string;\n\nexport interface GuiMultiColumn {\n\n\theader?: string | ViewTemplateFunction;\n\n\tcolumns?: Array<GuiColumn>;\n\n}\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\theader?: string | ViewTemplateFunction;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: boolean | GuiColumnSorting;\n\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\tformatter?: (item: any, index: number) => any;\n\n\tmatcher?: (item: any) => any;\n\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPaging {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiRowStyle {\n\n\tstyle?: string;\n\n\tstyleFunction?: (source: any, index: number) => string;\n\n}\n\nexport interface GuiRowClass {\n\n\tclass?: string;\n\n\tclassFunction?: (source: any, index: number) => string;\n\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<string>;\n\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any, index: number) => string;\n\n}\n\nexport interface GuiTitlePanel {\n\n\tenabled?: boolean;\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiFooterPanel {\n\n\tenabled?: boolean\n\n\ttemplate?: string | ((title: any) => string);\n\n}\n\nexport interface GuiInfoPanel {\n\n\tenabled?: boolean;\n\n\tinfoDialog?: boolean;\n\n\tcolumnsManager?: boolean;\n\n\tschemaManager?: boolean;\n\n\tsourceSize?: boolean\n\n}\n\nexport enum GuiRowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum GuiRowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport interface GuiRowSelection {\n\n\tenabled?: boolean;\n\n\ttype?: string | GuiRowSelectionType;\n\n\tmode?: string | GuiRowSelectionMode;\n\n}\n\nexport interface GuiSelectedRow {\n\n\tsource?: any;\n\n\tindex: number;\n\n\titemId: any;\n\n}\n\nexport interface GuiLocalization {\n\n\ttranslation?: GuiTranslation;\n\n\ttranslationResolver?: (key: string, value: string) => string;\n\n}\n\nexport type GuiTranslation = TranslationChange;\n\nexport const GuiDefaultTranslation = defaultTranslation;\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../core/api/gui.grid.public-api';\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nexport class GuiGridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../structure/summaries/core/domain/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../gui.grid.index';\n\n\nexport class GuiGridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tconst columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE,\n\tNG_TEMPLATE\n}\n","import { GuiCellView, ViewTemplateFunction } from '../../../core/api/gui.grid.public-api';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\nexport class GuiGridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateFunction): CellView | ViewTemplateFunction {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../composition/core/api/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../gui.grid.index';\n\nexport class GuiGridColumnSortingConverter {\n\n\tconvert(sortingConfig: boolean | GuiColumnSorting): ColumnSortingConfig {\n\n\t\tif (typeof sortingConfig === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: sortingConfig\n\t\t\t};\n\t\t} else {\n\t\t\treturn sortingConfig as any;\n\t\t}\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../gui.grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../composition/core/api/column/column-cell-editing.config';\n\nexport class GuiGridColumnCellEditingConverter {\n\n\tconvert(config: boolean | GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\tif (typeof config === 'boolean') {\n\t\t\treturn {\n\t\t\t\tenabled: config\n\t\t\t};\n\t\t}\n\n\t\treturn config as ColumnCellEditingConfig;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../core/api/gui.grid.public-api';\nimport { ColumnAlign } from '../../../../../../composition/core/domain/column/column-align';\n\nexport class GuiGridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn, GuiMultiColumn } from '../../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnTypeConverter } from './gui.grid.column-type.converter';\nimport { GuiGridColumnSummariesConverter } from './summaries/gui.grid.column-summaries.converter';\nimport { GuiGridColumnViewConverter } from './gui.grid.column-view.converter';\nimport { GuiGridColumnSortingConverter } from './sorting/gui.grid.column-sorting.converter';\nimport { GuiGridColumnCellEditingConverter } from './cell-editing/gui.grid.column-cell-editing.converter';\nimport { GuiGridColumnAlignConverter } from './align/gui.grid.column-align.converter';\nimport { CellView } from '../../../../../composition/core/domain/column/cell-view';\n\n\nexport class GuiGridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GuiGridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GuiGridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GuiGridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GuiGridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GuiGridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GuiGridColumnAlignConverter();\n\n\tconvert(configs: Array<GuiColumn | GuiMultiColumn>): Array<ColumnConfig | MultiColumnConfig> {\n\n\t\treturn configs.map((config) => {\n\n\t\t\tif ((config as GuiMultiColumn).columns !== undefined) {\n\n\t\t\t\tconst columns = ((config as GuiMultiColumn).columns).map((c) => this.convertColumn(c));\n\n\t\t\t\treturn {\n\t\t\t\t\theader: config.header,\n\t\t\t\t\tcolumns: columns\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\treturn this.convertColumn(config);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tconst columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.formatter !== undefined && guiColumn.formatter !== null) {\n\t\t\tcolumnConfig.formatter = guiColumn.formatter;\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\tif ((guiColumn as any).templateRef !== undefined && (guiColumn as any).templateRef !== null) {\n\t\t\tcolumnConfig.templateRef = (guiColumn as any).templateRef;\n\t\t\tcolumnConfig.view = CellView.NG_TEMPLATE;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\n\n\nexport class GuiGridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../../core/api/gui.grid.public-api';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\n\n\nexport class GuiGridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../core/api/gui.grid.public-api';\n\nimport { ColumnMenuConfig } from '../../../../../../structure/grid/core/api/column-menu-config';\n\n@Injectable()\nexport class GuiGridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../structure/paging/feature/mode/paging-display-mode';\nimport { GuiPaging, GuiPagingDisplay } from '../../../core/api/gui.grid.public-api';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\n\n\nexport class GuiGridPagingConverter {\n\n\tconvert(guiPaging: GuiPaging): PagingConfig {\n\n\t\tconst pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport enum RowSelectionType {\n\tROW,\n\tCHECKBOX\n}\n\nexport enum RowSelectionMode {\n\tSINGLE,\n\tMULTIPLE\n}\n\nexport class RowSelection {\n\n\tprivate readonly enabled: boolean;\n\n\tprivate readonly type: RowSelectionType;\n\n\tprivate readonly mode: RowSelectionMode;\n\n\tprivate constructor(config: {\n\t\tenabled?: boolean,\n\t\tmode?: RowSelectionMode,\n\t\ttype?: RowSelectionType\n\t}) {\n\t\tif (config.enabled !== undefined) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config.mode !== undefined) {\n\t\t\tthis.mode = config.mode;\n\t\t}\n\n\t\tif (config.type !== undefined) {\n\t\t\tthis.type = config.type;\n\t\t}\n\t}\n\n\tisModeDefined(): boolean {\n\t\treturn this.mode !== undefined;\n\t}\n\n\tisTypeDefined(): boolean {\n\t\treturn this.type !== undefined;\n\t}\n\n\tisEnabledDefined(): boolean {\n\t\treturn this.enabled !== undefined;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n\tgetType(): RowSelectionType {\n\t\treturn this.type;\n\t}\n\n\tstatic Builder = class RowSelectionBuilder extends GenericBuilder<RowSelection> {\n\n\t\tenabled: boolean;\n\n\t\ttype: RowSelectionType;\n\n\t\tmode: RowSelectionMode;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tbuildObject(): RowSelection {\n\t\t\treturn new RowSelection({\n\t\t\t\tenabled: this.enabled,\n\t\t\t\ttype: this.type,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\twithEnabled(enabled: boolean): RowSelectionBuilder {\n\t\t\tthis.enabled = enabled;\n\t\t\treturn this;\n\t\t}\n\n\t\twithType(type: RowSelectionType): RowSelectionBuilder {\n\t\t\tthis.type = type;\n\t\t\treturn this;\n\t\t}\n\n\t\twithMode(mode: RowSelectionMode): RowSelectionBuilder {\n\t\t\tthis.mode = mode;\n\t\t\treturn this;\n\t\t}\n\n\t};\n\n}\n","import { GuiRowSelection, GuiRowSelectionMode, GuiRowSelectionType } from '../../../core/api/gui.grid.public-api';\nimport { RowSelection, RowSelectionMode, RowSelectionType } from '../../../../../structure/source/core/api/row-selection';\n\nexport class GuiGridRowSelectionConverter {\n\n\tconvert(selection: boolean | GuiRowSelection): RowSelection {\n\n\t\tconst builder = new RowSelection.Builder();\n\n\t\tif (typeof selection === 'boolean') {\n\t\t\treturn builder.withEnabled(selection).build();\n\t\t} else {\n\n\t\t\tif (selection.enabled !== undefined) {\n\t\t\t\tbuilder.withEnabled(selection.enabled);\n\t\t\t}\n\n\t\t\tif (selection.mode !== undefined) {\n\t\t\t\tconst mode = this.convertMode(selection.mode);\n\n\t\t\t\tbuilder.withMode(mode);\n\t\t\t}\n\n\t\t\tif (selection.type !== undefined) {\n\t\t\t\tconst type = this.convertType(selection.type);\n\n\t\t\t\tbuilder.withType(type);\n\t\t\t}\n\n\t\t\treturn builder.build();\n\t\t}\n\n\t}\n\n\tprivate convertMode(mode: string | GuiRowSelectionMode): RowSelectionMode {\n\n\t\tif (typeof mode === 'string') {\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'single':\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t\tcase 'multiple':\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (mode) {\n\n\t\t\t\tcase GuiRowSelectionMode.SINGLE:\n\t\t\t\t\treturn RowSelectionMode.SINGLE;\n\n\t\t\t\tcase GuiRowSelectionMode.MULTIPLE:\n\t\t\t\t\treturn RowSelectionMode.MULTIPLE;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate convertType(type: string | GuiRowSelectionType): RowSelectionType {\n\n\t\tif (typeof type === 'string') {\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'row':\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\t\t\t\tdefault:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (type) {\n\n\t\t\t\tcase GuiRowSelectionType.ROW:\n\t\t\t\t\treturn RowSelectionType.ROW;\n\n\t\t\t\tcase GuiRowSelectionType.CHECKBOX:\n\t\t\t\t\treturn RowSelectionType.CHECKBOX;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Component, ContentChild, TemplateRef, Input } from '@angular/core';\nimport {\n\tFieldAccessor,\n\tGuiCellView, GuiColumn,\n\tGuiColumnAlign, GuiColumnCellEditing,\n\tGuiColumnSorting,\n\tGuiColumnSummaries,\n\tGuiDataType,\n\tViewTemplateFunction\n} from '../../../core/api/gui.grid.public-api';\n\n@Component({\n\tselector: 'gui-grid-column',\n\ttemplate: ''\n})\nexport class GuiGridColumnComponent implements GuiColumn {\n\n\t@ContentChild(TemplateRef, { static: true })\n\ttemplateRef: TemplateRef<any>;\n\n\t@Input()\n\tfield?: string | FieldAccessor;\n\n\t@Input()\n\ttype?: string | GuiDataType;\n\n\t@Input()\n\tview?: string | GuiCellView | ViewTemplateFunction;\n\n\t@Input()\n\theader?: string | ViewTemplateFunction;\n\n\t@Input()\n\twidth?: string | number;\n\n\t@Input()\n\tenabled?: boolean;\n\n\t@Input()\n\talign?: string | GuiColumnAlign;\n\n\t@Input()\n\tsummaries?: GuiColumnSummaries;\n\n\t@Input()\n\tsorting?: boolean | GuiColumnSorting;\n\n\t@Input()\n\tcellEditing?: boolean | GuiColumnCellEditing;\n\n\t@Input()\n\tformatter?: (item: any, index: number) => any;\n\n\t@Input()\n\tmatcher?: (item: any) => any;\n\n}\n","import { EventEmitter, Input, OnChanges, Output, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiFooterPanel,\n\tGuiInfoPanel,\n\tGuiLocalization,\n\tGuiMultiColumn,\n\tGuiPaging,\n\tGuiQuickFilters,\n\tGuiRowClass,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiRowSelection,\n\tGuiRowStyle,\n\tGuiSearching,\n\tGuiSelectedRow,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme,\n\tGuiTitlePanel\n} from '../../core/api/gui.grid.public-api';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\n\nimport { GuiGridColumnConverter } from './column/gui.grid.column.converter';\nimport { GuiGridThemeConverter } from './theme/gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './theme/coloring/gui.grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../structure/grid/core/api/column-menu-config';\nimport { GuiGridColumnMenuConverter } from './column/menu/gui.grid.column-menu.converter';\nimport { GuiGridPagingConverter } from './paging/gui.grid.paging.converter';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { RowColoring } from '../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiGridRowSelectionConverter } from './row-selection/gui.grid.row-selection.converter';\nimport { RowSelection } from '../../../../structure/source/core/api/row-selection';\nimport { SelectedRow } from '../../../../structure/source/core/api/formation/selected-row';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { GuiGridColumnComponent } from './column/gui.grid-column.component';\n\n\nexport abstract class GuiGridGateway implements OnChanges, AfterContentInit {\n\n\t@ContentChildren(GuiGridColumnComponent)\n\tguiGridColumnComponent: QueryList<GuiGridColumnComponent>;\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn | GuiMultiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPaging;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelection: boolean | GuiRowSelection;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean | GuiInfoPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<GuiSelectedRow>> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig | MultiColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\trowSelectionConfig: RowSelection;\n\n\tprotected readonly gridColumnConverter: GuiGridColumnConverter = new GuiGridColumnConverter();\n\n\tprotected readonly gridThemeConverter: GuiGridThemeConverter = new GuiGridThemeConverter();\n\n\tprotected readonly gridRowColoringConverter: GuiGridRowColoringConverter = new GuiGridRowColoringConverter();\n\n\tprotected readonly gridColumnMenuConverter: GuiGridColumnMenuConverter = new GuiGridColumnMenuConverter();\n\n\tprotected readonly gridPagingConverter: GuiGridPagingConverter = new GuiGridPagingConverter();\n\n\tprotected readonly gridRowSelectionConverter: GuiGridRowSelectionConverter = new GuiGridRowSelectionConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: NgChanges<GuiGridGateway>): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\tif (changes.rowSelection !== undefined && changes.rowSelection.currentValue !== undefined) {\n\t\t\tthis.rowSelectionConfig = this.gridRowSelectionConverter.convert(this.rowSelection);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tngAfterContentInit() {\n\t\tif (this.guiGridColumnComponent && this.guiGridColumnComponent.toArray().length > 0) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.guiGridColumnComponent.toArray());\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonRowsSelect(rows: Array<SelectedRow>): void {\n\n\t\tconst guiRows: Array<GuiSelectedRow> = rows.map((row) => {\n\t\t\treturn {\n\t\t\t\tindex: row.getIndex(),\n\t\t\t\tsource: row.getSource(),\n\t\t\t\titemId: row.getItemId()\n\t\t\t};\n\t\t});\n\n\t\tthis.selectedRows.emit(guiRows);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<PagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n\n\tprotected buildObject(): PagingDefinition {\n\t\treturn new PagingDefinition(this.enabled);\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class PagingDefinition {\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { PagingDefinition } from '../../paging/feature/paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: PagingDefinition,\n\t\t\t\tprivate topPaging: PagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: PagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: PagingDefinition = new PagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: PagingDefinition;\n\n\tprivate readonly topPaging: PagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: PagingDefinition,\n\t\t\t\ttopPaging: PagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): PagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): PagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\n/** @internal */\nexport const guiGridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../structure/grid/feature/structure-definition';\n\nimport { guiGridStructureDefinition } from './gui.grid-structure-definition';\n\nexport const guiGridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: guiGridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GuiGridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGuiGridIdGenerator.index++;\n\n\t\treturn GuiGridIdGenerator.PREFIX + GuiGridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiGridComponent } from '../gui.grid.component';\n\n@Injectable()\nexport class GuiGridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GuiGridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { OriginId } from '../../domain/origin/origin-id';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\n\nexport class SelectedRow {\n\n\tprivate readonly index: number;\n\n\tprivate readonly itemId: OriginId;\n\n\tprivate readonly source: OriginItemEntity;\n\n\tconstructor(source: OriginItemEntity,\n\t\t\t\tindex: number,\n\t\t\t\titemId: OriginId) {\n\t\tthis.source = source;\n\t\tthis.index = index;\n\t\tthis.itemId = itemId;\n\t}\n\n\tgetSource(): OriginItemEntity {\n\t\treturn this.source;\n\t}\n\n\tgetIndex(): number {\n\t\treturn this.index;\n\t}\n\n\tgetItemId(): OriginId {\n\t\treturn this.itemId;\n\t}\n\n}\n","import { GuiRowColoring, GuiSelectedRow, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { FormationCommandInvoker } from '../../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { SourceCommandInvoker } from '../../../../../structure/source/core/api/source.command-invoker';\nimport { SelectedRow } from '../../../../../structure/source/core/api/formation/selected-row';\nimport { FormationWarehouse } from '../../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../../structure/search/core/api/search.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { GuiGridThemeCommandInvoker } from '../theme/gui.grid.theme.command-invoker';\nimport { StructureCommandInvoker } from '../../../../../structure/core/api/structure.command-invoker';\nimport { PagingConfig } from '../../../../../structure/paging/core/api/paging-config';\nimport { PagingCommandInvoker } from '../../../../../structure/paging/core/api/paging.command-invoker';\nimport { SearchConfig } from '../../../../../structure/search/core/api/search-config';\nimport { SummariesCommandInvoker } from '../../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../../structure/sorting/core/api/sorting.command-invoker';\nimport { SortingConfig } from '../../../../../structure/sorting/core/api/sorting-config';\n\n\nexport interface GuiGridApi {\n\n\tsetSource(source: Array<any>): void\n\n\tshowLoading(): void;\n\n\thideLoading(): void;\n\n\tgetSelectedRows(): Array<GuiSelectedRow>;\n\n\tselectAll(): void;\n\n\tunselectAll(): void;\n\n\tdeleteSelectedRows(): void;\n\n\tdeleteRow(row: GuiSelectedRow): void;\n\n\tdeleteRows(rows: Array<GuiSelectedRow>): void;\n\n\t/**\n\t * Paging\n\t */\n\tenablePaging(): void;\n\n\tdisablePaging(): void;\n\n\tnextPage(): void;\n\n\tprevPage(): void;\n\n\tchangePageSize(pageSize: number): void;\n\n\tsetPagingConfig(config: PagingConfig): void;\n\n\t/**\n\t * Searching\n\t */\n\tsetSearchingConfig(config: SearchConfig): void;\n\n\tsearch(phrase: string): void;\n\n\tclearSearchPhrase(): void;\n\n\t/**\n\t * View port\n\t */\n\tscrollToTop(): void;\n\n\tscrollToBottom(): void;\n\n\tscrollToRowByIndex(index: number): void;\n\n\t/**\n\t * Visual - Schema\n\t */\n\tsetTheme(theme: string | GuiTheme): void;\n\n\tsetVerticalGrid(enabled: boolean): void;\n\n\tsetHorizontalGrid(enabled: boolean): void;\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring): void;\n\n\t/**\n\t * Virtual scroll\n\t */\n\tenableVirtualScroll(): void;\n\n\tdisableVirtualScroll(): void;\n\n\t/**\n\t * Summaries\n\t */\n\tenableSummaries(): void;\n\n\tdisableSummaries(): void;\n\n\t/**\n\t * Sorting\n\t */\n\tsetSortConfig(config: SortingConfig): void;\n\n}\n\n\nexport class GuiGridApiProvider {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate readonly schemaId: SchemaReadModelRootId;\n\n\tprivate readonly formationCommandInvoker: FormationCommandInvoker;\n\n\tprivate readonly formationWarehouse: FormationWarehouse;\n\n\tprivate readonly sourceCommandInvoker: SourceCommandInvoker;\n\n\tprivate readonly searchCommandInvoker: SearchCommandInvoker;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly structureCommandInvoker: StructureCommandInvoker;\n\n\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker;\n\n\tprivate readonly sortingCommandInvoker: SortingCommandInvoker;\n\n\tprivate readonly pagingCommandInvoker: PagingCommandInvoker;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tschemaId: SchemaReadModelRootId,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tformationWarehouse: FormationWarehouse,\n\t\t\t\tsourceCommandInvoker: SourceCommandInvoker,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tgridThemeCommandInvoker: GuiGridThemeCommandInvoker,\n\t\t\t\tstructureCommandInvoker: StructureCommandInvoker,\n\t\t\t\tsummariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tsortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tpagingCommandInvoker: PagingCommandInvoker) {\n\t\tthis.structureId = structureId;\n\t\tthis.schemaId = schemaId;\n\t\tthis.formationCommandInvoker = formationCommandDispatcher;\n\t\tthis.formationWarehouse = formationWarehouse;\n\t\tthis.sourceCommandInvoker = sourceCommandInvoker;\n\t\tthis.searchCommandInvoker = searchCommandInvoker;\n\t\tthis.gridThemeCommandInvoker = gridThemeCommandInvoker;\n\t\tthis.structureCommandInvoker = structureCommandInvoker;\n\t\tthis.summariesCommandInvoker = summariesCommandInvoker;\n\t\tthis.sortingCommandInvoker = sortingCommandInvoker;\n\t\tthis.pagingCommandInvoker = pagingCommandInvoker;\n\t}\n\n\tprovide(): GuiGridApi {\n\n\t\tconst structureId = this.structureId,\n\t\t\tschemaId = this.schemaId,\n\t\t\tfcd = this.formationCommandInvoker,\n\t\t\tfw = this.formationWarehouse,\n\t\t\tscd = this.sourceCommandInvoker,\n\t\t\tsearchCommandInvoker = this.searchCommandInvoker,\n\t\t\tgridThemeCommandInvoker = this.gridThemeCommandInvoker,\n\t\t\tstructureCommandInvoker = this.structureCommandInvoker,\n\t\t\tsummariesCommandInvoker = this.summariesCommandInvoker,\n\t\t\tsortingCommandInvoker = this.sortingCommandInvoker,\n\t\t\tpagingCommandInvoker = this.pagingCommandInvoker;\n\n\t\treturn {\n\n\t\t\tsetSource(source: Array<any>): void {\n\t\t\t\tscd.setOrigin(source, structureId);\n\t\t\t},\n\n\t\t\tshowLoading(): void {\n\t\t\t\tscd.setLoading(true, structureId);\n\t\t\t},\n\n\t\t\thideLoading(): void {\n\t\t\t\tscd.setLoading(false, structureId);\n\t\t\t},\n\n\t\t\tdeleteRow(row: GuiSelectedRow): void {\n\t\t\t\tscd.deleteRow(new SelectedRow(row.source, row.index, row.itemId), structureId);\n\t\t\t},\n\n\t\t\tdeleteRows(rows: Array<GuiSelectedRow>): void {\n\t\t\t\tconst selectedRows = rows.map((row: GuiSelectedRow) => new SelectedRow(row.source, row.index, row.itemId));\n\n\t\t\t\tscd.deleteRows(selectedRows, structureId);\n\t\t\t},\n\n\t\t\tdeleteSelectedRows(): void {\n\t\t\t\t// this.sourceCommandDispatcher.\n\t\t\t},\n\n\t\t\tgetSelectedRows(): Array<GuiSelectedRow> {\n\n\t\t\t\tconst rows = fw.getSelectedRows(structureId);\n\n\t\t\t\treturn rows.map((r: SelectedRow) => {\n\t\t\t\t\treturn { source: r.getSource(), index: r.getIndex(), itemId: r.getItemId() } as GuiSelectedRow;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tselectAll(): void {\n\t\t\t\tfcd.selectAll(structureId);\n\t\t\t},\n\n\t\t\tunselectAll(): void {\n\t\t\t\tfcd.unselectAll(structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Paging\n\t\t\t */\n\n\t\t\tenablePaging(): void {\n\t\t\t\tpagingCommandInvoker.enable(structureId);\n\t\t\t},\n\n\t\t\tdisablePaging(): void {\n\t\t\t\tpagingCommandInvoker.disable(structureId);\n\t\t\t},\n\n\t\t\tnextPage(): void {\n\t\t\t\tpagingCommandInvoker.nextPage(structureId);\n\t\t\t},\n\n\t\t\tprevPage(): void {\n\t\t\t\tpagingCommandInvoker.prevPage(structureId);\n\t\t\t},\n\n\t\t\tchangePageSize(pageSize: number): void {\n\t\t\t\tpagingCommandInvoker.changePageSize(pageSize, structureId);\n\t\t\t},\n\n\t\t\tsetPagingConfig(config: PagingConfig): void {\n\t\t\t\tpagingCommandInvoker.setPaging(config, structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Searching\n\t\t\t */\n\t\t\tsetSearchingConfig(config: SearchConfig): void {\n\t\t\t\tsearchCommandInvoker.setSearchingConfig(config, structureId);\n\t\t\t},\n\n\t\t\tsearch(phrase: string): void {\n\t\t\t\tsearchCommandInvoker.search(phrase, structureId);\n\t\t\t},\n\n\t\t\tclearSearchPhrase(): void {\n\t\t\t\tsearchCommandInvoker.search('', structureId);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * View port\n\t\t\t */\n\n\t\t\tscrollToTop(): void {\n\t\t\t\tstructureCommandInvoker.scrollToTop(structureId);\n\t\t\t},\n\n\t\t\tscrollToBottom(): void {\n\t\t\t\tstructureCommandInvoker.scrollToBottom(structureId);\n\t\t\t},\n\n\t\t\tscrollToRowByIndex(index: number): void {\n\t\t\t\tstructureCommandInvoker.scrollToIndex(index, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Visual - Schema\n\t\t\t */\n\n\t\t\tsetTheme(theme: string | GuiTheme): void {\n\t\t\t\tgridThemeCommandInvoker.setTheme(theme, schemaId, structureId);\n\t\t\t},\n\n\t\t\tsetVerticalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setVerticalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetHorizontalGrid(enabled: boolean): void {\n\t\t\t\tgridThemeCommandInvoker.setHorizontalGrid(enabled, schemaId);\n\t\t\t},\n\n\t\t\tsetRowColoring(rowColoring: string | GuiRowColoring): void {\n\t\t\t\tgridThemeCommandInvoker.setRowColoring(rowColoring, schemaId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Virtual scroll\n\t\t\t */\n\t\t\tenableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.enableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\tdisableVirtualScroll(): void {\n\t\t\t\tstructureCommandInvoker.disableVirtualScroll(structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Summaries\n\t\t\t */\n\t\t\tenableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(true, structureId);\n\t\t\t},\n\n\t\t\tdisableSummaries(): void {\n\t\t\t\tsummariesCommandInvoker.setSummariesEnabled(false, structureId);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sorting\n\t\t\t */\n\t\t\tsetSortConfig(config: SortingConfig): void {\n\t\t\t\tsortingCommandInvoker.setSortingConfig(config, structureId);\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureCommand extends Command<StructureId> {\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../core/row-select-toggle-type';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class ToggleSelectedRowCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string,\n\t\t\t\tprivate readonly type: RowSelectToggleType) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n\tgetType(): RowSelectToggleType {\n\t\treturn this.type;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\nimport { RowSelectToggleType } from './core/row-select-toggle-type';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string, type: RowSelectToggleType): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow, type));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetEnabledSelectionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetEnabledSelectionCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSelectionModeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SetSelectionModeCommand');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SelectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectAllRowsCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class UnselectAllRowsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'UnselectAllRowsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../row-selection';\nimport { RowSelectToggleType } from '../../domain/formation/core/row-select-toggle-type';\nimport { SetEnabledSelectionCommand } from '../../domain/formation/set-enabled/set-enabled-selection.command';\nimport { SetSelectionModeCommand } from '../../domain/formation/mode/set-selection-mode.command';\nimport { SelectAllRowsCommand } from '../../domain/formation/select-all/select-all-rows.command';\nimport { UnselectAllRowsCommand } from '../../domain/formation/unselect-all/unselect-all-rows.command';\n\n\n@Injectable()\nexport class FormationCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId): void {\n\t\t// this.commandDispatcher.dispatch(new )\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, type: RowSelectToggleType, structureId: StructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow, type);\n\t}\n\n\tchangeMode(mode: RowSelectionMode, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSelectionModeCommand(structureId, mode));\n\t}\n\n\tsetSelection(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetEnabledSelectionCommand(structureId, enabled));\n\t}\n\n\tselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllRowsCommand(structureId));\n\t}\n\n\tunselectAll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllRowsCommand(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { SelectedRow } from './formation/selected-row';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandInvoker } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setLoading(enabled: boolean, structureId: StructureId): void;\n\n\tabstract editItem(params: StructureEditSourceItemParams, structureId: StructureId): void;\n\n\tabstract editItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void;\n\n\tabstract deleteRow(row: SelectedRow, structureId: StructureId): void;\n\n\tabstract deleteRows(rows: Array<SelectedRow>, structureId: StructureId): void;\n\n\tabstract deleteItemByIndex(index: number, structureId: StructureId): void;\n\n\tabstract deleteItemById(itemId: OriginId, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void;\n\n\tabstract deleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n@Injectable()\nexport class RowSelectedRepository extends AggregateArchive<RowSelectedReadModel> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { RowSelectionMode } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionModeRepository extends AggregateArchive<RowSelectionMode> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SourceWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getEntities(structureId: StructureId): ReadonlyArray<ItemEntity>;\n\n\tabstract onEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onEntitiesSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>>;\n\n\tabstract onOriginSize(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onLoading(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>>;\n\n\t/**\n\t * @deprecated\n\t */\n\tabstract getPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { hermesMap, HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectedRepository } from './row-selected/row-selected.repository';\nimport { RowSelectedReadModel } from './row-selected.read-model';\nimport { RowSelectionModeRepository } from './mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../row-selection';\nimport { SelectedRow } from './selected-row';\nimport { SourceWarehouse } from '../source.warehouse';\n\n\n@Injectable()\nexport class FormationWarehouse implements Warehouse {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t}\n\n\tgetSelectedRows(structureId: StructureId): Array<SelectedRow> {\n\n\t\tconst items = this.sourceWarehouse.getPreparedEntities(structureId),\n\t\t\tselectedItemIds = this.getSelectedItemIds(structureId);\n\n\t\tconst selectedItems = [],\n\t\t\tlength = items.length;\n\n\t\tfor (let i = 0; i < length; i += 1) {\n\n\t\t\tconst item = items[i];\n\n\t\t\tif (selectedItemIds.some((itemId: string) => itemId === item.getId().toString())) {\n\t\t\t\tselectedItems.push(new SelectedRow(item.getSourceItem(), i, item.getId()));\n\t\t\t}\n\t\t}\n\t\treturn selectedItems;\n\t}\n\n\tonRowSelectedReadModel(structureId: StructureId): HermesObservable<RowSelectedReadModel> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId);\n\t}\n\n\tgetSelectedItemIds(structureId: StructureId): Array<string> {\n\t\treturn this.rowSelectedRepository.get(structureId).getValueOrNullOrThrowError().getAll();\n\t}\n\n\tonSelectedRows(structureId: StructureId): HermesObservable<Array<string>> {\n\t\treturn this.rowSelectedRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((rm: RowSelectedReadModel) => {\n\t\t\t\t\t\t   return rm.getAll();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonMode(structureId: StructureId): HermesObservable<RowSelectionMode> {\n\t\treturn this.rowSelectionModeRepository.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from './search-config';\n\n\n@Injectable()\nexport abstract class SearchCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSearchingConfig(config: SearchConfig, structureId: StructureId): void;\n\n\tabstract search(phrase: string, structureId: StructureId): void;\n}\n","import { SchemaCommandInvoker } from '../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { RowColoring } from '../../../../../schema/core/api/row-coloring/row-coloring';\nimport { GuiRowColoring, GuiTheme } from '../../../core/api/gui.grid.public-api';\nimport { GuiGridThemeConverter } from './gui.grid.theme.converter';\nimport { GuiGridRowColoringConverter } from './coloring/gui.grid.row-coloring.converter';\n\nexport class GuiGridThemeCommandInvoker {\n\n\tconstructor(private readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly gridThemeConverter: GuiGridThemeConverter,\n\t\t\t\tprivate readonly gridRowColoringConverter: GuiGridRowColoringConverter) {\n\t}\n\n\tsetTheme(theme: string | GuiTheme, schemaId: SchemaReadModelRootId, structureId: StructureId): void {\n\t\tconst schemaTheme = this.gridThemeConverter.convert(theme);\n\n\t\tthis.schemaCommandInvoker.setTheme(schemaTheme, schemaId, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: string | GuiRowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: RowColoring = this.gridRowColoringConverter.convert(rowColoring);\n\n\t\tthis.schemaCommandInvoker.setRowColoring(schemaRowColoring, schemaId);\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, schemaId);\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, schemaId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from './row-coloring/row-coloring';\n\n\n@Injectable()\nexport abstract class SchemaCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(schemaId: SchemaReadModelRootId): void;\n\n\tabstract setTheme(\n\t\ttheme: SchemaTheme,\n\t\tschemaId: SchemaReadModelRootId,\n\t\tstructureId: StructureId\n\t): void;\n\n\tabstract setRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n\tabstract setHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from './structure.id';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport abstract class StructureCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(structureId: StructureId): void;\n\n\tabstract enableVirtualScroll(structureId: StructureId): void;\n\n\tabstract disableVirtualScroll(structureId: StructureId): void;\n\n\tabstract scrollToTop(structureId: StructureId): void;\n\n\tabstract scrollToBottom(structureId: StructureId): void;\n\n\tabstract scrollToIndex(index: number, structureId: StructureId): void;\n\n\tabstract setScrollPosition(position: number, structureId: StructureId): void;\n\n\tabstract setOrigin(items: Array<any>, structureId: StructureId): void;\n\n\tabstract setFilterConfig(config: FilterConfig, structureId: StructureId): void;\n\n\tabstract setQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void;\n\n\tabstract setRowHeight(rowHeight: number, structureId: StructureId): void;\n\n\tabstract setContainerHeight(height: number, structureId: StructureId): void;\n\n\tabstract setRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void;\n\n}\n","import { ModifierApi } from './modifier-api';\n\nexport abstract class Modifier<T extends ModifierApi> {\n\n\tprotected constructor(\n\t\tprivate readonly hostElement?: HTMLElement\n\t) {\n\t}\n\n\tprotected abstract createModifier(htmlElement: HTMLElement): T;\n\n\tgetElement(htmlElement: HTMLElement): T {\n\t\treturn this.createModifier(htmlElement);\n\t}\n\n\tgetHost(): T {\n\n\t\tif (!this.hostElement) {\n\t\t\tthrow new Error('Missing host element in DomRenderer constructor.');\n\t\t}\n\n\t\treturn this.createModifier(this.hostElement);\n\t}\n}\n","import { ClassModifierApi } from './class-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class ClassModifier extends Modifier<ClassModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): ClassModifierApi {\n\t\treturn new ClassModifier.ClassModifier(htmlElement);\n\t}\n\n\tprivate static readonly ClassModifier = class implements ClassModifierApi {\n\n\t\tprivate static readonly CLASS = 'class';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tadd(...classes: Array<string>): void {\n\t\t\tthis.addClassToDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tremove(...classes: Array<string>): void {\n\t\t\tthis.removeClassFromDomElement(this.htmlElement, classes);\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(ClassModifier.ClassModifier.CLASS);\n\t\t}\n\n\t\tprivate addClassToDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.add(classes[i]);\n\t\t\t}\n\t\t}\n\n\t\tprivate removeClassFromDomElement(htmlElement: HTMLElement, classes: Array<string>): void {\n\n\t\t\tfor (let i = 0; i < classes.length; i++) {\n\t\t\t\thtmlElement.classList.remove(classes[i]);\n\t\t\t}\n\t\t}\n\n\t};\n\n}\n","export enum StyleName {\n\tWIDTH = 'width',\n\tHEIGHT = 'height',\n\tPADDING_TOP = 'padding-top'\n}\n","import { StyleModifierApi } from './style-modifier-api';\nimport { StyleName } from './style-name';\nimport { Modifier } from '../core/modifier';\n\n\nexport class StyleModifier extends Modifier<StyleModifierApi> {\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): StyleModifierApi {\n\t\treturn new StyleModifier.StyleModifier(htmlElement);\n\t}\n\n\tprivate static readonly StyleModifier = class implements StyleModifierApi {\n\n\t\tprivate static readonly STYLE = 'style';\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetStyleByName(name: string, value: string): void {\n\t\t\tthis.set(name, value);\n\t\t}\n\n\t\tsetWidth(value: number): void {\n\t\t\tthis.set(StyleName.WIDTH, this.toPx(value));\n\t\t}\n\n\t\tsetHeight(value: number): void {\n\t\t\tthis.set(StyleName.HEIGHT, this.toPx(value));\n\t\t}\n\n\t\tsetPaddingTop(value: number): void {\n\t\t\tthis.set(StyleName.PADDING_TOP, this.toPx(value));\n\t\t}\n\n\t\tremove(styleName: StyleName): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][styleName] = '';\n\t\t}\n\n\t\tremoveStyleByName(name: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = '';\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis.htmlElement.removeAttribute(StyleModifier.StyleModifier.STYLE);\n\t\t}\n\n\t\tprivate set(name: string, value: string): void {\n\t\t\tthis.htmlElement[StyleModifier.StyleModifier.STYLE][name] = value;\n\t\t}\n\n\t\tprivate toPx(value: number): string {\n\t\t\treturn value > 0 ? `${value}px` : `${value}`;\n\t\t}\n\n\t};\n\n}\n","import { AttributeModifierApi } from './attribute-modifier-api';\nimport { Modifier } from '../core/modifier';\n\n\nexport class AttributeModifier extends Modifier<AttributeModifierApi> {\n\n\tprivate static readonly AttributeModifier = class implements AttributeModifierApi {\n\n\t\tconstructor(\n\t\t\tprivate readonly htmlElement: HTMLElement\n\t\t) {\n\t\t}\n\n\t\tsetAttribute(name: string, value: string): void {\n\t\t\tthis.htmlElement.setAttribute(name, value);\n\t\t}\n\n\t\tremoveAttribute(name: string): void {\n\t\t\tthis.htmlElement.removeAttribute(name);\n\t\t}\n\n\t};\n\n\tconstructor(\n\t\tprivate readonly htmlElement?: HTMLElement\n\t) {\n\t\tsuper(htmlElement);\n\t}\n\n\tprotected createModifier(htmlElement: HTMLElement): AttributeModifierApi {\n\t\treturn new AttributeModifier.AttributeModifier(htmlElement);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from './paging-config';\n\n\n@Injectable()\nexport abstract class PagingCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract enable(structureId: StructureId): void;\n\n\tabstract disable(structureId: StructureId): void;\n\n\tabstract setPaging(paging: PagingConfig, structureId: StructureId): void;\n\n\tabstract changePageSize(pageSize: number, structureId: StructureId): void;\n\n\tabstract nextPage(structureId: StructureId): void;\n\n\tabstract prevPage(structureId: StructureId): void;\n\n\tabstract goToPage(pageNumber: number, currentPage: number, structureId: StructureId): void;\n\n\tabstract changePagerTop(enabled: boolean, structureId: StructureId): void;\n\n\tabstract changePagerBottom(enabled: boolean, structureId: StructureId): void;\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesConfig } from './summaries-config';\n\n\n@Injectable()\nexport abstract class SummariesCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract setSummariesEnabled(enabled: boolean, structureId: StructureId): void;\n\n\tabstract setConfig(config: SummariesConfig, structureId: StructureId): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortingConfig } from '../../api/sorting-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleSortCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetSortOrderCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/set-config/set-sorting.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { ToggleSortCommand } from '../domain/toggle/toggle-sort.command';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/order/set-sort-order.command';\n\n\n@Injectable()\nexport class SortingCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId: CompositionId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnDestroy, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GuiGridGateway } from './gui.grid-gateway';\nimport { guiGridProviders } from './gui.grid.providers';\n\nimport { structureParentComponent } from '../../../../structure/grid/feature/structure-parent-component';\n\nimport { GuiGridIdGenerator } from './register/gui.grid-id.generator';\nimport { GuiGridRegister } from './register/gui.grid.register';\nimport { GuiGridApi, GuiGridApiProvider } from './api/gui.grid.api-provider';\nimport { FormationCommandInvoker } from '../../../../structure/source/core/api/formation/formation.command-invoker';\nimport { SourceCommandInvoker } from '../../../../structure/source/core/api/source.command-invoker';\nimport { FormationWarehouse } from '../../../../structure/source/core/api/formation/formation.warehouse';\nimport { SearchCommandInvoker } from '../../../../structure/search/core/api/search.command-invoker';\nimport { GuiGridThemeCommandInvoker } from './theme/gui.grid.theme.command-invoker';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureCommandInvoker } from '../../../../structure/core/api/structure.command-invoker';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport { AttributeModifier } from '../../../../common/cdk/dom/attribute/attribute-modifier';\nimport { PagingCommandInvoker } from '../../../../structure/paging/core/api/paging.command-invoker';\nimport { SummariesCommandInvoker } from '../../../../structure/summaries/core/api/summaries.command-invoker';\nimport { SortingCommandInvoker } from '../../../../structure/sorting/core/api/sorting.command-invoker';\n\n@Component({\n\tselector: 'gui-grid',\n\ttemplateUrl: './gui.grid.component.html',\n\tstyleUrls: [\n\t\t'../gui.grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...guiGridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GuiGridComponent\n\t\t}\n\t],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GuiGridComponent extends GuiGridGateway implements OnInit, OnDestroy {\n\n\tprivate static readonly GUI_GRID_ID = 'gui-grid-id';\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tpublic api: GuiGridApi;\n\n\tprivate localGridId: string;\n\n\tprivate readonly gridThemeCommandInvoker: GuiGridThemeCommandInvoker;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly attributeModifier: AttributeModifier;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly gridRegister: GuiGridRegister,\n\t\t\t\tprivate readonly gridIdGenerator: GuiGridIdGenerator,\n\t\t\t\t// delegate\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly sourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tprivate readonly searchCommandInvoker: SearchCommandInvoker,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly structureCommandDispatcher: StructureCommandInvoker,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker\n\t) {\n\t\tsuper();\n\n\t\tthis.gridThemeCommandInvoker = new GuiGridThemeCommandInvoker(\n\t\t\tthis.schemaCommandInvoker,\n\t\t\tthis.gridThemeConverter,\n\t\t\tthis.gridRowColoringConverter\n\t\t);\n\n\t\tthis.classModifier = new ClassModifier(this.elementRef.nativeElement);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tthis.attributeModifier = new AttributeModifier(this.elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.classModifier.getHost().add('gui-grid');\n\t\t// this.styleModifier.getHost().setHeight(this.maxHeight);\n\n\t\tthis.initApi();\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn this.api;\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.attributeModifier.getHost().setAttribute(GuiGridComponent.GUI_GRID_ID, this.localGridId);\n\t}\n\n\tprivate initApi(): void {\n\t\tthis.api = new GuiGridApiProvider(\n\t\t\tthis.structureRef.structureId,\n\t\t\tthis.structureRef.schemaReadModelRootId,\n\t\t\tthis.formationCommandDispatcher,\n\t\t\tthis.formationWarehouse,\n\t\t\tthis.sourceCommandDispatcher,\n\t\t\tthis.searchCommandInvoker,\n\t\t\tthis.gridThemeCommandInvoker,\n\t\t\tthis.structureCommandDispatcher,\n\t\t\tthis.summariesCommandInvoker,\n\t\t\tthis.sortingCommandInvoker,\n\t\t\tthis.pagingCommandInvoker\n\t\t).provide();\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricTooltipModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricTooltipModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { ElementRef } from '@angular/core';\n\nimport { ClassModifier } from '../dom/class/class-modifier';\nimport { Changes } from './ng-changes';\n\n\nexport abstract class GuiComponent {\n\n\tprivate readonly innerClassModifier: ClassModifier = new ClassModifier(this.innerElementRef.nativeElement);\n\n\tprotected constructor(private readonly innerElementRef: ElementRef) {\n\t\tthis.addHostClass();\n\t}\n\n\tprotected abstract getSelectorName(): string;\n\n\taddClassToHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().add(className);\n\t}\n\n\tremoveClassFromHost(className: string): void {\n\t\tthis.innerClassModifier.getHost().remove(className);\n\t}\n\n\thasChanged<T>(prop: Changes<T>): boolean {\n\t\treturn prop !== undefined && prop.currentValue !== undefined;\n\t}\n\n\tprivate addHostClass(): void {\n\t\tthis.innerClassModifier.getHost().add(this.getSelectorName());\n\t}\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nimport { GuiComponent } from './gui-component';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class SmartComponent extends GuiComponent {\n\n\tprivate viewInDom: boolean = false;\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor(protected readonly detector: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.viewInDom = true;\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\treRender(): void {\n\t\tif (this.isViewInDom()) {\n\t\t\tthis.detector.detectChanges();\n\t\t}\n\t}\n\n\tisViewInDom(): boolean {\n\t\treturn this.viewInDom;\n\t}\n\n\thermesSubscribe<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t\tthis.reRender();\n\t\t\t});\n\t}\n\n\thermesSubscribeWithoutRender<T>(stream$: HermesObservable<T>, callback: (value: T) => void): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((streamValues: T) => {\n\t\t\t\tcallback(streamValues);\n\t\t\t});\n\t}\n\n\t// for gate\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>,\n\t\tmapper: (value: V) => any = (value: V) => value\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(mapper(value));\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport abstract class PagingWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onPaging(structureId: StructureId): HermesObservable<Paging>;\n\n\tabstract oncePaging(structureId: StructureId): HermesObservable<Paging>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class PagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n}\n","export enum PagingPosition {\n\tTOP,\n\tBOTTOM\n}\n","import { HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\n\nexport class StreamCloser<T> {\n\n\tprivate readonly unsubscribe$ = new HermesSubject<void>();\n\n\tconstructor() {\n\t}\n\n\ttakeUntil() {\n\t\treturn hermesTakeUntil(this.unsubscribe$);\n\t}\n\n\tunsubscribe(): void {\n\t\tif ((this.unsubscribe$ as any).isCompleted) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","export enum CssClass {\n\tSELECTED = 'selected',\n\tPAGING_TOP_CLASS_NAME = 'gui-paging-top',\n\tPAGING_BOTTOM_CLASS_NAME = 'gui-paging-bottom'\n}\n","import { Injectable } from '@angular/core';\n\nimport { ClassModifier } from '../../../common/cdk/dom/class/class-modifier';\nimport { CssClass } from './css-class';\n\n@Injectable()\nexport class CssClassModifier {\n\n\tprivate readonly classModifier: ClassModifier = new ClassModifier();\n\n\tselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).add(CssClass.SELECTED);\n\t}\n\n\tunselect(htmlElement: HTMLElement): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(CssClass.SELECTED);\n\t}\n\n\tadd(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).add(clazzName);\n\t}\n\n\tremove(htmlElement: HTMLElement, clazzName: string): void {\n\t\tthis.classModifier.getElement(htmlElement).remove(clazzName);\n\t}\n\n\ttoggle(htmlElement: HTMLElement): void {\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../../grid/core/api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\n\nimport { Paging } from '../core/api/read/paging';\nimport { PagingWarehouse } from '../core/api/paging.warehouse';\nimport { PagingCommandInvoker } from '../core/api/paging.command-invoker';\nimport { SourceWarehouse } from '../../source/core/api/source.warehouse';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\nimport { PagingPosition } from './paging-position';\nimport { StreamCloser } from '../../../common/cdk/reactive/stream-closer';\nimport { CssClassModifier } from '../../common/css-class/css-class.modifier';\nimport { CssClass } from '../../common/css-class/css-class';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging][position]',\n\ttemplateUrl: './paging.component.html',\n\tstyleUrls: [\n\t\t'./style/paging.ngx.scss',\n\t\t'./style/theme/generic.paging.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tposition: PagingPosition;\n\n\t@Input()\n\tminimal: boolean;\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tisPagingVisible = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly elRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.addClassToHost('gui-flex');\n\t\tthis.addClassToHost('gui-justify-end');\n\t\tthis.addClassToHost('gui-items-center');\n\t\tthis.addClassToHost('gui-p-4');\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingComponent>) {\n\n\t\tif (changes.position) {\n\n\t\t\tif (this.position === PagingPosition.BOTTOM) {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t} else {\n\t\t\t\tthis.cssClassModifier.remove(this.elRef.nativeElement, CssClass.PAGING_BOTTOM_CLASS_NAME);\n\t\t\t\tthis.cssClassModifier.add(this.elRef.nativeElement, CssClass.PAGING_TOP_CLASS_NAME);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingDisplayModeArchive.on(),\n\t\t\t(mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.calculatePagingVisibility();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandInvoker.changePageSize(pageSize, this.structureId);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandInvoker.nextPage(this.structureId);\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandInvoker.prevPage(this.structureId);\n\t}\n\n\tprivate calculatePagingVisibility(): void {\n\t\tthis.isPagingVisible = this.paging && this.paging.isEnabled() &&\n\t\t\t(((this.position === PagingPosition.TOP) && this.paging.isPagerTop()) ||\n\t\t\t\t((this.position === PagingPosition.BOTTOM) && this.paging.isPagerBottom()));\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging';\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n\t// TODO\n\tcompare(target: Paging): boolean {\n\t\treturn JSON.stringify(this) === JSON.stringify(target);\n\t}\n\n}\n","import { GuiComponent } from './gui-component';\nimport { ElementRef } from '@angular/core';\n\nexport abstract class PureComponent extends GuiComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprivate readonly subClassNgOnInit: Function;\n\n\tprotected constructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.subClassConstructor = this.constructor;\n\t\tthis.subClassNgOnInit = (this as any).ngOnInit;\n\n\t\tif (!this.hasConstructorOnlyElementRefInjected(arguments)) {\n\t\t\tthis.throwError('it should not inject services');\n\t\t}\n\n\t\tif (this.subClassNgOnInit) {\n\t\t\tthis.throwError('it should not use ngOnInit');\n\t\t}\n\t}\n\n\tprivate hasConstructorOnlyElementRefInjected(args: IArguments): boolean {\n\n\t\tif (arguments.length > 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\treturn this.isElementRef(arguments[0]);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate isElementRef(elRef: any): boolean {\n\t\treturn elRef.nativeElement !== null;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a PureComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../core/api/read/paging';\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-paging-select][paging]',\n\ttemplateUrl: './paging-select.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingSelectComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tselectPageSizes: Array<GuiSelectOption>;\n\n\tselectPageSize: GuiSelectOption;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingSelectComponent>) {\n\n\t\tif (changes.paging) {\n\t\t\tif (this.paging) {\n\t\t\t\tthis.selectPageSizes = this.getSelectPageSizes();\n\t\t\t\tthis.selectPageSize = this.getSelectPageSize(this.paging.getPageSize());\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePageSize(pageSize: GuiSelectOption): void {\n\t\tthis.pageSizeChanged.emit(+pageSize.value);\n\t}\n\n\tprivate getSelectPageSizes(): Array<GuiSelectOption> {\n\t\tconst selectPageSizes: Array<GuiSelectOption> = [],\n\t\t\tpageSizes = this.paging.getPageSizes();\n\n\t\tpageSizes.forEach((pageSize: number) => {\n\t\t\tconst selectOption = this.getSelectPageSize(pageSize);\n\t\t\tselectPageSizes.push(selectOption);\n\t\t});\n\n\t\treturn selectPageSizes;\n\t}\n\n\tprivate getSelectPageSize(pageSize: number): GuiSelectOption {\n\t\treturn { name: pageSize.toString(), value: pageSize.toString() };\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-select';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-navigator][paging][sourceSize]',\n\ttemplateUrl: './alternative-paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandInvoker: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandInvoker.goToPage(1, this.paging.getPage(), this.structureId);\n\t}\n\n\tlastPage(): void {\n\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandInvoker.goToPage(numberOfPages, this.paging.getPage(), this.structureId);\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-navigator';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PagingCommandInvoker } from '../../../core/api/paging.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-paging-alternative-pages][paging]',\n\ttemplateUrl: './alternative-paging-pages.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class AlternativePagingPagesComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly pagingCommandService: PagingCommandInvoker) {\n\t\tsuper(elRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<AlternativePagingPagesComponent>) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tconst numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage, this.structureId);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-alternative-pages';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class PagingEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onPageChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n\tabstract onPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number>;\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../api/structure.id';\n\nexport class StructureDomainEvent extends DomainEvent<StructureId> {\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PageChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateEvent extends AggregateEvent<StructureId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PageChangedEvent } from './page-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PageChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagesizeChangedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagesizeChangedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class PagesizeChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from '../api/paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tclearEvents(): void {\n\t\tthis.events.length = 0;\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private readonly logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { PagingConfig } from '../../api/paging-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetPagingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class ChangePagesizeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class NextPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class PrevPageCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../api/structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract findById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PagingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PagingSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class NextPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'NextPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class PrevPageEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\thandle(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\n\t\taggregate.clearEvents();\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (const event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'StructurePreparedEntitiesSetAggregateEvent':\n\n\t\t\t\tthis.domainEventPublisher.publish(event.toDomainEvent());\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","export const structureKey = 'StructureAggregate';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from './paging.manager-factory';\nimport { PagingDispatcher } from './paging.dispatcher';\nimport { SetPagingCommandHandler } from './set/set-paging.command-handler';\nimport { NextPageCommandHandler } from './next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from './prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from './change-pagesize/change-pagesize.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tPagingDispatcher,\n\t\tPagingManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(NextPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable, Reactive } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract getStructure(structureId: StructureId): StructureReadModelRoot;\n\n\tabstract on(structureId: StructureId): HermesObservable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingRepository } from '../api/read/paging.repository';\nimport { Paging } from '../api/read/paging';\nimport { PagingWarehouse } from '../api/paging.warehouse';\n\n\n@Injectable()\nexport class PagingDomainWarehouse extends PagingWarehouse {\n\n\tconstructor(private readonly pagingRepository: PagingRepository) {\n\t\tsuper();\n\t}\n\n\tonPaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\toncePaging(structureId: StructureId): HermesObservable<Paging> {\n\t\treturn this.pagingRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { PagingDispatcher } from './paging.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingConfig } from '../api/paging-config';\nimport { Injectable } from '@angular/core';\nimport { PagingCommandInvoker } from '../api/paging.command-invoker';\n\n@Injectable()\nexport class PagingDomainCommandInvoker extends PagingCommandInvoker {\n\n\tconstructor(private readonly pagingDispatcher: PagingDispatcher) {\n\t\tsuper();\n\t}\n\n\tenable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number, structureId: StructureId) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage(structureId);\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage(structureId);\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingWarehouse } from '../api/paging.warehouse';\nimport { PrevPageEvent } from '../domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../domain/next-page/next-page.event';\nimport { PageChangedEvent } from '../domain/page/page-changed.event';\nimport { Paging } from '../api/read/paging';\nimport { PagesizeChangedEvent } from '../domain/change-pagesize/pagesize-changed.event';\nimport { PagingEventRepository } from '../api/paging.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PagingDomainEventRepository extends PagingEventRepository {\n\n\tconstructor(private readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse) {\n\t\tsuper(eventBus);\n\t}\n\n\tonPageChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PrevPageEvent as any,\n\t\t\t\t\t   NextPageEvent as any,\n\t\t\t\t\t   PageChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPage())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.eventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toAggregateId().toString()),\n\t\t\t\t\t   hermesSwitchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingWarehouse\n\t\t\t\t\t\t\t\t\t  .oncePaging(structureId.toAggregateId())\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((paging: Paging) => paging.getPageSize())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { PagingCommandInvoker } from './paging.command-invoker';\nimport { PagingWarehouse } from './paging.warehouse';\nimport { PagingEventRepository } from './paging.event-repository';\nimport { PagingDomainModule } from '../domain/paging.domain-module';\nimport { PagingConverter } from './read/paging.converter';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingDomainWarehouse } from '../domain-read/paging.domain-warehouse';\nimport { PagingDomainCommandInvoker } from '../domain/paging.domain.command-invoker';\nimport { PagingDomainEventRepository } from '../domain-read/paging.domain.event-repository';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tPagingDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: PagingCommandInvoker,\n\t\t\tuseClass: PagingDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: PagingWarehouse,\n\t\t\tuseClass: PagingDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: PagingEventRepository,\n\t\t\tuseClass: PagingDomainEventRepository\n\t\t},\n\n\t\tPagingRepository,\n\t\tPagingConverter\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class PagingApiModule extends ApiModule {\n\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\nimport { Paging } from '../../../core/api/read/paging';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-paging-navigator][paging]',\n\ttemplateUrl: './paging-navigator.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingNavigatorComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize?: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-navigator';\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { Paging } from '../../../core/api/read/paging';\n\n\n@Component({\n\tselector: 'div[gui-paging-stats][paging]',\n\ttemplateUrl: './paging-stats.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PagingStatsComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t\tthis.addClassToHost('gui-mx-6');\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-paging-stats';\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class TranslationApiModule extends ApiModule {\n}\n","import { Translation } from './translation';\nimport { TranslationChange } from './translation-change';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class TranslationFacade {\n\n\tabstract getTranslation(): Translation;\n\n\tabstract onTranslation(): HermesObservable<Translation>\n\n\tabstract setDefaultTranslation(): void;\n\n\tabstract changeTranslation(change: TranslationChange): void;\n\n\tabstract setResolver(resolver: (key: string, value: string) => string): void;\n\n}\n","import { ChangeDetectorRef, OnDestroy, Pipe, PipeTransform } from '@angular/core';\n\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { Translation } from '../core/api/translation';\nimport { HermesSubscription } from '@generic-ui/hermes';\n\n\n@Pipe({\n\tname: 'guiTranslate',\n\tpure: false\n})\nexport class TranslationPipe implements PipeTransform, OnDestroy {\n\n\tprivate actualTranslationValue: string = '';\n\n\tprivate subscription: HermesSubscription;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly translationService: TranslationFacade) {\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\t}\n\n\ttransform(key: string): string {\n\n\t\tif (this.subscription) {\n\t\t\tthis.subscription.unsubscribe();\n\t\t}\n\n\t\tthis.subscription =\n\t\t\tthis.translationService\n\t\t\t\t.onTranslation()\n\t\t\t\t.subscribe((translation: Translation) => {\n\t\t\t\t\tconst value = translation[key];\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tthis.actualTranslationValue = key;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.actualTranslationValue = value;\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t});\n\n\t\treturn this.actualTranslationValue;\n\t}\n\n}\n","import { TranslationChange } from '../api/translation-change';\nimport { Translation } from '../api/translation';\n\nexport class Dictionary {\n\n\tprivate readonly translation: Map<string, string> = new Map<string, string>();\n\n\tprivate resolver: (key: string, value: string) => string = (key: string, value: string) => value;\n\n\tchangeTranslation(change: TranslationChange | Translation): void {\n\t\tfor (const key of Object.keys(change)) {\n\t\t\tthis.translation.set(key, change[key]);\n\t\t}\n\t}\n\n\tgetTranslation(): Translation {\n\t\treturn Array.from(this.translation)\n\t\t\t\t\t.reduce((obj, [key, value]) => (\n\t\t\t\t\t\tObject.assign(obj, { [key]: this.resolver(key, value) })\n\t\t\t\t\t), {}) as Translation;\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.resolver = resolver;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { TranslationFacade } from '../api/translation.facade';\nimport { Translation } from '../api/translation';\nimport { TranslationChange } from '../api/translation-change';\nimport { enTranslation } from './lang/en';\nimport { Dictionary } from './dictionary';\nimport { HermesObservable, HermesReplaySubject, HermesSubject } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class TranslationDomainFacade extends TranslationFacade {\n\n\tprivate readonly defaultTranslation: Translation = enTranslation;\n\n\tprivate readonly dictionary: Dictionary = new Dictionary();\n\n\tprivate readonly dictionary$: HermesSubject<Translation> = new HermesReplaySubject(1);\n\n\tgetTranslation(): Translation {\n\t\treturn this.dictionary.getTranslation();\n\t}\n\n\tonTranslation(): HermesObservable<Translation> {\n\t\treturn this.dictionary$.toObservable();\n\t}\n\n\tsetDefaultTranslation(): void {\n\t\tthis.changeTranslationAndPropagate(this.defaultTranslation);\n\t}\n\n\tchangeTranslation(change: TranslationChange): void {\n\t\tthis.changeTranslationAndPropagate(change);\n\t}\n\n\tsetResolver(resolver: (key: string, value: string) => string): void {\n\t\tthis.setResolverAndPropagate(resolver);\n\t}\n\n\tprivate changeTranslationAndPropagate(change: TranslationChange | Translation): void {\n\n\t\tthis.dictionary.changeTranslation(change);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n\n\tprivate setResolverAndPropagate(resolver: (key: string, value: string) => string): void {\n\n\t\tthis.dictionary.setResolver(resolver);\n\n\t\tthis.dictionary$.next(this.dictionary.getTranslation());\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { TranslationApiModule } from '../core/api/translation.api-module';\nimport { TranslationPipe } from './translation.pipe';\nimport { TranslationFacade } from '../core/api/translation.facade';\nimport { TranslationDomainFacade } from '../core/domain/translation.domain-facade';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tTranslationApiModule\n\t],\n\tdeclarations: [\n\t\tTranslationPipe\n\t],\n\texports: [\n\t\tTranslationPipe\n\t],\n\tentryComponents: []\n})\nexport class TranslationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [{ provide: TranslationFacade, useClass: TranslationDomainFacade }];\n\t}\n\n\tconstructor(@Optional() apiModule: TranslationApiModule) {\n\t\tsuper();\n\t\tif (apiModule === null) {\n\t\t\tthrow new Error('TranslationApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { PagingComponent } from './paging.component';\nimport { PagingSelectComponent } from './select/paging-select.component';\nimport { AlternativePagingNavigatorComponent } from './advanced/navigator/alternative-paging-navigator.component';\nimport { AlternativePagingPagesComponent } from './advanced/pages/alternative-paging-pages.component';\nimport { PagingDisplayModeArchive } from './mode/paging-display-mode.archive';\nimport { PagingApiModule } from '../core/api/paging.api-module';\nimport { PagingNavigatorComponent } from './basic/navigator/paging-navigator.component';\nimport { PagingStatsComponent } from './basic/stats/paging-stats.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tPagingApiModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tPagingComponent,\n\t\tPagingNavigatorComponent,\n\t\tPagingSelectComponent,\n\t\tPagingStatsComponent,\n\t\tAlternativePagingNavigatorComponent,\n\t\tAlternativePagingPagesComponent\n\t]\n})\nexport class PagingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tPagingDisplayModeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() pagingApiModule: PagingApiModule) {\n\t\tsuper();\n\t\tif (pagingApiModule === null) {\n\t\t\tthrow new Error('PagingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\n\nimport { GuiComponent } from './gui-component';\n\n\nexport abstract class StaticComponent extends GuiComponent implements OnInit {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnInit(): void {\n\t\tthis.changeDetectorRef.detach();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StaticComponent } from '../../../../../../common/cdk/component/static-component';\n\n@Component({\n\tselector: 'div[gui-info-dialog]',\n\ttemplateUrl: './structure-info-modal.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoModalComponent extends StaticComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-info-dialog';\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-dialog-column-manager]',\n\ttemplateUrl: './structure.dialog-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogColumnManagerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-dialog-column-manager';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\n\n@Injectable()\nexport abstract class SchemaWarehouse implements Warehouse {\n\n\tabstract onTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n\tabstract onCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass>;\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId, parentInjector?: Injector) {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({ parent: parentInjector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","export class StructureInfoPanelConfig {\n\n\tprivate readonly enabled: boolean = false;\n\n\tprivate readonly infoDialog: boolean = true;\n\n\tprivate readonly columnsManager: boolean = true;\n\n\tprivate readonly schemaManager: boolean = true;\n\n\tprivate readonly sourceSize: boolean = true;\n\n\tconstructor(enabled?: boolean,\n\t\t\t\tinfoDialog?: boolean,\n\t\t\t\tcolumnsManager?: boolean,\n\t\t\t\tschemaManager?: boolean,\n\t\t\t\tsourceSize?: boolean) {\n\n\t\tif (this.isNotUndefinedOrNull(enabled)) {\n\t\t\tthis.enabled = enabled;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(infoDialog)) {\n\t\t\tthis.infoDialog = infoDialog;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(columnsManager)) {\n\t\t\tthis.columnsManager = columnsManager;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(sourceSize)) {\n\t\t\tthis.sourceSize = sourceSize;\n\t\t}\n\n\t\tif (this.isNotUndefinedOrNull(schemaManager)) {\n\t\t\tthis.schemaManager = schemaManager;\n\t\t}\n\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisInfoDialogEnabled(): boolean {\n\t\treturn this.infoDialog;\n\t}\n\n\tisColumnsManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tisSourceSizeEnabled(): boolean {\n\t\treturn this.sourceSize;\n\t}\n\n\tisSchemaManagerEnabled(): boolean {\n\t\treturn this.schemaManager;\n\t}\n\n\tprivate isNotUndefinedOrNull(config: boolean): boolean {\n\t\treturn config !== undefined && config !== null;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n\n@Injectable()\nexport class StructureInfoPanelArchive extends Archive<StructureInfoPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureInfoPanelConfig());\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-schema-manager-dialog]',\n\ttemplate: `\n\t\t<div gui-structure-schema-manager></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureDialogSchemaManagerComponent extends PureComponent {\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-pr-10');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-schema-manager-dialog';\n\t}\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { StructureDialogSchemaManagerComponent } from './structure.dialog-schema-manager.component';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureDialogSchemaManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, parentInjector?: Injector): void {\n\n\t\tif (!parentInjector) {\n\t\t\tparentInjector = this.injector;\n\t\t}\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{ provide: SchemaReadModelRootId, useValue: readModelId }],\n\t\t\tparent: parentInjector\n\t\t});\n\n\t\tthis.fabricDialogService.open(StructureDialogSchemaManagerComponent, {\n\t\t\tinjector: injector\n\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\n\nimport { SourceWarehouse } from '../../../../source/core/api/source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureInfoPanelArchive } from '../../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureInfoPanelConfig } from '../../../core/api/panel/info/structure.info-panel.config';\nimport { StructureDialogSchemaManagerService } from '../../../../../schema/feature/manager/dialog/structure.dialog-schema-manager.service';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../l10n/core/api/translation';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-panel]',\n\ttemplateUrl: './structure.info-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoModal = StructureInfoModalComponent;\n\n\tinfoPanelConfig: StructureInfoPanelConfig;\n\n\tthemeManagerTooltipText: string;\n\n\tcolumnManagerTooltipText: string;\n\n\tinfoTooltipText: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly schemaManagerService: StructureDialogSchemaManagerService,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelConfig = infoPanel;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onOriginSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onPreparedEntities(this.structureId),\n\t\t\t(preparedItems: Array<OriginItemEntity>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.themeManagerTooltipText = translation.infoPanelThemeMangerTooltipText;\n\t\t\t\tthis.columnManagerTooltipText = translation.infoPanelColumnManagerTooltipText;\n\t\t\t\tthis.infoTooltipText = translation.infoPanelInfoTooltipText;\n\t\t\t}\n\t\t);\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoModal);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId, this.injector);\n\t}\n\n\topenSchemaManager(): void {\n\t\tthis.schemaManagerService.open(this.schemaReadModelRootId, this.injector);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-panel';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { CellTemplateWithContext } from '../domain-read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain-read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { GroupCollection } from './group/group.collection';\nimport { ColumnId } from './column/column.id';\n\n\n@Injectable()\nexport abstract class CompositionWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onContainerWidth(compositionId: CompositionId): HermesObservable<number>;\n\n\tabstract onWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>>;\n\n\tabstract onHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>>;\n\n\tabstract onSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder>;\n\n\tabstract onTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>>;\n\n\tabstract onResizeWidth(compositionId: CompositionId): HermesObservable<boolean>;\n\n\tabstract onGroups(compositionId: CompositionId): HermesObservable<GroupCollection>;\n\n\tabstract onHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean>;\n\n\t// abstract onHighlightedColumns(compositionId: CompositionId)\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandInvoker } from '@generic-ui/hermes';\nimport { CompositionId } from './composition.id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from './column/column-definition-id';\n\n\n@Injectable()\nexport abstract class CompositionCommandInvoker implements CommandInvoker {\n\n\tprotected constructor() {\n\t}\n\n\tabstract create(compositionId: CompositionId): void;\n\n\tabstract setColumns(params: Array<ColumnParams>, compositionId: CompositionId): void;\n\n\tabstract setGroups(configs: any, compositionId: CompositionId): void;\n\n\tabstract setWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setContainerWidth(width: number, compositionId: CompositionId): void;\n\n\tabstract setResizeWidth(enabled: boolean, compositionId: CompositionId): void;\n\n\tabstract enableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract disableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract moveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n\n\tabstract highlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void;\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager]',\n\ttemplate: `\n\n\t\t<ol class=\"gui-p-0 gui-my-4 gui-mx-0 gui-list-none gui-overflow-auto\">\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\"\n\t\t\t\tclass=\"gui-p-6 gui-cursor-pointer\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onAllColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandInvoker.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandInvoker.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-menu-column-manager]',\n\ttemplateUrl: './structure.menu-column-manager.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureMenuColumnManagerComponent extends PureComponent {\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-menu-column-manager';\n\t}\n}\n","import { ChangeDetectorRef, ElementRef } from '@angular/core';\n\nimport { StaticComponent } from './static-component';\n\nexport abstract class IconComponent extends StaticComponent {\n\n\tprotected constructor(elementRef: ElementRef,\n\t\t\t\t\t\t  changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t\tthis.addClassToHost('gui-icon');\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-manager-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnManagerIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-info-icon]',\n\ttemplateUrl: './structure.info-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-info-icon';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelConfig } from './structure.info-panel.config';\n\n@Injectable()\nexport class StructureInfoPanelConfigConverter {\n\n\tconvert(config: InfoPanelConfig): StructureInfoPanelConfig {\n\n\t\tlet infoDialog,\n\t\t\tcolumnsManager,\n\t\t\tsourceSize,\n\t\t\tschemaManager;\n\n\t\tif (config.infoDialog !== undefined) {\n\t\t\tinfoDialog = config.infoDialog;\n\t\t}\n\n\t\tif (config.columnsManager !== undefined) {\n\t\t\tcolumnsManager = config.columnsManager;\n\t\t}\n\n\t\tif (config.schemaManager !== undefined) {\n\t\t\tschemaManager = config.schemaManager;\n\t\t}\n\n\t\tif (config.sourceSize !== undefined) {\n\t\t\tsourceSize = config.sourceSize;\n\t\t}\n\n\t\treturn new StructureInfoPanelConfig(\n\t\t\tconfig.enabled,\n\t\t\tinfoDialog,\n\t\t\tcolumnsManager,\n\t\t\tschemaManager,\n\t\t\tsourceSize);\n\t}\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { GuiSelectOption } from '@generic-ui/fabric';\nimport { SchemaWarehouse } from '../../core/api/schema.warehouse';\nimport { SchemaRowColoring } from '../../core/api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../core/api/theme/schema-theme';\nimport { SchemaCommandInvoker } from '../../core/api/schema.command-invoker';\nimport { SchemaReadModelRootId } from '../../core/api/schema.read-model-root-id';\nimport { RowColoring } from '../../core/api/row-coloring/row-coloring';\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../structure/core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager]',\n\ttemplateUrl: './structure.schema-manger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureSchemaMangerComponent extends SmartComponent implements OnInit {\n\n\tcoloring: Array<GuiSelectOption> = Object.keys(SchemaRowColoring)\n\t\t\t\t\t\t\t\t\t\t\t .map((key: string) => SchemaRowColoring[key])\n\t\t\t\t\t\t\t\t\t\t\t .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t\t .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t return {\n\t\t\t\t\t\t\t\t\t\t\t\t\t value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t\t name: value\n\t\t\t\t\t\t\t\t\t\t\t\t };\n\t\t\t\t\t\t\t\t\t\t\t });\n\n\tthemes: Array<GuiSelectOption> = Object.keys(SchemaTheme)\n\t\t\t\t\t\t\t\t\t\t   .map((key: string) => SchemaTheme[key])\n\t\t\t\t\t\t\t\t\t\t   .filter((val) => !Number.isInteger(val))\n\t\t\t\t\t\t\t\t\t\t   .map((value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t\t\t   value: value,\n\t\t\t\t\t\t\t\t\t\t\t\t   name: value\n\t\t\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t\t\t   });\n\n\tselectedRowColoring: GuiSelectOption;\n\n\tselectedTheme: GuiSelectOption;\n\n\tverticalGrid: boolean;\n\n\thorizontalGrid: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse) {\n\t\tsuper(changeDetectorRef, elRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onRowColoring(this.schemaReadModelRootId),\n\t\t\t(rowColoring: SchemaRowColoring) => {\n\t\t\t\tthis.selectedRowColoring = {\n\t\t\t\t\tvalue: SchemaRowColoring[rowColoring],\n\t\t\t\t\tname: SchemaRowColoring[rowColoring]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onTheme(this.schemaReadModelRootId),\n\t\t\t(schemaTheme: SchemaTheme) => {\n\t\t\t\tthis.selectedTheme = {\n\t\t\t\t\tvalue: SchemaTheme[schemaTheme],\n\t\t\t\t\tname: SchemaTheme[schemaTheme]\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onVerticalGrid(this.schemaReadModelRootId),\n\t\t\t(verticalGrid: boolean) => {\n\t\t\t\tthis.verticalGrid = verticalGrid;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaWarehouse.onHorizontalGrid(this.schemaReadModelRootId),\n\t\t\t(horizontalGrid: boolean) => {\n\t\t\t\tthis.horizontalGrid = horizontalGrid;\n\t\t\t}\n\t\t);\n\n\t}\n\n\ttoggleTheme(theme: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setTheme(this.toTheme(theme.value), this.schemaReadModelRootId, this.structureId);\n\t}\n\n\ttoggleRowColoring(schemaRowColoring: GuiSelectOption): void {\n\t\tthis.schemaCommandInvoker.setRowColoring(this.toRowColoring(schemaRowColoring.value), this.schemaReadModelRootId);\n\t}\n\n\ttoggleVerticalGrid(verticalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\ttoggleHorizontalGrid(horizontalGrid: boolean): void {\n\t\tthis.schemaCommandInvoker.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n\tprivate toTheme(theme: string): SchemaTheme {\n\t\tswitch (theme.toLowerCase()) {\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toRowColoring(coloring: string): RowColoring {\n\t\tswitch (coloring.toLowerCase()) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-schema-manager-icon]',\n\ttemplateUrl: './structure.schema-manager-icon.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSchemaManagerIconComponent extends IconComponent {\n\n\tconstructor(elRef: ElementRef,\n\t\t\t\tcdr: ChangeDetectorRef) {\n\t\tsuper(elRef, cdr);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-schema-manager-icon';\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureSchemaMangerComponent } from './structure.schema-manger.component';\nimport { StructureDialogSchemaManagerComponent } from './dialog/structure.dialog-schema-manager.component';\nimport { StructureDialogSchemaManagerService } from './dialog/structure.dialog-schema-manager.service';\nimport { fabricImports } from '../../../structure/grid/feature/structure-fabric.imports';\nimport { StructureSchemaManagerIconComponent } from './manager-icon/structure.schema-manager-icon.component';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureSchemaMangerComponent,\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaManagerIconComponent\n\t],\n\texports: [\n\t\tStructureSchemaManagerIconComponent\n\t],\n\tentryComponents: [\n\t\tStructureDialogSchemaManagerComponent,\n\t\tStructureSchemaMangerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogSchemaManagerService\n\t]\n})\nexport class SchemaManagerModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\n\t\t<h3>Active filters</h3>\n\n\t\t<div gui-active-filter-list></div>\n\n\t\t<div>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[text]=\"true\">\n\t\t\t\tCancel\n\t\t\t</button>\n\n\t\t\t<button gui-button\n\t\t\t\t\t[outline]=\"true\"\n\t\t\t\t\t[primary]=\"true\">\n\t\t\t\tClear All\n\t\t\t</button>\n\t\t</div>\n\t`\n})\nexport class ActiveFilterMenuComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { StructureThemeConverter } from '../../../../grid/feature/schema/structure.theme.converter';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { ActiveFilterMenuComponent } from './active-filter-menu.component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class ActiveFilterService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(readModelId: SchemaReadModelRootId, structureId: StructureId): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tparent: this.injector,\n\t\t\tproviders: [\n\t\t\t\t{ provide: SchemaReadModelRootId, useValue: readModelId },\n\t\t\t\t{ provide: StructureId, useValue: structureId }\n\t\t\t]\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onceTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(ActiveFilterMenuComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { Directive, ElementRef } from '@angular/core';\n\nimport { ActiveFilterService } from './active-filter.service';\n\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n@Directive({\n\tselector: '[gui-active-filter-menu-trigger]'\n})\nexport class ActiveFilterMenuTriggerDirective {\n\n\tconstructor(private readonly el: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly activeFilterService: ActiveFilterService,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\t}\n\n\tngOnInit() {\n\t\t// this.renderer.listen(this.el.nativeElement, 'click', () => {\n\t\t// \tthis.activeFilterService.open(this.schemaReadModelRootId, this.structureId);\n\t\t// });\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../common/cdk/component/icon-component';\n\n@Component({\n\tselector: 'div[gui-filter-icon]',\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-icon';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FieldReadModel } from './field.read-model';\n\n\n@Injectable()\nexport class FieldReadModelArchive extends AggregateArchive<ReadonlyArray<FieldReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<FieldReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(FieldReadModelArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from './read/field.read-model';\n\n\n@Injectable()\nexport class FieldWarehouse implements Warehouse {\n\n\tconstructor(private readonly fieldReadModelArchive: FieldReadModelArchive) {\n\t}\n\n\tonFields(structureId: StructureId): HermesObservable<ReadonlyArray<FieldReadModel>> {\n\t\treturn this.fieldReadModelArchive.on(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class FilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(FilterEnabledArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class QuickFilterEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(QuickFilterEnabledArchive.default);\n\t}\n\n}\n","import { FilterTypeReadModel } from './filter-type.read-model';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\n\nexport class FilterTypeMap {\n\n\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>; // = new WeakMap<FieldId, Array<FilterTypeReadModel>>();\n\n\tconstructor(map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tthis.map = map;\n\t}\n\n\tgetFilterTypes(fieldId: FieldId): Array<FilterTypeReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { FilterTypeMap } from './filter-type-map';\n\n@Injectable()\nexport class FilterTypeArchive extends AggregateArchive<FilterTypeMap> {\n\n\tstatic readonly default = new FilterTypeMap(new Map());\n\n\tconstructor() {\n\t\tsuper(FilterTypeArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFilterArchive extends AggregateArchive<ReadonlyArray<ActiveFilterReadModel>> {\n\n\tstatic readonly default: ReadonlyArray<ActiveFilterReadModel> = [];\n\n\tconstructor() {\n\t\tsuper(ActiveFilterArchive.default);\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\nexport class UniqueValuesReadModel {\n\n\tprivate readonly map = new Map<string, Array<UniqueValueReadModel>>();\n\n\tprivate readonly allSelected: Map<string, boolean> = new Map<string, boolean>();\n\n\tprivate readonly allDisabled: Map<string, boolean> = new Map<string, boolean>();\n\n\tconstructor(map: Map<string, Array<UniqueValueReadModel>>) {\n\t\tthis.map = map;\n\t\tthis.calculateSelection();\n\t}\n\n\tgetValues(fieldId: FieldId): Array<UniqueValueReadModel> {\n\t\treturn this.map.get(fieldId.toString());\n\t}\n\n\tareAllSelected(fieldId: FieldId): boolean {\n\t\treturn this.allSelected.get(fieldId.toString());\n\t}\n\n\tareAllDisabled(fieldId: FieldId): boolean {\n\t\treturn this.allDisabled.get(fieldId.toString());\n\t}\n\n\tisSelectAllChecked(fieldId: FieldId): boolean {\n\t\treturn this.areAllSelected(fieldId);\n\t}\n\n\tisIndeterminate(fieldId: FieldId): boolean {\n\t\treturn !(this.areAllSelected(fieldId) || this.areAllDisabled(fieldId));\n\t}\n\n\tprivate calculateSelection(): void {\n\n\t\tfor (const key of Array.from(this.map.keys())) {\n\n\t\t\tconst values = this.map.get(key);\n\n\t\t\tthis.allSelected.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => !r.isEnabled())\n\t\t\t);\n\n\t\t\tthis.allDisabled.set(\n\t\t\t\tkey,\n\t\t\t\t!values.some((r) => r.isEnabled())\n\t\t\t);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\n\n@Injectable()\nexport class UniqueValuesArchive extends AggregateArchive<UniqueValuesReadModel> {\n\n\tstatic readonly default = new UniqueValuesReadModel(new Map());\n\n\tconstructor() {\n\t\tsuper(UniqueValuesArchive.default);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { FilterTypeMap } from './type/filter-type-map';\nimport { ActiveFilterReadModel } from './active/active-filter.read-model';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesReadModel } from './unique/unique-values.read-model';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\n\n\n@Injectable()\nexport class FilterWarehouse implements Warehouse {\n\n\tconstructor(private readonly filterEnabledArchive: FilterEnabledArchive,\n\t\t\t\tprivate readonly structureQuickFilterRepository: QuickFilterEnabledArchive,\n\t\t\t\tprivate readonly filterTypeArchive: FilterTypeArchive,\n\t\t\t\tprivate readonly uniqueValuesArchive: UniqueValuesArchive,\n\t\t\t\tprivate readonly activeFilterArchive: ActiveFilterArchive) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.filterEnabledArchive.on(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureQuickFilterRepository.on(structureId);\n\t}\n\n\tonFilterTypes(structureId: StructureId): HermesObservable<FilterTypeMap> {\n\t\treturn this.filterTypeArchive.on(structureId);\n\t}\n\n\tonActiveFilters(structureId: StructureId): HermesObservable<ReadonlyArray<ActiveFilterReadModel>> {\n\t\treturn this.activeFilterArchive.on(structureId);\n\t}\n\n\tonUniqueValues(structureId: StructureId): HermesObservable<UniqueValuesReadModel> {\n\t\treturn this.uniqueValuesArchive.on(structureId);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FilterConfig } from '../../api/filter-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetConfigFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'SetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveAllFiltersCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RemoveAllFiltersCommand');\n\t}\n\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class AddFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(structureId, 'AddFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterId } from '../../../api/filter.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class RemoveFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterId: FilterId) {\n\t\tsuper(structureId, 'RemoveFilterCommand');\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'SelectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectAllUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'UnselectAllUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class SelectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'SelectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { UniqueValueId } from '../unique-value-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class UnselectUniqueFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly uniqueValueId: UniqueValueId) {\n\t\tsuper(structureId, 'UnselectUniqueFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetUniqueValueId(): UniqueValueId {\n\t\treturn this.uniqueValueId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigFilterCommand } from '../domain/config/set-config-filter.command';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { RemoveAllFiltersCommand } from '../domain/core/remove-all/remove-all-filters.command';\nimport { FilterTypeId } from '../domain/type/filter-type.id';\nimport { AddFilterCommand } from '../domain/core/add/add-filter.command';\nimport { FilterId } from './filter.id';\nimport { RemoveFilterCommand } from '../domain/core/remove/remove-filter.command';\nimport { SelectAllUniqueFilterCommand } from '../domain/unique/select-all/select-all-unique-filter.command';\nimport { UnselectAllUniqueFilterCommand } from '../domain/unique/unselect-all/unselect-all-unique-filter.command';\nimport { UniqueValueId } from '../domain/unique/unique-value-id';\nimport { SelectUniqueFilterCommand } from '../domain/unique/select/select-unique-filter.command';\nimport { UnselectUniqueFilterCommand } from '../domain/unique/unselect/unselect-unique-filter.command';\n\n\n@Injectable()\nexport class FilterCommandInvoker implements CommandInvoker {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigFilterCommand(structureId, config));\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new AddFilterCommand(structureId, fieldId, filterTypeId, value));\n\t}\n\n\tremoveAllFilters(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveAllFiltersCommand(structureId));\n\t}\n\n\tremoveFilter(filterId: FilterId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new RemoveFilterCommand(structureId, filterId));\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectAllUniqueFilterCommand(structureId, fieldId));\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SelectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new UnselectUniqueFilterCommand(structureId, fieldId, uniqueValueId));\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldReadModel } from '../../../field/core/api/read/field.read-model';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { FilterTypeMap } from '../../core/api/type/filter-type-map';\nimport { FilterTypeReadModel } from '../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../core/domain/type/filter-type.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-filter-menu]',\n\ttemplateUrl: './filter-menu.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterMenuComponent extends SmartComponent implements OnInit {\n\n\tselectedColumn: CellTemplateWithContext;\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\tselectedField: FieldReadModel;\n\n\tfields: Array<FieldReadModel> = [];\n\n\tfilterTypeMap: FilterTypeMap;\n\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\tselectedFilterTypeId: FilterTypeId;\n\n\tselectedValue: string;\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-block');\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilterTypes(this.structureId),\n\t\t\t(filterTypeMap: FilterTypeMap) => {\n\t\t\t\tthis.filterTypeMap = filterTypeMap;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.fieldWarehouse.onFields(this.structureId),\n\t\t\t(fieldReadModels: Array<FieldReadModel>) => {\n\t\t\t\tthis.fields = fieldReadModels;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t}\n\t\t);\n\t}\n\n\tonColumnSelect(selectedColumn: CellTemplateWithContext): void {\n\n\t\tthis.selectedColumn = selectedColumn;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedColumn.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFieldSelect(field: FieldReadModel): void {\n\t\tthis.selectedField = field;\n\n\t\tthis.filterTypes = this.filterTypeMap.getFilterTypes(this.selectedField.getFieldId());\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tonFilterTypeSelect(filterTypeId: FilterTypeId): void {\n\n\t\tthis.selectedFilterTypeId = filterTypeId;\n\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterCommandDispatcher.removeAllFilters(this.structureId);\n\t}\n\n\taddFilter(): void {\n\n\t\tconst fieldId: FieldId = this.selectedField.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = this.selectedFilterTypeId,\n\t\t\tvalue: any = this.selectedValue;\n\n\t\tthis.filterCommandDispatcher.add(fieldId, filterTypeId, value, this.structureId);\n\n\t\tthis.clearAddFilterForm();\n\t}\n\n\tonValueChanged(value: string): void {\n\t\tthis.selectedValue = value;\n\t}\n\n\tclearAddFilterForm(): void {\n\t\tthis.selectedColumn = null;\n\t\tthis.selectedField = null;\n\t\tthis.selectedFilterTypeId = null;\n\t\tthis.selectedValue = null;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu';\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const filterContainerToken = new InjectionToken('Filter container token');\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, Injector, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { filterContainerToken } from '../../core/api/config/filter-container-token';\nimport { FilterContainerRef } from '../../core/api/config/filter-container-ref';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-filter-menu-trigger]',\n\ttemplateUrl: './filter-menu-trigger.component.html',\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstyleUrls: [\n\t\t'../style/filter.ngx.scss'\n\t]\n})\nexport class FilterMenuTriggerComponent extends SmartComponent {\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(filterContainerToken) private readonly filterContainerRef: FilterContainerRef) {\n\t\tsuper(detector, elementRef);\n\t}\n\n\topenDrawer(): void {\n\t\tconst elementRef = this.filterContainerRef.getElementRef();\n\n\t\tthis.drawerService.open(elementRef, FilterMenuComponent, { injector: this.injector });\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-menu-trigger';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-column-selector][columns]',\n\ttemplate: `\n\n\t\tColumn:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let column of columns\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(column)\">\n\t\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t   context: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ColumnSelectorComponent extends PureComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<CellTemplateWithContext>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(column: CellTemplateWithContext): void {\n\t\tthis.columnSelected.emit(column);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-selector';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FilterTypeReadModel } from '../../../core/api/type/filter-type.read-model';\nimport { FilterTypeId } from '../../../core/domain/type/filter-type.id';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-filter-type-selector][filterTypes]',\n\ttemplateUrl: './filter-type-selector.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterTypeSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfilterTypes: Array<FilterTypeReadModel>;\n\n\t@Output()\n\tfilterTypeSelected = new EventEmitter<FilterTypeId>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(filterType: FilterTypeReadModel): void {\n\t\tthis.filterTypeSelected.emit(filterType.getId());\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-type-selector';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n\n@Component({\n\tselector: 'div[gui-filter-value]',\n\ttemplateUrl: './filter-value.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FilterValueComponent extends SmartComponent {\n\n\tprivate static readonly FORM_FILTER_VALUE = 'filterValue';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\t@Output()\n\tvalueChanged = new EventEmitter();\n\n\tfilterForm: FormGroup;\n\n\tconstructor(detector: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly formBuilder: FormBuilder) {\n\t\tsuper(detector, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[FilterValueComponent.FORM_FILTER_VALUE] = '';\n\n\t\tthis.filterForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.controls[FilterValueComponent.FORM_FILTER_VALUE]\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// \tthis.takeUntil()\n\t\t\t// )\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.valueChanged.emit(value);\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-filter-value';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FieldReadModel } from '../../../../field/core/api/read/field.read-model';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-field-selector][fields]',\n\ttemplate: `\n\n\t\tField:\n\n\t\t<gui-dropdown>\n\t\t\t<gui-dropdown-item *ngFor=\"let field of fields\"\n\t\t\t\t\t\t\t   (click)=\"onSelectChange(field)\">\n\t\t\t\t{{field.getName()}}\n\t\t\t</gui-dropdown-item>\n\t\t</gui-dropdown>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FieldSelectorComponent extends PureComponent {\n\n\t@Input()\n\tfields: ReadonlyArray<FieldReadModel>;\n\n\t@Output()\n\tfieldSelected = new EventEmitter<FieldReadModel>();\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tonSelectChange(field: FieldReadModel): void {\n\t\tthis.fieldSelected.emit(field);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-field-selector';\n\t}\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class ToggleFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'ToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class FilterToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'FilterToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleFilterCommand } from './toggle-filter.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { FilterToggledEvent } from './filter-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleFilterCommandHandler implements CommandHandler<StructureAggregate, ToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleFilterCommand> {\n\t\treturn ToggleFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new FilterToggledEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { AddFilterCommand } from './add-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\n\n\n@Injectable()\nexport class AddFilterCommandHandler implements CommandHandler<StructureAggregate, AddFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<AddFilterCommand> {\n\t\treturn AddFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: AddFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tfilterTypeId: FilterTypeId = command.getFilterTypeId(),\n\t\t\tvalue: any = command.getValue();\n\n\t\tstructure.addFilter(fieldId, filterTypeId, value);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: AddFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveAllFiltersCommand } from './remove-all-filters.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveAllFiltersCommandHandler implements CommandHandler<StructureAggregate, RemoveAllFiltersCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveAllFiltersCommand> {\n\t\treturn RemoveAllFiltersCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tstructure.removeAllFilters();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveAllFiltersCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { RemoveFilterCommand } from './remove-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class RemoveFilterCommandHandler implements CommandHandler<StructureAggregate, RemoveFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<RemoveFilterCommand> {\n\t\treturn RemoveFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: RemoveFilterCommand): void {\n\n\t\tconst filterId = command.getFilterId();\n\n\t\tstructure.removeFilter(filterId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: RemoveFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetConfigFilterCommand } from './set-config-filter.command';\nimport { ConfigFilterSetEvent } from './config-filter-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigFilterCommand> {\n\t\treturn SetConfigFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n}\n","import { QuickFiltersConfig } from '../../api/quick-filters.config';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigQuickFilterCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'SetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class ConfigQuickFilterSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigQuickFilterCommand } from './set-config-quick-filter.command';\nimport { ConfigQuickFilterSetEvent } from './config-quick-filter-set.event';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, SetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigQuickFilterCommand> {\n\t\treturn SetConfigQuickFilterCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { FilterId } from '../api/filter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from './type/filter-type.id';\n\nexport class Filter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate readonly fieldId: FieldId;\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly filterValue: any;\n\n\tconstructor(filterId: FilterId,\n\t\t\t\tfieldId: FieldId,\n\t\t\t\tfilterTypeId: FilterTypeId,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = filterId;\n\t\tthis.fieldId = fieldId;\n\t\tthis.filterTypeId = filterTypeId;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n\tgetFilterTypeId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { FilterConfig } from '../api/filter-config';\nimport { SearchConfig } from '../../../search/core/api/search-config';\nimport { QuickFiltersConfig } from '../api/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\n\nexport abstract class BaseFilterType<T> {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprotected constructor(filterTypeId: FilterTypeId) {\n\t\tthis.filterTypeId = filterTypeId;\n\t}\n\n\tabstract getName(): string;\n\n\tprotected abstract filterEntity(entity: OriginItemEntity, field: Field, value: T): boolean;\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tfilterMany(entities: Array<OriginItemEntity>, field: Field, value: T): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.filterEntity(item, field, value);\n\t\t});\n\t}\n\n\tfilterOne(entity: OriginItemEntity, field: Field, value: T): boolean {\n\t\treturn this.filterEntity(entity, field, value);\n\t}\n}\n","import { BaseFilterType } from '../../base-filter-type';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../../field/core/domain/field/field';\nimport { FilterTypeId } from '../../filter-type.id';\n\nexport class ContainsFilterType extends BaseFilterType<string> {\n\n\tconstructor(filterTypeId: FilterTypeId) {\n\t\tsuper(filterTypeId);\n\t}\n\n\tgetName(): string {\n\t\treturn 'Contains';\n\t}\n\n\tprotected filterEntity(entity: OriginItemEntity, field: Field, value: string): boolean {\n\n\t\tconst fieldValue: string = field.getValue(entity);\n\n\t\treturn !!fieldValue.includes(value);\n\t}\n}\n","export class FilterTypeId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterTypeId } from './filter-type.id';\n\nexport class FilterTypeIdGenerator {\n\n\tstatic index = 0;\n\n\tgenerate(): FilterTypeId {\n\t\tFilterTypeIdGenerator.index += 1;\n\n\t\treturn new FilterTypeId(`${FilterTypeIdGenerator.index}`);\n\t}\n\n}\n","import { FilterTypeId } from '../../domain/type/filter-type.id';\n\nexport class FilterTypeReadModel {\n\n\tprivate readonly filterTypeId: FilterTypeId;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FilterTypeId,\n\t\t\t\tname: string) {\n\t\tthis.filterTypeId = id;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FilterTypeId {\n\t\treturn this.filterTypeId;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { FilterTypeId } from './filter-type.id';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { ContainsFilterType } from './filter-types/contains/contains-filter-type';\nimport { FilterTypeIdGenerator } from './filter-type.id-generator';\nimport { BaseFilterType } from './base-filter-type';\nimport { FilterTypeReadModel } from '../../api/type/filter-type.read-model';\n\n\nexport class FilterTypeManager {\n\n\tprivate readonly fieldIds: Array<FieldId> = [];\n\n\tprivate readonly map = new WeakMap<FieldId, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeMap = new WeakMap<FilterTypeId, BaseFilterType<any>>();\n\n\tprivate readonly dataTypeToFilterType = new Map<DataType, Array<BaseFilterType<any>>>();\n\n\tprivate readonly filterTypeIdGenerator: FilterTypeIdGenerator = new FilterTypeIdGenerator();\n\n\tconstructor(fields: Array<Field>) {\n\t\tthis.assignFilterTypes();\n\n\t\tthis.addFields(fields);\n\t}\n\n\tgetFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeMap.get(filterTypeId);\n\t}\n\n\tgetFieldIdsToFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\tconst map = new Map();\n\n\t\tfor (const fieldId of this.fieldIds) {\n\t\t\tconst filterTypes = this.map.get(fieldId),\n\t\t\t\treadModels = filterTypes.map(f => {\n\t\t\t\t\treturn new FilterTypeReadModel(f.getId(), f.getName());\n\t\t\t\t});\n\n\t\t\tmap.set(fieldId.toString(), readModels);\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tprivate addFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tdataType = field.getDataType();\n\n\t\tconst filterTypesFromDataType = this.dataTypeToFilterType.get(dataType);\n\n\t\tthis.fieldIds.push(fieldId);\n\t\tthis.map.set(fieldId, [...filterTypesFromDataType]);\n\t}\n\n\tprivate assignFilterTypes(): void {\n\t\tthis.assignFilterTypesForDataTypeUnknown();\n\t\tthis.assignFilterTypesForDataTypeNumber();\n\t\tthis.assignFilterTypesForDataTypeString();\n\t\tthis.assignFilterTypesForDataTypeBoolean();\n\t\tthis.assignFilterTypesForDataTypeDate();\n\t\tthis.assignFilterTypesForDataTypeCustom();\n\t}\n\n\tprivate assignFilterTypesForDataTypeUnknown(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.UNKNOWN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeNumber(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.NUMBER, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeString(): void {\n\n\t\tconst filterTypes = [\n\t\t\tnew ContainsFilterType(this.generateId())\n\t\t];\n\n\t\tthis.dataTypeToFilterType.set(DataType.STRING, filterTypes);\n\n\t\tthis.addFilterTypes(filterTypes);\n\t}\n\n\tprivate assignFilterTypesForDataTypeBoolean(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.BOOLEAN, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeDate(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.DATE, []);\n\t}\n\n\tprivate assignFilterTypesForDataTypeCustom(): void {\n\t\tthis.dataTypeToFilterType.set(DataType.CUSTOM, []);\n\t}\n\n\tprivate generateId(): FilterTypeId {\n\t\treturn this.filterTypeIdGenerator.generate();\n\t}\n\n\tprivate addFilterTypes(filterTypes: Array<BaseFilterType<any>>): void {\n\t\tfor (const filterType of filterTypes) {\n\t\t\tthis.filterTypeMap.set(filterType.getId(), filterType);\n\t\t}\n\t}\n\n}\n","export class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(filterId: string) {\n\t\tthis.id = filterId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { FilterId } from './filter.id';\n\nexport class FilterIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generateId(): FilterId {\n\t\treturn new FilterId(`${FilterIdGenerator.index}`);\n\t}\n\n}\n","import { FilterId } from '../filter.id';\n\nexport class ActiveFilterReadModel {\n\n\tconstructor(private readonly filterId: FilterId,\n\t\t\t\tprivate readonly fieldName: string,\n\t\t\t\tprivate readonly filterTypeName: string,\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetText(): string {\n\t\treturn `${this.fieldName}: ${this.filterTypeName}: ${this.value}`;\n\t}\n\n\tgetFilterId(): FilterId {\n\t\treturn this.filterId;\n\t}\n\n}\n","import { Filter } from './filter';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { Field } from '../../../field/core/domain/field/field';\nimport { FilterTypeId } from './type/filter-type.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { FilterTypeManager } from './type/filter-type.manager';\nimport { FilterTypeReadModel } from '../api/type/filter-type.read-model';\nimport { BaseFilterType } from './type/base-filter-type';\nimport { FilterIdGenerator } from '../api/filter.id-generator';\nimport { ActiveFilterReadModel } from '../api/active/active-filter.read-model';\nimport { FilterId } from '../api/filter.id';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\t// string -> FilterId\n\tprivate readonly filters = new Map<string, Filter>();\n\n\tprivate activeFilters: Array<Filter> = [];\n\n\tprivate filterTypeManager: FilterTypeManager;\n\n\tconstructor() {\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\tgetAll(): Array<Filter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetAllActiveFilters(fields: Map<string, Field>): ReadonlyArray<ActiveFilterReadModel> {\n\t\treturn this.activeFilters\n\t\t\t\t   .map((af: Filter) => {\n\t\t\t\t\t   return new ActiveFilterReadModel(\n\t\t\t\t\t\t   af.getFilterId(),\n\t\t\t\t\t\t   (fields.get(af.getFieldId().toString())).getName(),\n\t\t\t\t\t\t   this.filterTypeManager.getFilterType(af.getFilterTypeId()).getName(),\n\t\t\t\t\t\t   af.getFilterValue()\n\t\t\t\t\t   );\n\t\t\t\t   });\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypeManager.getFieldIdsToFilterTypes();\n\t}\n\n\tassignFilterTypes(fields: Array<Field>) {\n\t\tthis.filterTypeManager = new FilterTypeManager(fields);\n\t}\n\n\tadd(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\n\t\tconst filter = new Filter(FilterIdGenerator.generateId(), fieldId, filterTypeId, value);\n\n\t\tthis.activeFilters.push(filter);\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, fields: Map<string, Field>): Array<OriginItemEntity> {\n\n\t\tlet filteredEntities: Array<OriginItemEntity> = [...entities];\n\n\t\tfor (const filter of this.activeFilters) {\n\n\t\t\tconst filterTypeId = filter.getFilterTypeId(),\n\t\t\t\tfilterType = this.getFilterType(filterTypeId),\n\t\t\t\tvalue = filter.getFilterValue();\n\n\t\t\tfilteredEntities = filterType.filterMany(filteredEntities, fields.get(filter.getFieldId().toString()), value);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tremoveAll(): void {\n\t\tthis.activeFilters.length = 0;\n\t}\n\n\tremove(filterId: FilterId): void {\n\n\t\tthis.activeFilters =\n\t\t\tthis.activeFilters.filter((filter: Filter) => {\n\t\t\t\treturn filter.getFilterId() !== filterId;\n\t\t\t});\n\t}\n\n\tprivate getFilterType(filterTypeId: FilterTypeId): BaseFilterType<any> {\n\t\treturn this.filterTypeManager.getFilterType(filterTypeId);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { QuickFilterEnabledArchive } from './quick-filter-enabled.archive';\nimport { ConfigQuickFilterSetEvent } from '../../domain/quick/config-quick-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigQuickFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigQuickFilterSetEvent> {\n\n\tconstructor(private structureQuickFilterRepository: QuickFilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigQuickFilterSetEvent> {\n\t\treturn ConfigQuickFilterSetEvent;\n\t}\n\n\thandle(event: ConfigQuickFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigQuickFilterSetEvent')) {\n\t\t\tthis.structureQuickFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FilterEnabledArchive } from './filter-enabled.archive';\nimport { ConfigFilterSetEvent } from '../../domain/config/config-filter-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigFilterSetEventHandler implements DomainEventHandler<StructureId, ConfigFilterSetEvent> {\n\n\tconstructor(private readonly structureFilterRepository: FilterEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigFilterSetEvent> {\n\t\treturn ConfigFilterSetEvent;\n\t}\n\n\thandle(event: ConfigFilterSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigFilterSetEvent')) {\n\t\t\tthis.structureFilterRepository.next(event.getAggregateId(), event.getEnabled());\n\t\t}\n\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class FilterTypesInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(aggregateId, map, 'FilterTypesInitedEvent');\n\t}\n\n\tgetMap(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FilterTypeArchive } from './filter-type.archive';\nimport { FilterTypeMap } from './filter-type-map';\nimport { FilterTypesInitedEvent } from '../../domain/type/init/filter-types-inited.event';\nimport { FilterTypeReadModel } from './filter-type.read-model';\n\n\n@Injectable()\nexport class FilterTypeConfigFilterSetEventHandler implements DomainEventHandler<StructureId, FilterTypesInitedEvent> {\n\n\tconstructor(private readonly filterTypeArchive: FilterTypeArchive) {\n\t}\n\n\tforEvent(): DomainEventType<FilterTypesInitedEvent> {\n\t\treturn FilterTypesInitedEvent;\n\t}\n\n\thandle(filterTypesInitedEvent: FilterTypesInitedEvent): void {\n\n\t\tif (filterTypesInitedEvent.ofMessageType('FilterTypesInitedEvent')) {\n\n\t\t\tconst map: Map<string, Array<FilterTypeReadModel>> = filterTypesInitedEvent.getMap();\n\n\t\t\tthis.filterTypeArchive.next(filterTypesInitedEvent.getAggregateId(), new FilterTypeMap(map));\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFilterReadModel } from '../../api/active/active-filter.read-model';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ActiveFiltersSetEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(structureId, filters, 'ActiveFiltersSetEvent');\n\t}\n\n\tgetFilters(): ReadonlyArray<any> {\n\t\treturn this.filters;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../../domain/core/active-filters-set.event';\nimport { ActiveFilterArchive } from './active-filter.archive';\nimport { ActiveFilterReadModel } from './active-filter.read-model';\n\n@Injectable()\nexport class ActiveFiltersSetEventHandler implements DomainEventHandler<StructureId, ActiveFiltersSetEvent> {\n\n\tconstructor(private readonly activeFilterRepository: ActiveFilterArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ActiveFiltersSetEvent> {\n\t\treturn ActiveFiltersSetEvent;\n\t}\n\n\thandle(activeFiltersSetEvent: ActiveFiltersSetEvent): void {\n\n\t\tif (activeFiltersSetEvent.ofMessageType('ActiveFiltersSetEvent')) {\n\n\t\t\tconst activeFilters: ReadonlyArray<ActiveFilterReadModel> = activeFiltersSetEvent.getFilters();\n\n\t\t\tthis.activeFilterRepository.next(activeFiltersSetEvent.getAggregateId(), activeFilters);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValue } from '../unique-value';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class UniqueFilterCalculatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, map, 'UniqueFilterCalculatedEvent');\n\t}\n\n\tgetUniqueValues(): Map<string, Array<UniqueValue>> {\n\t\treturn this.map;\n\t}\n\n}\n","import { UniqueValueId } from '../../domain/unique/unique-value-id';\n\nexport class UniqueValueReadModel {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate readonly value: any;\n\n\tprivate readonly displayValue: string;\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgeDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from '../../domain/unique/calculate/unique-filter-calculated.event';\nimport { UniqueValuesArchive } from './unique-values.archive';\nimport { UniqueValuesReadModel } from './unique-values.read-model';\nimport { UniqueValue } from '../../domain/unique/unique-value';\nimport { UniqueValueReadModel } from './unique-value.read-model';\n\n@Injectable()\nexport class UniqueFilterCalculatedEventHandler implements DomainEventHandler<StructureId, UniqueFilterCalculatedEvent> {\n\n\tconstructor(private readonly uniqueValuesRepository: UniqueValuesArchive) {\n\t}\n\n\tforEvent(): DomainEventType<UniqueFilterCalculatedEvent> {\n\t\treturn UniqueFilterCalculatedEvent;\n\t}\n\n\thandle(calculatedEvent: UniqueFilterCalculatedEvent): void {\n\n\t\tif (calculatedEvent.ofMessageType('UniqueFilterCalculatedEvent')) {\n\n\t\t\tconst uvRM = new Map();\n\n\t\t\tcalculatedEvent.getUniqueValues()\n\t\t\t\t\t\t   .forEach((values: Array<UniqueValue>, key: string) => {\n\n\t\t\t\t\t\t\t   const valuesRM = values.map((uv: UniqueValue) => {\n\t\t\t\t\t\t\t\t   return new UniqueValueReadModel(uv.getId(), uv.getDisplayValue(), uv.isEnabled());\n\t\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t\t   uvRM.set(key, valuesRM);\n\t\t\t\t\t\t   });\n\n\n\t\t\tconst uniqueValues = new UniqueValuesReadModel(\n\t\t\t\tuvRM\n\t\t\t);\n\n\t\t\tthis.uniqueValuesRepository.next(calculatedEvent.getAggregateId(), uniqueValues);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class FieldsInitedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, { fieldConfigs, fields }, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldsInitedEvent } from '../../../../../field/core/domain/init/fields-inited.event';\n\n// TODO Remove\n\n\n@Injectable()\nexport class FilterTypeFieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\t// constructor(private readonly filterTypeManagerRepository: FilterTypeManagerRepository,\n\t// \t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t// }\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(fieldsInitedEvent: FieldsInitedEvent): void {\n\n\t\t// if (fieldsInitedEvent.ofMessageType('FieldsInitedEvent')) {\n\t\t//\n\t\t// \tconst fields = fieldsInitedEvent.getFields();\n\t\t//\n\t\t// \tconst manager = new FilterTypeManager(fields);\n\t\t//\n\t\t// \tthis.filterTypeManagerRepository.next(fieldsInitedEvent.getAggregateId(), manager);\n\t\t//\n\t\t// \tthis.domainEventPublisher.publish(new FilterTypesInitedEvent(fieldsInitedEvent.getAggregateId(), manager.getFieldIdsToFieldTypes()));\n\t\t// }\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectAllUniqueFilterCommand } from './unselect-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllUniqueFilterCommand> {\n\t\treturn UnselectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.unselectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { UnselectUniqueFilterCommand } from './unselect-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class UnselectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, UnselectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectUniqueFilterCommand> {\n\t\treturn UnselectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.unselectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectAllUniqueFilterCommand } from './select-all-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectAllUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectAllUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllUniqueFilterCommand> {\n\t\treturn SelectAllUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId();\n\n\t\tstructure.selectAllUniqueFilter(fieldId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SelectUniqueFilterCommand } from './select-unique-filter.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\n\n\n@Injectable()\nexport class SelectUniqueFilterCommandHandler implements CommandHandler<StructureAggregate, SelectUniqueFilterCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectUniqueFilterCommand> {\n\t\treturn SelectUniqueFilterCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\tuniqueValueId = command.getUniqueValueId();\n\n\t\tstructure.selectUniqueFilter(fieldId, uniqueValueId);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectUniqueFilterCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleFilterCommandHandler } from './toggle/toggle-filter.command-handler';\nimport { AddFilterCommandHandler } from './core/add/add-filter.command-handler';\nimport { RemoveAllFiltersCommandHandler } from './core/remove-all/remove-all-filters.command-handler';\nimport { RemoveFilterCommandHandler } from './core/remove/remove-filter.command-handler';\nimport { SetConfigFilterCommandHandler } from './config/set-config-filter.command-handler';\nimport { SetConfigQuickFilterCommandHandler } from './quick/set-config-quick-filter.command-handler';\nimport { FilterManagerFactory } from './filter.manager-factory';\nimport { ConfigQuickFilterSetEventHandler } from '../api/read/config-quick-filter-set.event-handler';\nimport { ConfigFilterSetEventHandler } from '../api/read/config-filter-set.event-handler';\nimport { FilterTypeConfigFilterSetEventHandler } from '../api/type/filter-type.config-filter-set.event-handler';\nimport { ActiveFiltersSetEventHandler } from '../api/active/active-filters-set.event-handler';\nimport { UniqueFilterCalculatedEventHandler } from '../api/unique/unique-filter-calculated.event-handler';\nimport { FilterTypeFieldsInitedEventHandler } from './type/init/filter-type.fields-inited.event-handler';\nimport { UnselectAllUniqueFilterCommandHandler } from './unique/unselect-all/unselect-all-unique-filter.command-handler';\nimport { UnselectUniqueFilterCommandHandler } from './unique/unselect/unselect-unique-filter.command-handler';\nimport { SelectAllUniqueFilterCommandHandler } from './unique/select-all/select-all-unique-filter.command-handler';\nimport { SelectUniqueFilterCommandHandler } from './unique/select/select-unique-filter.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tFilterManagerFactory\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetConfigQuickFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(AddFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveAllFiltersCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(RemoveFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectUniqueFilterCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllUniqueFilterCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigQuickFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeConfigFilterSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ActiveFiltersSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(UniqueFilterCalculatedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(FilterTypeFieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FilterCommandInvoker } from './filter.command-invoker';\nimport { FilterDomainModule } from '../domain/filter.domain-module';\nimport { FilterWarehouse } from './filter.warehouse';\nimport { FilterTypeArchive } from './type/filter-type.archive';\nimport { ActiveFilterArchive } from './active/active-filter.archive';\nimport { UniqueValuesArchive } from './unique/unique-values.archive';\nimport { FilterEnabledArchive } from './read/filter-enabled.archive';\nimport { QuickFilterEnabledArchive } from './read/quick-filter-enabled.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFilterDomainModule\n\t],\n\tproviders: [\n\t\tFilterCommandInvoker,\n\t\tFilterWarehouse,\n\t\tFilterTypeArchive,\n\t\tActiveFilterArchive,\n\t\tUniqueValuesArchive,\n\t\tFilterEnabledArchive,\n\t\tQuickFilterEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FilterApiModule extends ApiModule {\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { ActiveFilterReadModel } from '../../core/api/active/active-filter.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-active-filter-list]',\n\ttemplateUrl: './active-filter-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveFilterListComponent extends SmartComponent implements OnInit {\n\n\tactiveFilters: Array<ActiveFilterReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandDispatcher: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onActiveFilters(this.structureId),\n\t\t\t(activeFilters: Array<ActiveFilterReadModel>) => {\n\t\t\t\tthis.activeFilters = activeFilters;\n\t\t\t}\n\t\t);\n\t}\n\n\tremoveFilter(filter: ActiveFilterReadModel): void {\n\t\tthis.filterCommandDispatcher.removeFilter(filter.getFilterId(), this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-filter-list';\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Injectable()\nexport abstract class SearchWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onSearchEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPhrase(structureId: StructureId): HermesObservable<string>;\n\n\tabstract onHighlight(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onPlaceholder(structureId: StructureId): HermesObservable<string>;\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SearchWarehouse } from '../../../../search/core/api/search.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n@Component({\n\tselector: 'div[gui-active-search]',\n\ttemplateUrl: './active-search.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ActiveSearchComponent extends SmartComponent {\n\n\tphrase: string;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\t\t\t\tthis.phrase = phrase;\n\t\t\t}\n\t\t);\n\t}\n\n\tclearSearch(): void {\n\t\tevent.stopPropagation();\n\t\tthis.searchCommandDispatcher.search('', this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-active-search';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\nimport { ActiveFilterListComponent } from './active-filter-list.component';\nimport { ActiveSearchComponent } from './search/active-search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tActiveFilterListComponent,\n\t\tActiveSearchComponent\n\t],\n\texports: [\n\t\tActiveFilterListComponent\n\t]\n})\nexport class ActiveFilterListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { FilterIconComponent } from './icon/filter-icon.component';\nimport { FilterMenuTriggerComponent } from './filter-menu-trigger.component';\nimport { FilterMenuComponent } from './filter-menu.component';\nimport { ColumnSelectorComponent } from './column-selector/column-selector.component';\nimport { FilterTypeSelectorComponent } from './filter-selector/filter-type-selector.component';\nimport { FilterValueComponent } from './value/filter-value.component';\nimport { FieldSelectorComponent } from './field-selector/field-selector.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { ActiveFilterListModule } from '../active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tReactiveFormsModule,\n\t\tFilterApiModule,\n\t\tActiveFilterListModule\n\t],\n\tdeclarations: [\n\t\tFilterIconComponent,\n\t\tFilterMenuComponent,\n\t\tFilterMenuTriggerComponent,\n\t\tColumnSelectorComponent,\n\t\tFilterTypeSelectorComponent,\n\t\tFilterValueComponent,\n\t\tFieldSelectorComponent\n\t],\n\texports: [\n\t\tFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tFilterMenuComponent\n\t]\n})\nexport class FilterMenuFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FabricButtonModule } from '@generic-ui/fabric';\n\nimport { ActiveFilterMenuTriggerDirective } from './filter/active-filter-menu-trigger.directive';\nimport { ActiveFilterMenuComponent } from './filter/active-filter-menu.component';\nimport { ActiveFilterService } from './filter/active-filter.service';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { ActiveFilterListModule } from '../../../filter/feature/active-filters/active-filter-list.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tFilterMenuFeatureModule,\n\t\tActiveFilterListModule,\n\n\t\tFabricButtonModule\n\n\t],\n\tdeclarations: [\n\t\tActiveFilterMenuTriggerDirective,\n\t\tActiveFilterMenuComponent\n\t],\n\texports: [\n\t\tActiveFilterMenuTriggerDirective\n\t],\n\tproviders: [\n\t\tActiveFilterService\n\t],\n\tentryComponents: [\n\t\tActiveFilterMenuComponent\n\t]\n})\nexport class SourceCounterFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './info-modal/structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\nimport { StructureInfoPanelConfigConverter } from '../../../core/api/panel/info/structure.info-panel.config-converter';\nimport { SchemaManagerModule } from '../../../../../schema/feature/manager/schema-manager.module';\nimport { SourceCounterFeatureModule } from '../../../../source/feature/counter/source-counter.feature-module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule,\n\t\tSchemaManagerModule,\n\t\tSourceCounterFeatureModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t],\n\tproviders: [\n\t\tStructureInfoPanelConfigConverter\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","import { ElementRef, Injectable } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../../schema/core/api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../../schema/core/api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { ClassModifier } from '../../../../common/cdk/dom/class/class-modifier';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate static readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate static readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate static readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate static readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate static readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate static readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate static readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate static readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate static readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.classModifier = new ClassModifier();\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tconst diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, SchemaCssClassManager.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, SchemaCssClassManager.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn SchemaCssClassManager.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn SchemaCssClassManager.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn SchemaCssClassManager.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn SchemaCssClassManager.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaCssClassManager.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn SchemaCssClassManager.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).add(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.classModifier.getElement(this.cssHostRef.nativeElement).remove(cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class InitFieldsCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnConfig } from '../../../api/column/column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { CommandDispatcher, DomainEvent, DomainEventBus, hermesFilter, hermesTake } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from '../../../../field/core/domain/init/init-fields.command';\nimport { FieldConfig } from '../../../../field/core/api/field.config';\nimport { FieldsInitedEvent } from '../../../../field/core/domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { ColumnFieldId } from '../../../../../composition/core/domain/column/field/column-field.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../../composition/core/api/column/column.config';\nimport { ColumnParams } from '../../../../../composition/core/domain/column/set-columns/column.params';\nimport { CompositionCommandInvoker } from '../../../../../composition/core/api/composition.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnFieldFactory } from '../../../../../composition/core/domain/column/field/colum-field.factory';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureGateway } from '../structure.gateway';\n\n\nexport class StructureColumnInputHandler {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker) {\n\t}\n\n\thandle(changes: NgChanges<StructureGateway>): void {\n\n\t\tconst config: Array<ColumnConfig | MultiColumnConfig> = changes.columns.currentValue;\n\n\t\tthis.compositionCommandInvoker.setGroups(config, this.compositionId);\n\n\t\t// prepare model\n\t\tconst { columns, groups } = this.getConfigs(changes.columns.currentValue);\n\n\t\tconst fieldConfigs = this.getFieldConfigs(columns);\n\n\t\t// const fieldConfigs = columns as Array<FieldConfig>;\n\n\t\tconst initCommand = new InitFieldsCommand(this.structureId, fieldConfigs);\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tFieldsInitedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === this.structureId.toString()),\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((event: FieldsInitedEvent) => {\n\n\t\t\t\tconst fields = event.getFields(),\n\t\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\t\tthis.compositionCommandInvoker.setColumns(params, this.compositionId);\n\n\t\t\t\t// this.compositionCommandInvoker.setGroups(this.compositionId);\n\t\t\t});\n\n\t\tthis.commandDispatcher.dispatch(initCommand);\n\t}\n\n\tprivate getConfigs(configs: Array<ColumnConfig | MultiColumnConfig>): { columns: Array<ColumnConfig>, groups: Array<MultiColumnConfig> } {\n\n\t\tconst columnConfigs: Array<ColumnConfig> = [],\n\t\t\tgroupConfigs: Array<MultiColumnConfig> = [];\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\t\t\t\tgroupConfigs.push(config);\n\t\t\t\tcolumnConfigs.push(...(config as MultiColumnConfig).columns);\n\t\t\t} else {\n\t\t\t\tcolumnConfigs.push(config);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcolumns: columnConfigs,\n\t\t\tgroups: groupConfigs\n\t\t};\n\t}\n\n\tprivate getFieldConfigs(columns: Array<ColumnConfig>): Array<FieldConfig> {\n\n\t\treturn columns.map((c) => {\n\t\t\treturn {\n\t\t\t\tfield: c.field as string,\n\t\t\t\ttype: c.type,\n\t\t\t\tmatcher: c.matcher,\n\t\t\t\tsummaries: c.summaries,\n\t\t\t\tsorting: c.sorting\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(\n\t\t\t\tcolumnFieldId,\n\t\t\t\tfield.getAccessorMethod(),\n\t\t\t\tfield.getDataType(),\n\t\t\t\tfield.getSearchAccessorMethod()\n\t\t\t);\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { EditemItemValues } from '../../../source/core/api/event/editem-item.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { PagingCommandInvoker } from '../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../../search/core/api/search.event-repository';\nimport { SchemaCommandInvoker } from '../../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/core/api/schema.read-model-root-id';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingCommandInvoker } from '../../../sorting/core/api/sorting.command-invoker';\nimport { SearchCommandInvoker } from '../../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus } from '@generic-ui/hermes';\nimport { StructureColumnInputHandler } from './column/structure-column.input-handler';\nimport { ColumnFieldFactory } from '../../../../composition/core/domain/column/field/colum-field.factory';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { ColumnConfig, MultiColumnConfig } from '../../../../composition/core/api/column/column.config';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { SchemaTheme } from '../../../../schema/core/api/theme/schema-theme';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/** *********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tsource: Array<any> = [];\n\n\n\t// DOESNT WORK WITH GATE\n\t@Input()\n\tcolumns: Array<ColumnConfig | MultiColumnConfig> = [];\n\n\t// @Input()\n\t// filtering: boolean | FilterConfig;\n\n\t// @Input()\n\t// quickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\n\t/** *********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\tstructureColumnInputHandler: StructureColumnInputHandler;\n\n\tprivate changeAfterInit = false;\n\n\tprotected constructor(\n\t\tprotected readonly changeDetectorRef: ChangeDetectorRef,\n\t\telementRef: ElementRef,\n\t\tprotected readonly domainEventBus: DomainEventBus,\n\t\tprotected readonly commandDispatcher: CommandDispatcher,\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandInvoker: StructureCommandInvoker,\n\t\tprotected structurePagingCommandDispatcher: PagingCommandInvoker,\n\t\tprotected pagingEventRepository: PagingEventRepository,\n\t\tprotected sortingCommandDispatcher: SortingCommandInvoker,\n\t\tprotected searchCommandDispatcher: SearchCommandInvoker,\n\t\tprotected fieldCommandDispatcher: FieldCommandInvoker,\n\t\tprotected sourceCommandService: SourceCommandInvoker,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandInvoker: SchemaCommandInvoker,\n\t\tprotected compositionCommandDispatcher: CompositionCommandInvoker,\n\t\tprotected compositionEventRepository: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventRepository,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelArchive,\n\t\tprotected structureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected columnFieldFactory: ColumnFieldFactory,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\tprotected rowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\tprotected rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\tprotected schemaRowClassArchive: SchemaRowClassArchive,\n\t\tprotected schemaRowStyleArchive: SchemaRowStyleArchive,\n\t\tprotected formationCommandDispatcher: FormationCommandInvoker,\n\t\tprotected searchEventRepository: SearchEventRepository,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository,\n\t\tprotected translationService: TranslationFacade,\n\t\tprotected structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive\n\t) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnInputHandler = new StructureColumnInputHandler(structureId,\n\t\t\tcompositionId, commandDispatcher, domainEventBus, columnFieldFactory, compositionCommandDispatcher);\n\n\t\tthis.translationService.setDefaultTranslation();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureGateway>) {\n\n\t\tif (changes.editMode !== undefined && changes.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (changes.cellEditing !== undefined && changes.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (changes.width !== undefined && changes.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setWidth(this.width, this.compositionId);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandInvoker.setTheme(this.theme, this.schemaId, this.structureId);\n\t\t}\n\n\t\tif (changes.rowHeight !== undefined && changes.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandInvoker.setRowHeight(this.rowHeight, this.structureId);\n\t\t}\n\n\t\tif (changes.autoResizeWidth !== undefined && changes.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandDispatcher.setResizeWidth(this.autoResizeWidth, this.compositionId);\n\t\t}\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.structureColumnInputHandler.handle(changes);\n\t\t}\n\n\t\tif (changes.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandInvoker.setContainerHeight(this.maxHeight, this.structureId);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (changes.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionEventRepository\n\t\t\t.onColumnsChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventRepository\n\t\t\t.onContainerWidthChanged(this.compositionId.toReadModelRootId())\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onThemeChanged(this.schemaId),\n\t\t\tthis.themeChanged\n\t\t);\n\n\t\tthis.componentInitialized();\n\t}\n\n\n\tprivate componentInitialized(): void {\n\t\tthis.changeAfterInit = true;\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureSourceItemEditedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, { beforeItem, afterItem }, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../domain/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): HermesObservable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   hermesMap((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getSourceItem(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getSourceItem();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\n@Injectable()\nexport abstract class CompositionEventRepository extends EventRepository<CompositionReadModelRootId, CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onColumnsChanged(compositionId?: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent>;\n\n\tabstract onContainerWidthChanged(compositionId?: CompositionReadModelRootId): HermesObservable<number>;\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SelectedRowChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, { selectedRows, allSelected, allUnselected }, 'SelectedRowChangedEvent');\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, hermesFilter, hermesMap, HermesObservable, HermesSubject, hermesSwitchMap, hermesTake } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SourceWarehouse } from '../source.warehouse';\nimport { SelectedRow } from './selected-row';\nimport { SelectedRowChangedEvent } from '../../domain/formation/selected-row-changed.event';\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport class FormationEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprivate readonly map = new Map();\n\n\tprivate readonly subject$ = new HermesSubject();\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse) {\n\t\tsuper(domainEventBus);\n\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tSelectedRowChangedEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesSwitchMap((event: SelectedRowChangedEvent) => {\n\n\t\t\t\t\tconst selectedRows = event.getSelectedRows();\n\t\t\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\t\t\treturn this.sourceWarehouse\n\t\t\t\t\t\t\t   .onPreparedEntities(structureId)\n\t\t\t\t\t\t\t   .pipe(\n\t\t\t\t\t\t\t\t   hermesTake(1),\n\t\t\t\t\t\t\t\t   hermesMap((items: Array<OriginItemEntity>) => {\n\n\t\t\t\t\t\t\t\t\t   const selectedItems = [],\n\t\t\t\t\t\t\t\t\t\t   length = items.length,\n\t\t\t\t\t\t\t\t\t\t   itemsMap = new Map<string, OriginItemEntity>();\n\n\t\t\t\t\t\t\t\t\t   for (let i = 0; i < length; i += 1) {\n\t\t\t\t\t\t\t\t\t\t   itemsMap.set(items[i].getId().toString(), items[i]);\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   for (let j = 0; j < selectedRows.length; j += 1) {\n\t\t\t\t\t\t\t\t\t\t   const item: OriginItemEntity = itemsMap.get(selectedRows[j]);\n\t\t\t\t\t\t\t\t\t\t   selectedItems.push(new SelectedRow(item.getSourceItem(), j, item.getId()));\n\t\t\t\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t\t\t\t   return {\n\t\t\t\t\t\t\t\t\t\t   id: structureId,\n\t\t\t\t\t\t\t\t\t\t   items: selectedItems\n\t\t\t\t\t\t\t\t\t   };\n\t\t\t\t\t\t\t\t   })\n\t\t\t\t\t\t\t   );\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe((e) => {\n\t\t\t\tthis.map.set(e.id.toString(), e.items);\n\t\t\t\tthis.subject$.next(this.map);\n\t\t\t});\n\t}\n\n\tonItemSelected(structureId: StructureId): HermesObservable<ReadonlyArray<SelectedRow>> {\n\t\treturn this.subject$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((map: any) => {\n\t\t\t\t\t\t   return map.has(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((map: any) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureWarehouse implements Warehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.on(structureId);\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate mainMenu: string = 'Menu';\n\n\tprivate filterMenu: string = 'Filter';\n\n\tprivate columnsMenu: string = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn this.mainMenu;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn this.filterMenu;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn this.columnsMenu;\n\t}\n\n\tsetMainMenu(mainMenu: string): void {\n\t\tthis.mainMenu = mainMenu;\n\t}\n\n\tsetFilterMenu(filterMenu: string): void {\n\t\tthis.filterMenu = filterMenu;\n\t}\n\n\tsetColumnsMenu(columnsMenu: string): void {\n\t\tthis.columnsMenu = columnsMenu;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class RowSelectEnabledRepository extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SearchEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string>;\n}\n","import { Injectable } from '@angular/core';\nimport { HermesObservable, HermesSubject } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new HermesSubject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): HermesObservable<void> {\n\t\treturn this.closeAll$.toObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './row-coloring/schema-row-coloring';\nimport { SchemaId } from '../domain/schema.id';\n\n@Injectable()\nexport abstract class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme>;\n\n\tabstract onHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean>;\n\n\tabstract onRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring>;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","export abstract class DynamicallyCreatedComponent {\n\n\tprivate readonly subClassConstructor: Function;\n\n\tprotected constructor() {\n\t\tthis.subClassConstructor = this.constructor;\n\t\tif (this.hasInputs()) {\n\t\t\tthis.throwError('it cannot have properties annotated with @Inputs().')\n\t\t}\n\t}\n\n\tprivate hasInputs(): boolean {\n\n\t\treturn false;\n\n\t\t// Works with Angular 12\n\t\t// return !this.isEmpty((this.constructor as any).Éµcmp.inputs);\n\t}\n\n\tprivate isEmpty(obj: Object) {\n\t\tfor (const key in obj) {\n\t\t\tif (obj.hasOwnProperty(key))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate throwError(reason: string): void {\n\t\tthrow new Error(`Component \"${this.subClassConstructor.name}\" is a DynamicallyCreatedComponent, ${reason}.`);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../../source/core/api/formation/selected-row';\nimport { DynamicallyCreatedComponent } from '../../../../../common/cdk/component/dynamically-created-component';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\n\n\n@Component({\n\tselector: 'div[gui-row-detail]',\n\ttemplateUrl: './structure.row-detail-view.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent extends DynamicallyCreatedComponent implements OnInit {\n\n\tselectedRowValue: OriginItemEntity;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private readonly item: SelectedRow,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private readonly template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item.getSource(), this.item.getIndex()));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValue = this.item.getSource();\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventRepository } from '../../../source/core/api/formation/formation.event-repository';\nimport { StructureId } from '../../../core/api/structure.id';\n\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\nimport { SelectedRow } from '../../../source/core/api/formation/selected-row';\nimport { Reactive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventRepository,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.on()\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly titlePanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Title Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureTitlePanelConfigArchive.titlePanelConfig });\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<StructureBannerPanelConfig> {\n\n\tprivate static readonly footerPanelConfig: StructureBannerPanelConfig = {\n\t\tenabled: false,\n\t\ttemplate: 'Footer Panel'\n\t};\n\n\tconstructor() {\n\t\tsuper({ ...StructureFooterPanelConfigArchive.footerPanelConfig });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { InfoPanelConfig } from './info-panel.config';\nimport { StructureInfoPanelArchive } from './structure.info-panel.archive';\nimport { StructureInfoPanelConfigConverter } from './structure.info-panel.config-converter';\n\n\n@Injectable()\nexport class StructureInfoPanelConfigService {\n\n\tconstructor(private structureInfoPanelConfigConverter: StructureInfoPanelConfigConverter,\n\t\t\t\tprivate structureInfoPanelArchive: StructureInfoPanelArchive) {\n\t}\n\n\tset(config: InfoPanelConfig): void {\n\t\tconst infoPanelConfig = this.structureInfoPanelConfigConverter.convert(config);\n\n\t\tthis.structureInfoPanelArchive.next(infoPanelConfig);\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class SortToggledEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortToggledEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SortOrderSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, { compositionId, directions }, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../core/domain/structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { ToggleSortCommandHandler } from './toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from './set-config/set-sorting.command-handler';\nimport { SetSortOrderCommandHandler } from './order/set-sort-order.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, structureKey)\n\t\t];\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SortingCommandInvoker } from './sorting.command-invoker';\nimport { SortingDomainModule } from '../domain/sorting.domain-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSortingDomainModule\n\t],\n\tproviders: [\n\t\tSortingCommandInvoker\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SortingApiModule } from '../core/api/sorting.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tSortingApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SortingFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() sortingApiModule: SortingApiModule) {\n\t\tsuper();\n\t\tif (sortingApiModule === null) {\n\t\t\tthrow new Error('SortingApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SearchConfig } from '../../api/search-config';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetConfigSearchingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'SetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ConfigSearchingSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'ConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommand } from './set-config-searching.command';\nimport { ConfigSearchingSetEvent } from './config-searching-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, SetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetConfigSearchingCommand> {\n\t\treturn SetConfigSearchingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new ConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetSearchPhraseCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(structureId, 'SetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SearchPhraseSetDomainEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string,\n\t\t\t\tprivate readonly initial: boolean) {\n\t\tsuper(aggregateId, { phrase, initial }, 'SearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n\tisInitial(): boolean {\n\t\treturn this.initial;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class OriginSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, origin, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { StructureId } from '../../../core/api/structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureDomainEvent } from '../../../core/domain/structure.domain-event';\n\n\nexport class StructureSummariesChangedEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, values, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class StructurePreparedEntitiesSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, preparedItems, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent\n} from '../../../summaries/core/domain/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../../../summaries/core/domain/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\n\n\n@Injectable()\nexport class SourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSummariesChangedAggregateEvent') {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(\n\t\t\t\tstructureSummariesChangedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSummariesChangedAggregateEvent.getSummaries()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getAggregateId(),\n\t\t\t\tstructurePreparedEntitiesSetAggregateEvent.getPreparedItems()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'UniqueFilterCalculatedAggregateEvent') {\n\n\t\t\tconst uniqueFilterCalculatedAggregateEvent = (event as UniqueFilterCalculatedAggregateEvent);\n\n\t\t\tconst domainEvent = uniqueFilterCalculatedAggregateEvent.toDomainEvent();\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSearchPhraseCommand } from './set-search-phrase.command';\nimport { SearchPhraseSetDomainEvent } from './search-phrase-set.domain-event';\nimport { SourceDomainEventPublisher } from '../../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, SetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSearchPhraseCommand> {\n\t\treturn SetSearchPhraseCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase(),\n\t\t\tinitial = command.isInitial();\n\n\t\tthis.domainEventPublisher.publish(new SearchPhraseSetDomainEvent(command.getAggregateId(), phrase, initial));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { DataType } from '../../../field/core/domain/field/data/data-type';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tconst searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: Field) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchHighlightArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly HIGHLIGHTING = true;\n\n\tconstructor() {\n\t\tsuper(SearchHighlightArchive.HIGHLIGHTING);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPlaceholderArchive extends AggregateArchive<string> {\n\n\tstatic readonly PLACEHOLDER = 'Search...';\n\n\tconstructor() {\n\t\tsuper(SearchPlaceholderArchive.PLACEHOLDER);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SetConfigSearchingCommand } from './config/set-config-searching.command';\nimport { SetSearchPhraseCommand } from './phrase/set-phrase/set-search-phrase.command';\nimport { SearchHighlightArchive } from './highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from './placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.searchHighlightArchive.next(structureId, config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.searchPlaceholderArchive.next(structureId, config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.searchOnInit(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new SetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, false));\n\t}\n\n\tprivate searchOnInit(phrase: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSearchPhraseCommand(structureId, phrase, true));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchPhraseArchive extends AggregateArchive<string> {\n\n\tstatic readonly SEARCH_PHRASE = '';\n\n\tconstructor() {\n\t\tsuper(SearchPhraseArchive.SEARCH_PHRASE);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchPhraseArchive } from './search-phrase.archive';\nimport { SearchPhraseSetDomainEvent } from './set-phrase/search-phrase-set.domain-event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SearchPhraseSetEventHandler implements DomainEventHandler<StructureId, SearchPhraseSetDomainEvent> {\n\n\tconstructor(private readonly searchPhraseRepository: SearchPhraseArchive) {\n\t}\n\n\tforEvent(): DomainEventType<SearchPhraseSetDomainEvent> {\n\t\treturn SearchPhraseSetDomainEvent;\n\t}\n\n\thandle(event: SearchPhraseSetDomainEvent): void {\n\n\t\tif (event.ofMessageType('SearchPhraseSetDomainEvent')) {\n\t\t\tthis.searchPhraseRepository.next(event.getAggregateId(), event.getPhrase());\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SearchingEnabledArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly ENABLED = false;\n\n\tconstructor() {\n\t\tsuper(SearchingEnabledArchive.ENABLED);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SearchingEnabledArchive } from './searching-enabled.archive';\n\nimport { ConfigSearchingSetEvent } from '../config/config-searching-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ConfigSearchingSetEventHandler implements DomainEventHandler<StructureId, ConfigSearchingSetEvent> {\n\n\tconstructor(private readonly structureSearchingRepository: SearchingEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ConfigSearchingSetEvent> {\n\t\treturn ConfigSearchingSetEvent;\n\t}\n\n\thandle(event: ConfigSearchingSetEvent): void {\n\n\t\tif (event.ofMessageType('ConfigSearchingSetEvent')) {\n\t\t\tthis.structureSearchingRepository.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetConfigSearchingCommandHandler } from './config/set-config-searching.command-handler';\nimport { StructureSetSearchPhraseCommandHandler } from './phrase/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from './search.manager-factory';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchPhraseSetEventHandler } from './phrase/search-phrase-set.event-handler';\nimport { ConfigSearchingSetEventHandler } from './enabled/config-searching-set.event-handler';\nimport { structureKey } from '../../../core/api/structre.key';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSearchManagerFactory,\n\t\tSearchDispatcher\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetConfigSearchingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SearchPhraseSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(ConfigSearchingSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Injectable } from '@angular/core';\nimport { SearchWarehouse } from '../api/search.warehouse';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\n\n\n@Injectable()\nexport class SearchDomainWarehouse extends SearchWarehouse {\n\n\tconstructor(private readonly searchingEnabledArchive: SearchingEnabledArchive,\n\t\t\t\tprivate readonly searchPhraseArchive: SearchPhraseArchive,\n\t\t\t\tprivate readonly searchHighlightArchive: SearchHighlightArchive,\n\t\t\t\tprivate readonly searchPlaceholderArchive: SearchPlaceholderArchive) {\n\t\tsuper();\n\t}\n\n\tonSearchEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchingEnabledArchive.on(structureId);\n\t}\n\n\tonPhrase(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPhraseArchive.on(structureId);\n\t}\n\n\tonHighlight(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.searchHighlightArchive.on(structureId);\n\t}\n\n\tonPlaceholder(structureId: StructureId): HermesObservable<string> {\n\t\treturn this.searchPlaceholderArchive.on(structureId);\n\t}\n\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { SearchPhraseSetDomainEvent } from '../domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { Injectable } from '@angular/core';\nimport { SearchEventRepository } from '../api/search.event-repository';\n\n@Injectable()\nexport class SearchDomainEventRepository extends SearchEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSearchPhrase(structureId: StructureReadModelRootId): HermesObservable<string> {\n\t\treturn this.onEvent(structureId, SearchPhraseSetDomainEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((event: SearchPhraseSetDomainEvent) => event.isInitial() === false),\n\t\t\t\t\t   hermesMap((event: SearchPhraseSetDomainEvent) => event.getPhrase()),\n\t\t\t\t\t   hermesFilter((phrase: string) => phrase !== null)\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { SearchDispatcher } from './search.dispatcher';\nimport { SearchConfig } from '../api/search-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../api/search.command-invoker';\n\n\n@Injectable()\nexport class SearchDomainCommandInvoker extends SearchCommandInvoker {\n\n\tconstructor(private readonly searchDispatcher: SearchDispatcher) {\n\t\tsuper();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId): void {\n\t\tthis.searchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId): void {\n\t\tthis.searchDispatcher.search(phrase, structureId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SearchDomainModule } from '../domain/search.domain-module';\nimport { SearchCommandInvoker } from './search.command-invoker';\nimport { SearchWarehouse } from './search.warehouse';\nimport { SearchEventRepository } from './search.event-repository';\nimport { SearchPhraseArchive } from '../domain/phrase/search-phrase.archive';\nimport { SearchHighlightArchive } from '../domain/highlight/search-highlight.archive';\nimport { SearchPlaceholderArchive } from '../domain/placeholder/search-placeholder.archive';\nimport { SearchingEnabledArchive } from '../domain/enabled/searching-enabled.archive';\nimport { SearchDomainWarehouse } from '../domain-read/search.domain-warehouse';\nimport { SearchDomainEventRepository } from '../domain-read/search.domain-event-repository';\nimport { SearchDomainCommandInvoker } from '../domain/search.domain-command-invoker';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSearchDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SearchCommandInvoker,\n\t\t\tuseClass: SearchDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SearchWarehouse,\n\t\t\tuseClass: SearchDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SearchEventRepository,\n\t\t\tuseClass: SearchDomainEventRepository\n\t\t},\n\n\t\tSearchPhraseArchive,\n\t\tSearchHighlightArchive,\n\t\tSearchPlaceholderArchive,\n\t\tSearchingEnabledArchive\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SearchApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-search-icon]',\n\ttemplate: `\n\t\t<svg class=\"gui-search-icon-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../common/cdk/component/smart-component';\nimport { StructureWarehouse } from '../../grid/core/api/structure.warehouse';\nimport { StructureId } from '../../core/api/structure.id';\nimport { SearchCommandInvoker } from '../core/api/search.command-invoker';\nimport { SearchWarehouse } from '../core/api/search.warehouse';\nimport { fromRxJsObservable, HermesSubscription } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-search-bar]',\n\ttemplateUrl: './search.component.html',\n\tstyleUrls: [\n\t\t'./style/searching.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent extends SmartComponent implements OnInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder: string;\n\n\tsearchingEnabled: boolean;\n\n\tsearchInputSubscription: HermesSubscription;\n\n\tconstructor(private readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tconst controlsConfig = {};\n\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onPlaceholder(this.structureId),\n\t\t\t(placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(searchingEnabled: boolean) => {\n\t\t\t\tthis.searchingEnabled = searchingEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.searchWarehouse.onPhrase(this.structureId),\n\t\t\t(phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tconst controlsConfig = {};\n\t\t\t\tcontrolsConfig[SearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([SearchComponent.FORM_SEARCH_NAME]).value) {\n\n\t\t\t\t\tthis.stopObserveChanges();\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t\tthis.observeChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.searchForm.reset();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-search-bar';\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchInputSubscription =\n\t\t\tfromRxJsObservable(\n\t\t\t\tthis.searchForm\n\t\t\t\t\t.controls[SearchComponent.FORM_SEARCH_NAME]\n\t\t\t\t\t.valueChanges\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tdebounceTime(200)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((phrase: string) => {\n\t\t\t\t\tthis.searchCommandDispatcher.search(phrase, this.structureId);\n\t\t\t\t});\n\t}\n\n\tprivate stopObserveChanges(): void {\n\t\tthis.searchInputSubscription.unsubscribe();\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SearchApiModule } from '../core/api/search.api-module';\nimport { SearchIconComponent } from './icon/search-icon.component';\nimport { SearchComponent } from './search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tSearchApiModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t],\n\texports: [\n\t\tSearchIconComponent,\n\t\tSearchComponent\n\t]\n})\nexport class SearchFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(searchApiModule: SearchApiModule) {\n\t\tsuper();\n\t\tif (searchApiModule === null) {\n\t\t\tthrow new Error('SearchApiModule is required');\n\t\t}\n\t}\n\n}\n","import { FieldId } from '../../domain/field/field.id';\nimport { DataType } from '../../domain/field/data/data-type';\n\n\nexport class FieldReadModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType,\n\t\t\t\tprivate readonly name: string\n\t) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldReadModel } from './field.read-model';\nimport { Field } from '../../domain/field/field';\n\n\n@Injectable()\nexport class FieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<FieldReadModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): FieldReadModel {\n\n\t\treturn new FieldReadModel(field.getId(), field.getDataType(), field.getName());\n\t}\n}\n","import { FieldId } from './field/field.id';\nimport { Field } from './field/field';\nimport { FieldConfig } from '../api/field.config';\nimport { FieldFactory } from './field/field.factory';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tgetFieldsAsMap(): Map<string, Field> {\n\t\treturn this.fields;\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>): void {\n\n\t\tconst fields: Array<Field> = this.fieldFactory.create(fieldConfigs);\n\n\t\tthis.clear();\n\t\tthis.addFields(fields);\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n\n\tprivate clear(): void {\n\t\tthis.fields.clear();\n\t}\n}\n","import { DataFieldTypes } from './data/data-field-types';\nimport { DataType } from './data/data-type';\nimport { NumberDataField } from './data/type/number-data-field';\nimport { BooleanDataField } from './data/type/boolean-data-field';\nimport { StringDataField } from './data/type/string-data-field';\nimport { DateDataField } from './data/type/date-data-field';\nimport { FieldId } from './field.id';\n\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../summaries/core/domain/summaries.type';\n\n\nexport class Field {\n\n\tstatic of(id: FieldId, dataField: DataFieldTypes, name: string): Field {\n\t\treturn new Field(id, dataField, name);\n\t}\n\n\tprivate readonly id: FieldId;\n\n\tprivate readonly field: DataFieldTypes;\n\n\tprivate readonly name: string;\n\n\tconstructor(id: FieldId,\n\t\t\t\tfield: DataFieldTypes,\n\t\t\t\tname: string) {\n\t\tthis.id = id;\n\t\tthis.field = field;\n\t\tthis.name = name;\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().toString();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.field.getDataType();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): DataFieldTypes {\n\t\treturn this.field;\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessor(): string {\n\t\treturn this.field.getAccessor();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getAccessorMethod();\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.field.getSearchAccessorMethod();\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.field.getValue(entity);\n\t}\n\n\tgetDisplayValue(value: any): any {\n\t\treturn (this.field as any).getDisplayValue(value);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummaries(type: SummariesType): boolean {\n\t\treturn this.field.isSummaries(type);\n\t}\n\n\t/**\n\t * Probably should not be used.\n\t *\n\t * @deprecated\n\t */\n\tisSummariesEnabled(): boolean {\n\t\treturn this.field.isSummariesEnabled();\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tconst valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringDataField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateDataField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatcherType } from '../../matcher/field.matcher.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\n\nexport abstract class BaseDataField {\n\n\t// TODO\n\tprivate readonly accessor: string | any; // (rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getSourceItem()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getSourceItem());\n\t\t} else {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity;\n\t\t}\n\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { DataType } from './data-type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { BaseDataField } from './base-data-field';\n\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../composition/core/api/column/column-summaries.config';\n\n\nexport abstract class DataField<T> extends BaseDataField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(accessor,\n\t\t\tdataType,\n\t\t\tmatchers\n\t\t);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tabstract equals(item: OriginItemEntity, value: T): boolean;\n\n\tabstract getDisplayValue(item: T): string;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class UnknownDataField extends DataField<any> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: any): boolean {\n\t\treturn false;\n\t}\n\n\tgetDisplayValue(item: any): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class NumberDataField extends DataField<number> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberDataField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: number): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: number): string {\n\t\treturn `${item}`;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { DataType } from '../data-type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\n\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class StringDataField extends DataField<string> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n\tequals(item: OriginItemEntity, value: string): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: string): string {\n\t\treturn item;\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class BooleanDataField extends DataField<boolean> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n\tequals(item: OriginItemEntity, value: boolean): boolean {\n\t\treturn this.getValue(item) === value;\n\t}\n\n\tgetDisplayValue(item: boolean): string {\n\t\treturn item ? 'True' : 'False';\n\t}\n\n}\n","import { DataField } from '../data-field';\nimport { ColumnSummariesConfig } from '../../../../../../../composition/core/api/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../../../../summaries/core/domain/summaries.type';\nimport { FieldMatchers } from '../../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../../../source/core/domain/origin/origin-item-entity';\n\n\nexport class DateDataField extends DataField<Date> {\n\n\tconstructor(accessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n\tequals(item: OriginItemEntity, value: Date): boolean {\n\t\treturn this.getValue(item).getTime() === value.getTime();\n\t}\n\n\tgetDisplayValue(item: Date): string {\n\t\treturn item.toDateString();\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { DataType } from './data-type';\nimport { UnknownDataField } from './type/unknown-data-field';\nimport { NumberDataField } from './type/number-data-field';\nimport { StringDataField } from './type/string-data-field';\nimport { BooleanDataField } from './type/boolean-data-field';\nimport { DateDataField } from './type/date-data-field';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { DataFieldTypes } from './data-field-types';\nimport { FieldConfig } from '../../../api/field.config';\n\n\n@Injectable()\nexport class DataFieldFactory {\n\n\tcreate(fieldConfig: FieldConfig): DataFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(fieldConfig);\n\n\t\tlet columnType = fieldConfig.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberDataField(fieldConfig.field as string, fieldMatchers, fieldConfig.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateDataField(fieldConfig.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(fieldConfig: FieldConfig): FieldMatchers {\n\n\t\tconst matcher = fieldConfig.matcher;\n\t\tlet sortMatcher;\n\n\t\tif (fieldConfig.sorting) {\n\t\t\tsortMatcher = fieldConfig.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n}\n","import { Key } from '@generic-ui/hermes';\n\nexport class FieldId implements Key {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.toString() === this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldConfig } from '../../api/field.config';\nimport { Field } from './field';\nimport { DataFieldFactory } from './data/data-field.factory';\nimport { FieldIdGenerator } from './field-id.generator';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator,\n\t\t\t\tprivate readonly dataFieldFactory: DataFieldFactory) {\n\t}\n\n\tcreate(configs: Array<FieldConfig>): Array<Field> {\n\n\t\tif (!configs) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn configs.map((fieldConfig: FieldConfig, index: number) => {\n\n\t\t\tconst fieldId = this.fieldIdGenerator.generateId(),\n\t\t\t\tdataField = this.dataFieldFactory.create(fieldConfig);\n\n\t\t\treturn new Field(fieldId, dataField, this.getFieldName(fieldConfig, index));\n\t\t});\n\t}\n\n\tprivate getFieldName(fieldConfig: FieldConfig, index: number): string {\n\n\t\tif (typeof fieldConfig.field === 'string') {\n\t\t\treturn fieldConfig.field.toLowerCase();\n\t\t} else {\n\t\t\treturn 'Field #' + index;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldCollection } from './field-collection';\nimport { FieldFactory } from './field/field.factory';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { InitFieldsCommand } from './init-fields.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { FieldConfig } from '../../api/field.config';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst fieldConfigs: Array<FieldConfig> = command.getFieldConfigs();\n\n\t\tstructure.createFields(fieldConfigs);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './field-read-model.archive';\nimport { FieldUiConverter } from './field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/init/fields-inited.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class FieldsInitedEventHandler implements DomainEventHandler<StructureId, FieldsInitedEvent> {\n\n\tconstructor(private fieldReadModelRepository: FieldReadModelArchive,\n\t\t\t\tprivate fieldUiConverter: FieldUiConverter) {\n\t}\n\n\tforEvent(): DomainEventType<FieldsInitedEvent> {\n\t\treturn FieldsInitedEvent;\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event.ofMessageType('FieldsInitedEvent')) {\n\n\t\t\tconst fields = this.fieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.fieldReadModelRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { FieldCollectionFactory } from './field-collection.factory';\nimport { DataFieldFactory } from './field/data/data-field.factory';\nimport { FieldIdGenerator } from './field/field-id.generator';\nimport { InitFieldsCommandHandler } from './init/init-fields.command-handler';\nimport { FieldFactory } from './field/field.factory';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { FieldsInitedEventHandler } from '../api/read/fields-inited.event-handler';\n\n\n@NgModule({\n\tproviders: [\n\t\tFieldCollectionFactory,\n\t\tFieldFactory,\n\t\tFieldIdGenerator,\n\t\tDataFieldFactory\n\t]\n})\nexport class FieldDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(FieldsInitedEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher, CommandInvoker, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { InitFieldsCommand } from '../domain/init/init-fields.command';\nimport { FieldConfig } from './field.config';\n\n\n@Injectable()\nexport class FieldCommandInvoker implements CommandInvoker {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinitFields(fieldConfigs: Array<FieldConfig>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, fieldConfigs));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { FieldReadModelArchive } from './read/field-read-model.archive';\nimport { FieldUiConverter } from './read/field.ui-converter';\nimport { FieldDomainModule } from '../domain/field.domain-module';\nimport { FieldCommandInvoker } from './field.command-invoker';\nimport { FieldWarehouse } from './field.warehouse';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldDomainModule\n\t],\n\tproviders: [\n\t\tFieldCommandInvoker,\n\n\t\tFieldReadModelArchive,\n\t\tFieldUiConverter,\n\t\tFieldWarehouse\n\t]\n})\nexport class FieldApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\nimport { FieldApiModule } from '../core/api/field.api-module';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFieldApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class FieldFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() fieldApiModule: FieldApiModule) {\n\t\tsuper();\n\t\tif (fieldApiModule === null) {\n\t\t\tthrow new Error('FieldApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../structure/source/core/domain/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowSelectionType } from '../../row-selection';\n\n@Injectable()\nexport class RowSelectionTypeArchive extends Archive<RowSelectionType> {\n\n\tstatic readonly DEFAULT_ROW_SELECTION_TYPE = RowSelectionType.ROW;\n\n\tconstructor() {\n\t\tsuper(RowSelectionTypeArchive.DEFAULT_ROW_SELECTION_TYPE);\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from '../domain/core/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class SetSourceLoadingEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'SetSourceLoadingEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SourceSetLoadingCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class SetOriginCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport class StructureEditSourceItemCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { SourceDomainEventPublisher } from '../../source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: SourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\tsourceItem: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\tsourceItem: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.sourceItem = sourceItem;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.sourceItem;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.sourceItem };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureOriginChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from '../origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from '../origin/structure.origin-changed.aggregate-event';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { OriginId } from '../origin/origin-id';\nimport { FormationManager } from '../formation/core/formation-manager';\nimport { RowSelectToggleType } from '../formation/core/row-select-toggle-type';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tprivate readonly formationManager: FormationManager;\n\n\tconstructor(formationManager: FormationManager) {\n\t\tthis.formationManager = formationManager;\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<OriginItemEntity> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = [...items];\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.sourceItem[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tdeleteAllSelected(structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tconst rows = this.formationManager.getSelectedRows();\n\n\t\trows.forEach((r: string) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(new OriginId(r), structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tdeleteOriginItem(payload: number | OriginId | Array<number> | Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (payload instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(payload, structureId);\n\t\t} else if (Array.isArray(payload)) {\n\n\t\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\t\tpayload.forEach((item: number | OriginId) => {\n\t\t\t\tevents.push(...this.deleteOneOriginItem(item, structureId));\n\t\t\t});\n\n\t\t\treturn events;\n\n\t\t} else if (Number.isInteger(payload)) {\n\t\t\treturn this.deleteOriginItemByIndex(payload, structureId);\n\t\t}\n\t}\n\n\taddOriginItem(item: any, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.origin.push(item);\n\t\treturn [this.createOriginChangedEvent(structureId)];\n\t}\n\n\tselectAll(): void {\n\t\tthis.formationManager.selectAll(this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tunselectAll(): void {\n\t\tthis.formationManager.unselectAll();\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType): void {\n\t\tthis.formationManager.toggleRow(itemId, type, this.getEntities().map(e => e.getId().toString()));\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.formationManager;\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n\tprivate deleteOneOriginItem(item: number | OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (item instanceof OriginId) {\n\t\t\treturn this.deleteOriginItemByItemId(item, structureId);\n\t\t} else if (Number.isInteger(item)) {\n\t\t\treturn this.deleteOriginItemByIndex(item, structureId);\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate deleteOriginItemByItemId(itemId: OriginId, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId.toString());\n\n\t\treturn this.deleteOriginItemByIndex(index, structureId);\n\t}\n\n\tprivate deleteOriginItemByIndex(index: number, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tif (index > -1) {\n\t\t\tconst removedElements: Array<OriginItemEntity> = this.origin.splice(index, 1);\n\n\t\t\tif (removedElements.length > 0) {\n\t\t\t\tfor (const element of removedElements) {\n\t\t\t\t\tthis.formationManager.unselectRow(element.getId().toString());\n\t\t\t\t}\n\t\t\t\tthis.formationManager.calculateAllSelected(removedElements.map((f) => f.getId().toString()));\n\t\t\t\tthis.formationManager.calculateAllUnselected();\n\t\t\t}\n\n\t\t\treturn [\n\t\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate deleteManyOriginItemByIndex(indexes: Array<number>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\tindexes.forEach((index: number) => {\n\t\t\tevents.push(...this.deleteOriginItemByIndex(index, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n\tprivate deleteManyOriginItemByItemID(itemIds: Array<OriginId>, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst events: Array<AggregateEvent<StructureId>> = [];\n\n\t\titemIds.forEach((itemId: OriginId) => {\n\t\t\tevents.push(...this.deleteOriginItemByItemId(itemId, structureId));\n\t\t});\n\n\t\treturn events;\n\t}\n\n}\n","export enum RowSelectToggleType {\n\tNONE,\n\tADD,\n\tRANGE\n}\n","import { RowSelectToggleType } from './row-select-toggle-type';\nimport { RowSelectionMode } from '../../../api/row-selection';\n\nexport class FormationManager {\n\n\tprivate enabled: boolean = true;\n\n\tprivate mode: RowSelectionMode = RowSelectionMode.SINGLE;\n\n\tprivate selectedRows: Set<string>;\n\n\tprivate allSelected: boolean;\n\n\tprivate allUnselected: boolean;\n\n\tconstructor(selectedRows: Set<string>) {\n\t\tthis.selectedRows = selectedRows;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetMode(mode: RowSelectionMode): void {\n\t\tthis.mode = mode;\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn Array.from(this.selectedRows);\n\t}\n\n\tselectAll(allItemIds: Array<string>): void {\n\t\tthis.selectedRows = new Set<string>(allItemIds);\n\t\tthis.allSelected = true;\n\t\tthis.allUnselected = false;\n\t}\n\n\tunselectAll(): void {\n\t\tthis.selectedRows.clear();\n\t\tthis.allSelected = false;\n\t\tthis.allUnselected = true;\n\t}\n\n\ttoggleRow(itemId: string, type: RowSelectToggleType, allItemIds: Array<string>): void {\n\n\t\tif (!this.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (type === RowSelectToggleType.ADD && this.mode === RowSelectionMode.SINGLE) {\n\t\t\ttype = RowSelectToggleType.NONE;\n\t\t}\n\n\t\tswitch (type) {\n\t\t\tcase RowSelectToggleType.NONE:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.clear();\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.ADD:\n\n\t\t\t\tif (this.selectedRows.has(itemId)) {\n\t\t\t\t\tthis.selectedRows.delete(itemId);\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedRows.add(itemId);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase RowSelectToggleType.RANGE:\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.calculateAllSelected(allItemIds);\n\t\tthis.calculateAllUnselected();\n\t}\n\n\tcalculateAllSelected(allItemIds: Array<string>): void {\n\t\tif (allItemIds.length !== this.selectedRows.size) {\n\t\t\tthis.allSelected = false;\n\t\t} else {\n\n\t\t\tconst rows = Array.from(this.selectedRows);\n\t\t\tlet equal = true;\n\n\t\t\trows.sort();\n\t\t\tallItemIds.sort();\n\n\t\t\tfor (let i = 0; i < rows.length; i += 1) {\n\t\t\t\tif (rows[i] !== allItemIds[i]) {\n\t\t\t\t\tequal = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.allSelected = equal;\n\t\t}\n\t}\n\n\tcalculateAllUnselected(): void {\n\t\tthis.allUnselected = this.selectedRows.size === 0;\n\t}\n\n\tunselectRow(itemId: string): void {\n\t\tif (this.selectedRows.has(itemId)) {\n\t\t\tthis.selectedRows.delete(itemId);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationManager } from './formation-manager';\n\n\n@Injectable()\nexport class FormationManagerFactory {\n\n\tcreate(): FormationManager {\n\t\treturn new FormationManager(new Set());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\nimport { FormationManagerFactory } from '../formation/core/formation.manager-factory';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tconstructor(private readonly formationManagerFactory: FormationManagerFactory) {\n\t}\n\n\tcreateDefault(): SourceManager {\n\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n\tcreate(): SourceManager {\n\t\tconst fm = this.formationManagerFactory.create();\n\n\t\treturn new SourceManager(fm);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetEnabledSelectionCommand } from './set-enabled-selection.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetEnabledSelectionCommandHandler implements CommandHandler<StructureAggregate, SetEnabledSelectionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetEnabledSelectionCommand> {\n\t\treturn SetEnabledSelectionCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\taggregate.setSelection(command.isEnabled());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetEnabledSelectionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst selectedRow = command.getSelectedRow(),\n\t\t\ttype = command.getType();\n\n\t\taggregate.toggleRow(selectedRow, type);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","export class RowSelectedReadModel {\n\n\tprivate readonly itemIds: Array<string> = new Array<string>();\n\n\tprivate readonly allSelected: boolean;\n\n\tprivate readonly allUnselected: boolean;\n\n\tconstructor(itemIds: Array<string>,\n\t\t\t\tallSelected: boolean,\n\t\t\t\tallUnselected: boolean) {\n\t\tthis.itemIds = itemIds;\n\t\tthis.allSelected = allSelected;\n\t\tthis.allUnselected = allUnselected;\n\t}\n\n\tgetAll(): Array<string> {\n\t\treturn this.itemIds;\n\t}\n\n\tisSelected(id: string): boolean {\n\t\treturn this.itemIds.some((itemId: string) => itemId === id);\n\t}\n\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllUnselected(): boolean {\n\t\treturn this.allUnselected;\n\t}\n\n\tisIndeterminate(): boolean {\n\t\treturn !(this.isAllSelected() || this.isAllUnselected());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SelectedRowChangedEvent } from '../../../domain/formation/selected-row-changed.event';\nimport { RowSelectedRepository } from './row-selected.repository';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectedReadModel } from '../row-selected.read-model';\n\n\n@Injectable()\nexport class SelectedRowChangedEventHandler implements DomainEventHandler<StructureId, SelectedRowChangedEvent> {\n\n\tconstructor(private readonly rowSelectedRepository: RowSelectedRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectedRowChangedEvent> {\n\t\treturn SelectedRowChangedEvent;\n\t}\n\n\thandle(rowChangedEvent: SelectedRowChangedEvent): void {\n\n\t\tif (rowChangedEvent.ofMessageType('SelectedRowChangedEvent')) {\n\n\t\t\tconst rowSelectedRead = new RowSelectedReadModel(\n\t\t\t\trowChangedEvent.getSelectedRows(),\n\t\t\t\trowChangedEvent.isAllSelected(),\n\t\t\t\trowChangedEvent.isAllUnselected()\n\t\t\t);\n\n\t\t\tthis.rowSelectedRepository.next(rowChangedEvent.getAggregateId(), rowSelectedRead);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSelectionModeCommand } from './set-selection-mode.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetSelectionModeCommandHandler implements CommandHandler<StructureAggregate, SetSelectionModeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSelectionModeCommand> {\n\t\treturn SetSelectionModeCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\taggregate.setSelectionMode(command.getMode());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetSelectionModeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { SelectAllRowsCommand } from './select-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SelectAllRowsCommandHandler implements CommandHandler<StructureAggregate, SelectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SelectAllRowsCommand> {\n\t\treturn SelectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\taggregate.selectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SelectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../../core/domain/structure-aggregate.repository';\nimport { UnselectAllRowsCommand } from './unselect-all-rows.command';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class UnselectAllRowsCommandHandler implements CommandHandler<StructureAggregate, UnselectAllRowsCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<UnselectAllRowsCommand> {\n\t\treturn UnselectAllRowsCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\taggregate.unselectAll();\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: UnselectAllRowsCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionModeSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(aggregateId, mode, 'SelectionModeSetEvent');\n\t}\n\n\tgetMode(): RowSelectionMode {\n\t\treturn this.mode;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from '../../../domain/formation/mode/selection-mode-set.event';\nimport { RowSelectionModeRepository } from './row-selection-mode.repository';\n\n@Injectable()\nexport class SelectionModeSetEventHandler implements DomainEventHandler<StructureId, SelectionModeSetEvent> {\n\n\tconstructor(private readonly rowSelectionModeRepository: RowSelectionModeRepository) {\n\t}\n\n\tforEvent(): DomainEventType<SelectionModeSetEvent> {\n\t\treturn SelectionModeSetEvent;\n\t}\n\n\thandle(modeSetEvent: SelectionModeSetEvent): void {\n\n\t\tif (modeSetEvent.ofMessageType('SelectionModeSetEvent')) {\n\t\t\tthis.rowSelectionModeRepository.next(modeSetEvent.getAggregateId(), modeSetEvent.getMode());\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { OriginId } from '../origin-id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\nexport enum DeleteCommandPayloadType {\n\tINDEX,\n\tITEM_ID,\n\tMANY_INDEX,\n\tMANY_ITEM_ID\n}\n\nexport type DeleteOriginItemPayload = {\n\n\tindex?: number;\n\n\titemId?: OriginId;\n\n}\n\nexport class DeleteOriginItemCommand extends StructureCommand {\n\n\tstatic byIndex(structureId: StructureId, index: number): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, index, DeleteCommandPayloadType.INDEX);\n\t}\n\n\tstatic byManyIndex(structureId: StructureId, indexes: Array<number>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, indexes, DeleteCommandPayloadType.MANY_INDEX);\n\t}\n\n\tstatic byItemId(structureId: StructureId, itemId: OriginId): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemId, DeleteCommandPayloadType.ITEM_ID);\n\t}\n\n\tstatic byManyItemId(structureId: StructureId, itemIds: Array<OriginId>): DeleteOriginItemCommand {\n\t\treturn new DeleteOriginItemCommand(structureId, itemIds, DeleteCommandPayloadType.MANY_ITEM_ID);\n\t}\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload: number | OriginId | Array<number> | Array<OriginId>,\n\t\t\t\tprivate readonly type: DeleteCommandPayloadType) {\n\t\tsuper(structureId, 'DeleteOriginItemCommand');\n\t}\n\n\tgetType(): DeleteCommandPayloadType {\n\t\treturn this.type;\n\t}\n\n\tgetPayload(): number | OriginId | Array<number> | Array<OriginId> {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\nimport { DeleteOriginItemCommand } from './delete-origin-item.command';\n\n\n@Injectable()\nexport class DeleteOriginItemCommandHandler implements CommandHandler<StructureAggregate, DeleteOriginItemCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<DeleteOriginItemCommand> {\n\t\treturn DeleteOriginItemCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\taggregate.deleteItem(command.getPayload());\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: DeleteOriginItemCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureSourceOriginArchive extends AggregateArchive<ReadonlyArray<any>> {\n\n\tstatic readonly default: ReadonlyArray<any> = [];\n\n\tconstructor() {\n\t\tsuper(StructureSourceOriginArchive.default);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructureSourceOriginArchive } from './structure.source-origin.archive';\nimport { OriginSetEvent } from '../../domain/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler implements DomainEventHandler<StructureId, OriginSetEvent> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t}\n\n\tforEvent(): DomainEventType<OriginSetEvent> {\n\t\treturn OriginSetEvent;\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event.ofMessageType('OriginSetEvent')) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.next(event.getAggregateId(), origin);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { OriginItemEntity } from '../../domain/origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructurePreparedItemsArchive extends AggregateArchive<ReadonlyArray<OriginItemEntity>> {\n\n\tstatic readonly default: ReadonlyArray<OriginItemEntity> = [];\n\n\tconstructor() {\n\t\tsuper(StructurePreparedItemsArchive.default);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedItems(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.get(structureId).getValueOrNullOrThrowError();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../domain/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsArchive } from './structure.prepared-items.archive';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler implements DomainEventHandler<StructureId, StructurePreparedEntitiesSetEvent> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructurePreparedEntitiesSetEvent> {\n\t\treturn StructurePreparedEntitiesSetEvent;\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event.ofMessageType('StructurePreparedEntitiesSetEvent')) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.next(event.getAggregateId(), preparedItems);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SourceSetLoadingCommandHandler } from './loading/source-set-loading.command-handler';\nimport { SetOriginCommandHandler } from './origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from './origin/edit/structure.edit-source-item.command-handler';\nimport { SourceDispatcher } from './source.dispatcher';\nimport { SourceManagerFactory } from './core/source.manager-factory';\nimport { SourceDomainEventPublisher } from './source.domain-event.publisher';\nimport { SetEnabledSelectionCommandHandler } from './formation/set-enabled/set-enabled-selection.command-handler';\nimport { ToggleSelectedRowCommandHandler } from './formation/toggle/toggle-selected-row.command-handler';\nimport { FormationDispatcher } from './formation/formation.dispatcher';\nimport { FormationManagerFactory } from './formation/core/formation.manager-factory';\nimport { SelectedRowChangedEventHandler } from '../api/formation/row-selected/selected-row-changed.event-handler';\nimport { SetSelectionModeCommandHandler } from './formation/mode/set-selection-mode.command-handler';\nimport { SelectAllRowsCommandHandler } from './formation/select-all/select-all-rows.command-handler';\nimport { UnselectAllRowsCommandHandler } from './formation/unselect-all/unselect-all-rows.command-handler';\nimport { SelectionModeSetEventHandler } from '../api/formation/mode/selection-mode-set.event-handler';\nimport { DeleteOriginItemCommandHandler } from './origin/delete/delete-origin-item.command-handler';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tSourceDispatcher,\n\t\tSourceManagerFactory,\n\t\tSourceDomainEventPublisher,\n\n\t\tFormationDispatcher,\n\t\tFormationManagerFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetEnabledSelectionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSelectionModeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SelectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(UnselectAllRowsCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(DeleteOriginItemCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureOriginChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectedRowChangedEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(SelectionModeSetEventHandler),\n\t\t\t...HermesModule.registerDomainEventHandler(StructurePreparedItemsEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { OriginItemEntity } from '../domain/origin/origin-item-entity';\nimport { hermesDistinctUntilChanged, hermesMap, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\n\n\n@Injectable()\nexport class SourceDomainWarehouse extends SourceWarehouse {\n\n\tconstructor(private readonly structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate readonly structurePreparedItemsRepository: StructurePreparedItemsArchive,\n\t\t\t\tprivate readonly structureSourceOriginRepository: StructureSourceOriginArchive) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetEntities(structureId: StructureId): ReadonlyArray<ItemEntity> {\n\t\treturn this.structureRepository.getStructure(structureId).getEntities();\n\t}\n\n\tonEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   hermesDistinctUntilChanged((ents1: ReadonlyArray<ItemEntity>, ents2: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((entities: ReadonlyArray<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonceEntities(structureId: StructureId): HermesObservable<ReadonlyArray<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId): HermesObservable<ReadonlyArray<OriginItemEntity>> {\n\t\treturn this.structurePreparedItemsRepository.on(structureId);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetPreparedEntities(structureId: StructureId): ReadonlyArray<OriginItemEntity> {\n\t\treturn this.structurePreparedItemsRepository.getPreparedItems(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/core/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\n\nimport { SourceDispatcher } from '../domain/source.dispatcher';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureEditSourceItemParams } from '../domain/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../domain/core/item/item.entity';\nimport { FieldWarehouse } from '../../../field/core/api/field.warehouse';\nimport { OriginId } from '../domain/origin/origin-id';\nimport { CommandDispatcher, fromRxJsObservable, hermesMap, hermesTake, toRxJsObservable } from '@generic-ui/hermes';\nimport { DeleteOriginItemCommand } from '../domain/origin/delete/delete-origin-item.command';\nimport { SourceWarehouse } from '../api/source.warehouse';\nimport { SelectedRow } from '../api/formation/selected-row';\nimport { SourceCommandInvoker } from '../api/source.command-invoker';\n\n\n@Injectable()\nexport class SourceDomainCommandInvoker extends SourceCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly fieldWarehouse: FieldWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: SourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId): void {\n\n\t\tconst itemId$ =\n\t\t\ttoRxJsObservable(\n\t\t\t\tthis.sourceReadModelService\n\t\t\t\t\t.onceEntities(structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesMap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t);\n\n\t\tconst fieldId$ = toRxJsObservable(\n\t\t\tthis.fieldWarehouse.onFields(structureId)\n\t\t);\n\n\t\tfromRxJsObservable(\n\t\t\tzip(itemId$, fieldId$)\n\t\t)\n\t\t\t.pipe(\n\t\t\t\thermesTake(1)\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tdeleteRow(row: SelectedRow, structureId: StructureId): void {\n\n\t\tif (row.getItemId() !== undefined) {\n\t\t\tthis.deleteItemById(row.getItemId(), structureId);\n\t\t} else if (row.getIndex() !== undefined) {\n\t\t\tthis.deleteItemByIndex(row.getIndex(), structureId);\n\t\t}\n\t}\n\n\tdeleteRows(rows: Array<SelectedRow>, structureId: StructureId): void {\n\n\t\tif (rows.length > 0) {\n\t\t\tif (rows[0].getItemId() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByItemIds(rows.map(r => r.getItemId()), structureId);\n\t\t\t} else if (rows[0].getIndex() !== undefined) {\n\t\t\t\tthis.deleteManyItemsByIndex(rows.map(r => r.getIndex()), structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tdeleteItemByIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byIndex(structureId, index));\n\t}\n\n\tdeleteItemById(itemId: OriginId, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byItemId(structureId, itemId));\n\t}\n\n\tdeleteManyItemsByIndex(indexes: Array<number>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyIndex(structureId, indexes));\n\t}\n\n\tdeleteManyItemsByItemIds(itemIds: Array<OriginId>, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(DeleteOriginItemCommand.byManyItemId(structureId, itemIds));\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandInvoker } from './source.command-invoker';\nimport { SourceWarehouse } from './source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceDomainModule } from '../domain/source.domain-module';\nimport { FormationEventRepository } from './formation/formation.event-repository';\nimport { FormationCommandInvoker } from './formation/formation.command-invoker';\nimport { FormationWarehouse } from './formation/formation.warehouse';\nimport { RowSelectedRepository } from './formation/row-selected/row-selected.repository';\nimport { RowSelectionModeRepository } from './formation/mode/row-selection-mode.repository';\nimport { SourceDomainWarehouse } from '../domain-read/source.domain-warehouse';\nimport { SourceDomainCommandInvoker } from '../domain/source.domain.command-invoker';\nimport { StructureSourceOriginArchive } from '../domain/origin/structure.source-origin.archive';\nimport { StructurePreparedItemsArchive } from '../domain/prepared/structure.prepared-items.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceDomainModule\n\t],\n\tproviders: [\n\t\tStructureSourceOriginArchive,\n\t\tStructurePreparedItemsArchive,\n\t\tSourceConverter,\n\n\t\t{\n\t\t\tprovide: SourceCommandInvoker,\n\t\t\tuseClass: SourceDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SourceWarehouse,\n\t\t\tuseClass: SourceDomainWarehouse\n\t\t},\n\t\tSourceEventService,\n\n\t\tRowSelectedRepository,\n\t\tFormationEventRepository,\n\n\t\tFormationCommandInvoker,\n\t\tFormationWarehouse,\n\t\tRowSelectionModeRepository\n\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { RowSelectionTypeArchive } from '../core/api/formation/type/row-selection-type.archive';\nimport { SourceApiModule } from '../core/api/source.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSourceApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tRowSelectionTypeArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() sourceApiModule: SourceApiModule) {\n\t\tsuper();\n\t\tif (sourceApiModule === null) {\n\t\t\tthrow new Error('SourceApiModule is required');\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowClass } from './schema.row-class';\n\n@Injectable()\nexport class SchemaRowClassArchive extends Archive<SchemaRowClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { SchemaRowStyle } from './schema.row-style';\n\n@Injectable()\nexport class SchemaRowStyleArchive extends Archive<SchemaRowStyle> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaDomainEvent extends DomainEvent<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\nexport class SchemaThemeSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, theme, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaAggregateEvent extends AggregateEvent<SchemaId> {\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaThemeSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaDomainEvent } from '../schema.domain-event';\n\n\nexport class RowColoringSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, rowColoring, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\n\nexport class RowColoringSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\nexport class SchemaVerticalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, verticalGrid, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaDomainEvent } from '../../schema.domain-event';\n\n\nexport class SchemaHorizontalGridSetEvent extends SchemaDomainEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, horizontalGrid, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregateEvent } from '../../schema.aggregate-event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { SchemaDomainEvent } from '../schema.domain-event';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SchemaCreatedEvent extends SchemaDomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, null, 'SchemaCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregateEvent } from '../schema.aggregate-event';\n\nexport class SchemaCreatedAggregateEvent extends SchemaAggregateEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './row-coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from './schema.aggregate';\nimport { SchemaId } from './schema.id';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract findById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\nimport { SchemaId } from '../../domain/schema.id';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.findById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandType, CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): CommandType<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from './schema.id';\n\nexport abstract class SchemaCommand extends Command<SchemaId> {\n}\n","import { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetSchemaThemeCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../schema.id';\nimport { SchemaCommand } from '../schema.command';\n\n\nexport class SetRowColoringCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n\tpublish(aggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaHorizontalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n}\n","import { SchemaId } from '../../schema.id';\nimport { SchemaCommand } from '../../schema.command';\n\n\nexport class SetSchemaVerticalGridCommand extends SchemaCommand {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\thandle(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n\tpublish(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends AggregateArchive<SchemaCssClass> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { SchemaTheme } from '../theme/schema-theme';\nimport { SchemaRowColoring } from '../row-coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from '../../api/css-classes/schema-css-class';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\n\nexport type SchemaCssClassesEventType =\n\tSchemaThemeSetEvent\n\t| RowColoringSetEvent\n\t| SchemaHorizontalGridSetEvent\n\t| SchemaVerticalGridSetEvent;\n\n@Injectable()\nexport class SchemaCssClassesEventHandler implements MultiDomainEventHandler<SchemaId, SchemaCssClassesEventType> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.next(\n\t\t\t\taggregateId,\n\t\t\t\tnew SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring)\n\t\t\t);\n\t\t}\n\t}\n\n\tforEvents(): Array<DomainEventType<SchemaCssClassesEventType>> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent\n\t\t];\n\t}\n\n\thandle(event: SchemaCssClassesEventType): void {\n\n\t\tif (event.ofMessageType('RowColoringSetEvent')) {\n\t\t\tthis.rowColoring = (event as RowColoringSetEvent).getRowColoring();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaHorizontalGridSetEvent')) {\n\t\t\tthis.horizontalGrid = (event as SchemaHorizontalGridSetEvent).getHorizontalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaVerticalGridSetEvent')) {\n\t\t\tthis.verticalGrid = (event as SchemaVerticalGridSetEvent).getVerticalGrid();\n\t\t}\n\n\t\tif (event.ofMessageType('SchemaThemeSetEvent')) {\n\t\t\tthis.schemaTheme = (event as SchemaThemeSetEvent).getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n}\n","export const schemaKey = 'SchemaAggregate';\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SchemaVerticalGridRepository extends EventDrivenRepository<SchemaId, SchemaVerticalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaVerticalGridSetEvent> {\n\t\treturn SchemaVerticalGridSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaTheme } from '../../api/theme/schema-theme';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n@Injectable()\nexport class SchemaThemeRepository extends EventDrivenRepository<SchemaId, SchemaThemeSetEvent, SchemaTheme> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaThemeSetEvent> {\n\t\treturn SchemaThemeSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaRowColoring } from '../../api/row-coloring/schema-row-coloring';\nimport { SchemaId } from '../../domain/schema.id';\nimport { RowColoringSetEvent } from '../../domain/row-coloring/row-coloring-set.event';\n\n@Injectable()\nexport class SchemaRowColoringRepository extends EventDrivenRepository<SchemaId, RowColoringSetEvent, SchemaRowColoring> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<RowColoringSetEvent> {\n\t\treturn RowColoringSetEvent;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventType, EventDrivenRepository } from '@generic-ui/hermes';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\n\n\n@Injectable()\nexport class SchemaHorizontalGridRepository extends EventDrivenRepository<SchemaId, SchemaHorizontalGridSetEvent, boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforEvent(): DomainEventType<SchemaHorizontalGridSetEvent> {\n\t\treturn SchemaHorizontalGridSetEvent;\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommandHandler } from './theme/set-schema-theme.command-handler';\nimport { SetRowColoringCommandHandler } from './row-coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from './grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from './grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from '../domain-read/css-classes/schema-css-classes.event-handler';\nimport { schemaKey } from './schema.key';\nimport { SchemaVerticalGridRepository } from '../domain-read/vertical-grid/schema.vertical-grid.repository';\nimport { SchemaThemeRepository } from '../domain-read/theme/schema.theme.repository';\nimport { SchemaRowColoringRepository } from '../domain-read/row-coloring/schema.row-coloring.repository';\nimport { SchemaHorizontalGridRepository } from '../domain-read/horizontal-grid/schema.horizontal-grid.repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaThemeRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaHorizontalGridRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaRowColoringRepository),\n\t\t\t...HermesModule.registerDomainEventHandler(SchemaVerticalGridRepository),\n\t\t\t...HermesModule.registerMultiDomainEventHandler(SchemaCssClassesEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './row-coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { SchemaDispatcher } from './schema.dispatcher';\nimport { StructureCommandInvoker } from '../../../structure/core/api/structure.command-invoker';\nimport { FabricModalThemeService, Theme } from '@generic-ui/fabric';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { StructureId } from '../../../structure/core/api/structure.id';\nimport { RowColoring } from '../api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { Injectable } from '@angular/core';\nimport { SchemaCommandInvoker } from '../api/schema.command-invoker';\n\n\n@Injectable()\nexport class SchemaDomainCommandInvoker extends SchemaCommandInvoker {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly fabricModalThemeService: FabricModalThemeService) {\n\t\tsuper();\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme,\n\t\t\t schemaId: SchemaReadModelRootId,\n\t\t\t structureId: StructureId\n\t): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\t\tthis.fabricModalThemeService.changeTheme(this.toFabricTheme(theme)); // TODO github #2162\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate toFabricTheme(schemaTheme: SchemaTheme): Theme {\n\n\t\tswitch (schemaTheme) {\n\t\t\tcase SchemaTheme.DARK: {\n\t\t\t\treturn Theme.DARK;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.FABRIC: {\n\t\t\t\treturn Theme.FABRIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.GENERIC: {\n\t\t\t\treturn Theme.GENERIC;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.LIGHT: {\n\t\t\t\treturn Theme.LIGHT;\n\t\t\t}\n\n\t\t\tcase SchemaTheme.MATERIAL: {\n\t\t\t\treturn Theme.MATERIAL;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n}\n","import { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaHorizontalGridRepository } from './horizontal-grid/schema.horizontal-grid.repository';\nimport { SchemaRowColoringRepository } from './row-coloring/schema.row-coloring.repository';\nimport { SchemaVerticalGridRepository } from './vertical-grid/schema.vertical-grid.repository';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { SchemaCssClass } from '../api/css-classes/schema-css-class';\nimport { SchemaWarehouse } from '../api/schema.warehouse';\nimport { Injectable } from '@angular/core';\nimport { HermesObservable, hermesTake } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class SchemaDomainWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository,\n\t\t\t\tprivate readonly schemaHorizontalGridRepository: SchemaHorizontalGridRepository,\n\t\t\t\tprivate readonly schemaRowColoringRepository: SchemaRowColoringRepository,\n\t\t\t\tprivate readonly schemaVerticalGridRepository: SchemaVerticalGridRepository) {\n\t\tsuper();\n\t}\n\n\tonTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonceTheme(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\t\treturn this.onTheme(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaHorizontalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonVerticalGrid(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\t\treturn this.schemaVerticalGridRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\t\treturn this.schemaRowColoringRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId): HermesObservable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { DomainEventBus, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../api/schema.read-model-root-id';\nimport { SchemaTheme } from '../api/theme/schema-theme';\nimport { SchemaThemeSetEvent } from './theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from './grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../api/row-coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring/row-coloring-set.event';\nimport { SchemaEventRepository } from '../api/schema.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SchemaDomainEventRepository extends SchemaEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId): HermesObservable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaThemeSetEvent) => {\n\t\t\t\t\t\t   return event.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId): HermesObservable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId): HermesObservable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/create/schema.aggregate-factory';\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SchemaDomainModule } from '../domain/schema.domain-module';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { SchemaCommandInvoker } from './schema.command-invoker';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SchemaEventRepository } from './schema.event-repository';\nimport { SchemaCssClassesRepository } from '../domain-read/css-classes/schema.css-classes.repository';\nimport { schemaKey } from '../domain/schema.key';\nimport { SchemaDomainCommandInvoker } from '../domain/schema.domain-command-invoker';\nimport { SchemaDomainWarehouse } from '../domain-read/schema.domain-warehouse';\nimport { SchemaDomainEventRepository } from '../domain/schema.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.commandHandlers()\n\t\t\t],\n\t\t\t[\n\t\t\t\t...SchemaDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tSchemaDomainModule\n\t],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\t{\n\t\t\tprovide: SchemaCommandInvoker,\n\t\t\tuseClass: SchemaDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaWarehouse,\n\t\t\tuseClass: SchemaDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: SchemaEventRepository,\n\t\t\tuseClass: SchemaDomainEventRepository\n\t\t},\n\n\t\tSchemaCssClassesRepository\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaApiModule extends ApiModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SchemaApiModule } from '../core/api/schema.api-module';\nimport { SchemaRowClassArchive } from '../core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../core/api/styling/schema.row-style.archive';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSchemaApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SchemaFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t\tSchemaRowClassArchive,\n\t\t\tSchemaRowStyleArchive\n\t\t];\n\t}\n\n\tconstructor(@Optional() schemaApiModule: SchemaApiModule) {\n\t\tsuper();\n\t\tif (schemaApiModule === null) {\n\t\t\tthrow new Error('SchemaApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { AggregateArchive, AggregateId, hermesFilter, HermesObservable, hermesTake } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StructureInitialValuesReadyArchive extends AggregateArchive<boolean> {\n\n\tstatic readonly default = false;\n\n\tconstructor() {\n\t\tsuper(StructureInitialValuesReadyArchive.default);\n\t}\n\n\ton(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn super.on(aggregateId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(v => v)\n\t\t\t\t\t);\n\t}\n\n\tonce(aggregateId: AggregateId): HermesObservable<boolean> {\n\t\treturn this.on(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesTake(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, EventRepository, HermesObservable } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\n\n\n@Injectable()\nexport abstract class SummariesEventRepository extends EventRepository<StructureReadModelRootId, StructureId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract onSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>>;\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class StructureSetSummariesEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SourceDomainEventPublisher } from '../../../../source/core/domain/source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: SourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\n\n\nexport class StructureSummariesChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, 'StructureSummariesChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SummariesManager {\n\n\tstatic readonly DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesManager } from '../summaries.manager';\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class SummariesEnabledArchive extends AggregateArchive<boolean> {\n\n\tconstructor() {\n\t\tsuper(SummariesManager.DEFAULT_ENABLED);\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.next(structureId, SummariesManager.DEFAULT_ENABLED);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from './summaries-enabled-archive.service';\nimport { StructureSummariesEnabledSetEvent } from '../set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler implements DomainEventHandler<StructureId, StructureSummariesEnabledSetEvent> {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureSummariesEnabledSetEvent> {\n\t\treturn StructureSummariesEnabledSetEvent;\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event.ofMessageType('StructureSummariesEnabledSetEvent')) {\n\t\t\tthis.summariesEnabledArchive.next(event.getAggregateId(), event.isEnabled());\n\t\t}\n\t}\n\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { Field } from '../../../../field/core/domain/field/field';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tconst summaries = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tconst aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\n\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../../../field/core/domain/field/data/data-type';\nimport { OriginItemEntity } from '../../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../../field/core/domain/field/field';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { StructureSetSummariesEnabledCommandHandler } from './set/structure.set-summaries-enabled.command-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './enabled/structure.summaries-enabled-set.event-handler';\nimport { summariesProviders } from './summaries.providers';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...summariesProviders\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers() {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(StructureSummariesEnabledSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class SummariesWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onTopEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onBottomEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n}\n","export class StructureSummariesPanelConfig {\n\n\tstatic readonly defaultTop = false;\n\n\tstatic readonly defaultBottom = true;\n\n\tprivate top: boolean = StructureSummariesPanelConfig.defaultTop;\n\n\tprivate bottom: boolean = StructureSummariesPanelConfig.defaultBottom;\n\n\tsetTop(top: boolean): void {\n\t\tthis.top = top;\n\t}\n\n\tsetBottom(bottom: boolean): void {\n\t\tthis.bottom = bottom;\n\t}\n\n\tisTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesConfigArchive extends AggregateArchive<StructureSummariesPanelConfig> {\n\n\tstatic readonly default = new StructureSummariesPanelConfig();\n\n\tconstructor() {\n\t\tsuper(StructureSummariesConfigArchive.default);\n\t}\n\n}\n","import { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesWarehouse } from '../api/summaries.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesMap, HermesObservable, hermesSwitchMap } from '@generic-ui/hermes';\nimport { StructureSummariesConfigArchive } from '../domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfig } from '../domain/config/structure.summaries-panel.config';\n\n@Injectable()\nexport class SummariesDomainWarehouse extends SummariesWarehouse {\n\n\tconstructor(private readonly summariesEnabledArchive: SummariesEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tonEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.summariesEnabledArchive.on(structureId);\n\t}\n\n\tonBottomEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isBottomEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\n\t}\n\n\tonTopEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.onEnabled(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesSwitchMap((enabled) => {\n\t\t\t\t\t\t   return this.structureSummariesArchive\n\t\t\t\t\t\t\t\t\t  .on(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  hermesMap((config: StructureSummariesPanelConfig) => enabled && config.isTopEnabled())\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../api/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tconst panelConfig = new StructureSummariesPanelConfig();\n\n\t\tif (config.top !== undefined && config.top !== null) {\n\t\t\tpanelConfig.setTop(config.top);\n\t\t}\n\n\t\tif (config.bottom !== undefined && config.bottom !== null) {\n\t\t\tpanelConfig.setBottom(config.bottom);\n\t\t}\n\n\t\treturn panelConfig;\n\t}\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSetSummariesEnabledCommand } from './set/structure.set-summaries-enabled.command';\nimport { Injectable } from '@angular/core';\nimport { SummariesCommandInvoker } from '../api/summaries.command-invoker';\nimport { SummariesConfig } from '../api/summaries-config';\nimport { StructureSummariesPanelConfigConverter } from './config/structure.summaries-panel.config-converter';\nimport { StructureSummariesConfigArchive } from './config/structure.summaries-config.archive';\n\n@Injectable()\nexport class SummariesDomainCommandInvoker extends SummariesCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly configConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate readonly structureSummariesConfigArchive: StructureSummariesConfigArchive) {\n\t\tsuper();\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n\tsetConfig(config: SummariesConfig, structureId: StructureId): void {\n\n\t\tconst summariesPanelConfig = this.configConverter.convert(config);\n\n\t\tthis.setSummariesEnabled(config.enabled, structureId);\n\t\tthis.structureSummariesConfigArchive.next(structureId, summariesPanelConfig);\n\t}\n\n}\n","import { DomainEvent, DomainEventBus, HermesObservable } from '@generic-ui/hermes';\nimport { StructureReadModelRootId } from '../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureSummariesChangedEvent } from '../domain/structure.summaries-changed.event';\nimport { SummariesEventRepository } from '../api/summaries.event-repository';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SummariesDomainEventRepository extends SummariesEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonSummariesChanged(structureId: StructureReadModelRootId): HermesObservable<DomainEvent<StructureId>> {\n\t\treturn this.onEvent(structureId, StructureSummariesChangedEvent);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { SummariesCommandInvoker } from './summaries.command-invoker';\nimport { SummariesEventRepository } from './summaries.event-repository';\nimport { SummariesDomainModule } from '../domain/summaries.domain-module';\nimport { SummariesEnabledArchive } from '../domain/enabled/summaries-enabled-archive.service';\nimport { SummariesWarehouse } from './summaries.warehouse';\nimport { SummariesDomainWarehouse } from '../domain-read/summaries.domain-warehouse';\nimport { SummariesDomainCommandInvoker } from '../domain/summaries.domain-command-invoker';\nimport { SummariesDomainEventRepository } from '../domain-read/summaries.domain-event-repository';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tSummariesDomainModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: SummariesCommandInvoker,\n\t\t\tuseClass: SummariesDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesEventRepository,\n\t\t\tuseClass: SummariesDomainEventRepository\n\t\t},\n\t\t{\n\t\t\tprovide: SummariesWarehouse,\n\t\t\tuseClass: SummariesDomainWarehouse\n\t\t},\n\t\tSummariesEnabledArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class SummariesApiModule extends ApiModule {\n}\n","export class SummariesTranslations {\n\n\tconstructor(readonly distinctTooltip: string,\n\t\t\t\treadonly averageTooltip: string,\n\t\t\t\treadonly minTooltip: string,\n\t\t\t\treadonly maxTooltip: string,\n\t\t\t\treadonly medTooltip: string,\n\t\t\t\treadonly countTooltip: string) {\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation, OnInit } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SummariesEventRepository } from '../../core/api/summaries.event-repository';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../core/domain/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { TranslationFacade } from '../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../l10n/core/api/translation';\nimport { SummariesTranslations } from '../structure.summaries-translations';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-summaries-panel][enabled]',\n\ttemplateUrl: './structure.summaries-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummariesPanelComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tsummariesTranslations: SummariesTranslations;\n\n\tcheckboxSelection: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureSummariesEventRepository: SummariesEventRepository,\n\t\t\t\tprivate readonly translationService: TranslationFacade,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.addClassToHost('gui-flex');\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureSummariesEventRepository.onSummariesChanged(this.structureId.toReadModelRootId()),\n\t\t\t(event: StructureSummariesChangedEvent) => {\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.sourceWarehouse.onEntitiesSize(this.structureId),\n\t\t\t(size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.translationService.onTranslation(),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.summariesTranslations = new SummariesTranslations(\n\t\t\t\t\ttranslation.summariesDistinctValuesTooltip,\n\t\t\t\t\ttranslation.summariesAverageTooltip,\n\t\t\t\t\ttranslation.summariesMinTooltip,\n\t\t\t\t\ttranslation.summariesMaxTooltip,\n\t\t\t\t\ttranslation.summariesMedTooltip,\n\t\t\t\t\ttranslation.summariesCountTooltip);\n\t\t\t}\n\t\t);\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-summaries-panel';\n\t}\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { SummariesApiModule } from '../core/api/summaries.api-module';\nimport { StructureSummariesPanelComponent } from './panel/structure.summaries-panel.component';\nimport { StructureSummariesConfigArchive } from '../core/domain/config/structure.summaries-config.archive';\nimport { StructureSummariesPanelConfigConverter } from '../core/domain/config/structure.summaries-panel.config-converter';\nimport { FabricModule } from '@generic-ui/fabric';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule,\n\t\tTranslationFeatureModule,\n\t\tSummariesApiModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesConfigArchive,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class SummariesFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [\n\t\t];\n\t}\n\n\tconstructor(@Optional() summariesApiModule: SummariesApiModule) {\n\t\tsuper();\n\t\tif (summariesApiModule === null) {\n\t\t\tthrow new Error('SummariesApiModule is required.');\n\t\t}\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../../core/api/structure.id';\nimport { CompositionId } from '../../../composition/core/api/composition.id';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelArchive } from '../core/api/panel/info/structure.info-panel.archive';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gate/structure.gateway';\nimport { StructureReadModelRoot } from '../core/api/read/structure.read-model-root';\nimport { PagingCommandInvoker } from '../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../paging/core/api/paging.event-repository';\nimport { SourceCommandInvoker } from '../../source/core/api/source.command-invoker';\nimport { SourceEventService } from '../../source/core/api/event/source-event.service';\nimport { CompositionCommandInvoker } from '../../../composition/core/api/composition.command-invoker';\nimport { CompositionEventRepository } from '../../../composition/core/api/composition.event-repository';\nimport { FormationEventRepository } from '../../source/core/api/formation/formation.event-repository';\nimport { StructureCommandInvoker } from '../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../core/api/structure.warehouse';\nimport { CompositionWarehouse } from '../../../composition/core/api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { PagingDisplayModeArchive } from '../../paging/feature/mode/paging-display-mode.archive';\nimport { RowSelectEnabledRepository } from '../../source/core/api/formation/set-enabled/row-select-enabled.repository';\nimport { SearchEventRepository } from '../../search/core/api/search.event-repository';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../../schema/core/api/schema.read-model-root-id';\nimport { SchemaCommandInvoker } from '../../../schema/core/api/schema.command-invoker';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/core/api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { PagingFeatureModule } from '../../paging/feature/paging.feature-module';\nimport { StructureTitlePanelConfigArchive } from './panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { StructureInfoPanelConfigService } from '../core/api/panel/info/structure.info-panel-config.service';\nimport { SortingFeatureModule } from '../../sorting/feature/sorting.feature-module';\nimport { SortingCommandInvoker } from '../../sorting/core/api/sorting.command-invoker';\nimport { SearchFeatureModule } from '../../search/feature/search.feature-module';\nimport { FieldFeatureModule } from '../../field/feature/field.feature-module';\nimport { SearchCommandInvoker } from '../../search/core/api/search.command-invoker';\nimport { FieldCommandInvoker } from '../../field/core/api/field.command-invoker';\nimport { CommandDispatcher, DomainEventBus, hermesTimer } from '@generic-ui/hermes';\nimport { ColumnFieldFactory } from '../../../composition/core/domain/column/field/colum-field.factory';\nimport { FilterContainerRef } from '../../filter/core/api/config/filter-container-ref';\nimport { filterContainerToken } from '../../filter/core/api/config/filter-container-token';\nimport { FormationCommandInvoker } from '../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../source/core/api/formation/type/row-selection-type.archive';\nimport { SourceFeatureModule } from '../../source/feature/source.feature-module';\nimport { TranslationFacade } from '../../../l10n/core/api/translation.facade';\nimport { TranslationFeatureModule } from '../../../l10n/feature/translation.feature-module';\nimport { SchemaRowClassArchive } from '../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaFeatureModule } from '../../../schema/feature/schema.feature-module';\nimport { StyleModifier } from '../../../common/cdk/dom/style/style-modifier';\nimport { NgChanges } from '../../../common/cdk/component/ng-changes';\nimport { StructureInitialValuesReadyArchive } from '../../core/api/structure.initial-values-ready.archive';\nimport { SummariesFeatureModule } from '../../summaries/feature/summaries.feature-module';\n\n\n/** @internal */\nexport function structureIdFactoryForGrid(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactoryForGrid(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactoryForGrid(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-grid-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactoryForGrid,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelArchive,\n\tStructureInfoPanelConfigService,\n\n\tStructureColumnMenuConfigArchive,\n\n\tPagingFeatureModule.forComponent(),\n\tSortingFeatureModule.forComponent(),\n\tFieldFeatureModule.forComponent(),\n\tSearchFeatureModule.forComponent(),\n\tSourceFeatureModule.forComponent(),\n\tSchemaFeatureModule.forComponent(),\n\tSummariesFeatureModule.forComponent(),\n\tTranslationFeatureModule.forComponent(),\n\n\tRowSelectEnabledRepository,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-header-menu.ngx.scss',\n\t\t'../../../composition/feature/style/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t},\n\t\t{\n\t\t\tprovide: filterContainerToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit, OnDestroy, FilterContainerRef {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tsourceCommandDispatcher: SourceCommandInvoker,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tsortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tsearchCommandDispatcher: SearchCommandInvoker,\n\t\t\t\tfieldCommandDispatcher: FieldCommandInvoker,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandInvoker,\n\t\t\t\tcompositionCommandDispatcher: CompositionCommandInvoker,\n\t\t\t\tcompositionEventRepository: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tstructureCommandService: StructureCommandInvoker,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tstructureInfoPanelConfigService: StructureInfoPanelConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tcolumnFieldFactory: ColumnFieldFactory,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tpagingDisplayModeArchive: PagingDisplayModeArchive,\n\t\t\t\trowSelectEnabledArchive: RowSelectEnabledRepository,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tschemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tschemaRowStyleArchive: SchemaRowStyleArchive,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\ttranslationService: TranslationFacade,\n\t\t\t\tstructureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly detectorRef: ChangeDetectorRef,\n\t\t\t\tpublic readonly injector: Injector,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tdomainEventBus: DomainEventBus,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tdetectorRef,\n\t\t\telementRef,\n\t\t\tdomainEventBus,\n\t\t\tcommandDispatcher,\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventRepository,\n\t\t\tsortingCommandDispatcher,\n\t\t\tsearchCommandDispatcher,\n\t\t\tfieldCommandDispatcher,\n\t\t\tsourceCommandDispatcher,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandDispatcher,\n\t\t\tcompositionEventRepository,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelArchive,\n\t\t\tstructureInfoPanelConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tcolumnFieldFactory,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tpagingDisplayModeArchive,\n\t\t\trowSelectEnabledArchive,\n\t\t\trowSelectionTypeArchive,\n\t\t\tschemaRowClassArchive,\n\t\t\tschemaRowStyleArchive,\n\t\t\tformationCommandDispatcher,\n\t\t\tsearchEventRepository,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository,\n\t\t\ttranslationService,\n\t\t\tstructureInitialValuesReadyArchive\n\t\t);\n\t\tthis.styleModifier = new StyleModifier(this.elementRef.nativeElement);\n\t\tstructureCommandService.create(this.structureId);\n\t\tcompositionCommandDispatcher.create(this.compositionId);\n\t\tschemaCommandDispatcher.create(this.schemaId);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureComponent>) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\tthis.structure = structureReadModelRoot;\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\n\t\t\t\tthis.detectorRef.detectChanges();\n\t\t\t}\n\t\t);\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\n\t\tthis.structureInitialValuesReadyArchive\n\t\t\t.next(this.structureId, true);\n\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\thermesTimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.hermesTakeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandDispatcher.setContainerWidth(width, this.compositionId);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getHost().setWidth(width);\n\t\t\t}\n\t\t);\n\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure';\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { CompositionWarehouse } from '../../../../../../composition/core/api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { FilterWarehouse } from '../../../../../filter/core/api/filter.warehouse';\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueValuesReadModel } from '../../../../../filter/core/api/unique/unique-values.read-model';\nimport { TranslationFacade } from '../../../../../../l10n/core/api/translation.facade';\nimport { Translation } from '../../../../../../l10n/core/api/translation';\nimport { hermesSwitchMap } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/core/api/composition.id';\nimport { CompositionCommandInvoker } from '../../../../../../composition/core/api/composition.command-invoker';\nimport { StructureColumnConfigDialogCloserService } from './structure.column-config-dialog-closer.service';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\n\n\n@Component({\n\tselector: 'div[gui-column-config]',\n\ttemplateUrl: './structure.column-config.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tuniqueValues: Array<any> = [];\n\n\thideColumnTitle: string;\n\n\tdropdownTextTranslation: string;\n\n\tprivate readonly structureColumnConfigService: StructureColumnConfigService;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly translationFacade: TranslationFacade,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\t@Inject('column') public readonly column: CellTemplateWithContext) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.structureColumnConfigService = this.injector.get(StructureColumnConfigService);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.column.getFieldId());\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive\n\t\t\t\t.on()\n\t\t\t\t.pipe(\n\t\t\t\t\thermesSwitchMap((config: StructureColumnMenuConfig) => {\n\t\t\t\t\t\tthis.config = config;\n\t\t\t\t\t\treturn this.translationFacade.onTranslation();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(translation: Translation) => {\n\t\t\t\tthis.setTabTitles(translation);\n\t\t\t\tthis.dropdownTextTranslation = translation.headerMenuMainTabColumnSort;\n\t\t\t}\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\thideColumn(): void {\n\t\tthis.compositionCommandInvoker.disableColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.compositionCommandInvoker.moveLeft(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.compositionCommandInvoker.moveRight(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\thighlightColumn(): void {\n\t\tthis.compositionCommandInvoker.highlightColumn(this.column.getColumnDefinitionId(), this.compositionId);\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tprivate setTabTitles(translation: Translation): void {\n\t\tthis.config.setMainMenu(translation.headerMenuMainTab);\n\t\tthis.config.setFilterMenu(translation.headerMenuFilterTab);\n\t\tthis.config.setColumnsMenu(translation.headerMenuColumnsTab);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-column-config';\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, FabricPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../../schema/core/api/schema.warehouse';\nimport { Reactive } from '@generic-ui/hermes';\nimport { SchemaReadModelRootId } from '../../../../../schema/core/api/schema.read-model-root-id';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaWarehouse: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\t\tthis.close();\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaWarehouse\n\t\t\t.onceTheme(this.schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: FabricPlacement.BOTTOM,\n\t\t\t\t\toffset: -34,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme),\n\t\t\t\t\tcustomClass: 'gui-inline-dialog-header-menu'\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-columns][columns]',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-columns';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-filters][columns]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell gui-flex gui-justify-between\n\\t gui-overflow-hidden gui-relative gui-py-0 gui-px-6 gui-box-border\n\\t gui-leading-4 gui-whitespace-nowrap gui-overflow-ellipsis\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent extends PureComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly formBuilder: FormBuilder,\n\t\t\t\tprivate readonly cd: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\t// this.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn '';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable, Warehouse } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport abstract class VerticalFormationWarehouse implements Warehouse {\n\n\tprotected constructor() {\n\t}\n\n\tabstract onVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean>;\n\n\tabstract onRowHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onContainerHeight(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onTopMargin(structureId: StructureId): HermesObservable<number>;\n\n\tabstract onScrollBarPosition(structureId: StructureId): HermesObservable<number>;\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './column/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { Group } from '../../../../composition/core/api/group/group';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\nimport { GroupCollection } from '../../../../composition/core/api/group/group.collection';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\n\n\n@Component({\n\tselector: 'div[gui-structure-header]',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tcheckboxSelection: boolean;\n\n\tgroups: Array<Group>;\n\n\tshowGroups: boolean = false;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.styleModifier = new StyleModifier(elementRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHeaderColumns(this.compositionId),\n\t\t\t(columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.containerRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onFilteringEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onGroups(this.compositionId),\n\t\t\t(collection: GroupCollection) => {\n\t\t\t\tthis.showGroups = collection.isVisible();\n\t\t\t\tthis.groups = collection.getGroups();\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.styleModifier.getElement(this.filtersRef.nativeElement).setHeight(headerHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header';\n\t}\n\n}\n","import { HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new HermesReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): HermesObservable<T> {\n\t\treturn this.subject$.toObservable();\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { FilterCommandInvoker } from '../../../../filter/core/api/filter.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly structureId: StructureId) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\t// this.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-filter';\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureDomainEvent } from '../structure.domain-event';\n\nexport class StructureCreatedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureCreatedEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class VerticalScrollEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../domain/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Paging } from '../../../../paging/core/api/read/paging';\nimport { Source } from '../../../../source/core/api/read/source';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationReadModel } from '../../../../vertical-formation/core/api/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly source: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(source: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.source = source;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetSourceItem(): any {\n\t\treturn this.source;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn false;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingConverter } from '../../../../paging/core/api/read/paging.converter';\nimport { SourceConverter } from '../../../../source/core/api/source.converter';\nimport { VerticalFormationConverter } from '../../../../vertical-formation/core/api/vertical-formation.converter';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst pagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../../grid/core/api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../../grid/core/api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class RowHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'RowHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class StructureHeightSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'StructureHeightSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'ScrollPositionSetEvent');\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends StructureDomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, null, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n\tDomainEvent,\n\tDomainEventBus,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesMap,\n\tHermesObservable,\n\tHermesReplaySubject,\n\tReactive\n} from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../core/domain/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../core/infrastructure/in-memory/api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../domain/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../../../grid/core/api/read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/core/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../domain/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../domain/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { SearchPhraseSetDomainEvent } from '../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { PageChangedEvent } from '../../../paging/core/domain/page/page-changed.event';\nimport { PagingSetEvent } from '../../../paging/core/domain/set/paging-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new HermesReplaySubject<Map<string, VerticalFormationReadModel>>(1);\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent as any,\n\t\t\t\tVerticalScrollEnabledSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent as any,\n\t\t\t\tRowHeightSetEvent as any,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent as any,\n\t\t\t\tScrollPositionSetEvent as any,\n\t\t\t\tSearchPhraseSetDomainEvent as any,\n\t\t\t\tPageChangedEvent as any,\n\t\t\t\tPagingSetEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getRowHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getViewPortHeight()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((v: VerticalFormationReadModel) => v.getTopMargin()),\n\t\t\t\t\t   hermesDistinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): HermesObservable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { FormationCommandInvoker } from '../../../source/core/api/formation/formation.command-invoker';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationRepository } from '../../../vertical-formation/core/api/vertical-formation.repository';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { RowSelectionTypeArchive } from '../../../source/core/api/formation/type/row-selection-type.archive';\nimport { RowSelectionType } from '../../../source/core/api/row-selection';\nimport { RowSelectToggleType } from '../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SchemaRowClassArchive } from '../../../../schema/core/api/styling/schema.row-class.archive';\nimport { SchemaRowStyleArchive } from '../../../../schema/core/api/styling/schema.row-style.archive';\nimport { SchemaRowClass } from '../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowStyle } from '../../../../schema/core/api/styling/schema.row-style';\nimport { fromRxJsObservable, toRxJsObservable } from '@generic-ui/hermes';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-content]',\n\ttemplateUrl: './structure-content.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowDetailOpened = 4;\n\n\tcheckboxSelection: boolean = false;\n\n\tschemaRowClass: SchemaRowClass;\n\n\tschemaRowStyle: SchemaRowStyle;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: FormationCommandInvoker,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly rowSelectionTypeArchive: RowSelectionTypeArchive,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly schemaRowClassArchive: SchemaRowClassArchive,\n\t\t\t\tprivate readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.rowSelectionTypeArchive.on(),\n\t\t\t(type: RowSelectionType) => {\n\t\t\t\tthis.checkboxSelection = type === RowSelectionType.CHECKBOX;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureEditModeArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureCellEditArchive.on(),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowClassArchive.on(),\n\t\t\t(schemaRowClass: SchemaRowClass) => {\n\t\t\t\tthis.schemaRowClass = schemaRowClass;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.schemaRowStyleArchive.on(),\n\t\t\t(schemaRowStyle: SchemaRowStyle) => {\n\t\t\t\tthis.schemaRowStyle = schemaRowStyle;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureVerticalFormationWarehouse.onRowHeight(this.structureId),\n\t\t\t(rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\tcombineLatest(\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onPhrase(this.structureId)),\n\t\t\t\t\ttoRxJsObservable(this.searchWarehouse.onHighlight(this.structureId))\n\t\t\t\t)\n\t\t\t),\n\t\t\t(args: Array<any>) => {\n\n\t\t\t\tconst searchPhrase = args[0],\n\t\t\t\t\thighlighting = args[1];\n\n\t\t\t\tthis.highlighting = highlighting;\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\n\t\t\t\tif (!this.highlighting) {\n\t\t\t\t\tthis.searchPhrase = '';\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tconst height = index * this.rowHeight;\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (!this.checkboxSelection) {\n\t\t\tthis.formationCommandService.toggleSelectedRow(entity.getId(), RowSelectToggleType.NONE, this.structureId);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-content';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { RowSelectToggleType } from '../../../../source/core/domain/formation/core/row-select-toggle-type';\nimport { FormationWarehouse } from '../../../../source/core/api/formation/formation.warehouse';\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { RowSelectedReadModel } from '../../../../source/core/api/formation/row-selected.read-model';\nimport { GuiRowClass, GuiRowStyle } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { StyleModifier } from '../../../../../common/cdk/dom/style/style-modifier';\nimport { ClassModifier } from '../../../../../common/cdk/dom/class/class-modifier';\nimport { CssClassModifier } from '../../../../common/css-class/css-class.modifier';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-structure-row]',\n\ttemplateUrl: './structure-row.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent extends SmartComponent implements OnChanges, OnInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tselectedItem: boolean = false;\n\n\tprivate row: RowSelectedReadModel;\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tprivate readonly classModifier: ClassModifier;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly cssClassModifier: CssClassModifier) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t\tthis.classModifier = new ClassModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowComponent>) {\n\n\t\tif (changes.entity !== undefined && changes.entity.currentValue !== undefined) {\n\t\t\tthis.checkSelectedItem();\n\t\t\tthis.updateRowClass(changes.entity.previousValue);\n\t\t\tthis.updateRowStyle(changes.entity.previousValue);\n\t\t}\n\n\t\tif (changes.rowClass !== undefined && changes.rowClass.currentValue !== undefined) {\n\t\t\tthis.updateRowClass();\n\t\t}\n\n\t\tif (changes.rowStyle !== undefined && changes.rowStyle.currentValue !== undefined) {\n\t\t\tthis.updateRowStyle();\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(row: RowSelectedReadModel) => {\n\t\t\t\tthis.row = row;\n\t\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\t\tthis.checkSelectedItem();\n\n\t\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\t\tif (prevValue) {\n\t\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.updateRowClass();\n\t\tthis.updateRowStyle();\n\t}\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n\tselectRow(): void {\n\t\tevent.stopPropagation();\n\t\tthis.formationCommandDispatcher.toggleSelectedRow(this.entity.getId(), RowSelectToggleType.ADD, this.structureId);\n\t}\n\n\tcheckSelectedItem(): void {\n\t\tif (this.row) {\n\n\t\t\tconst prevValue = this.selectedItem;\n\n\t\t\tthis.selectedItem = this.row.isSelected(this.entity.getId());\n\n\t\t\tif (prevValue !== this.selectedItem) {\n\n\t\t\t\tif (prevValue) {\n\t\t\t\t\tthis.cssClassModifier.unselect(this.elRef.nativeElement);\n\t\t\t\t} else {\n\t\t\t\t\tthis.cssClassModifier.select(this.elRef.nativeElement);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate calculateRowStyle(entity: ItemEntity): string {\n\n\t\tif (!this.rowStyle) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.style === 'string') {\n\t\t\treturn this.rowStyle.style || '';\n\t\t}\n\n\t\tif (typeof this.rowStyle.styleFunction === 'function') {\n\t\t\treturn this.rowStyle.styleFunction(entity.getSourceItem(), entity.getPosition());\n\t\t}\n\t}\n\n\tprivate updateRowStyle(prevEntity?: ItemEntity) {\n\n\t\tif (prevEntity) {\n\t\t\tconst rowStylesToRemove = this.calculateRowStyle(prevEntity);\n\n\t\t\tthis.removeRowStyles(rowStylesToRemove);\n\t\t}\n\n\t\tconst rowStylesToAdd = this.calculateRowStyle(this.entity);\n\n\t\tthis.renderRowStyles(rowStylesToAdd);\n\t}\n\n\tprivate removeRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().removeStyleByName(separatedStyles[0].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderRowStyles(rowStyle: string): void {\n\n\t\tif (!rowStyle) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styles = rowStyle.split(';');\n\n\t\tfor (let i = 0; i < styles.length; i += 1) {\n\n\t\t\tconst separatedStyles = styles[i].split(':');\n\n\t\t\tif (separatedStyles[0] && separatedStyles[1]) {\n\t\t\t\tthis.styleModifier.getHost().setStyleByName(separatedStyles[0].trim(), separatedStyles[1].trim());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateRowClass(prevEntity?: ItemEntity): void {\n\n\t\tif (prevEntity) {\n\t\t\tconst toRemoveClass = this.calculateRowClass(prevEntity);\n\n\t\t\tif (toRemoveClass) {\n\t\t\t\tthis.classModifier.getHost().remove(toRemoveClass);\n\t\t\t}\n\t\t}\n\n\t\tconst toAddClass = this.calculateRowClass(this.entity);\n\n\t\tif (toAddClass) {\n\t\t\tthis.classModifier.getHost().add(toAddClass);\n\t\t}\n\t}\n\n\tprivate calculateRowClass(entity: ItemEntity): string {\n\n\t\tif (!this.rowClass) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet clazz: string;\n\n\t\tif (typeof this.rowClass.class === 'string') {\n\t\t\tclazz = this.rowClass.class || '';\n\t\t}\n\n\t\tif (typeof this.rowClass.classFunction === 'function') {\n\t\t\tif (entity) {\n\t\t\t\tclazz = this.rowClass.classFunction(entity.getSourceItem(), entity.getPosition()) || '';\n\t\t\t}\n\t\t}\n\n\t\treturn clazz;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-row';\n\t}\n\n}\n","export enum CellValueType {\n\tTEXT,\n\tHTML\n}\n\nexport class CellValue {\n\n\tconstructor(public value: any,\n\t\t\t\tpublic readonly type: CellValueType) {\n\t}\n\n\tstatic text(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.TEXT);\n\t}\n\n\tstatic HTML(value: any): CellValue {\n\t\treturn new CellValue(value, CellValueType.HTML);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/source/core/domain/core/item/item.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { CellValue } from './cell-value';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tpublic template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (value: any, item: any) => any,\n\t\t\t\tpublic formatterFun: (value: any, item: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst cellValue = this.findValue(entity, searchPhrase);\n\n\t\tcellValue.value = this.templateFun(cellValue.value, entity.getSourceItem());\n\n\t\tif (this.formatterFun) {\n\t\t\tcellValue.value = this.formatterFun(cellValue.value, entity.getSourceItem());\n\t\t}\n\n\t\treturn cellValue;\n\t}\n\n\tgetClasses(): string {\n\t\treturn 'gui-cell-highlighted';\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): CellValue {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity);\n\t\t\tconst lowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tconst positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn CellValue.HTML(txt);\n\t\t} else {\n\t\t\treturn CellValue.text(value);\n\t\t}\n\t}\n\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n}\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { ChangedValueEmitter } from '../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../../source/core/domain/core/item/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\nimport { hermesTimer } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionWarehouse } from '../../../../../composition/core/api/composition.warehouse';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { ColumnId } from '../../../../../composition/core/api/column/column.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-cell][entity][cell]',\n\ttemplateUrl: './structure.cell.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements AfterViewInit {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tisHighlighted: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionWarehouse.onHighlightedColumn(new ColumnId(this.cell.columnDefinitionId.toString()), this.compositionId),\n\t\t\t(value: boolean) => {\n\t\t\t\tthis.isHighlighted = value;\n\t\t\t}\n\t\t)\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.cellEditCloseAllService.onCloseAll(),\n\t\t\t() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t);\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\thermesTimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: this.elementRef\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell';\n\t}\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { fromRxJsObservable, hermesEmpty, HermesObservable } from '@generic-ui/hermes';\nimport { Observable, Observer } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\ndeclare const ResizeObserver: any;\n\nexport type ObservedSize = {\n\tbottom: number;\n\theight: number;\n\tleft: number;\n\tright: number;\n\ttop: number;\n\twidth: number;\n\tx: number;\n\ty: number;\n}\n\n@Injectable()\nexport class ResizeDetector {\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t}\n\n\ton(element: HTMLElement): HermesObservable<ObservedSize> {\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\n\t\t\treturn fromRxJsObservable(\n\t\t\t\t(\n\t\t\t\t\tnew Observable((observer: Observer<any>) => {\n\n\t\t\t\t\t\tconst resizeObserver = new ResizeObserver((entries: any) => {\n\n\t\t\t\t\t\t\tif (entries && entries.length > 0) {\n\t\t\t\t\t\t\t\tobserver.next(entries[0].contentRect);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tresizeObserver.observe(element);\n\n\t\t\t\t\t\treturn () => resizeObserver.disconnect();\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tthrottleTime(25)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\t}\n\n\t\treturn hermesEmpty();\n\t}\n\n\tdestroy(element: HTMLElement) {\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { CellTemplateWithAccessor } from '../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { SourceWarehouse } from '../../../source/core/api/source.warehouse';\nimport { CompositionCommandInvoker } from '../../../../composition/core/api/composition.command-invoker';\nimport { CompositionWarehouse } from '../../../../composition/core/api/composition.warehouse';\nimport { FormationWarehouse } from '../../../source/core/api/formation/formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { ItemEntity } from '../../../source/core/domain/core/item/item.entity';\nimport { VerticalFormationWarehouse } from '../../../vertical-formation/core/api/vertical-formation.warehouse';\nimport { StyleModifier } from '../../../../common/cdk/dom/style/style-modifier';\nimport {\n\tfromRxJsObservable,\n\thermesDistinctUntilChanged,\n\thermesFilter,\n\thermesFromEvent,\n\thermesMap,\n\tHermesSubject,\n\thermesTakeUntil,\n\ttoRxJsObservable\n} from '@generic-ui/hermes';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\nimport { ObservedSize, ResizeDetector } from '../../../../common/cdk/resize-detector/resize.detector';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-container]',\n\ttemplateUrl: './structure-container.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new HermesSubject<void>();\n\n\tprivate readonly styleModifier: StyleModifier;\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elRef: ElementRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly verticalFormationWarehouse: VerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceWarehouse: SourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandInvoker: CompositionCommandInvoker,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\tprivate readonly structureInitialValuesReadyArchive: StructureInitialValuesReadyArchive,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper(changeDetectorRef, elRef);\n\t\tthis.styleModifier = new StyleModifier(this.elRef.nativeElement);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onContainerHeight(this.structureId),\n\t\t\t(containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tfromRxJsObservable(\n\t\t\t\ttoRxJsObservable(this.structureInitialValuesReadyArchive.once(this.structureId))\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tflatMap(() => {\n\t\t\t\t\t\t\treturn combineLatest(\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.sourceWarehouse.onEntities(this.structureId)),\n\t\t\t\t\t\t\t\ttoRxJsObservable(this.compositionWarehouse.onTemplateColumns(this.compositionId))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t),\n\t\t\t(arr: Array<any>) => {\n\n\t\t\t\tthis.source = arr[0] as Array<ItemEntity>;\n\t\t\t\tthis.columns = arr[1] as Array<CellTemplateWithAccessor>;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onResizeWidth(this.compositionId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t}\n\n\tngAfterViewInit() {\n\t\tsuper.ngAfterViewInit();\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\n\t\t\tthis.hermesSubscribeWithoutRender(\n\t\t\t\tthis.resizeDetector\n\t\t\t\t\t.on(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesFilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\t\thermesMap((size: ObservedSize) => size.width),\n\t\t\t\t\t\thermesDistinctUntilChanged()\n\t\t\t\t\t),\n\t\t\t\t(width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.compositionWarehouse.onContainerWidth(this.compositionId),\n\t\t\t(width: number) => {\n\t\t\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setWidth(width);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onVerticalScrollEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.structureWarehouse\n\t\t\t\t.on(this.structureId)\n\t\t\t\t.pipe(\n\t\t\t\t\thermesFilter((str: StructureReadModelRoot) => {\n\t\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t\t})\n\t\t\t\t),\n\t\t\t(structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribeWithoutRender(\n\t\t\tthis.verticalFormationWarehouse.onScrollBarPosition(this.structureId),\n\t\t\t(scrollPosition: number) => {\n\n\t\t\t\tthis.elRef.nativeElement.scrollTop = scrollPosition;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.styleModifier.getHost().setHeight(height);\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setPaddingTop(topMargin);\n\t\tthis.styleModifier.getElement(this.sourceCollectionRef.nativeElement).setHeight(sourceHeight);\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandInvoker.setContainerWidth(width, this.compositionId);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\thermesFromEvent(this.elRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\thermesTakeUntil(this.scrollObservation$),\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop, this.structureId);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-container';\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'div[gui-structure-quick-filters]',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { StructureReadModelRoot } from '../../core/api/read/structure.read-model-root';\nimport { Paging } from '../../../paging/core/api/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { StructureWarehouse } from '../../core/api/structure.warehouse';\nimport { PagingWarehouse } from '../../../paging/core/api/paging.warehouse';\nimport { StructureInfoPanelArchive } from '../../core/api/panel/info/structure.info-panel.archive';\nimport { FilterWarehouse } from '../../../filter/core/api/filter.warehouse';\nimport { SearchWarehouse } from '../../../search/core/api/search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../core/api/structure-tokens';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\n\nimport { StructureInfoPanelConfig } from '../../core/api/panel/info/structure.info-panel.config';\nimport { StreamCloser } from '../../../../common/cdk/reactive/stream-closer';\nimport { StructureBannerPanelConfig } from '../panel/banner-panels/structure-banner-panel.config';\nimport { SummariesWarehouse } from '../../../summaries/core/api/summaries.warehouse';\n\n\n@Component({\n\tselector: 'div[gui-structure-blueprint]',\n\ttemplateUrl: './structure.blueprint.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent implements OnInit {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\titems: Array<any> = [];\n\n\tprivate pagingReadModel: Paging;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelArchive: StructureInfoPanelArchive,\n\t\t\t\tprivate readonly pagingWarehouse: PagingWarehouse,\n\t\t\t\tprivate readonly summariesWarehouse: SummariesWarehouse,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly searchWarehouse: SearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper(changeDetectorRef, elementRef);\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderTopEnabledArchive.on(),\n\t\t\t(topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureHeaderBottomEnabledArchive.on(),\n\t\t\t(bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureWarehouse.on(this.structureId),\n\t\t\t(structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.items = structure.getEntities();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.pagingWarehouse.onPaging(this.structureId),\n\t\t\t(paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.searchWarehouse.onSearchEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onQuickFiltersEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onBottomEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.bottomSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.summariesWarehouse.onTopEnabled(this.structureId),\n\t\t\t(enabled: boolean) => {\n\t\t\t\tthis.topSummariesPanelEnabled = enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureInfoPanelArchive.on(),\n\t\t\t(infoPanel: StructureInfoPanelConfig) => {\n\t\t\t\tthis.infoPanelEnabled = infoPanel.isEnabled();\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureTitlePanelConfigArchive.on(),\n\t\t\t(titlePanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureFooterPanelConfigArchive.on(),\n\t\t\t(footerPanel: StructureBannerPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-blueprint';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../api/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\nexport class SelectionEnabledSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, enabled, 'SelectionEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { FieldId } from '../../../../../field/core/domain/field/field.id';\nimport { FilterTypeId } from '../../type/filter-type.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class FilterAddedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly filterTypeId: FilterTypeId,\n\t\t\t\tprivate readonly value: any) {\n\t\tsuper(aggregateId, { fieldId, filterTypeId, value }, 'FilterAddedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterSelectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterSelectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class UniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'UniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../../core/domain/structure.domain-event';\n\n\nexport class AllUniqueFilterUnselectedEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, null, 'AllUniqueFilterUnselectedEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../../grid/core/api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../../grid/core/api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../../source/core/domain/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../../paging/core/domain/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../paging/core/domain/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../paging/core/domain/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../paging/core/domain/change-pagesize/pagesize-changed.event';\nimport { SelectionEnabledSetEvent } from '../../../../source/core/domain/formation/set-enabled/selection-enabled-set.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../vertical-formation/core/domain/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../vertical-formation/core/domain/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../sorting/core/domain/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../source/core/domain/origin/set-origin/origin-set.event';\nimport { FilterToggledEvent } from '../../../../filter/core/domain/toggle/filter-toggled.event';\nimport { SearchPhraseSetDomainEvent } from '../../../../search/core/domain/phrase/set-phrase/search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../sorting/core/domain/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../vertical-formation/core/domain/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../../vertical-formation/core/domain/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../../vertical-formation/core/domain/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../api/structure.id';\nimport { FilterAddedEvent } from '../../../../filter/core/domain/core/add/filter-added.event';\nimport { ActiveFiltersSetEvent } from '../../../../filter/core/domain/core/active-filters-set.event';\nimport { UniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select/unique-filter-selected.event';\nimport { AllUniqueFilterSelectedEvent } from '../../../../filter/core/domain/unique/select-all/all-unique-filter-selected.event';\nimport { UniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect/unique-filter-unselected.event';\nimport { AllUniqueFilterUnselectedEvent } from '../../../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly hermesStructure$ = new HermesReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tgetStructure(structureId: StructureId): StructureReadModelRoot {\n\t\treturn this.structureIdToStructure.get(structureId.getId());\n\t}\n\n\ton(structureId: StructureId): HermesObservable<StructureReadModelRoot> {\n\n\t\treturn this.hermesStructure$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\t\t\t\t\t\t   return structureIdToStructure.get(structureId.getId());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tSelectionEnabledSetEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tFilterToggledEvent,\n\t\t\tSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\tFilterAddedEvent,\n\t\t\tActiveFiltersSetEvent,\n\t\t\tUniqueFilterSelectedEvent,\n\t\t\tAllUniqueFilterSelectedEvent,\n\t\t\tUniqueFilterUnselectedEvent,\n\t\t\tAllUniqueFilterUnselectedEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.hermesStructure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../../grid/core/api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureDomainEvent } from '../../../../core/domain/structure.domain-event';\n\nexport class ScrollBarPositionSetEvent extends StructureDomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(aggregateId, position, 'ScrollBarPositionSetEvent');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { ScrollBarPositionSetEvent } from './scroll-bar-position-set.event';\n\n\nexport class ScrollBarPositionSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(schemaId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(schemaId, 'ScrollBarPositionSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ScrollBarPositionSetEvent(this.getAggregateId(), this.position);\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\nimport { StructureAggregateEvent } from '../../../core/domain/structure.aggregate-event';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { ScrollBarPositionSetAggregateEvent } from './scroll-bar/scroll-bar-position-set.aggregate-event';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tstatic readonly ROW_HEIGHT = 42;\n\n\tstatic readonly HIDDEN_ITEMS_TOP = 5;\n\n\tstatic readonly HIDDEN_ITEMS_BOTTOM = 2;\n\n\n\tprivate rowHeight: number = VerticalFormation.ROW_HEIGHT;\n\n\tprivate hiddenItemsTop: number = VerticalFormation.HIDDEN_ITEMS_TOP;\n\n\tprivate hiddenItemsBottom: number = VerticalFormation.HIDDEN_ITEMS_BOTTOM;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tscrollToIndex(index: number): StructureAggregateEvent {\n\n\t\tif (index >= this.sourceSize) {\n\t\t\tindex = this.sourceSize;\n\t\t}\n\n\t\tif (index < -1) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst position = index * this.rowHeight;\n\n\t\treturn new ScrollBarPositionSetAggregateEvent(this.structureId, position);\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(structureId: StructureId,\n\t\t   enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tstructureId,\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { Field } from '../field/field';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { FieldConfig } from '../../api/field.config';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\n\nexport class FieldsInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldConfigs: Array<FieldConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.fieldConfigs,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetFieldConfigs(): Array<FieldConfig> {\n\t\treturn this.fieldConfigs;\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../api/structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregateEvent } from '../structure.aggregate-event';\n\n\nexport class StructureCreatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterTypeReadModel } from '../../../api/type/filter-type.read-model';\nimport { FilterTypesInitedEvent } from './filter-types-inited.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterTypesInitedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterTypes: Map<string, Array<FilterTypeReadModel>>) {\n\t\tsuper(structureId, 'FilterTypesInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\treturn new FilterTypesInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.filterTypes\n\t\t);\n\t}\n\n\tgetFilterTypes(): Map<string, Array<FilterTypeReadModel>> {\n\t\treturn this.filterTypes;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllFiltersRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\t[]\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FilterAddedEvent } from './filter-added.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterAddedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterAddedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { ActiveFiltersSetEvent } from '../active-filters-set.event';\nimport { ActiveFilterReadModel } from '../../../api/active/active-filter.read-model';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class FilterRemovedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly activeFilters: ReadonlyArray<ActiveFilterReadModel>) {\n\t\tsuper(aggregateId, 'FilterRemovedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new ActiveFiltersSetEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.activeFilters\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterCalculatedEvent } from './unique-filter-calculated.event';\nimport { UniqueValue } from '../unique-value';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterCalculatedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly map: Map<string, Array<UniqueValue>>) {\n\t\tsuper(aggregateId, 'UniqueFilterCalculatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterCalculatedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tthis.map\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterSelectedEvent } from './unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { UniqueFilterUnselectedEvent } from './unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class UniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'UniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new UniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterUnselectedEvent } from './all-unique-filter-unselected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterUnselectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterUnselectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterUnselectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { AllUniqueFilterSelectedEvent } from './all-unique-filter-selected.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\n\nexport class AllUniqueFilterSelectedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'AllUniqueFilterSelectedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new AllUniqueFilterSelectedEvent(\n\t\t\tthis.getAggregateId()\n\t\t);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectedRowChangedEvent } from './selected-row-changed.event';\nimport { StructureAggregateEvent } from '../../../../core/domain/structure.aggregate-event';\n\nexport class SelectedRowChangedAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRows: Array<string>,\n\t\t\t\tprivate readonly allSelected: boolean,\n\t\t\t\tprivate readonly allUnselected: boolean) {\n\t\tsuper(structureId, 'SelectedRowChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectedRowChangedEvent(this.getAggregateId(), this.selectedRows, this.allSelected, this.allUnselected);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionEnabledSetEvent } from './selection-enabled-set.event';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionEnabledSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SelectionEnabledSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionEnabledSetEvent(this.getAggregateId(), this.enabled);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { SelectionModeSetEvent } from './selection-mode-set.event';\nimport { RowSelectionMode } from '../../../api/row-selection';\nimport { StructureAggregateEvent } from '../../../../../core/domain/structure.aggregate-event';\n\nexport class SelectionModeSetAggregateEvent extends StructureAggregateEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly mode: RowSelectionMode) {\n\t\tsuper(structureId, 'SelectionModeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new SelectionModeSetEvent(this.getAggregateId(), this.mode);\n\t}\n}\n","import { AggregateEvent, AggregateEventType, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../../paging/core/domain/paging.manager';\nimport { SourceManager } from '../../source/core/domain/core/source.manager';\nimport { VerticalFormation } from '../../vertical-formation/core/domain/vertical-formation';\nimport { SummariesManager } from '../../summaries/core/domain/summaries.manager';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { FilterManager } from '../../filter/core/domain/filter.manager';\nimport { FieldCollection } from '../../field/core/domain/field-collection';\nimport { FormationManager } from '../../source/core/domain/formation/core/formation-manager';\nimport { StructureId } from '../api/structure.id';\nimport { StructureEditSourceItemParams } from '../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/core/api/paging-config';\nimport { OriginItemEntity } from '../../source/core/domain/origin/origin-item-entity';\nimport { SortingConfig } from '../../sorting/core/api/sorting-config';\nimport { FieldId } from '../../field/core/domain/field/field.id';\nimport { StructureSorter } from '../../sorting/core/domain/structure.sorter';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SearchConfig } from '../../search/core/api/search-config';\nimport { SearchManager } from '../../search/core/domain/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/core/domain/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/core/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from '../../field/core/domain/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/core/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\nimport { FieldConfig } from '../../field/core/api/field.config';\nimport { Override } from '../../../common/cdk/decorators';\nimport { FilterTypesInitedAggregateEvent } from '../../filter/core/domain/type/init/filter-types-inited.aggregate-event';\nimport { AllFiltersRemovedAggregateEvent } from '../../filter/core/domain/core/remove-all/all-filters-removed.aggregate-event';\nimport { FilterTypeId } from '../../filter/core/domain/type/filter-type.id';\nimport { FilterAddedAggregateEvent } from '../../filter/core/domain/core/add/filter-added.aggregate-event';\nimport { FilterId } from '../../filter/core/api/filter.id';\nimport { FilterRemovedAggregateEvent } from '../../filter/core/domain/core/remove/filter-removed.aggregate-event';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\nimport { UniqueFilterCalculatedAggregateEvent } from '../../filter/core/domain/unique/calculate/unique-filter-calculated.aggregate-event';\nimport { UniqueValueId } from '../../filter/core/domain/unique/unique-value-id';\nimport { UniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select/unique-filter-selected.aggregate-event';\nimport { UniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect/unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterUnselectedAggregateEvent } from '../../filter/core/domain/unique/unselect-all/all-unique-filter-unselected.aggregate-event';\nimport { AllUniqueFilterSelectedAggregateEvent } from '../../filter/core/domain/unique/select-all/all-unique-filter-selected.aggregate-event';\nimport { SelectedRowChangedAggregateEvent } from '../../source/core/domain/formation/selected-row-changed.aggregate-event';\nimport { RowSelectToggleType } from '../../source/core/domain/formation/core/row-select-toggle-type';\nimport { SelectionEnabledSetAggregateEvent } from '../../source/core/domain/formation/set-enabled/selection-enabled-set.aggregate-event';\nimport { RowSelectionMode } from '../../source/core/api/row-selection';\nimport { SelectionModeSetAggregateEvent } from '../../source/core/domain/formation/mode/selection-mode-set.aggregate-event';\nimport { OriginId } from '../../source/core/domain/origin/origin-id';\nimport { structureKey } from '../api/structre.key';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate readonly sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate readonly verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tprivate readonly uniqueFilterManager: UniqueFilterManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterManager: FilterManager,\n\t\t\t\tuniqueFilterManager: UniqueFilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, structureKey);\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterManager;\n\t\tthis.uniqueFilterManager = uniqueFilterManager;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\t@Override\n\tclearEvents(): void {\n\t\tsuper.clearEvents();\n\t\tthis.pagingManager.clearEvents();\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tdeleteAllSelected(): void {\n\n\t}\n\n\tdeleteItem(payload: number | OriginId | Array<number> | Array<OriginId>): void {\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.deleteOriginItem(payload, this.getId())\n\t\t);\n\t\tthis.generateSelectedRowChangedEvent();\n\t\tthis.calculateSource();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\t// TODO\n\t\t// this.calculateUniqueValues();\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tscrollToIndex(index: number): void {\n\t\tthis.addEvent(\n\t\t\tthis.verticalFormation.scrollToIndex(index)\n\t\t);\n\t}\n\n\tsetSelection(enabled: boolean): void {\n\n\t\tthis.sourceManager.getFormation().setSelection(enabled);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionEnabledSetAggregateEvent(this.getId(), enabled)\n\t\t);\n\t}\n\n\tsetSelectionMode(mode: RowSelectionMode): void {\n\n\t\tthis.sourceManager.getFormation().setMode(mode);\n\n\t\tthis.addEvent(\n\t\t\tnew SelectionModeSetAggregateEvent(this.getId(), mode)\n\t\t);\n\t}\n\n\ttoggleRow(selectedRow: string, type: RowSelectToggleType): void {\n\n\t\tthis.sourceManager.toggleRow(selectedRow, type);\n\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tselectAll(): void {\n\t\tthis.sourceManager.selectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.sourceManager.unselectAll();\n\t\tthis.generateSelectedRowChangedEvent();\n\t}\n\n\tgetFormation(): FormationManager {\n\t\treturn this.sourceManager.getFormation();\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(fieldConfigs: Array<FieldConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.fieldCollection.initFields(fieldConfigs);\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), fieldConfigs, fields)\n\t\t);\n\n\t\tthis.filterManager.assignFilterTypes(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterTypesInitedAggregateEvent(this.getId(), this.filterManager.getFilterTypes())\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// this.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\t// this.filterManager.a\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddFilter(fieldId: FieldId, filterTypeId: FilterTypeId, value: any): void {\n\t\tthis.filterManager.add(fieldId, filterTypeId, value);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterAddedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tactiveFilters\n\t\t\t)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveAllFilters(): void {\n\t\tthis.filterManager.removeAll();\n\n\t\tthis.addEvent(\n\t\t\tnew AllFiltersRemovedAggregateEvent(this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tremoveFilter(filterId: FilterId): void {\n\t\tthis.filterManager.remove(filterId);\n\n\t\tconst fields = this.fieldCollection.getFieldsAsMap();\n\t\tconst activeFilters = this.filterManager.getAllActiveFilters(fields);\n\n\t\tthis.addEvent(\n\t\t\tnew FilterRemovedAggregateEvent(this.getId(), activeFilters)\n\t\t);\n\n\t\tthis.calculateSource();\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.selectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.select(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterSelectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectAllUniqueFilter(fieldId: FieldId): void {\n\n\t\tthis.uniqueFilterManager.unselectAll(fieldId);\n\n\t\tthis.addEvent(\n\t\t\tnew AllUniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tunselectUniqueFilter(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueFilterManager.unselect(fieldId, uniqueValueId);\n\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterUnselectedAggregateEvent(\n\t\t\t\tthis.getId()\n\t\t\t)\n\t\t);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.filterManager.filter(this.sourceManager.getEntities(), this.fieldCollection.getFieldsAsMap())\n\t\t);\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// unique filtering\n\t\tthis.sourceManager.setEntities(\n\t\t\tthis.uniqueFilterManager.filterAll(this.sourceManager.getEntities(), this.fieldCollection.getAllFields())\n\t\t);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n\tprivate calculateUniqueValues(): void {\n\n\t\tconst fields = this.fieldCollection.getAllFields(),\n\t\t\titems = this.sourceManager.getOrigin();\n\n\t\tthis.uniqueFilterManager.calculateAll(items, fields);\n\n\t\tthis.generateCalculateUniqueValuesAggregateEvent();\n\t}\n\n\tprivate generateCalculateUniqueValuesAggregateEvent(): void {\n\t\tthis.addEvent(\n\t\t\tnew UniqueFilterCalculatedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.uniqueFilterManager.getAll(\n\t\t\t\t\tthis.fieldCollection.getAllFields()\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate generateSelectedRowChangedEvent() {\n\t\tthis.addEvent(\n\t\t\tnew SelectedRowChangedAggregateEvent(\n\t\t\t\tthis.getId(),\n\t\t\t\tthis.sourceManager.getFormation().getSelectedRows(),\n\t\t\t\tthis.sourceManager.getFormation().isAllSelected(),\n\t\t\t\tthis.sourceManager.getFormation().isAllUnselected()\n\t\t\t)\n\t\t);\n\t}\n\n}\n","import { SorterId } from '../api/sorter.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../field/core/domain/field/field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../api/sorting-config';\nimport { SorterId } from '../api/sorter.id';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../source/core/domain/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/core/domain/column/sort/sort-order';\nimport { Field } from '../../../field/core/domain/field/field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (const sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValue {\n\n\tprivate readonly id: UniqueValueId;\n\n\tprivate value: any;\n\n\tprivate displayValue: string;\n\n\tprivate enabled: boolean;\n\n\tconstructor(\n\t\tid: UniqueValueId,\n\t\tvalue: any,\n\t\tdisplayValue: string,\n\t\tenabled: boolean\n\t) {\n\t\tthis.id = id;\n\t\tthis.value = value;\n\t\tthis.displayValue = displayValue;\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetId(): UniqueValueId {\n\t\treturn this.id;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n\tgetDisplayValue(): string {\n\t\treturn this.displayValue;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tselect(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tunselect(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","export class UniqueValueId {\n\n\tprivate readonly id: string;\n\n\tconstructor(uniqueValueId: string) {\n\t\tthis.id = uniqueValueId;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(uniqueValueId: UniqueValueId): boolean {\n\t\treturn uniqueValueId.toString() === this.id;\n\t}\n\n}\n","import { UniqueValueId } from './unique-value-id';\n\nexport class UniqueValueIdGenerator {\n\n\tstatic index = 0;\n\n\tstatic generate(): UniqueValueId {\n\n\t\tUniqueValueIdGenerator.index += 1;\n\n\t\treturn new UniqueValueId(`${UniqueValueIdGenerator.index}`);\n\t}\n\n}\n","import { UniqueValue } from './unique-value';\nimport { UniqueValueIdGenerator } from './unique-value.id-generator';\nimport { UniqueValueId } from './unique-value-id';\nimport { Field } from '../../../../field/core/domain/field/field';\n\nexport class UniqueValueCollection {\n\n\tprivate readonly values: Array<UniqueValue> = [];\n\n\tprivate allSelected: boolean;\n\n\tprivate allDisabled: boolean;\n\n\tconstructor(values: Array<any>,\n\t\t\t\tfield: Field) {\n\n\t\tfor (const value of values) {\n\n\t\t\tthis.values.push(\n\t\t\t\tnew UniqueValue(\n\t\t\t\t\tUniqueValueIdGenerator.generate(),\n\t\t\t\t\tvalue,\n\t\t\t\t\tfield.getDisplayValue(value),\n\t\t\t\t\ttrue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tgetAll(): Array<UniqueValue> {\n\t\treturn this.values;\n\t}\n\n\tisAllSelected(): boolean {\n\t\treturn this.allSelected;\n\t}\n\n\tisAllDisabled(): boolean {\n\t\treturn this.allDisabled;\n\t}\n\n\tgetNotSelected(): Array<UniqueValue> {\n\t\treturn this.values.filter((uv: UniqueValue) => uv.isDisabled());\n\t}\n\n\tselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.select();\n\t\t});\n\t\tthis.allSelected = true;\n\t\tthis.allDisabled = false;\n\t}\n\n\tselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.select();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tunselectAll(): void {\n\t\tthis.values.forEach((uv: UniqueValue) => {\n\t\t\tuv.unselect();\n\t\t});\n\t\tthis.allSelected = false;\n\t\tthis.allDisabled = true;\n\t}\n\n\tunselect(uniqueValueId: UniqueValueId): void {\n\n\t\tthis.values\n\t\t\t.filter((uv) => uv.getId().equals(uniqueValueId))\n\t\t\t.forEach((uv: UniqueValue) => {\n\t\t\t\tuv.unselect();\n\t\t\t});\n\n\t\tthis.calculateAllSelected();\n\t\tthis.calculateAllDisabled();\n\t}\n\n\tprivate calculateAllSelected(): void {\n\t\tthis.allSelected = !this.values.some((f: UniqueValue) => f.isDisabled());\n\t}\n\n\tprivate calculateAllDisabled(): void {\n\t\tthis.allDisabled = !this.values.some((f: UniqueValue) => f.isEnabled());\n\t}\n\n}\n","import { KeyMap, Optional } from '@generic-ui/hermes';\n\nimport { FieldId } from '../../../../field/core/domain/field/field.id';\nimport { OriginItemEntity } from '../../../../source/core/domain/origin/origin-item-entity';\nimport { Field } from '../../../../field/core/domain/field/field';\nimport { UniqueValueCollection } from './unique-value-collection';\nimport { UniqueValue } from './unique-value';\nimport { UniqueValueId } from './unique-value-id';\n\n\nexport class UniqueFilterManager {\n\n\tprivate readonly uniqueValueMap = new KeyMap<FieldId, UniqueValueCollection>();\n\n\tcalculate(entities: Array<OriginItemEntity>, field: Field): void {\n\n\t\tconst fieldId = field.getId();\n\n\t\tconst optUVM = this.uniqueValueMap.get(fieldId);\n\n\t\toptUVM.ifEmpty(() => {\n\n\t\t\tconst set = new Set();\n\n\t\t\tfor (const entity of entities) {\n\t\t\t\tset.add(field.getValue(entity));\n\t\t\t}\n\n\t\t\t// sort\n\t\t\tconst sortedValues = Array.from(set.values()).sort((a: any, b: any) => {\n\t\t\t\treturn (field as any).getField().sort(a, b);\n\t\t\t});\n\n\t\t\tconst uvc = new UniqueValueCollection(sortedValues, field);\n\n\t\t\tthis.uniqueValueMap.set(field.getId(), uvc);\n\t\t});\n\n\t}\n\n\tcalculateAll(entities: Array<OriginItemEntity>, fields: Array<Field>): void {\n\t\tfor (const field of fields) {\n\t\t\tthis.calculate(entities, field);\n\t\t}\n\t}\n\n\tfilterAll(entities: Array<OriginItemEntity>, fields: Array<Field>): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = entities;\n\n\t\tfor (const field of fields) {\n\n\t\t\tvalues = this.filter(values, field);\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>, field: Field): Array<OriginItemEntity> {\n\n\t\tlet values: Array<OriginItemEntity> = [];\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(field.getId())\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\n\t\t\t\tif (uvc.isAllSelected()) {\n\t\t\t\t\tvalues = entities;\n\t\t\t\t} else if (uvc.isAllDisabled()) {\n\t\t\t\t\tvalues = [];\n\t\t\t\t} else {\n\n\t\t\t\t\tvalues = entities.filter((itemEntity: OriginItemEntity) => {\n\n\t\t\t\t\t\tfor (const notSelectedValue of uvc.getNotSelected()) {\n\n\t\t\t\t\t\t\tif ((field.getField() as any).equals(itemEntity, (notSelectedValue as any).getValue())) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn values;\n\t}\n\n\tselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.selectAll();\n\t\t\t});\n\t}\n\n\tselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.select(uniqueValueId);\n\t\t\t});\n\t}\n\n\tunselectAll(fieldId: FieldId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselectAll();\n\t\t\t});\n\t}\n\n\tunselect(fieldId: FieldId, uniqueValueId: UniqueValueId): void {\n\n\t\tthis.uniqueValueMap\n\t\t\t.get(fieldId)\n\t\t\t.ifPresent((uvc: UniqueValueCollection) => {\n\t\t\t\tuvc.unselect(uniqueValueId);\n\t\t\t});\n\t}\n\n\tgetAll(fields: Array<Field>): Map<string, Array<UniqueValue>> {\n\n\t\tconst map = new Map();\n\n\t\tfor (const field of fields) {\n\n\t\t\tthis.getValues(field)\n\t\t\t\t.ifPresent((v) => {\n\t\t\t\t\tmap.set(field.getId().toString(), v);\n\t\t\t\t});\n\t\t}\n\n\t\treturn map;\n\t}\n\n\tgetValues(field: Field): Optional<Array<UniqueValue>> {\n\n\t\treturn this.uniqueValueMap\n\t\t\t\t   .get(field.getId())\n\t\t\t\t   .map((uvc: UniqueValueCollection) => {\n\t\t\t\t\t   return uvc.getAll();\n\t\t\t\t   });\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../../paging/core/domain/paging.manager-factory';\nimport { SourceManagerFactory } from '../../source/core/domain/core/source.manager-factory';\nimport { VerticalFormationFactory } from '../../vertical-formation/core/domain/vertical-formation.factory';\nimport { SummariesManagerFactory } from '../../summaries/core/domain/summaries.manager.factory';\nimport { FilterManagerFactory } from '../../filter/core/domain/filter.manager-factory';\nimport { FieldCollectionFactory } from '../../field/core/domain/field-collection.factory';\nimport { StructureId } from '../api/structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from '../../sorting/core/domain/sorter.collection';\nimport { SearchManagerFactory } from '../../search/core/domain/search.manager-factory';\nimport { UniqueFilterManager } from '../../filter/core/domain/unique/unique-filter-manager';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(structureId);\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tnew UniqueFilterManager(),\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { SummariesEnabledArchive } from '../../../summaries/core/domain/enabled/summaries-enabled-archive.service';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler implements DomainEventHandler<StructureId, StructureCreatedEvent> {\n\n\tconstructor(private summariesEnabledArchive: SummariesEnabledArchive) {\n\t}\n\n\tforEvent(): DomainEventType<StructureCreatedEvent> {\n\t\treturn StructureCreatedEvent;\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tif (event.ofMessageType('StructureCreatedEvent')) {\n\n\t\t\tconst structureId = event.getAggregateId();\n\n\t\t\tthis.summariesEnabledArchive.init(structureId);\n\t\t}\n\t}\n\n}\n","import { StructureId } from '../../api/structure.id';\nimport { StructureCommand } from '../structure.command';\n\nexport class CreateStructureCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetVerticalScrollEnabledCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollBarPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollBarPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\n\nexport class SetScrollPositionCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { StructureId } from '../../../../../core/api/structure.id';\nimport { StructureCommand } from '../../../../../core/domain/structure.command';\n\n\nexport class StructureSetHeightCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { StructureId } from '../../../../core/api/structure.id';\nimport { SchemaTheme } from '../../../../../schema/core/api/theme/schema-theme';\nimport { StructureCommand } from '../../../../core/domain/structure.command';\n\nexport class SetRowHeightBasedOnThemeCommand extends StructureCommand {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CommandDispatcher } from '@generic-ui/hermes';\nimport { FilterCommandInvoker } from '../../filter/core/api/filter.command-invoker';\nimport { SourceDispatcher } from '../../source/core/domain/source.dispatcher';\nimport { StructureId } from '../api/structure.id';\nimport { CreateStructureCommand } from './create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../vertical-formation/core/domain/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollBarPositionCommand } from '../../vertical-formation/core/domain/scroll-bar/set-scroll-bar-position.command';\nimport { SetScrollPositionCommand } from '../../vertical-formation/core/domain/scroll-position/set-scroll-position.command';\nimport { FilterConfig } from '../../filter/core/api/filter-config';\nimport { QuickFiltersConfig } from '../../filter/core/api/quick-filters.config';\nimport { SetConfigQuickFilterCommand } from '../../filter/core/domain/quick/set-config-quick-filter.command';\nimport { SetRowHeightCommand } from '../../vertical-formation/core/domain/set-row-height/set-row-height.command';\nimport { StructureSetHeightCommand } from '../../vertical-formation/core/domain/container/set-height/structure-set-height.command';\nimport { SetRowHeightBasedOnThemeCommand } from '../../vertical-formation/core/domain/set-row-height-theme/set-row-height-based-on-theme.command';\nimport { StructureCommandInvoker } from '../api/structure.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { SchemaTheme } from '../../../schema/core/api/theme/schema-theme';\n\n@Injectable()\nexport class StructureDomainCommandInvoker extends StructureCommandInvoker {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: FilterCommandInvoker,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVirtualScroll(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tscrollToTop(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, 0));\n\t}\n\n\tscrollToBottom(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, Number.MAX_SAFE_INTEGER));\n\t}\n\n\tscrollToIndex(index: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollBarPositionCommand(structureId, index));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Provider } from '@angular/core';\nimport { HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../../core/infrastructure/in-memory/in-memory.structure.providers';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { StructureCreatedEventHandler } from '../../../core/domain/create-structure/structure-created.event-handler';\nimport { StructureDomainCommandInvoker } from '../../../core/domain/structure.domain-command-invoker';\nimport { StructureInitialValuesReadyArchive } from '../../../core/api/structure.initial-values-ready.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders\n];\n\nconst readProviders = [\n\t...inMemoryStructureReadProviders\n];\n\nexport const structureCommandHandlers: Array<Provider> = [];\n\nexport const structureDomainEventHandlers = [\n\n\t...HermesModule.registerDomainEventHandler(StructureCreatedEventHandler)\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureWarehouse,\n\t{\n\t\tprovide: StructureCommandInvoker,\n\t\tuseClass: StructureDomainCommandInvoker\n\t},\n\n\tStructureInitialValuesReadyArchive\n\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from '../../origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(source: any): ItemEntity;\n\tcreate(source: Array<any>): Array<ItemEntity>;\n\tcreate(source: any): any {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createEntities(source);\n\t\t} else {\n\t\t\treturn this.createEntity(source);\n\t\t}\n\t}\n\n\tcreateEntities(source: Array<any>): Array<ItemEntity> {\n\t\treturn source.map((source: any) => this.createEntity(source));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.sourceItem, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/component/smart-component';\n\n@Component({\n\tselector: 'div[gui-structure-top-panel]',\n\ttemplate: `\n\n\t\t<div gui-search-bar\n\t\t\t class=\"gui-flex gui-items-center gui-h-full gui-w-3/5 gui-mr-auto\"></div>\n\t\t<!--\t\t<gui-filter-menu-trigger></gui-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.addClassToHost('gui-p-6');\n\t\tthis.addClassToHost('gui-border-b');\n\t\tthis.addClassToHost('gui-border-b-solid');\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-top-panel';\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { FilterMenuFeatureModule } from '../../../../filter/feature/menu/filter-menu.feature-module';\n\nimport { SearchFeatureModule } from '../../../../search/feature/search.feature-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tFilterMenuFeatureModule,\n\t\tSearchFeatureModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureCommandInvoker } from '../../../../../core/api/structure.command-invoker';\nimport { StructureColumnConfigService } from '../structure.column-config.service';\nimport { StructureColumnMenuConfig } from '../config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureColumnMenuConfigArchive } from '../config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-trigger]',\n\ttemplateUrl: './structure.column-config-trigger.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandInvoker,\n\t\t\t\tprivate readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate readonly structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.hermesSubscribe(\n\t\t\tthis.structureColumnMenuConfigArchive.on(),\n\t\t\t(config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t}\n\t\t);\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-trigger';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../../composition/core/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { CompositionWarehouse } from '../../../../../../../composition/core/api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/component/smart-component';\nimport { SortingCommandInvoker } from '../../../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../../../core/api/structure.id';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-sort]',\n\ttemplateUrl: './structure.column-config-sort.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Input()\n\tdropdownTextTranslation: string;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.compositionReadModelService.onSortOrder(this.column.getFieldId(), this.compositionId),\n\t\t\t(sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t}\n\t\t);\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.sortingCommandDispatcher.setSortOrder(this.column.getFieldId(), sort, this.compositionId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-sort';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-hide]',\n\ttemplateUrl: './structure.column-config-column-hide.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnHideComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tcolumnHidden = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\thideColumn(): void {\n\t\tthis.columnHidden.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-hide';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { PureComponent } from '../../../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'div[gui-structure-column-config-column-move][column]',\n\ttemplateUrl: './structure.column-config-column-move.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigColumnMoveComponent extends PureComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\t@Output()\n\tmovedLeft = new EventEmitter<void>();\n\n\t@Output()\n\tmovedRight = new EventEmitter<void>();\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t}\n\n\tmoveLeft(): void {\n\t\tthis.movedLeft.emit();\n\t}\n\n\tmoveRight(): void {\n\t\tthis.movedRight.emit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-config-column-move';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { IconComponent } from '../../../../../../common/cdk/component/icon-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-icon]',\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuIconComponent extends IconComponent {\n\n\tconstructor(elementRef: ElementRef,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef) {\n\t\tsuper(elementRef, changeDetectorRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-column-menu-arrow-icon]',\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnMenuArrowIconComponent extends PureComponent {\n\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-column-menu-arrow-icon';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\nimport { FieldId } from '../../../field/core/domain/field/field.id';\nimport { UniqueValuesReadModel } from '../../core/api/unique/unique-values.read-model';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { FilterWarehouse } from '../../core/api/filter.warehouse';\nimport { UniqueValueReadModel } from '../../core/api/unique/unique-value.read-model';\nimport { FilterCommandInvoker } from '../../core/api/filter.command-invoker';\n\n@Component({\n\tselector: 'div[gui-unique-value-list][fieldId]',\n\ttemplateUrl: './unique-value-list.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyleUrls: [\n\t\t'../style/unique-value-list.ngx.scss'\n\t]\n})\nexport class UniqueValueListComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tfieldId: FieldId;\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tuniqueValues: Array<UniqueValueReadModel> = [];\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterWarehouse: FilterWarehouse,\n\t\t\t\tprivate readonly filterCommandInvoker: FilterCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.filterWarehouse.onUniqueValues(this.structureId),\n\t\t\t(uniqueValuesReadModel: UniqueValuesReadModel) => {\n\t\t\t\tthis.uniqueValues = uniqueValuesReadModel.getValues(this.fieldId);\n\n\t\t\t\tthis.selectAllChecked = uniqueValuesReadModel.isSelectAllChecked(this.fieldId);\n\t\t\t\tthis.selectAllIndeterminate = uniqueValuesReadModel.isIndeterminate(this.fieldId);\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleAllSelect(): void {\n\t\tevent.stopPropagation();\n\n\t\tif (this.selectAllChecked) {\n\t\t\tthis.filterCommandInvoker.unselectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t\t}\n\t}\n\n\ttoggleSelect(uniqueValueReadModel: UniqueValueReadModel): void {\n\t\tevent.stopPropagation();\n\n\t\tif (uniqueValueReadModel.isEnabled()) {\n\t\t\tthis.filterCommandInvoker.unselectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t} else {\n\t\t\tthis.filterCommandInvoker.selectUniqueFilter(this.fieldId, uniqueValueReadModel.getId(), this.structureId);\n\t\t}\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterCommandInvoker.selectAllUniqueFilter(this.fieldId, this.structureId);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-unique-value-list';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { UniqueValueListComponent } from './unique-value-list.component';\nimport { FilterApiModule } from '../../core/api/filter.api-module';\nimport { fabricImports } from '../../../grid/feature/structure-fabric.imports';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tFilterApiModule\n\t],\n\tdeclarations: [\n\t\tUniqueValueListComponent\n\t],\n\texports: [\n\t\tUniqueValueListComponent\n\t]\n})\nexport class UniqueValueListModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() filterApiModule: FilterApiModule) {\n\t\tsuper();\n\t\tif (filterApiModule === null) {\n\t\t\tthrow new Error('FilterApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './config/structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './trigger/structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\nimport { UniqueValueListModule } from '../../../../filter/feature/unique/unique-value-list.module';\nimport { TranslationFeatureModule } from '../../../../../l10n/feature/translation.feature-module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule,\n\t\tUniqueValueListModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../api/structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateStructureCommand> | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../../composition/core/domain-read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../../composition/core/domain-read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../../composition/core/domain-read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../../source/core/domain/core/item/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../../source/core/domain/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandInvoker } from '../../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../../core/api/structure.id';\n\n@Component({\n\tselector: 'div[gui-structure-cell-edit-boolean][entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer>\n\t\t\t<ng-container\n\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandInvoker) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureCellEditBooleanComponent>) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(\n\t\t\tnew StructureEditSourceItemParams(itemId, fieldId, updatedValue),\n\t\t\tthis.structureId\n\t\t);\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity).value,\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.observeValueChanges();\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-cell-edit-boolean';\n\t}\n\n}\n","import { SmartComponent } from '../../../../../common/cdk/component/smart-component';\nimport { ChangeDetectorRef, ElementRef, OnInit } from '@angular/core';\nimport { StructureBannerPanelConfig } from './structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\nexport abstract class StructureBannerPanel extends SmartComponent implements OnInit {\n\n\tbannerPanel: string | (() => string);\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.onBannerPanelConfig(),\n\t\t\t(config: StructureBannerPanelConfig) => {\n\n\t\t\t\tthis.bannerPanel = config.template;\n\n\t\t\t\tif (typeof this.bannerPanel === 'function') {\n\t\t\t\t\tthis.bannerPanel = this.bannerPanel();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tabstract onBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig>\n\n\tabstract getSelectorName(): string\n\n\tabstract getPanelTitle(): string\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-title-panel]',\n\ttemplateUrl: './structure.title-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureTitlePanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-title-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Title panel';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { StructureBannerPanel } from '../structure-banner-panel';\nimport { StructureBannerPanelConfig } from '../structure-banner-panel.config';\nimport { HermesObservable } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'div[gui-structure-footer-panel]',\n\ttemplateUrl: './structure.footer-panel.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends StructureBannerPanel {\n\n\tconstructor(private readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tchangeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tonBannerPanelConfig(): HermesObservable<StructureBannerPanelConfig> {\n\t\treturn this.structureFooterPanelConfigArchive.on();\n\t}\n\n\tgetSelectorName(): string {\n\t\treturn 'gui-structure-footer-panel';\n\t}\n\n\tgetPanelTitle(): string {\n\t\treturn 'Footer panel';\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\n@Component({\n\tselector: 'div[gui-empty-source][items]',\n\ttemplateUrl: './empty-source.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class EmptySourceComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\titems: Array<any>;\n\n\tconstructor(elRef: ElementRef) {\n\t\tsuper(elRef);\n\t\tthis.addClassToHost('gui-py-23');\n\t\tthis.addClassToHost('gui-px-6');\n\t}\n\n\tngOnChanges(changes: NgChanges<EmptySourceComponent>) {\n\n\t\tif (this.hasChanged(changes.items)) {\n\t\t\tif (this.items.length === 0) {\n\t\t\t\tthis.removeClassFromHost('gui-hidden');\n\t\t\t\tthis.addClassToHost('gui-block');\n\t\t\t} else {\n\t\t\t\tthis.removeClassFromHost('gui-block');\n\t\t\t\tthis.addClassToHost('gui-hidden');\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-empty-source';\n\t}\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmptySourceComponent } from './empty-source.component';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { FeatureModule } from '@generic-ui/hermes';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tTranslationFeatureModule\n\t],\n\tdeclarations: [\n\t\tEmptySourceComponent\n\t],\n\texports: [\n\t\tEmptySourceComponent\n\t]\n})\nexport class EmptySourceFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { StructureId } from '../../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../../source/core/api/formation/formation.command-invoker';\nimport { SmartComponent } from '../../../../../../common/cdk/component/smart-component';\nimport { FormationWarehouse } from '../../../../../source/core/api/formation/formation.warehouse';\nimport { RowSelectedReadModel } from '../../../../../source/core/api/formation/row-selected.read-model';\nimport { RowSelectionModeRepository } from '../../../../../source/core/api/formation/mode/row-selection-mode.repository';\nimport { RowSelectionMode } from '../../../../../source/core/api/row-selection';\n\n@Component({\n\tselector: 'div[gui-select-all]',\n\ttemplateUrl: './select-all.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class SelectAllComponent extends SmartComponent implements OnInit {\n\n\tselectAllChecked: boolean;\n\n\tselectAllIndeterminate: boolean;\n\n\tmodeMulti: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly rowSelectionModeRepository: RowSelectionModeRepository,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly formationWarehouse: FormationWarehouse) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngOnInit() {\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onMode(this.structureId),\n\t\t\t(mode: RowSelectionMode) => {\n\t\t\t\tthis.modeMulti = mode === RowSelectionMode.MULTIPLE;\n\t\t\t}\n\t\t);\n\n\t\tthis.hermesSubscribe(\n\t\t\tthis.formationWarehouse.onRowSelectedReadModel(this.structureId),\n\t\t\t(rowSelectedReadModel: RowSelectedReadModel) => {\n\t\t\t\tthis.selectAllChecked = rowSelectedReadModel.isAllSelected();\n\t\t\t\tthis.selectAllIndeterminate = rowSelectedReadModel.isIndeterminate();\n\t\t\t}\n\t\t);\n\t}\n\n\ttoggleSelectAll(): void {\n\n\t\tif (this.selectAllIndeterminate) {\n\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t} else {\n\n\t\t\tif (this.selectAllChecked) {\n\t\t\t\tthis.formationCommandDispatcher.unselectAll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.formationCommandDispatcher.selectAll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-select-all';\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\thandle(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class VerticalFormationScrollBarPositionArchive extends AggregateArchive<number> {\n\n\tstatic readonly DEFAULT_POSITION = 0;\n\n\tconstructor() {\n\t\tsuper(VerticalFormationScrollBarPositionArchive.DEFAULT_POSITION);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler, DomainEventType } from '@generic-ui/hermes';\n\nimport { VerticalFormationScrollBarPositionArchive } from './vertical-formation.scroll-bar-position.archive';\nimport { ScrollBarPositionSetEvent } from '../../domain/scroll-bar/scroll-bar-position-set.event';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Injectable()\nexport class ScrollBarPositionSetEventHandler implements DomainEventHandler<StructureId, ScrollBarPositionSetEvent> {\n\n\tconstructor(private positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t}\n\n\tforEvent(): DomainEventType<ScrollBarPositionSetEvent> {\n\t\treturn ScrollBarPositionSetEvent;\n\t}\n\n\thandle(event: ScrollBarPositionSetEvent): void {\n\n\t\tif (event.ofMessageType('ScrollBarPositionSetEvent')) {\n\t\t\tthis.positionRepository.next(event.getAggregateId(), event.getPosition());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollBarPositionCommand } from './set-scroll-bar-position.command';\nimport { StructureAggregate } from '../../../../core/domain/structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollBarPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollBarPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetScrollBarPositionCommand> {\n\t\treturn SetScrollBarPositionCommand;\n\t}\n\n\thandle(structure: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\n\t\tconst index = command.getPosition();\n\n\t\tstructure.scrollToIndex(index);\n\t}\n\n\tpublish(aggregate: StructureAggregate, command: SetScrollBarPositionCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { structureKey } from '../../../core/api/structre.key';\nimport { VerticalFormationFactory } from './vertical-formation.factory';\nimport { SetScrollPositionCommandHandler } from './scroll-position/set-scroll-position.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from './set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from './set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { SetRowHeightCommandHandler } from './set-row-height/set-row-height.command-handler';\nimport { StructureSetHeightCommandHandler } from './container/set-height/structure-set-height.command-handler';\nimport { ScrollBarPositionSetEventHandler } from '../domain-read/scroll-bar/scroll-bar-position-set.event-handler';\nimport { SetScrollBarPositionCommandHandler } from './scroll-bar/set-scroll-bar-position.command-handler';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\tVerticalFormationFactory\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, structureKey),\n\t\t\t...HermesModule.registerCommandHandler(SetScrollBarPositionCommandHandler, structureKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerDomainEventHandler(ScrollBarPositionSetEventHandler)\n\t\t];\n\t}\n\n}\n","import { VerticalFormationRepository } from '../api/vertical-formation.repository';\nimport { VerticalFormationScrollBarPositionArchive } from './scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { HermesObservable } from '@generic-ui/hermes';\nimport { Injectable } from '@angular/core';\nimport { VerticalFormationWarehouse } from '../api/vertical-formation.warehouse';\n\n\n@Injectable()\nexport class VerticalFormationDomainWarehouse extends VerticalFormationWarehouse {\n\n\tconstructor(private readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly positionRepository: VerticalFormationScrollBarPositionArchive) {\n\t\tsuper();\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): HermesObservable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n\n\tonScrollBarPosition(structureId: StructureId): HermesObservable<number> {\n\t\treturn this.positionRepository.on(structureId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ApiModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationDomainModule } from '../domain/vertical-formation.domain-module';\nimport { VerticalFormationConverter } from './vertical-formation.converter';\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { VerticalFormationWarehouse } from './vertical-formation.warehouse';\nimport { VerticalFormationScrollBarPositionArchive } from '../domain-read/scroll-bar/vertical-formation.scroll-bar-position.archive';\nimport { VerticalFormationDomainWarehouse } from '../domain-read/vertical-formation.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationDomainModule\n\t],\n\tproviders: [\n\t\tVerticalFormationConverter,\n\t\tVerticalFormationRepository,\n\t\t{\n\t\t\tprovide: VerticalFormationWarehouse,\n\t\t\tuseClass: VerticalFormationDomainWarehouse\n\t\t},\n\t\tVerticalFormationScrollBarPositionArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationApiModule extends ApiModule {\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport { VerticalFormationApiModule } from '../core/api/vertical-formation.api-module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tVerticalFormationApiModule\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class VerticalFormationFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() verticalFormationApiModule: VerticalFormationApiModule) {\n\t\tsuper();\n\t\tif (verticalFormationApiModule === null) {\n\t\t\tthrow new Error('VerticalFormationFeatureModule is required.');\n\t\t}\n\t}\n\n}\n","export const compositionKey = 'CompositionAggregate';\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tconst staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => {\n\t\t\t\treturn columnWidth.isTypeAuto() ||\n\t\t\t\t\tcolumnWidth.isTypePercentage() ||\n\t\t\t\t\t(columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH);\n\t\t\t});\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionDomainEvent extends DomainEvent<CompositionId> {\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionWidthSetEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionAggregateEvent extends AggregateEvent<CompositionId> {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionContainerWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, payload, 'CompositionContainerWidthSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionResizeWidthSetEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnSetEnabledEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tconst newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (const column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width;\n\t\tconst autoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tconst column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (const column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\n\nexport class CompositionChangeSortStatusEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, activeColumns, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../api/column/column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t// this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (const param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any, item: any) => string = (cellValue: any, item: any) => cellValue;\n\n\tconstructor(cellView: CellView | any) {\n\n\t\tif (typeof cellView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = cellView;\n\t\t} else {\n\t\t\tthis.view = cellView;\n\t\t}\n\t}\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetFormatterFunction(): any {\n\t\treturn this.columnConfig.formatter;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from '../../api/column/column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../api/column/column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../api/column/column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedLeftEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../../composition.domain-event';\n\nexport class CompositionColumnMovedRightEvent extends CompositionDomainEvent {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, null, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../../api/composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\nimport { CompositionAggregateEvent } from '../../../composition.aggregate-event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionColumnsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\nimport { CompositionAggregateEvent } from '../../composition.aggregate-event';\n\n\nexport class ColumnsSetAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionDomainEvent } from '../composition.domain-event';\n\nexport class CompositionCreatedEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../api/composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregateEvent } from '../composition.aggregate-event';\n\nexport class CompositionCreatedAggregateEvent extends CompositionAggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { GroupId } from './group.id';\n\nexport class Group {\n\n\tconstructor(public readonly id: GroupId,\n\t\t\t\tpublic readonly header: string,\n\t\t\t\tpublic readonly width: number) {\n\t}\n\n}\n","import { HermesId } from '@generic-ui/hermes';\n\nexport class GroupId extends HermesId<string> {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoString(): string {\n\t\treturn this.getId();\n\t}\n\n}\n","import { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\nexport const emptyGroup = new Group(new GroupId('-1'), '', 100);\n","import { AggregateEvent, AggregateEventType, AggregateRoot, KeyMap } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig, MultiColumnConfig } from '../api/column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\nimport { GroupId } from '../api/group/group.id';\nimport { Group } from '../api/group/group';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { emptyGroup } from './group/empty-group';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly groupFactory: CompositionGroupFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tprivate readonly groups: KeyMap<GroupId, Group> = new KeyMap();\n\n\tprivate readonly columnNameToGroupId: Map<string, GroupId> = new Map();\n\n\tconstructor(id: CompositionId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tgroupFactory: CompositionGroupFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\t\tthis.groupFactory = groupFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): AggregateEventType<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetGroups(configs: Array<ColumnConfig | MultiColumnConfig>): void {\n\n\t\tfor (let i = 0; i < configs.length; i += 1) {\n\n\t\t\tconst config = configs[i];\n\n\t\t\tif ((config as MultiColumnConfig).columns !== undefined) {\n\n\t\t\t\tconst group = this.groupFactory.create(config);\n\n\t\t\t\tthis.groups.set(group.id, group);\n\n\t\t\t\t(config as MultiColumnConfig).columns.forEach((c: ColumnConfig, index: number) => {\n\n\t\t\t\t\tthis.columnNameToGroupId.set(c.header as string, group.id);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.columnNameToGroupId.set(config.header as string, emptyGroup.id);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tconst column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../../structure/field/core/domain/field/data/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../api/column/column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from '../../api/column/column.id';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(source: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn this.createColumns(source);\n\t\t} else {\n\t\t\treturn this.createColumn(source);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\tdataType = field.getDataType(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined;\n\n\t\tlet view: ViewEntity,\n\t\t\tenabled: boolean;\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tconst columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tconst columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { Group } from '../../api/group/group';\nimport { GroupId } from '../../api/group/group.id';\n\n\nexport class CompositionGroupFactory {\n\n\tcreate(config: any): Group {\n\t\treturn new Group(\n\t\t\tnew GroupId(RandomStringGenerator.generate()),\n\t\t\tconfig.header,\n\t\t\tconfig.width\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory,\n\t\t\t\tprivate readonly groupFactory: CompositionGroupFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory, this.groupFactory);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract findById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tfindById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.findById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { CompositionId } from '../api/composition.id';\n\nexport abstract class CompositionCommand extends Command<CompositionId> {\n}\n","import { CompositionId } from '../../api/composition.id';\nimport { CompositionCommand } from '../composition.command';\n\n\nexport class CreateCompositionCommand extends CompositionCommand {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, CommandType, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../../api/composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent',\n\tGroupsSetAggregateEvent: 'GroupsSetAggregateEvent'\n};\n","import { CompositionId } from '../../../api/composition.id';\nimport { CompositionDomainEvent } from '../../composition.domain-event';\n\nexport class CompositionGroupsSetEvent extends CompositionDomainEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, null, 'CompositionGroupsSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionGroupsSetEvent } from './group/set-groups/composition.groups-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.GroupsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionGroupsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { ColumnParams } from './column.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetColumnsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class SetCompositionResizeWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { StructureId } from '../../../../../structure/core/api/structure.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class SetCompositionContainerWidthCommand extends CompositionCommand {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ColumnId } from '../../../api/column/column.id';\nimport { CompositionCommand } from '../../composition.command';\n\nexport class CompositionSetColumnEnabledCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../../api/composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { CompositionCommand } from '../../composition.command';\n\n\nexport class CompositionChangeSortStatusCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): CommandType<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\thandle(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublish(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveLeftColumnCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../../api/composition.id';\nimport { ColumnId } from '../../../../api/column/column.id';\nimport { CompositionCommand } from '../../../composition.command';\n\nexport class CompositionMoveRightColumnCommand extends CompositionCommand {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../../api/composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { CompositionId } from '../../../api/composition.id';\n\nimport { CompositionCommand } from '../../composition.command';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\nexport class SetGroupsCommand extends CompositionCommand {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly configs: Array<ColumnConfig | MultiColumnConfig>) {\n\t\tsuper(compositionId, 'SetGroupsCommand');\n\t}\n\n\tgetConfigs(): Array<ColumnConfig | MultiColumnConfig> {\n\t\treturn this.configs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../api/composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\nimport { SetGroupsCommand } from './group/set-groups/set-groups.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetGroups(compositionId: CompositionId, params: any): void {\n\t\tthis.commandDispatcher.dispatch(new SetGroupsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventType, MultiDomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/sorting/core/domain/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/sorting/core/domain/order/sort-order-set.event';\nimport { CompositionId } from '../../../api/composition.id';\n\nexport type CompositionChangeSortStatusEventType = SortToggledEvent | SortOrderSetEvent;\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler implements MultiDomainEventHandler<CompositionId, CompositionChangeSortStatusEventType> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tforEvents(): Array<DomainEventType<CompositionChangeSortStatusEventType>> {\n\t\treturn [\n\t\t\tSortToggledEvent,\n\t\t\tSortOrderSetEvent\n\t\t];\n\t}\n\n\thandle(event: CompositionChangeSortStatusEventType): void {\n\n\t\tif (event.ofMessageType('SortToggledEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event.ofMessageType('SortOrderSetEvent')) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tconst params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element.value }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element.value }}\">\n\t\t\t\t<gui-view-text [value]=\"element\"></gui-view-text>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element.value }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element.value\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<gui-view-text bold [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<gui-view-text italic [value]=\"element\"></gui-view-text>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element.value }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element.value | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element.value\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element.value\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private readonly columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\">\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\">\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\">\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { CellValue } from './cell-value';\n\nexport class CellContext {\n\n\tconstructor(public element: CellValue) {\n\t}\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../api/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/field/core/domain/field/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\nimport { CellValue } from './cell-value';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\tprivate templateFunction: (i: any, item: any) => string;\n\n\tprivate formatterFunction: (i: any, item: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tsetTemplateFunction(templateFun: (i: any, item: any) => string): void {\n\t\tthis.templateFunction = templateFun;\n\t}\n\n\tsetFormatterFunction(formatter: (i: any, item: any) => string): void {\n\t\tthis.formatterFunction = formatter;\n\t}\n\n\ttoHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header || '';\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header));\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(CellValue.text(header(index)));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\ttoContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\tthis.formatterFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/field/core/domain/field/data/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from '../../api/column/column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private readonly viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate readonly editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tif (column.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = column.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\t}\n\n\t\tif (typeof column.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(column.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(column.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tconst columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tif (activeColumn.getCellView() === CellView.NG_TEMPLATE) {\n\t\t\tcolumnDef.cellTemplate = activeColumn.getColumnConfig().templateRef;\n\t\t} else {\n\t\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\t}\n\n\t\tif (typeof activeColumn.getHeader() === 'function') {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\t\t}\n\n\t\tcolumnDef.setTemplateFunction(activeColumn.getTemplateFunction());\n\t\tcolumnDef.setFormatterFunction(activeColumn.getFormatterFunction());\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.toHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.toContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../domain-read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../api/composition.id';\nimport { CompositionReadModelRootId } from '../../../api/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, HermesObservable, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventBus, hermesFilter, hermesMap, HermesObservable, HermesReplaySubject } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../domain-read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../domain-read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../api/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new HermesReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): HermesObservable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .toObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesFilter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../domain-read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, CommandType, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetGroupsCommand } from './set-groups.command';\nimport { CompositionId } from '../../../api/composition.id';\nimport { ColumnConfig, MultiColumnConfig } from '../../../api/column/column.config';\n\n\n@Injectable()\nexport class SetGroupsCommandHandler implements CommandHandler<CompositionAggregate, SetGroupsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): CommandType<SetGroupsCommand> {\n\t\treturn SetGroupsCommand;\n\t}\n\n\thandle(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst groupConfigs: Array<ColumnConfig | MultiColumnConfig> = command.getConfigs();\n\n\t\taggregate.setGroups(groupConfigs);\n\t}\n\n\tpublish(aggregate: CompositionAggregate, command: SetGroupsCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: SetGroupsCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { ColumnId } from '../../api/column/column.id';\n\nexport class ColumnHighlightManager {\n\n\tprivate enabled = true;\n\n\tprivate highlightedColumns: Set<string> = new Set(); // should be set of ColumnId\n\n\tisHighlighted(columnId: ColumnId): boolean {\n\t\treturn this.highlightedColumns.has(columnId.toString());\n\t}\n\n\ttoggle(columnId: ColumnId): void {\n\t\tif (this.highlightedColumns.has(columnId.toString())) {\n\t\t\tthis.highlightedColumns.delete(columnId.toString())\n\t\t} else {\n\t\t\tthis.highlightedColumns.add(columnId.toString())\n\t\t}\n\t}\n\n\tremove(columnId: ColumnId): void {\n\t\tthis.highlightedColumns.delete(columnId.toString());\n\t}\n}\n","import { AggregateArchive } from '@generic-ui/hermes';\nimport { ColumnHighlightManager } from './column-highlight.manager';\nimport { Injectable } from '@angular/core';\nimport { Override } from '../../../../common/cdk/decorators';\nimport { CompositionId } from '../../api/composition.id';\nimport { ColumnId } from '../../api/column/column.id';\n\n@Injectable()\nexport class ColumnHighlightArchive extends AggregateArchive<ColumnHighlightManager> {\n\n\tconstructor() {\n\t\tsuper(new ColumnHighlightManager());\n\t}\n\n\ttoggle(key: CompositionId, value: ColumnId) {\n\t\tthis.get(key)\n\t\t\t.ifPresent((manager) => {\n\t\t\t\tmanager.toggle(value);\n\t\t\t\tthis.next(key, manager);\n\t\t\t});\n\t}\n\n\t@Override\n\tprotected equals(a: ColumnHighlightManager, b: ColumnHighlightManager): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tprotected createDefaultValue(defaultValue: ColumnHighlightManager): ColumnHighlightManager {\n\t\treturn new ColumnHighlightManager();\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Provider } from '@angular/core';\n\nimport { DomainModule, HermesModule } from '@generic-ui/hermes';\n\nimport { SetColumnsCommandHandler } from './column/set-columns/set-columns.command-handler';\nimport { compositionKey } from './composition.key';\nimport { SetCompositionWidthCommandHandler } from './width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from './width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from './width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from './column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from './column/sort/composition-change-sort-status.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from './column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from './column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusEventHandler } from './column/sort/composition-change-sort-status.event-handler';\nimport { inMemoryCompositionCommandProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from './composition.dispatcher';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ColumnPresentationConverter } from './column/presentation/column.presentation.converter';\nimport { CompositionEventConverter } from './composition.event-converter';\nimport { ColumnFieldFactory } from './column/field/colum-field.factory';\nimport { CompositionGroupFactory } from './group/composition.group.factory';\nimport { SetGroupsCommandHandler } from './group/set-groups/set-groups.command-handler';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionCommandProviders,\n\t\tCompositionDispatcher,\n\t\tColumnEntityFactory,\n\t\tColumnPresentationConverter,\n\t\tCompositionEventConverter,\n\t\tColumnFieldFactory,\n\t\tCompositionGroupFactory,\n\t\tColumnHighlightArchive\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionDomainModule extends DomainModule {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tstatic commandHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey),\n\t\t\t...HermesModule.registerCommandHandler(SetGroupsCommandHandler, compositionKey)\n\t\t];\n\t}\n\n\tstatic domainEventHandlers(): Array<Provider> {\n\t\treturn [\n\t\t\t...HermesModule.registerMultiDomainEventHandler(CompositionChangeSortStatusEventHandler)\n\t\t];\n\t}\n\n}\n","import { Group } from './group';\n\nexport class GroupCollection {\n\n\tprivate readonly groups: Array<Group>;\n\n\tprivate readonly showGroups: boolean;\n\n\tconstructor(groups: Array<Group>,\n\t\t\t\tshowGroups: boolean) {\n\t\tthis.groups = groups;\n\t\tthis.showGroups = showGroups;\n\t}\n\n\tgetGroups(): Array<Group> {\n\t\treturn this.groups;\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.showGroups;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\n\nimport { GroupCollection } from '../../api/group/group.collection';\n\n\n@Injectable()\nexport class CompositionGroupArchive extends AggregateArchive<GroupCollection> {\n\n\tstatic readonly default = new GroupCollection([], false);\n\n\tconstructor() {\n\t\tsuper(CompositionGroupArchive.default);\n\t}\n\n}\n","import { CompositionDispatcher } from './composition.dispatcher';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../api/column/column-definition-id';\nimport { ColumnId } from '../api/column/column.id';\nimport { CompositionCommandInvoker } from '../api/composition.command-invoker';\nimport { Injectable } from '@angular/core';\nimport { ColumnHighlightArchive } from './highlight/column-highlight.archive';\n\n@Injectable()\nexport class CompositionDomainCommandInvoker extends CompositionCommandInvoker {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly compositionGroupRepository: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tcreate(compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetGroups(configs: any, compositionId: CompositionId): void {\n\t\t// this.compositionGroupRepository.next(compositionId, CompositionGroupRepository.default);\n\t\tthis.compositionDispatcher.setGroups(compositionId, configs);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\thighlightColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId): void {\n\t\tthis.columnHighlightArchive.toggle(compositionId, new ColumnId(columnDefinitionId.getId()))\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { DomainEventBus, hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../api/composition.read-model-root-id';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionEventRepository } from '../api/composition.event-repository';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CompositionDomainEventRepository extends CompositionEventRepository {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonColumnsChanged(compositionId: CompositionReadModelRootId): HermesObservable<CompositionColumnsSetEvent> {\n\n\t\treturn this.onEvent(compositionId, CompositionColumnsSetEvent);\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionReadModelRootId): HermesObservable<number> {\n\n\t\treturn this.onEvent(compositionId, CompositionContainerWidthSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionReadModelRootRepository } from './composition.read-model-root-repository';\nimport { CompositionGroupArchive } from './group/composition-group.archive';\nimport { CompositionId } from '../api/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { FieldId } from '../../../structure/field/core/domain/field/field.id';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { GroupCollection } from '../api/group/group.collection';\nimport { CompositionWarehouse } from '../api/composition.warehouse';\nimport { Injectable } from '@angular/core';\nimport { hermesFilter, hermesMap, HermesObservable } from '@generic-ui/hermes';\nimport { ColumnId } from '../api/column/column.id';\nimport { ColumnHighlightArchive } from '../domain/highlight/column-highlight.archive';\nimport { ColumnHighlightManager } from '../domain/highlight/column-highlight.manager';\n\n@Injectable()\nexport class CompositionDomainWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionRepository: CompositionReadModelRootRepository,\n\t\t\t\tprivate readonly compositionGroupArchive: CompositionGroupArchive,\n\t\t\t\tprivate readonly columnHighlightArchive: ColumnHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tonWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId): HermesObservable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId): HermesObservable<ReadonlyArray<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId): HermesObservable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   hermesMap((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesFilter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   hermesMap(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId): HermesObservable<ReadonlyArray<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n\tonGroups(compositionId: CompositionId): HermesObservable<GroupCollection> {\n\t\treturn this.compositionGroupArchive.on(compositionId);\n\t}\n\n\tonHighlightedColumn(columnId: ColumnId, compositionId: CompositionId): HermesObservable<boolean> {\n\t\treturn this.columnHighlightArchive\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   hermesMap((manager: ColumnHighlightManager) => manager.isHighlighted(columnId))\n\t\t\t\t   );\n\t}\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ApiModule, HermesModule } from '@generic-ui/hermes';\n\nimport { compositionKey } from '../domain/composition.key';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionDomainModule } from '../domain/composition.domain-module';\nimport { inMemoryCompositionProviders, inMemoryCompositionReadModelProviders } from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { ColumnDefinitionFactory } from '../domain-read/definition/column-definition.factory';\nimport { ViewTemplateRepository } from '../domain-read/view/view-template.repository';\nimport { ViewTemplateFactory } from '../domain-read/view/view-template.factory';\nimport { EditTemplateFactory } from '../domain-read/edit/edit-template.factory';\nimport { EditTemplateRepository } from '../domain-read/edit/edit-template.repository';\nimport { CompositionReadModelRootConverter } from '../domain-read/composition.read-model-root-converter';\nimport { CompositionCommandInvoker } from './composition.command-invoker';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionGroupArchive } from '../domain-read/group/composition-group.archive';\nimport { CompositionDomainCommandInvoker } from '../domain/compositon.domain-command-invoker';\nimport { CompositionDomainEventRepository } from '../domain/composition.domain-event-repository';\nimport { CompositionDomainWarehouse } from '../domain-read/composition.domain-warehouse';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\t\t\t[\n\t\t\t\tCompositionDomainModule.commandHandlers()\n\t\t\t], [\n\t\t\t\tCompositionDomainModule.domainEventHandlers()\n\t\t\t]\n\t\t),\n\n\t\tCompositionDomainModule\n\n\t],\n\tproviders: [\n\t\t...inMemoryCompositionReadModelProviders,\n\t\tColumnDefinitionFactory,\n\t\tViewTemplateRepository,\n\t\tViewTemplateFactory,\n\t\tEditTemplateFactory,\n\t\tEditTemplateRepository,\n\n\t\t...inMemoryCompositionProviders,\n\n\t\tCompositionReadModelRootConverter,\n\n\t\tCompositionGroupArchive,\n\n\t\t{\n\t\t\tprovide: CompositionCommandInvoker,\n\t\t\tuseClass: CompositionDomainCommandInvoker\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionWarehouse,\n\t\t\tuseClass: CompositionDomainWarehouse\n\t\t},\n\t\t{\n\t\t\tprovide: CompositionEventRepository,\n\t\t\tuseClass: CompositionDomainEventRepository\n\t\t}\n\t],\n\tdeclarations: [],\n\texports: []\n})\nexport class CompositionApiModule extends ApiModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ChangeDetectorRef, ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/component/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tprotected constructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { fromRxJsObservable, hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\t\t\t  elementRef: ElementRef,\n\t\t\t\t\t\t  private readonly formBuilder: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: NgChanges<InputEditTemplateComponent<any>>) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\thermesFromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tfromRxJsObservable(\n\t\t\tthis.filterForm\n\t\t\t\t.controls[this.filterFieldName]\n\t\t\t\t.valueChanges\n\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-string-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\">\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\"/>\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef,\n\t\t\t\tfb: FormBuilder) {\n\t\tsuper(changeDetectorRef, elementRef, fb);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-number-edit';\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-boolean-edit';\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\nimport { StreamCloser } from '../../../../../common/cdk/reactive/stream-closer';\nimport { hermesFilter, hermesFromEvent } from '@generic-ui/hermes';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tprivate readonly localStreamCloser = new StreamCloser();\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\telementRef: ElementRef) {\n\t\tsuper(changeDetectorRef, elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = hermesFromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\thermesFilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.localStreamCloser.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.localStreamCloser.unsubscribe();\n\t\tsuper.ngOnDestroy();\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.localStreamCloser.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-date-edit';\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column[header]',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { CellValue } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div class=\"gui-h-full gui-flex gui-items-center\"\n\t\t\t [innerHTML]=\"safeHTML\">\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent extends PureComponent {\n\n\t@Input()\n\telement: CellValue;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private readonly sanitizer: DomSanitizer,\n\t\t\t\tprivate readonly elRef: ElementRef) {\n\t\tsuper(elRef);\n\n\t\tthis.addClassToHost('gui-h-full');\n\t\tthis.addClassToHost('gui-w-full');\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element.value);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-function-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent extends PureComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tngOnChanges(changes: NgChanges<BarViewComponent>) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-bar-view';\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: number;\n\n\tconstructor(elementRef: ElementRef) {\n\t\tsuper(elementRef);\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-percentage-view';\n\t}\n\n}\n","import { Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { CellValue, CellValueType } from '../../definition/cell-value';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n@Component({\n\tselector: 'gui-view-text[value]',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"isHtml; else text\">\n\t\t\t<span [innerHTML]=\"value.value | guiSafe: 'html'\"></span>\n\t\t</ng-container>\n\n\t\t<ng-template #text>\n\t\t\t<span>\n\t\t\t\t{{value.value}}\n\t\t\t</span>\n\t\t</ng-template>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TextViewComponent extends PureComponent {\n\n\t@Input()\n\tvalue: CellValue;\n\n\tisHtml = false;\n\n\tconstructor(@Attribute('bold') isBold: any,\n\t\t\t\t@Attribute('italic') isItalic: any,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2) {\n\t\tsuper(elementRef);\n\n\t\tif (isBold !== null) {\n\t\t\tthis.addClassToHost('gui-bold');\n\t\t}\n\n\t\tif (isItalic !== null) {\n\t\t\tthis.addClassToHost('gui-italic');\n\t\t}\n\t}\n\n\tngOnChanges() {\n\t\tthis.isHtml = this.value.type === CellValueType.HTML;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-text-view';\n\t}\n\n}\n","import { NgModule, Optional, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FeatureModule } from '@generic-ui/hermes';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { CompositionApiModule } from '../core/api/composition.api-module';\nimport { ViewTemplatesComponent } from '../core/domain-read/view/view-templates.component';\nimport { EditTemplatesComponent } from '../core/domain-read/edit/edit-templates.component';\n\nimport { SanitizeModule } from '../../common/cdk/sanitize/sanitize.module';\nimport { StringEditTemplateComponent } from '../core/domain-read/edit/template/string-edit-template.component';\nimport { NumberEditTemplateComponent } from '../core/domain-read/edit/template/number-edit-template.component';\nimport { BooleanEditTemplateComponent } from '../core/domain-read/edit/template/boolean-edit-template.component';\nimport { DateEditTemplateComponent } from '../core/domain-read/edit/template/date-edit-template.component';\nimport { ColumnQueryComponent } from './column/column-query.component';\nimport { FunctionViewComponent } from '../core/domain-read/view/function/function-view.component';\nimport { BarViewComponent } from '../core/domain-read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../core/domain-read/view/percentage/percentage-view.component';\nimport { TextViewComponent } from '../core/domain-read/view/text/text-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent,\n\tTextViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tCompositionApiModule,\n\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule\n\t],\n\tdeclarations: [\n\t\t...components\n\t],\n\texports: [\n\t\t...exportDeclarations\n\t],\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionFeatureModule extends FeatureModule {\n\n\tstatic forComponent(): Array<Provider> {\n\t\treturn [];\n\t}\n\n\tconstructor(@Optional() compositionApiModule: CompositionApiModule) {\n\t\tsuper();\n\t\tif (compositionApiModule === null) {\n\t\t\tthrow new Error('CompositionApiModule is required.');\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../composition/core/domain-read/definition/cell-template-with-context';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../../composition/core/domain/column/sort/sort-order';\nimport { SortingCommandInvoker } from '../../../../sorting/core/api/sorting.command-invoker';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { Group } from '../../../../../composition/core/api/group/group';\nimport { PureComponent } from '../../../../../common/cdk/component/pure-component';\n\n\n@Component({\n\tselector: 'div[gui-structure-header-groups][groups][checkboxSelection]',\n\ttemplateUrl: './structure-header-groups.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderGroupsComponent extends PureComponent {\n\n\t@Input()\n\tgroups: Array<Group>;\n\n\t@Input()\n\tshowGroups: boolean;\n\n\t@Input()\n\tcheckboxSelection: boolean = false;\n\n\tglobalSearching = false;\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly injector: Injector,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\tprivate readonly sortingCommandDispatcher: SortingCommandInvoker) {\n\t\tsuper(elementRef);\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.sortingCommandDispatcher.toggleSort(column.getFieldId(), this.compositionId, this.structureId);\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n\tprotected getSelectorName(): string {\n\t\treturn 'gui-structure-header-groups';\n\t}\n\n}\n","import { EventEmitter, OnDestroy } from '@angular/core';\n\nimport { NgChanges } from './ng-changes';\nimport { StreamCloser } from '../reactive/stream-closer';\nimport { HermesObservable, HermesSubject, hermesTakeUntil } from '@generic-ui/hermes';\n\nexport abstract class Gate<T = any> implements OnDestroy {\n\n\tprivate readonly streamCloser = new StreamCloser();\n\n\tprivate readonly hermesUnsubscribe$ = new HermesSubject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.streamCloser.unsubscribe();\n\t\tthis.hermesUnsubscribe();\n\t}\n\n\tisDefined(propertyName: string, changes: NgChanges<T>): boolean {\n\t\treturn changes[propertyName] !== undefined && changes[propertyName].currentValue !== undefined;\n\t}\n\n\tsubscribeAndEmit<V>(\n\t\tstream$: HermesObservable<V>,\n\t\temitter: EventEmitter<V>\n\t): void {\n\t\tstream$\n\t\t\t.pipe(\n\t\t\t\tthis.hermesTakeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: V) => {\n\t\t\t\temitter.emit(value);\n\t\t\t});\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.streamCloser.unsubscribe();\n\t}\n\n\tprotected hermesUnsubscribe(): void {\n\t\tthis.hermesUnsubscribe$.next();\n\t\tthis.hermesUnsubscribe$.complete();\n\t}\n\n\tprotected hermesTakeUntil(): any {\n\t\treturn hermesTakeUntil(this.hermesUnsubscribe$);\n\t}\n\n\tprotected takeUntil() {\n\t\treturn this.streamCloser.takeUntil();\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { SearchConfig } from '../../core/api/search-config';\nimport { SearchEventRepository } from '../../core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../core/api/search.command-invoker';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\n\nexport abstract class SearchingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly searchEventRepository: SearchEventRepository,\n\t\t\t\t\t\t  protected readonly searchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SearchingGate>) {\n\n\t\tif (this.isDefined('searching', changes)) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.searchCommandInvoker.setSearchingConfig(searching, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.searchEventRepository.onSearchPhrase(this.structureId.toReadModelRootId()),\n\t\t\tthis.searchPhraseChanged\n\t\t);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SearchingGate } from '../../../../search/feature/gate/searching.gate';\nimport { SearchEventRepository } from '../../../../search/core/api/search.event-repository';\nimport { SearchCommandInvoker } from '../../../../search/core/api/search.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[searching]'\n})\nexport class StructureSearchingGate extends SearchingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tsearchEventRepository: SearchEventRepository,\n\t\t\t\tsearchCommandInvoker: SearchCommandInvoker) {\n\t\tsuper(structureId, searchEventRepository, searchCommandInvoker);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureHeaderTopEnabledArchive } from '../../../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../../../header/structure-header-bottom-enabled.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnHeaderTop][columnHeaderBottom], gui-structure[columnHeaderTop], gui-structure[columnHeaderBottom]'\n})\nexport class StructureColumnHeaderGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\tconstructor(private readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnHeaderGate>) {\n\n\t\tif (this.isDefined('columnHeaderTop', changes)) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (this.isDefined('columnHeaderBottom', changes)) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { PagingConfig } from '../../core/api/paging-config';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { PagingCommandInvoker } from '../../core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../core/api/paging.event-repository';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../composition/core/api/composition.id';\n\n\nexport abstract class PagingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly compositionId: CompositionId,\n\t\t\t\t\t\t  protected readonly pagingCommandInvoker: PagingCommandInvoker,\n\t\t\t\t\t\t  protected readonly pagingEventRepository: PagingEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<PagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.compositionId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.pagingEventRepository.onPageSizeChange(this.structureId.toReadModelRootId()),\n\t\t\tthis.pageSizeChanged\n\t\t);\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\nimport { PagingCommandInvoker } from '../../../../paging/core/api/paging.command-invoker';\nimport { PagingEventRepository } from '../../../../paging/core/api/paging.event-repository';\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { PagingGate } from '../../../../paging/feature/gate/paging.gate';\nimport { PagingConfig } from '../../../../paging/core/api/paging-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { PagingDisplayModeArchive } from '../../../../paging/feature/mode/paging-display-mode.archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { CompositionId } from '../../../../../composition/core/api/composition.id';\n\n\n@Directive({\n\tselector: 'gui-structure[paging]'\n})\nexport class StructurePagingGate extends PagingGate {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tstructurePagingCommandDispatcher: PagingCommandInvoker,\n\t\t\t\tpagingEventRepository: PagingEventRepository,\n\t\t\t\tprivate readonly pagingDisplayModeArchive: PagingDisplayModeArchive) {\n\t\tsuper(structureId, compositionId, structurePagingCommandDispatcher, pagingEventRepository);\n\t}\n\n\t@Override\n\tngOnChanges(changes: NgChanges<StructurePagingGate>) {\n\n\t\tif (this.isDefined('paging', changes)) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.pagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandInvoker.setPaging(pagingConfig, this.structureId);\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { StructureId } from '../../../core/api/structure.id';\nimport { RowSelection } from '../../core/api/row-selection';\nimport { SelectedRow } from '../../core/api/formation/selected-row';\nimport { FormationEventRepository } from '../../core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../core/api/formation/type/row-selection-type.archive';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\n\nexport abstract class SelectionGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowSelection: RowSelection;\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tselectedRows: EventEmitter<Array<SelectedRow>> = new EventEmitter();\n\n\tprotected constructor(protected readonly structureId: StructureId,\n\t\t\t\t\t\t  protected readonly formationEventService: FormationEventRepository,\n\t\t\t\t\t\t  protected readonly formationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\t\t\t  protected readonly rowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SelectionGate>) {\n\n\t\tif (this.isDefined('rowSelection', changes)) {\n\t\t\tif (this.rowSelection.isEnabledDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.setSelection(this.rowSelection.isEnabled(), this.structureId);\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isTypeDefined()) {\n\t\t\t\tthis.rowSelectionTypeArchive.next(this.rowSelection.getType());\n\t\t\t}\n\n\t\t\tif (this.rowSelection.isModeDefined()) {\n\t\t\t\tthis.formationCommandDispatcher.changeMode(this.rowSelection.getMode(), this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.hermesTakeUntil())\n\t\t\t.subscribe((items: Array<SelectedRow>) => {\n\t\t\t\tthis.itemsSelected.emit(items.map(i => i.getSource()));\n\t\t\t\tthis.selectedRows.emit(items);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { StructureId } from '../../../../core/api/structure.id';\nimport { SelectionGate } from '../../../../source/feature/gate/selection.gate';\nimport { FormationEventRepository } from '../../../../source/core/api/formation/formation.event-repository';\nimport { FormationCommandInvoker } from '../../../../source/core/api/formation/formation.command-invoker';\nimport { RowSelectionTypeArchive } from '../../../../source/core/api/formation/type/row-selection-type.archive';\n\n\n@Directive({\n\tselector: 'gui-structure[rowSelection], gui-structure[selectionGate]'\n})\nexport class StructureSelectionGate extends SelectionGate {\n\n\t@Input()\n\tselectionGate: void;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tformationEventService: FormationEventRepository,\n\t\t\t\tformationCommandDispatcher: FormationCommandInvoker,\n\t\t\t\trowSelectionTypeArchive: RowSelectionTypeArchive) {\n\t\tsuper(structureId, formationEventService, formationCommandDispatcher, rowSelectionTypeArchive);\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { GuiLocalization } from '../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { TranslationFacade } from '../../../../../l10n/core/api/translation.facade';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[localization]'\n})\nexport class StructureL10nGate extends Gate implements OnChanges {\n\n\t@Input()\n\tlocalization: GuiLocalization;\n\n\tconstructor(private readonly translationService: TranslationFacade) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureL10nGate>) {\n\n\t\tif (this.isDefined('localization', changes)) {\n\t\t\tif (this.localization.translationResolver) {\n\t\t\t\tthis.translationService.setResolver(this.localization.translationResolver);\n\t\t\t}\n\n\t\t\tif (this.localization.translation) {\n\t\t\t\tthis.translationService.changeTranslation(this.localization.translation);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { StructureTitlePanelConfigArchive } from '../../panel/banner-panels/title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from '../../panel/banner-panels/footer-panel/structure.footer-panel.config-archive';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureBannerPanelConfig } from '../../panel/banner-panels/structure-banner-panel.config';\n\n@Directive({\n\tselector: 'gui-structure[titlePanel][footerPanel]'\n})\nexport class StructurePanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\ttitlePanel: StructureBannerPanelConfig;\n\n\t@Input()\n\tfooterPanel: StructureBannerPanelConfig;\n\n\tconstructor(private readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructurePanelGate>) {\n\n\t\tif (this.isDefined('titlePanel', changes)) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (this.isDefined('footerPanel', changes)) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { RowDetailConfig } from '../../../row-detail/row-detail.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureRowDetailConfigArchive } from '../../../row-detail/structure.row-detail.config-archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowDetail]'\n})\nexport class StructureRowDetailGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\tconstructor(private readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowDetailGate>) {\n\n\t\tif (this.isDefined('rowDetail', changes)) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { ColumnMenuConfig } from '../../../../core/api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../../../header/menu/config/structure.column-menu-config.archive';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[columnMenu]'\n})\nexport class StructureColumnMenuGate extends Gate implements OnChanges {\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\tconstructor(private readonly structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureColumnMenuGate>) {\n\n\t\tif (this.isDefined('columnMenu', changes)) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SummariesConfig } from '../../core/api/summaries-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SummariesCommandInvoker } from '../../core/api/summaries.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[summaries]'\n})\nexport class StructureSummariesGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly summariesCommandInvoker: SummariesCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSummariesGate>) {\n\n\t\tif (this.isDefined('summaries', changes)) {\n\t\t\tthis.summariesCommandInvoker.setConfig(this.summaries, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { InfoPanelConfig } from '../../../../core/api/panel/info/info-panel.config';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { StructureInfoPanelConfigService } from '../../../../core/api/panel/info/structure.info-panel-config.service';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n\n@Directive({\n\tselector: 'gui-structure[infoPanel]'\n})\nexport class StructureInfoPanelGate extends Gate implements OnChanges {\n\n\t@Input()\n\tinfoPanel: boolean | InfoPanelConfig;\n\n\tconstructor(protected readonly structureInfoPanelConfigService: StructureInfoPanelConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureInfoPanelGate>) {\n\n\t\tif (this.isDefined('infoPanel', changes)) {\n\t\t\tif (typeof this.infoPanel === 'boolean') {\n\t\t\t\tthis.infoPanel = {\n\t\t\t\t\tenabled: this.infoPanel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.structureInfoPanelConfigService.set(this.infoPanel);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowClass } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowClass } from '../../../../../../schema/core/api/styling/schema.row-class';\nimport { SchemaRowClassArchive } from '../../../../../../schema/core/api/styling/schema.row-class.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowClass]'\n})\nexport class StructureRowClassGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowClass: GuiRowClass;\n\n\tconstructor(private readonly schemaRowClassArchive: SchemaRowClassArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowClassGate>) {\n\n\t\tif (this.isDefined('rowClass', changes)) {\n\t\t\tthis.schemaRowClassArchive.next(this.rowClass as SchemaRowClass);\n\t\t}\n\t}\n\n}\n","import { Directive, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\n\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { RowColoring } from '../../../../../../schema/core/api/row-coloring/row-coloring';\nimport { SchemaRowColoring } from '../../../../../../schema/core/api/row-coloring/schema-row-coloring';\nimport { SchemaCommandInvoker } from '../../../../../../schema/core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../../../../schema/core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../../../../schema/core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowColoring]'\n})\nexport class StructureRowColoringGate extends Gate implements OnChanges, OnInit, OnDestroy {\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowColoringGate>) {\n\n\t\tif (this.isDefined('rowColoring', changes)) {\n\t\t\tthis.schemaCommandInvoker.setRowColoring(this.rowColoring, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onRowColoring(this.schemaId),\n\t\t\tthis.rowColoringChanged\n\t\t);\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\nimport { Gate } from '../../../../../../common/cdk/component/gate';\nimport { GuiRowStyle } from '../../../../../../gui/grid/core/api/gui.grid.public-api';\nimport { SchemaRowStyle } from '../../../../../../schema/core/api/styling/schema.row-style';\nimport { SchemaRowStyleArchive } from '../../../../../../schema/core/api/styling/schema.row-style.archive';\nimport { NgChanges } from '../../../../../../common/cdk/component/ng-changes';\n\n@Directive({\n\tselector: 'gui-structure[rowStyle]'\n})\nexport class StructureRowStyleGate extends Gate implements OnChanges {\n\n\t@Input()\n\trowStyle: GuiRowStyle;\n\n\tconstructor(private readonly schemaRowStyleArchive: SchemaRowStyleArchive) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureRowStyleGate>) {\n\n\t\tif (this.isDefined('rowStyle', changes)) {\n\t\t\tthis.schemaRowStyleArchive.next(this.rowStyle as SchemaRowStyle);\n\t\t}\n\t}\n\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { SchemaCommandInvoker } from '../../../core/api/schema.command-invoker';\nimport { SchemaEventRepository } from '../../../core/api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../core/api/schema.read-model-root-id';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { Directive, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\n\n\n@Directive({\n\tselector: 'gui-structure[verticalGrid][horizontalGrid]'\n})\nexport class ThemeGridGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\tconstructor(private readonly schemaId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaCommandInvoker: SchemaCommandInvoker,\n\t\t\t\tprivate readonly schemaEventRepository: SchemaEventRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<ThemeGridGate>): void {\n\n\t\tif (this.isDefined('verticalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setVerticalGrid(this.verticalGrid, this.schemaId);\n\t\t}\n\n\t\tif (this.isDefined('horizontalGrid', changes)) {\n\t\t\tthis.schemaCommandInvoker.setHorizontalGrid(this.horizontalGrid, this.schemaId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onHorizontalGridChanged(this.schemaId),\n\t\t\tthis.horizontalGridChanged\n\t\t);\n\n\t\tthis.subscribeAndEmit(\n\t\t\tthis.schemaEventRepository.onVerticalGridChanged(this.schemaId),\n\t\t\tthis.verticalGridChanged\n\t\t);\n\t}\n}\n","import { Directive, Input, OnChanges, OnInit } from '@angular/core';\nimport { Gate } from '../../../../../common/cdk/component/gate';\nimport { SourceCommandInvoker } from '../../../../source/core/api/source.command-invoker';\nimport { NgChanges } from '../../../../../common/cdk/component/ng-changes';\nimport { StructureId } from '../../../../core/api/structure.id';\n\n\n@Directive({\n\tselector: 'gui-structure[loading]'\n})\nexport class SourceLoadingGate extends Gate implements OnChanges, OnInit {\n\n\t@Input()\n\tloading: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sourceCommandInvoker: SourceCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<SourceLoadingGate>): void {\n\n\n\t\tif (this.isDefined('loading', changes)) {\n\t\t\tthis.sourceCommandInvoker.setLoading(this.loading, this.structureId);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t}\n}\n","import { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { Directive, Input, OnChanges } from '@angular/core';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[virtualScroll]'\n})\nexport class VerticalFormationGate extends Gate implements OnChanges {\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<VerticalFormationGate>): void {\n\n\t\tif (this.isDefined('virtualScroll', changes)) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandInvoker.enableVirtualScroll(this.structureId);\n\t\t\t} else {\n\t\t\t\tthis.structureCommandInvoker.disableVirtualScroll(this.structureId);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { StructureId } from '../../../core/api/structure.id';\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { SortingConfig } from '../../core/api/sorting-config';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { SortingCommandInvoker } from '../../core/api/sorting.command-invoker';\n\n\n@Directive({\n\tselector: 'gui-structure[sorting]'\n})\nexport class StructureSortingGate extends Gate implements OnChanges {\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingCommandInvoker: SortingCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureSortingGate>) {\n\n\t\tif (this.isDefined('sorting', changes)) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.sortingCommandInvoker.setSortingConfig(sorting, this.structureId);\n\t\t}\n\n\t}\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { FilterConfig } from '../../core/api/filter-config';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[filtering]'\n})\nexport class StructureFilterGate extends Gate implements OnChanges {\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureFilterGate>) {\n\n\t\tif (this.isDefined('filtering', changes)) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setFilterConfig(filtering, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { Directive, Input, OnChanges } from '@angular/core';\n\nimport { Gate } from '../../../../common/cdk/component/gate';\nimport { NgChanges } from '../../../../common/cdk/component/ng-changes';\nimport { StructureCommandInvoker } from '../../../core/api/structure.command-invoker';\nimport { QuickFiltersConfig } from '../../core/api/quick-filters.config';\nimport { StructureId } from '../../../core/api/structure.id';\n\n@Directive({\n\tselector: 'gui-structure[quickFilters]'\n})\nexport class StructureQuickFiltersGate extends Gate implements OnChanges {\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandInvoker: StructureCommandInvoker) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: NgChanges<StructureQuickFiltersGate>) {\n\n\t\tif (this.isDefined('quickFilters', changes)) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandInvoker.setQuickFiltersConfig(quickFilters, this.structureId);\n\t\t}\n\n\t}\n\n}\n","import { StructureSearchingGate } from './searching/structure-searching.gate';\nimport { StructureColumnHeaderGate } from './column/header/structure-column-header.gate';\nimport { StructurePagingGate } from './paging/structure-paging.gate';\nimport { StructureSelectionGate } from './source/structure-selection.gate';\nimport { StructureL10nGate } from './l10n/structure-l10n.gate';\nimport { StructurePanelGate } from './panel/structure-panel.gate';\nimport { StructureRowDetailGate } from './row/detail/structure-row-detail.gate';\nimport { StructureColumnMenuGate } from './column/menu/structure-column-menu.gate';\nimport { StructureSummariesGate } from '../../../summaries/feature/gate/structure-summaries.gate';\nimport { StructureInfoPanelGate } from './panel/info/structure-info-panel.gate';\nimport { StructureRowClassGate } from './row/class/structure-row-class.gate';\nimport { StructureRowColoringGate } from './row/coloring/structure-row-coloring.gate';\nimport { StructureRowStyleGate } from './row/style/structure-row-style.gate';\nimport { ThemeGridGate } from '../../../../schema/feature/gate/grid/theme-grid.gate';\nimport { SourceLoadingGate } from './source/source-loading.gate';\nimport { VerticalFormationGate } from '../../../vertical-formation/feature/gate/vertical-formation.gate';\nimport { StructureSortingGate } from '../../../sorting/feature/gate/structure-sorting.gate';\nimport { StructureFilterGate } from '../../../filter/feature/gate/structure-filter.gate';\nimport { StructureQuickFiltersGate } from '../../../filter/feature/gate/structure-quick-filters.gate';\n\nexport const structureGates = [\n\tStructureColumnHeaderGate,\n\tStructurePagingGate,\n\tStructureSearchingGate,\n\t// StructureSourceGate,\n\tStructureSelectionGate,\n\tStructureL10nGate,\n\tStructurePanelGate,\n\tStructureRowDetailGate,\n\tStructureColumnMenuGate,\n\tStructureSummariesGate,\n\tStructureInfoPanelGate,\n\tStructureRowClassGate,\n\tStructureRowStyleGate,\n\tStructureRowColoringGate,\n\tThemeGridGate,\n\tStructureSortingGate,\n\tSourceLoadingGate,\n\tStructureFilterGate,\n\tStructureQuickFiltersGate,\n\tVerticalFormationGate\n];\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModifier } from './css-class.modifier';\n\n@NgModule({\n\tproviders: [\n\t\tCssClassModifier\n\t]\n})\nexport class CssClassModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { CssClassModule } from './css-class/css-class.module';\n\n\n@NgModule({\n\timports: [\n\t\tCssClassModule\n\t]\n})\nexport class StructureSharedModule {\n}\n","import { NgModule } from '@angular/core';\n\nimport { ResizeDetector } from './resize.detector';\n\n@NgModule({\n\tproviders: [\n\t\tResizeDetector\n\t]\n})\nexport class ResizeDetectorModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../../feature/structure-fabric.imports';\nimport { PagingFeatureModule } from '../../../paging/feature/paging.feature-module';\nimport { StructureInfoPanelModule } from '../../feature/panel/info/structure.info-panel.module';\nimport { StructureComponent } from '../../feature/structure.component';\nimport { StructureHeaderComponent } from '../../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../../feature/header/column/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../../feature/header/menu/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../../feature/structure-definition';\nimport { StructureIdGenerator } from '../../feature/structure-id.generator';\nimport { structureCommandHandlers, structureDomainEventHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../../feature/structure-module-config';\nimport { LoggerModule } from '../../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../../../source/core/domain/core/item/item.entity-factory';\nimport { StructureTopPanelModule } from '../../feature/panel/top/structure.top-panel.module';\nimport { StructureColumnMenuModule } from '../../feature/header/menu/structure.column-menu.module';\nimport { StructureColumnManagerModule } from '../../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../../../core/domain/structure.aggregate-factory';\nimport { InMemoryStructureAggregateRepository } from '../../../core/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../../../core/domain/create-structure/create-structure-command-handler.service';\nimport { StructureCellEditComponent } from '../../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../../feature/schema/structure.theme.converter';\nimport { StructureCellEditBooleanComponent } from '../../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../../feature/panel/banner-panels/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../../feature/panel/banner-panels/footer-panel/structure.footer-panel.component';\nimport { PagingDomainModule } from '../../../paging/core/domain/paging.domain-module';\nimport { EmptySourceFeatureModule } from '../../../source/feature/empty/empty-source.feature-module';\nimport { SortingDomainModule } from '../../../sorting/core/domain/sorting.domain-module';\nimport { SortingFeatureModule } from '../../../sorting/feature/sorting.feature-module';\nimport { FieldFeatureModule } from '../../../field/feature/field.feature-module';\nimport { FieldDomainModule } from '../../../field/core/domain/field.domain-module';\nimport { SearchFeatureModule } from '../../../search/feature/search.feature-module';\nimport { SearchDomainModule } from '../../../search/core/domain/search.domain-module';\nimport { SchemaManagerModule } from '../../../../schema/feature/manager/schema-manager.module';\nimport { FilterDomainModule } from '../../../filter/core/domain/filter.domain-module';\nimport { SourceDomainModule } from '../../../source/core/domain/source.domain-module';\nimport { SelectAllComponent } from '../../feature/header/column/select-all/select-all.component';\nimport { structureKey } from '../../../core/api/structre.key';\nimport { SummariesDomainModule } from '../../../summaries/core/domain/summaries.domain-module';\nimport { SummariesFeatureModule } from '../../../summaries/feature/summaries.feature-module';\nimport { VerticalFormationFeatureModule } from '../../../vertical-formation/feature/vertical-formation.feature-module';\nimport { VerticalFormationDomainModule } from '../../../vertical-formation/core/domain/vertical-formation.domain-module';\nimport { SchemaFeatureModule } from '../../../../schema/feature/schema.feature-module';\nimport { CompositionFeatureModule } from '../../../../composition/feature/composition.feature-module';\nimport { TranslationFeatureModule } from '../../../../l10n/feature/translation.feature-module';\nimport { StructureHeaderGroupsComponent } from '../../feature/header/group/structure-header-groups.component';\nimport { structureGates } from '../../feature/gate/structure.gates';\nimport { FilterMenuFeatureModule } from '../../../filter/feature/menu/filter-menu.feature-module';\nimport { SourceFeatureModule } from '../../../source/feature/source.feature-module';\nimport { StructureSharedModule } from '../../../common/structure-shared.module';\nimport { SanitizeModule } from '../../../../common/cdk/sanitize/sanitize.module';\nimport { ResizeDetectorModule } from '../../../../common/cdk/resize-detector/resize-detector.module';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tTranslationFeatureModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...PagingDomainModule.commandHandlers(),\n\t\t\t...SortingDomainModule.commandHandlers(),\n\t\t\t...FieldDomainModule.commandHandlers(),\n\t\t\t...SearchDomainModule.commandHandlers(),\n\t\t\t...FilterDomainModule.commandHandlers(),\n\t\t\t...SourceDomainModule.commandHandlers(),\n\t\t\t...SummariesDomainModule.commandHandlers(),\n\t\t\t...VerticalFormationDomainModule.commandHandlers(),\n\t\t\t...structureCommandHandlers\n\t\t], [\n\t\t\t...structureDomainEventHandlers,\n\t\t\t...SearchDomainModule.domainEventHandlers(),\n\t\t\t...FilterDomainModule.domainEventHandlers(),\n\t\t\t...SourceDomainModule.domainEventHandlers(),\n\t\t\t...SummariesDomainModule.domainEventHandlers(),\n\t\t\t...FieldDomainModule.domainEventHandlers(),\n\t\t\t...VerticalFormationDomainModule.domainEventHandlers()\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\tResizeDetectorModule,\n\n\tPagingFeatureModule,\n\tSortingFeatureModule,\n\tFieldFeatureModule,\n\tSearchFeatureModule,\n\tFilterMenuFeatureModule,\n\tSourceFeatureModule,\n\tSummariesFeatureModule,\n\tVerticalFormationFeatureModule,\n\n\tSchemaFeatureModule,\n\n\tStructureSharedModule,\n\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\tSchemaManagerModule,\n\n\tEmptySourceFeatureModule,\n\n\tCompositionFeatureModule,\n\n\tLoggerModule,\n\tSanitizeModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderGroupsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tSelectAllComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent,\n\n\t...structureGates\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tPagingFeatureModule,\n\t...structureGates\n];\n\n@NgModule({\n\timports: [\n\t\timports\n\t],\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tprivate static readonly HERMES_API = 'hermesApi';\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow[StructureModule.HERMES_API].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GuiGridComponent } from '../../feature/grid/gui.grid.component';\n\nimport { StructureModule } from '../../../../structure/grid/core/api/structure.module';\n\nimport { GuiGridIdGenerator } from '../../feature/grid/register/gui.grid-id.generator';\nimport { GuiGridRegister } from '../../feature/grid/register/gui.grid.register';\nimport { GuiGridColumnComponent } from '../../feature/grid/column/gui.grid-column.component';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst providers = [\n\tGuiGridIdGenerator,\n\tGuiGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGuiGridComponent,\n\tGuiGridColumnComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GuiGridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}