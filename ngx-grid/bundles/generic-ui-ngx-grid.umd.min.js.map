{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/composition/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/column-manager/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","onPageChange","page","emit","onPageSizeChange","pageSize","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","paging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","PagingRepository","structureRepository","on","onStructure","pipe","filter","structure","getId","toString","getPaging","StructureRepository","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","Command","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","pagerTop","changePagerBottom","pagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","alternativeDisplay","subscribe","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","pageSizes","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureInfoPanelComponent","dialog","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","open","FabricDialogService","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","select","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","injector","Injector","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortStatus","SortStatus","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","getFieldId","getSortStatus","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","entity","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","getWidth","createColumns","Composition","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","ReadModel","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionInitedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","InMemoryCompositionRepository","domainEventBus","inMemoryCompositionQueryStore","composition$","ofEvent","event","DomainEventBus","CompositionRepository","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","isTypePercentage","ColumnWidthType","isTypeAuto","isTypeNumber","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumnsWidth","getWidths","getMinWidth","setColumns","columnConfigs","calculator","ColumnId","ColumnEntityFactory","data","isArray","createColumn","params","columnEntity","RandomStringGenerator","generate","convertWidth","columnEntities","ColumnsSetAggregateEvent","AggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","compositionId","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","changeSort","sortParams","param","direction","this_1","sortParams_1","sortParams_1_1","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","widths","updateColumnsWidths","setActiveColumnsWithEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","addEvent","enableColumn","enabledIndex","prevState","columnToAdd","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","getSortParams","CompositionSetColumnEnabledCommand","CompositionDispatcher","init","setColumnEnabled","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handle","command","compositionAggregate","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","getAggregateId","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","events","getEvents","domainEvents","publish","SetCompositionWidthCommandHandler","columnConverter","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","getValue","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onWidthChanged","onContainerWidthChanged","getPayload","CompositionId","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","CompositionSetColumnEnabledCommandHandler","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","pagingConfig","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","height","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","getSchema","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","schema","getHeight","onContainerHeight","getContainerHeight","onCssClasses","getCssClasses","onColumnHeader","getColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","verticalGrid","grid","toggleHorizontalGrid","horizontalGrid","toggleTopHeader","columnHeader","isTopHeaderEnabled","toggleBottomHeader","isBottomHeaderEnabled","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","getFormation","FormationReadModelService","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","StructureSetConfigSearchingCommand","searchConfig","InitFieldsCommand","StructureSetSearchPhraseCommand","phrase","SetSortOrderCommand","sortOrder","getSortOrder","StructureCommandService","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setSearchingConfig","search","LocalStructureCommandService","StructureReadModelService","onVerticalScrollEnabled","isVerticalScrollEnabled","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","Archive","archive$","BehaviorSubject","onValue","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","simpleChanges","nextConfig","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","loading","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","getData","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","getSelectedEntities","StructureColumnMenuConfig","isMainEnabled","isSort","isFilter","isColumns","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","isLoaderVisible","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","Renderer2","StructureColumnConfigComponent","compositionReadModelService","placement","Placement","Right","isNoneSort","StructureColumnConfigService","inlineDialogService","parent","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","isSortAsc","isSortDesc","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowsList","clearSelectedRows","getIds","strippedId","selectedRowEl","trackByFn","translateY","selectedElements","querySelectorAll","el","ItemEntity","version","getUiId","getVersion","getPosition","isEven","isOdd","equalsById","Entity","StructureRowComponent","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combineLatest","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","containerHeight","topMargin","getTopMargin","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","selectSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","StructureAggregationsChangedEvent","getAggregations","StructureAggregationUiEventsRepository","onAggregationsChanged","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","aggregations","isAggregateTypePresent","InMemoryStructureStore","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","clearEvents","StructureAggregateRepository","SelectedRowsList","rowIds","isRowSelected","Formation","selectedRows","selectedRowsList","FormationConverter","rows","SchemaCssClass","getRowColoring","Schema","verticalGridEnabled","horizontalGridEnabled","getTheme","isVerticalGridEnabled","isHorizontalGridEnabled","SchemaColumnHeader","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","Source","SourceConverter","VerticalFormationReadModel","viewportHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","selectedIds","some","isReadyToDisplay","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","getVerticalFormation","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","StructureInitedEvent","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","VerticalScrollEnabledSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","StructureSearchPhraseSetDomainEvent","InMemoryStructureRepository","inMemoryStructureQueryStore","structureIdToStructure","structure$","has","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","findIndex","SourceManagerFactory","VerticalRange","VerticalFormation","scrollPosition","rowHeight","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setRowHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","indexOf","FilterId","FilterSettings","filteringEnabled","isFilteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","hasDirection","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","setConfig","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","headerHeight","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchPhrase","searchableFields","removeSearchFilters","searchedItems","Set","e_1","StructurePreparedEntitiesSetAggregateEvent","getPreparedItems","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","getEnabled","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructurePreparedEntitiesSetEvent","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","newPageSize","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","console","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","searchForm","StructureTopPanelModule","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureMenuColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","stopPropagation","[class.gui-structure-menu-column-manager]","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","elementComponents","GridModule","imports$1","declarations$1","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumns?: boolean;\n\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/structure/domain/composition/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/structure/domain/composition/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/structure/domain/composition/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","import { EventEmitter, Input, Output, OnChanges, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn, GuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/structure/domain/composition/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{after: any, before: any}> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn  this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { Component, ChangeDetectionStrategy, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\t\t\t<p>Generic UI Grid</p>\n\t\t\t<p>version 0.5.5</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\t\t\t\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\t\t\t\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t{{ element }}\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t{{ element }}\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\" >\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\" >\n\t\t\t<gui-function-view [element]=\"element\" ></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\tselect(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { Inject, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\"></gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore, AggregateStoreRegister, AggregateId } from '@generic-ui/hermes';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n\t// @Override\n\t// getById(aggregateId: AggregateId): CompositionAggregate {\n\t// \tlet composition = super.getById(aggregateId);\n\t//\n\t// \tif (composition) {\n\t// \t\treturn composition.clone();\n\t// \t} else {\n\t// \t\treturn null;\n\t// \t}\n\t//\n\t// }\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortStatus } from './sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortStatus,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId) {\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.columnId, this.sortStatus, this.enabled);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId());\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortStatus\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModel, AggregateId } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../../domain/composition/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract on(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, takeUntil, tap } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../../domain/composition/read/composition.repository';\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../../domain/composition/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../../domain/composition/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../../domain/composition/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../../domain/composition/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../../domain/composition/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../../domain/composition/command/column/set-enabled/composition.column-set-enabled.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly composition$ = new ReplaySubject<Composition>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tCompositionColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\t\t\tthis.composition$.next(composition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((composition: Composition) => composition.getId().toString() === aggregateId.toString()),\n\t\t\t\t\t   filter((composition: Composition) => composition.isReady())\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t},\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumns(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { AggregateId, AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from '../column.entity';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly columns: Array<ColumnEntity>) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortStatus } from '../sort/sort-status';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n}\n","import { SortStatus } from '../sort/sort-status';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortStatus.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnWidthCollection } from './column/column-width/column-width-collection';\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\t/**\n\t * Collection of columns which are used in the composition.\n\t */\n\t\t// private activeColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer; // = new ActiveColumnContainer();\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\t\t// this.activeColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\t// this.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, width);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\t// return this.activeColumns;\n\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst newColumns = this.columnFactory.create(params),\n\t\t\twidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.updateColumnsWidths(newColumns, widths);\n\n\t\tthis.setActiveColumnsWithEvent(newColumns);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\n\t\tthis.columnWidthCollection.setWidth(this.getWidth());\n\n\t\tconst newColumns = [...this.getActiveColumns()];\n\n\t\t// REFAC\n\t\t// this.columnWidthCollection.setColumns(newColumns.map(c => c.getColumnConfig()));\n\t\t//\n\t\t// const widths = this.columnWidthCollection.getWidths();\n\t\t//\n\t\t// this.updateColumnsWidths(newColumns, widths);\n\t\t//\n\t\t// this.setActiveColumnsWithEvent(newColumns);\n\t}\n\n\tprivate updateColumnsWidths(columns: Array<ColumnEntity>, widths: Array<number>): void {\n\t\tcolumns.forEach((columnEntity: ColumnEntity, index: number) => {\n\t\t\tcolumnEntity.width = widths[index];\n\t\t});\n\t}\n\n\tprivate setActiveColumnsWithEvent(columns: Array<ColumnEntity>): void {\n\t\t// REFAC\n\t\t// this.activeColumns = columns;\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\t// clone(): CompositionAggregate {\n\t//\n\t// \tconst activeColumns = [...this.activeColumns],\n\t// \t\tallColumns = [...this.allColumns];\n\t//\n\t// \tlet composition = new CompositionAggregate(\n\t// \t\tthis.getId(),\n\t// \t\tthis.baseParams,\n\t// \t\tthis.width,\n\t// \t\tthis.resizeWidthEnabled\n\t// \t);\n\t//\n\t// \tcomposition.containerInDOMWidth = this.containerInDOMWidth;\n\t// \tcomposition.activeColumns = activeColumns;\n\t// \tcomposition.allColumns = allColumns;\n\t// \tcomposition.columnWidthCollection = this.columnWidthCollection;\n\t//\n\t// \treturn composition;\n\t// }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","export const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Command, DomainEventPublisher, CommandHandler, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tconst aggregateEvent = composition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { CompositionColumnsSetEvent } from '../../domain/composition/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../../domain/composition/read/composition.repository';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { Composition } from '../../domain/composition/read/composition';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { SortStatus } from '../../domain/composition/command/column/sort/sort-status';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortStatus> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../domain/composition/command/column/set-columns/column.params';\nimport { ColumnId } from '../../domain/composition/command/column/column.id';\n\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionSetColumnEnabledCommand);\n\t}\n\n\thandle(command: CompositionSetColumnEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.enableColumn(columnId, enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../../infrastructure/in-memory/composition/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../../domain/composition/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../../domain/composition/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../../domain/composition/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../../domain/composition/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../../domain/composition/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../../domain/composition/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../../domain/composition/command/column/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../../domain/composition/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../../domain/composition/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../../domain/composition/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../../domain/composition/composition.converter';\nimport { EditTemplateRepository } from '../../domain/composition/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../../domain/composition/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../../domain/composition/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../../domain/composition/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../../domain/composition/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../../domain/composition/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../../domain/composition/command/column/set-columns/composition-fields-inited.event-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../../domain/composition/command/column/set-enabled/composition.set-column-enabled.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionSetColumnEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../../domain/composition/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../../domain/composition/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../../domain/composition/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../../domain/composition/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../../domain/composition/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../../ui/composition/column-query.component';\nimport { FunctionViewComponent } from '../../domain/composition/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent{\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete()\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\nimport { SortStatus } from '../../../../composition/command/column/sort/sort-status';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortStatus } from '../../../../composition/command/column/sort/sort-status';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../composition/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortStatus) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortStatus {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set/structure.set-search-phrase.command';\nimport { SortStatus } from '../../domain/composition/command/column/sort/sort-status';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../domain/composition/column.config';\nimport { SortStatus } from '../../../domain/composition/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId)\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../composition/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../ui-api/composition/composition.command-service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionDispatcher } from '../../../domain/composition/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../../domain/composition/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../domain/composition/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../../domain/composition/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortStatus> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService},\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService},\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService},\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService},\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService},\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService},\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService},\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService},\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService},\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService},\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService},\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject, Subject, BehaviorSubject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import {\n\tEventEmitter,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges\n} from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\n\n\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId)\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined  && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch(state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, switchMap } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columns\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columns: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columns);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSort(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilter(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumns(): boolean {\n\t\treturn this.columns;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilter()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumns()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../domain/composition/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../ui-api/composition/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./composition/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild, Input } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { SortStatus } from '../../../domain/composition/command/column/sort/sort-status';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { Placement } from '@generic-ui/fabric';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isAscSort()\">\n\t\t\t\t\t\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isDescSort()\">\n\t\t\t\t\t\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t\t\t\t\t\t   [class.gui-header-text-bold]=\"isNoneSort()\">\n\t\t\t\t\t\t\t\t\tTurned off\n\t\t\t\t\t\t\t\t</gui-dropdown-item>\n\n\t\t\t\t\t\t\t</gui-dropdown>\n\t\t\t\t\t\t</div>\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Autosize This Column</div>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Autosize All Column</div>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">Reset Columns</div>-->\n<!--\t\t\t\t\t\t<hr>-->\n<!--\t\t\t\t\t\t<div class=\"gui-header-menu-item\">GenericUI is Great</div>-->\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilter()\">\n\t\t\t\t\t\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\t\t\t\t\t\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumns()\">\n\t\t\t\t\t\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\t\t\t\t\t\t\n\t\t\t\t\t</gui-tab-item>\n\t\t\t\t\t\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tsortStatus: SortStatus;\n\n\tstatus = SortStatus;\n\n\tplacement: Placement = Placement.Right;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') private column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortStatus) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n\ttoggleSort() {\n\t\tthis.structureCommandService.toggleSort(this.column.getFieldId());\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tsetSortOrder(sort: SortStatus): void {\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { InlineDialogPlacement } from '@generic-ui/fabric';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -8);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild, ViewEncapsulation, Injector } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortStatus } from '../../../domain/composition/command/column/sort/sort-status';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.select()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * 30}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation, SimpleChanges, OnDestroy, OnChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../domain/composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.accessor(entity) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\t\t\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges, OnDestroy {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: any;\n\n\tstatus$: any;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.accessor(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tComponent,\n\tChangeDetectionStrategy,\n\tViewChild,\n\tElementRef,\n\tRenderer2,\n\tOnDestroy,\n\tAfterViewInit,\n\tChangeDetectorRef,\n\tOnInit,\n\tInject,\n\tOptional,\n\tViewEncapsulation,\n\tNgZone\n} from '@angular/core';\nimport { Subject, combineLatest, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tthis.sourceQueryService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * 30);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1];\n\n\t\t\t\tconst sourceSizeHeight = source.length * 30;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchingRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.selectSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&sum;</span> Sum</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-mean\"><span>_</span><span>X Average</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&and;</span> Min</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&or;</span> Max</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-median\"><span>~</span><span>X Median</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore } from '@generic-ui/hermes';\nimport { AggregateStoreRegister } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\tconst structure = this.inMemoryStructureAggregateStore.getById(aggregateId);\n\n\t\tstructure.clearEvents();\n\n\t\treturn structure;\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion())\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\t\tSortOrderSetEvent as any,\n\t\t\t\tOriginSetEvent as any\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t},\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = {...this.rawData};\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t})\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../composition/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../composition/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortStatus } from '../../../composition/command/column/sort/sort-status';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortStatus): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortStatus.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortStatus.ASC || sortOrder === SortStatus.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortStatus.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../composition/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortStatus } from '../../composition/command/column/sort/sort-status';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues{\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { Type, Provider } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher, AggregateEvent } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from '../toggle/sort-toggled.event';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, OnInit } from \"@angular/core\";\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit {\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { Component, Input, ElementRef, Injector, ViewChild, OnInit, ChangeDetectorRef } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation } from \"@angular/core\";\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../../ui-api/composition/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../../domain/composition/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../ui-api/composition/composition.command-service';\n\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let column of columns\">\n\n\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\"\n\t\t\t\t\t\t  (click)=\"toggleColumn(column)\">\n\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-checkbox>\n\t\t\t\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId());\n\t\t}\n\t}\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../ui-api/composition/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureAggregationPanelComponent } from './panel/aggregation/structure.aggregation-panel.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureAggregationPanelConfigConverter } from './panel/aggregation/structure.aggregation-panel.config-converter';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureColumnConfigTriggerComponent } from './header/menu/structure.column-config-trigger.component';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\nimport { StructureMenuColumnManagerComponent } from './header/menu/column-manager/structure.menu-column-manager.component';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureTopPanelModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureAggregationPanelComponent,\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureMenuColumnManagerComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\tStructureAggregationPanelConfigConverter,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\t\tcssClassName: 'grid',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}