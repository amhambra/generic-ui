{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/config/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/config/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summary/structure.info-panel.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summary/structure.summary-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summary/structure.summary.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/summary/structure.summary.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/composition/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/composition/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/composition/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/composition/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.collection-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","onPageChange","page","emit","onPageSizeChange","pageSize","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","paging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","Injectable","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","StructureColumnConfigComponent","StructureColumnConfigService","dialogService","open","close","FabricDialogService","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","PagingRepository","structureRepository","select","onStructure","pipe","filter","structure","getId","toString","getPaging","StructureRepository","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","Command","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","pagerTop","changePagerBottom","pagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","selectOrigin","asObservable","distinctUntilChanged","SourceReadModelService","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","alternativeDisplay","subscribe","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","pageSizes","getPage","getPageSize","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","Math","ceil","isPrevPageDisabled","calculateStart","firstItem","calculateEnd","lastItem","calculateVisiblePages","numberOfVisiblePages","sample","start","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoPanel","Archive","archive$","BehaviorSubject","onValue","StructureSummaryEnabledArchive","StructureSummaryComponent","structureSummaryEnabledArchive","dialog","infoPanel","originSize","openInfo","StructureSummaryModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getWidth","getColumnType","isTypePercentage","ColumnWidthType","isTypeAuto","isTypeNumber","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","CompositionWidthCalculator","adjustMinimalWidth","newColumns","column","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumns","getColumnsWidth","getWidths","getMinWidth","setColumns","calculator","ASC","DESC","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnField","sortStatus","SortStatus","getField","getHeader","getDataType","setSortStatus","setView","ColumnEntityFactory","data","isArray","createColumns","createColumn","params","getColumn","columnEntity","convertWidth","columnEntities","ColumnsSetAggregateEvent","aggregateId","AggregateEvent","CompositionWidthSetAggregateEvent","CompositionContainerWidthSetAggregateEvent","compositionId","CompositionResizeWidthSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidth","columnWidthCollection","activeColumns","resizeWidthEnabled","columnFactory","param","baseParams","baseColumns","isResizeEnabled","isReady","composition","CompositionAggregate_1","widths","updateColumnsWidths","setActiveColumnsWithEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","changeSort","sortParams","fieldId","direction","this_1","sortParams_1","sortParams_1_1","addEvent","minWidth","RootAggregate","Boolean","Aggregate","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","getById","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","aggregate","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","injector","Injector","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","CellTemplateWithContext","viewTemplate","editTemplate","context","getFieldId","getSortStatus","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","entity","getAccessor","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","columnDef","findViewTemplate","findEditTemplate","Composition","uid","ready","getHeaderColumns","getTemplateColumns","getContainerWidth","isResizeWidthEnabled","equalsByColumns","ReadModel","CompositionConverter","columnDefinitionFactory","columnDefs","convertColumnsToColumnDef","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionInitedEvent","DomainEvent","CompositionResizeWidthSetEvent","ColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","InMemoryCompositionRepository","domainEventBus","inMemoryCompositionQueryStore","composition$","ofEvent","event","DomainEventBus","CompositionRepository","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","getSortParams","CompositionDispatcher","init","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handle","command","compositionAggregate","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","getAggregateId","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","events","getEvents","domainEvents","publish","SetCompositionWidthCommandHandler","columnConverter","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","getValue","ColumnFieldFactory","CompositionEventService","selectColumnsChanged","selectWidthChanged","selectContainerWidthChanged","getPayload","CompositionId","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","CompositionChangeSortStatusEventHandler","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPaginDefinition","isDisabled","change","pagingConfig","warn","find","ps","setPage","setPageSize","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","height","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","getSchema","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","schema","getHeight","onContainerHeight","getContainerHeight","onCssClasses","getCssClasses","onColumnHeader","getColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","verticalGrid","grid","toggleHorizontalGrid","horizontalGrid","toggleTopHeader","columnHeader","isTopHeaderEnabled","toggleBottomHeader","isBottomHeaderEnabled","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","getFormation","FormationReadModelService","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","StructureSetConfigSearchingCommand","searchConfig","InitFieldsCommand","StructureCommandService","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setFilterConfig","setQuickFiltersConfig","setSearchingConfig","initFields","LocalStructureCommandService","StructureReadModelService","onVerticalScrollEnabled","isVerticalScrollEnabled","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","entities","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","renderer","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureAggregationPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureAggregationConfigService","structureCellEditStore","simpleChanges","summaryPanel","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","loading","virtualScroll","sorting","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","getData","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","getSelectedEntities","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","isLoaderVisible","offsetWidth","timer","setStyle","isReadyToDisplay","[style.min-height.px]","[class.gui-structure-border]","[id]","Renderer2","StructureHeaderColumnsComponent","structureColumnConfigService","isSortAsc","isSortDesc","openConfigDialog","closeConfigDialog","StructureFilterRepository","enabled$","setEnabled","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","StructureHeaderFiltersComponent","cd","closed","filterMode","f","phrase","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowsList","clearSelectedRows","getIds","strippedId","selectedRowEl","trackByFn","translateY","selectedElements","querySelectorAll","el","ItemEntity","version","RandomStringGenerator","generate","getUiId","getVersion","equalsById","Entity","StructureRowComponent","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combineLatest","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","containerHeight","topMargin","getTopMargin","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureSearchComponent","searchForm","searchPhrase","console","log","StructureQuickFiltersComponent","StructureSearchingRepository","selectSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","summaryPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","StructureAggregationsChangedEvent","getAggregations","StructureAggregationUiEventsRepository","onAggregationsChanged","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","aggregations","isAggregateTypePresent","InMemoryStructureStore","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","clearEvents","StructureAggregateRepository","SelectedRowsList","rowIds","isRowSelected","Formation","selectedRows","selectedRowsList","FormationConverter","rows","SchemaCssClass","getRowColoring","Schema","verticalGridEnabled","horizontalGridEnabled","getTheme","isVerticalGridEnabled","isHorizontalGridEnabled","SchemaColumnHeader","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","Source","SourceConverter","VerticalFormationReadModel","viewportHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","selectedIds","some","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","getVerticalFormation","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","StructureInitedEvent","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","VerticalScrollEnabledSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","InMemoryStructureRepository","inMemoryStructureQueryStore","structureIdToStructure","structure$","has","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","slicedEntities","isFetched","setEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","splice","findIndex","SourceManagerFactory","VerticalRange","end","getStart","getEnd","VerticalFormation","scrollPosition","rowHeight","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setSourceSize","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setRowHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","indexOf","FilterId","FilterCollection","filters","setConfig","getAll","filteredEntities","filters_1","filters_1_1","arr","FilterCollectionFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","getDirection","changeDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","headerHeight","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","fieldCollection","search","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","ae","SchemaAggregateFactory","FormationAggregateFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterCollectionFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","getEnabled","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","newPageSize","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","SourceSetLoadingCommandHandler","sourceProviders","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","elementComponents","GridModule","imports$1","declarations$1","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/structure/domain/composition/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/structure/domain/composition/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/structure/domain/composition/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { EventEmitter, Input, Output, OnChanges, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/structure/domain/composition/column.config';\nimport { SchemaTheme } from '../../../../lib/structure/domain/schema/schema-theme';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\theight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsummaryPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{after: any, before: any}> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn  this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild, ViewEncapsulation, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'height'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: '',\n\ttemplate: `\n\t\n\t\tCOLUMN CONFIG !!!\n\t\n\t`\n})\nexport class StructureColumnConfigComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private dialogService: FabricDialogService) {\n\t}\n\n\n\topen(): void {\n\t\tthis.dialogService.open(StructureColumnConfigComponent);\n\t}\n\n\tclose(): void {\n\t\tthis.dialogService.close();\n\t}\n\n}\n","import { FabricBadgeModule, FabricDialogModule } from '@generic-ui/fabric';\nimport { FabricButtonModule } from '@generic-ui/fabric';\nimport { FabricButtonGroupModule } from '@generic-ui/fabric';\nimport { FabricCheckboxModule } from '@generic-ui/fabric';\nimport { FabricChipModule } from '@generic-ui/fabric';\nimport { FabricRadioButtonModule } from '@generic-ui/fabric';\nimport { FabricRadioGroupModule } from '@generic-ui/fabric';\nimport { FabricProgressBarModule } from '@generic-ui/fabric';\nimport { FabricProgressSpinnerModule } from '@generic-ui/fabric';\nimport { FabricSelectModule } from '@generic-ui/fabric';\nimport { FabricSpinnerModule } from '@generic-ui/fabric';\nimport { FabricToggleButtonModule } from '@generic-ui/fabric';\nimport { FabricInputModule } from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.select(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tconstructor() {\n\t}\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tselectOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .selectOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(sourceSize: number): boolean {\n\t\tif (sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(sourceSize: number): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(sourceSize: number): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (sourceSize < lastItem) {\n\t\t\treturn sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tconst sourceSize = source.length;\n\n\t\tlet start = this.calculateStart(sourceSize);\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd(sourceSize));\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, OnChanges, Output, EventEmitter } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled(this.sourceSize);\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { Component, ChangeDetectionStrategy, Input, SimpleChanges, OnChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tthis.firstItemIndex = this.paging.calculateStart(this.sourceSize);\n\t\t\tthis.lastItemIndex = this.paging.calculateEnd(this.sourceSize);\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled(this.sourceSize);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-panel\">\n\t\t\t<p>Generic UI Grid</p>\n\t\t\t<p>version 0.5.2</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoPanel {\n\n}\n","import { Observable, ReplaySubject, Subject, BehaviorSubject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureSummaryEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoPanel } from './structure.info-panel';\n\nimport { StructureSummaryEnabledArchive } from './structure.summary-enabled.archive';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-summary',\n\ttemplate: `\n\n\t\t<p>\n\t\t\tShowing <b>{{originSize | numberFormatter}}</b> items\n\t\t</p>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSummaryComponent extends SmartComponent implements OnInit {\n\n\toriginSize: number;\n\n\tinfoPanel = StructureInfoPanel;\n\n\tconstructor(private structureSummaryEnabledArchive: StructureSummaryEnabledArchive,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.originSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureSummaryComponent } from './structure.summary.component';\nimport { StructureInfoPanel } from './structure.info-panel';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureSummaryComponent,\n\t\tStructureInfoPanel\n\t],\n\texports: [\n\t\tStructureInfoPanel,\n\t\tStructureSummaryComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoPanel\n\t]\n})\nexport class StructureSummaryModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t{{ element }}\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t{{ element }}\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\">{{ element }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\" >\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\" >\n\t\t\t<gui-function-view [element]=\"element\" ></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\tselect(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { Inject, ChangeDetectionStrategy, ViewEncapsulation, Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\"></gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumns(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columns: Array<ColumnConfig>) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { HeaderTemplate } from '../../column.config';\nimport { SortStatus } from '../sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnField: ColumnField,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnField = columnField;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate{\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst column: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(field);\n\n\t\tif (column.header !== undefined) {\n\t\t\tcolumnEntity.header = column.header;\n\t\t}\n\n\t\tif (column.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(column.view));\n\t\t}\n\n\t\tif (column.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(column.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { AggregateId, AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from '../column.entity';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly columns: Array<ColumnEntity>) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnWidthCollection } from './column/column-width/column-width-collection';\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './sort/change-sort.params';\nimport { SortStatus } from './sort/sort-status';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\t/**\n\t * Collection of columns which are used in the composition.\n\t */\n\tprivate activeColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\t/**\n\t * DOM element's width\n\t */\n\tprivate containerWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columns = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columns;\n\t\tthis.width = width;\n\n\t\tthis.activeColumns = this.columnFactory.create(columnsParams);\n\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columns, width);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\t}\n\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.activeColumns.length > 0;\n\t}\n\n\tclone(): CompositionAggregate {\n\n\t\tconst activeColumns = [...this.activeColumns];\n\n\t\tlet composition = new CompositionAggregate(\n\t\t\tthis.getId(),\n\t\t\tthis.baseParams,\n\t\t\tthis.width,\n\t\t\tthis.resizeWidthEnabled\n\t\t);\n\n\t\tcomposition.containerWidth = this.containerWidth;\n\t\tcomposition.activeColumns = activeColumns;\n\t\tcomposition.columnWidthCollection = this.columnWidthCollection;\n\n\t\treturn composition;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tconst columns: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tthis.columnWidthCollection.setColumns(columns);\n\n\t\tconst newColumns = this.columnFactory.create(params),\n\t\t\twidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.updateColumnsWidths(newColumns, widths);\n\n\t\tthis.setActiveColumnsWithEvent(newColumns);\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\t// TODO Aggregate events\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\n\t\tthis.activeColumns.forEach((column: ColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.activeColumns.filter((column: ColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tthis.columnWidthCollection.setWidth(this.getWidth());\n\n\t\tconst newColumns = [...this.activeColumns],\n\t\t\twidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.updateColumnsWidths(newColumns, widths);\n\n\t\tthis.setActiveColumnsWithEvent(newColumns);\n\t}\n\n\tprivate updateColumnsWidths(columns: Array<ColumnEntity>, widths: Array<number>): void {\n\t\tcolumns.forEach((columnEntity: ColumnEntity, index: number) => {\n\t\t\tcolumnEntity.width = widths[index];\n\t\t});\n\t}\n\n\tprivate setActiveColumnsWithEvent(columns: Array<ColumnEntity>): void {\n\t\tthis.activeColumns = columns;\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.columnWidthCollection.getColumns());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerWidth = containerWidth;\n\t\t}\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore, AggregateStoreRegister, AggregateId } from '@generic-ui/hermes';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n\t@Override\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\tlet composition = super.getById(aggregateId);\n\n\t\tif (composition) {\n\t\t\treturn composition.clone();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t}\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/sort/sort-status';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortStatus: SortStatus) {\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId) {\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tconstructor(field: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.sortStatus);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId());\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../structure/command/field/data-type/data-type';\n\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(column.getField(), column.getHeader(), column.sortStatus);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModel, AggregateId } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly columns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetColumns(): Array<ColumnDefinition> {\n\t\treturn this.columns;\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.columns\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.columns\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.columns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.columns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tcolumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tcolumnDefs: Array<ColumnDefinition> = this.convertColumnsToColumnDef(columns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, columnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertColumnsToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { CompositionAggregate } from '../../../../domain/composition/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../../domain/composition/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract select(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class ColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\nimport { ColumnEntity } from '../column/column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../../domain/composition/read/composition.repository';\nimport { Composition } from '../../../../domain/composition/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../../domain/composition/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../../domain/composition/command/width/resize-width/composition-resize-width-set.event';\nimport { ColumnsSetEvent } from '../../../../domain/composition/command/column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../../domain/composition/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../../domain/composition/command/sort/composition-change-sort-status.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly composition$ = new ReplaySubject<Composition>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\t\t\tthis.composition$.next(composition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tselect(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((composition: Composition) => composition.getId().toString() === aggregateId.toString()),\n\t\t\t\t\t   filter((composition: Composition) => composition.isReady())\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../../domain/composition/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t},\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './sort/composition-change-sort-status.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","export const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { ColumnsSetEvent } from './column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new ColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Command, DomainEventPublisher, CommandHandler, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse, AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../composition-event.converter';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tcomposition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { ColumnsSetEvent } from '../../domain/composition/command/column/set-columns/columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../domain/composition/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tselectColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   ColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tselectWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   ColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tselectContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../../domain/composition/read/composition.repository';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { Composition } from '../../domain/composition/read/composition';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\n\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns()),\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .select(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { globalCompositionId } from '../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../domain/composition/command/column/set-columns/column.params';\n\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{fieldId: FieldId, direction: boolean}>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../column/field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../composition.dispatcher';\nimport { ColumnFieldId } from '../column/field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders, inMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../../infrastructure/in-memory/composition/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../../domain/composition/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../../domain/composition/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../../domain/composition/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../../domain/composition/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../../domain/composition/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../../domain/composition/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../../domain/composition/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../../domain/composition/command/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../../domain/composition/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../../domain/composition/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../../domain/composition/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../../domain/composition/composition.converter';\nimport { EditTemplateRepository } from '../../domain/composition/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../../domain/composition/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../../domain/composition/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../../domain/composition/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../../domain/composition/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../../domain/composition/command/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../../domain/composition/command/column/set-columns/composition-fields-inited.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, \t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../../domain/composition/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../../domain/composition/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../../domain/composition/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../../domain/composition/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../../domain/composition/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../../ui/composition/column-query.component';\nimport { FunctionViewComponent } from '../../domain/composition/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent{\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPaginDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPaginDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPaginDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPaginDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPaginDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPaginDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPaginDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn of when paging is enabled.');\n\t\t}\n\n\t}\n\n\tnextPage(sourceSize: number): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled(sourceSize)) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(sourceSize: number): boolean {\n\t\treturn this.page === Math.ceil(sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(sourceSize: number): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(sourceSize: number): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (sourceSize < lastItem) {\n\t\t\treturn sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tconst sourceSize = source.length;\n\n\t\tlet start = this.calculateStart(sourceSize);\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd(sourceSize));\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.select(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .select(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .select(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .select(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .select(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete()\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","\nimport { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { ColumnConfig } from '../../../../composition/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../domain/composition/column.config';\n\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId)\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId)\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId)\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository) {\n\t\tsuper(structureRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId)\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../composition/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../ui-api/composition/composition.command-service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionDispatcher } from '../../../domain/composition/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\nimport { ColumnParams } from '../../../domain/composition/command/column/set-columns/column.params';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { CompositionId } from '../../../domain/composition/composition-id';\nimport { CompositionRepository } from '../../../domain/composition/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../domain/composition/global-composition-id';\n\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService},\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService},\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService},\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService},\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService},\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService},\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService},\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService},\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService},\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService},\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService},\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import {\n\tEventEmitter,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges\n} from '@angular/core';\nimport { skip } from 'rxjs/operators';\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../domain/composition/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../domain/composition/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureSummaryEnabledArchive } from '../panel/summary/structure.summary-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\n\n\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\theight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsummaryPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureSummaryEnabledArchive: StructureSummaryEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.summaryPanel !== undefined && simpleChanges.summaryPanel.currentValue !== undefined) {\n\t\t\tthis.structureSummaryEnabledArchive.next(this.summaryPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId)\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.height && this.height) {\n\t\t\tthis.schemaCommandService.setHeight(this.height);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined  && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.selectColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.selectContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch(state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {}\n\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, switchMap } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnDestroy,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../domain/composition/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureSummaryEnabledArchive } from './panel/summary/structure.summary-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../ui-api/composition/composition.command-service';\nimport { CompositionEventService } from '../ui-api/composition/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../ui-api/composition/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureSummaryEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService\n\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./composition/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureSummaryEnabledArchive: StructureSummaryEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureSummaryEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled() && this.structure.isReadyToDisplay();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../config/structure.column-config.service';\nimport { SortStatus } from '../../../domain/composition/command/sort/sort-status';\n\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open();\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.select()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * 30}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../domain/composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../domain/composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../domain/composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.accessor(entity) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\t\t\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: any;\n\n\tstatus$: any;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.accessor(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.select()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tComponent,\n\tChangeDetectionStrategy,\n\tViewChild,\n\tElementRef,\n\tRenderer2,\n\tOnDestroy,\n\tAfterViewInit,\n\tChangeDetectorRef,\n\tOnInit,\n\tInject,\n\tOptional,\n\tViewEncapsulation,\n\tNgZone\n} from '@angular/core';\nimport { Subject, combineLatest, fromEvent } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../domain/composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../ui-api/composition/composition.command-service';\nimport { CompositionReadModelService } from '../../ui-api/composition/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tthis.sourceQueryService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * 30);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1];\n\n\t\t\t\tconst sourceSizeHeight = source.length * 27;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit {\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm.controls['searchPhrase'].valueChanges\n\t\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\t\t// debounceTime(0),\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t.subscribe((name) => console.log(name));\n\t}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchingRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.selectSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSummaryEnabledArchive } from '../panel/summary/structure.summary-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tsummaryPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureSummaryEnabledArchive: StructureSummaryEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummaryEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.summaryPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../domain/composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../ui-api/composition/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&sum;</span> Sum</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span></div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-mean\"><span>_</span><span>X Average</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span></div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&and;</span> Min</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span></div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div><span class=\"gui-math-symbol\">&or;</span> Max</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span></div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div class=\"gui-median\"><span>~</span><span>X Median</span></div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryAggregateStore } from '@generic-ui/hermes';\nimport { AggregateStoreRegister } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\tconst structure = this.inMemoryStructureAggregateStore.getById(aggregateId);\n\n\t\tstructure.clearEvents();\n\n\t\treturn structure;\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\t// this.originConverter.convert(originAggregate),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => new ItemEntity(originItem.rawData, originItem.id, originItem.getVersion()));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { DomainEventBus, DomainEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\n\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tOriginSetEvent as any\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t},\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = {...this.rawData};\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any) => new OriginItemEntity(RandomStringGenerator.generate(), item));\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 0;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\n\n\nexport class FilterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tconstructor(enabled: boolean = false) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tsetConfig(config: FilterConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n\tgetAll(): Array<StructureFilter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterCollection } from './filter.collection';\n\n\n@Injectable()\nexport class FilterCollectionFactory {\n\n\tcreate(enabled: boolean = false): FilterCollection {\n\t\treturn new FilterCollection(enabled);\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../composition/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../composition/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../composition/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../composition/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\tgetDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.getDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tadd(field: Field): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.EVEN;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { Aggregate, AggregateEvent, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterCollection } from './filter/filter.collection';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../composition/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate paging: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterCollection: FilterCollection;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tprivate search: boolean = false;\n\n\tprivate quickFilters: boolean = false;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpaging: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterCollection,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.paging = paging;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterCollection = filterCollection;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.paging;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.paging.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.paging = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tconst sourceSize = this.sourceManager.getOriginSize();\n\n\t\tthis.paging.nextPage(sourceSize);\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.paging.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.paging.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterCollection.setConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.quickFilters = config.enabled;\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.search = config.enabled;\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterCollection.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterCollection.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\n\t\t// sorting\n\t\tthis.sourceManager.setEntities(this.sorterCollection.sort(this.sourceManager.getEntities()));\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.paging.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterCollectionFactory } from './filter/filter.collection-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterCollectionFactory: FilterCollectionFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterCollectionFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../composition/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.getDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues{\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n}\n","import { Type, Provider } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher, AggregateEvent } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { DomainEventPublisher } from '@generic-ui/hermes';\nimport { ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterCollectionFactory } from '../../domain/structure/command/filter/filter.collection-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterCollectionFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item);\n\t\t}\n\t}\n}\n","import { ModuleWithProviders, NgModule, PLATFORM_ID, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { StructureColumnConfigService } from './header/config/structure.column-config.service';\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureSummaryModule } from './panel/summary/structure.summary.module';\nimport { CompositionModule } from '../ui-api/composition/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureSearchComponent } from './header/search/structure.search.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureAggregationPanelComponent } from './panel/aggregation/structure.aggregation-panel.component';\nimport { StructureColumnConfigComponent } from './header/config/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureAggregationPanelConfigConverter } from './panel/aggregation/structure.aggregation-panel.config-converter';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureSummaryModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureSearchComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureAggregationPanelComponent,\n\tStructureColumnConfigComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\tStructureAggregationPanelConfigConverter,\n\tStructureColumnConfigService,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\tStructureSearchComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\t\tcssClassName: 'grid',\n\t\t\thermesModuleConfig: {\n\t\t\t\tloggers: true\n\t\t\t}\n\t\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}