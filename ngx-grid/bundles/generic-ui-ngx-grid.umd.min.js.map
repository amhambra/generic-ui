{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","columnSortingConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","sorting","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","StructureRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureInitedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","VerticalFormationRepository","inMemoryStructureQueryStore","verticalFormation$","getAggregateId","getById","ifPresent","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureDialogColumnManagerService","injector","fabricDialogService","open","compositionId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","menuColumnManagerService","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","setStyle","openInfo","openColumnManager","Renderer2","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getValueOrNullOrThrowError","save","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortOrder","SortOrder","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","getSortingEnabled","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","sortStatus","sortable","getFieldId","getSortStatus","isSortEnabled","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","getValue","searchPhrase","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionRepository","ReadModelRepository","CompositionInitedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","ColumnId","ColumnEntityFactory","isArray","createColumn","params","columnEntity","convertWidth","columnEntities","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","setColumns","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","changeSort","sortParams","param","direction","this_1","sortParams_1","sortParams_1_1","moveLeft","findColumnIndex","move","moveRight","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","enableColumn","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","init","setColumnEnabled","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handleEmptyAggregate","command","compositionAggregate","publishDomainEvents","publish","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","SetColumnsCommandHandler","compositionEventConverter","handleAggregate","setColumnsParams","publishEvents","events","getEvents","domainEvents","SetCompositionWidthCommandHandler","SetCompositionResizeWidthCommandHandler","columnConverter","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onContainerWidthChanged","getPayload","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","CompositionSetColumnEnabledCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","getSortOrder","SetRowHeightCommand","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureCommandService","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","LocalStructureSearchDispatcher","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","simpleChanges","nextConfig","rowSelecting","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseSetDomainEvent","getPhrase","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationQueryService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","AggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","getAggregations","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","hasDirection","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","setConfig","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchableFields","removeSearchFilters","searchedItems","Set","e_1","StructurePreparedEntitiesSetAggregateEvent","getPreparedItems","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructureAggregationsChangedEvent","StructurePreparedEntitiesSetEvent","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","SetPagingCommandHandler","structureAggregate","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","stopPropagation","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerModule","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","isAggregateTypePresent","StructureAggregationPanelModule","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { GridColumnSortingConverter } from './column/sorting/grid.column-sorting.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable, Subject } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\nimport { Structure } from './structure';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport abstract class StructureRepository {\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.payload;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.8.0\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureInitedEvent } from '../../command/init/structure-inited.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\nimport { Structure } from '../structure';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\t\t\tconst verticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate fabricDialogService: FabricDialogService) {\n\t}\n\n\topen(compositionId: CompositionId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, injector);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\t\t\t\t<div [gui-tooltip]=\"'Manage Columns'\"\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<button>C</button>\n\t\t\t\t</div>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\t\tInfo\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate menuColumnManagerService: StructureDialogColumnManagerService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'line-height', '30px');\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId).getValueOrNullOrThrowError();\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortOrder = SortOrder.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortOrder = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { ColumnId } from '../../command/column/column.id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.accessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortOrder } from '../../command/column/sort/sort-order';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\taccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortOrder,\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\nimport { DomainEventBus, ReadModelRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionRepository extends ReadModelRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<Composition>>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../domain/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<Composition>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionInitedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionQueryStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: Composition) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tcolumnEntity.setEnabled(columnConfig.enabled);\n\t\t}\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortOrder } from '../sort/sort-order';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config || {};\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.getConfig();\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]/tree-content.assert.ts\n\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\nimport { CompositionAggregate } from '../composition.aggregate';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tcompositionAggregateRepository);\n\t}\n\n\thandleEmptyAggregate(command: InitCompositionCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId();\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\n\t\tthis.publishDomainEvents(compositionAggregate, command);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: InitCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionInitedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand, null, null, compositionAggregateRepository);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tcompositionAggregateRepository);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tcompositionAggregateRepository);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tcompositionAggregateRepository);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionContainerWidthSetEvent): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(CompositionChangeSortStatusCommand, null, null, compositionAggregateRepository);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/command/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionSetColumnEnabledCommand, null, null, compositionAggregateRepository);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveLeftColumnCommand, null, null, compositionAggregateRepository);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler extends CommandHandler<CompositionAggregate> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveRightColumnCommand, null, null, compositionAggregateRepository);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../domain/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionSetColumnEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveLeftColumnCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveRightColumnCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeUrl, SafeScript, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { globalStructureId } from '../../../../global-structure-id';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { globalStructureId } from '../../../../global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = globalStructureId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t   \treturn idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../../structure-id';\nimport { globalStructureId } from '../../../global-structure-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command';\nimport { SortOrder } from '../../../composition/domain/command/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { LocalStructureSearchDispatcher } from './search/local-structure-search.dispatcher';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchDispatcher }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\nimport { StructureSearchReadModelRepository } from '../../../ui-api/structure/search/structure-search.read-model.repository';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t// \tthis.structureSearchReadModelRepository\n\t// \t\t.onSearchEnabled()\n\t// \t\t.pipe(\n\t// \t\t\tthis.takeUntil()\n\t// \t\t)\n\t// \t\t.subscribe((searching: boolean) => {\n\t// \t\t\tthis.globalSearching = searching;\n\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.containerRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { combineLatest } from 'rxjs';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t \tconst searchPhrase = args[0],\n\t\t\t\thighlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t \tthis.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\nimport { globalStructureId } from '../../../domain/global-structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId, AggregateRepository } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureAggregate> {\n\n\t// abstract getById(aggregateId: AggregateId): Optional<StructureAggregate>;\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId).getValueOrNullOrThrowError();\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject, Subscription } from 'rxjs';\nimport { filter, map, takeUntil, catchError } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureInitedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tSchemaSetEvent,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureQueryStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structure: Structure) => {\n\t\t\tconst key = structure.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortOrder } from '../../../../../composition/domain/command/column/sort/sort-order';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../../composition/domain/command/column/sort/sort-order';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\nimport { StructureAggregate } from '../structure.aggregate';\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tstructureAggregateRepository);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\nimport { SetPagingCommand } from '../set/set-paging.command';\nimport { PagingSetEvent } from '../set/paging-set.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tstructureAggregateRepository);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.getAggregateId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../../structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId, phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { RowHeightSetEvent } from './row-height-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler extends CommandHandler<StructureAggregate> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowHeightCommand);\n\t}\n\n\thandle(command: SetRowHeightCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\trowHeight = command.rowHeight;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/command/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../domain/structure/read/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowHeightCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\nimport { StructureSearchPlaceholderArchive } from '../../../../domain/structure/read/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search ...';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t\t<span class=\"gui-header-menu-icon\"></span>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/command/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../composition/domain/composition-id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from './header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from './panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from './column-manager/structure.column-manager.module';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}