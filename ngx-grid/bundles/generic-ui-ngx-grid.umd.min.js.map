{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/aggregation/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/structure-source.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/read/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure-aggregation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure-filter.read-model-warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure-aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/read/structure/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/domain/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/schema/read/schema.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/read/in-memory.schema.read-model-store.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/read/in-memory.schema.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/ui-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","sorting","cellEditing","matcher","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","StructurePagingReadModelWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","StructurePagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceReadModelWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingReadModelService","pagingCommandService","sourceReadModelService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaReadModelRootRepository","ReadModelRootRepository","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaReadModelWarehouse","schemaReadModelRootRepository","onSingleTheme","schemaId","schema","getTheme","onCssClasses","getCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","schemaReadModelRootId","menuColumnManagerService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","Renderer2","CompositionReadModelRootRepository","compositionGlobalId","CompositionReadModelWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultAlign","getDefaultView","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getAggregateId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","DomainEventBus","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingManager","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","FormationReadModelService","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationReadModelWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","RowHeightSetBasedOnThemeEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","idToVerticalFormation","StructureReadModelWarehouse","verticalFormationRepository","LocalStructureReadModelWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceReadModelWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionReadModelWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaReadModelWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setTheme","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","LocalSchemaCommandDispatcher","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandDispatcher","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","pagingEventService","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","simpleChanges","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","StructurePagingEventRepository","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureReadModelService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseSetDomainEvent","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","close","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","enterEditMode","exitEditMode","cell","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combine","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureAggregationsChangedEvent","getAggregations","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","aggregationEnabled","possibleAggregations","assignPossibleAggregations","assignAggregations","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","AGGREGATION_CALCULATORS","AggregationCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","StructureAggregationsChangedAggregateEvent","AggregationManager","calculators","calculations","calc","allFields","remove","update","AggregationManagerFactory","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaAggregate","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_THEME","DEFAULT_ROW_COLORING","getRowColoring","isVerticalGridEnabled","isHorizontalGridEnabled","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","structureAggregate","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceEmpty","isAggregateTypePresent","[class.gui-structure-aggregation-panel]","StructureAggregationPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","SchemaCreatedEvent","SchemaAggregateRepository","CreateSchemaCommandHandler","schemaAggregateRepository","SetSchemaThemeCommandHandler","schemaAggregate","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SchemaCssClass","SchemaReadModelRoot","verticalGridEnabled","horizontalGridEnabled","SchemaReadModelRootConverter","InMemorySchemaReadModelStore","schemaReadModelRootConverter","SchemaHorizontalGridSetEvent","RowColoringSetEvent","SchemaVerticalGridSetEvent","InMemorySchemaReadModelRootRepository","inMemorySchemaReadModelStore","schemaIdToReadModel","schemaIdToReadModel$","readModelRootId","schemaReadModelRoot","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\taggregation?: GuiColumnAggregation;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../../lib/composition/domain/column/column-aggregation.config';\nimport { AggregationType } from '../../../../../../lib/structure/domain/structure/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../ui-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './aggregation/grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/ui-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../read/structure/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from '../../read/paging/paging';\n\n\n@Injectable()\nexport class StructurePagingReadModelWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceReadModelWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../read/paging/paging';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingReadModelWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../read/paging/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../ui-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.10.2\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { Observable } from 'rxjs';\n\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRoot } from './schema.read-model-root';\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\n\n\nexport abstract class SchemaReadModelRootRepository extends ReadModelRootRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(readModelRootId: SchemaReadModelRootId): Observable<Readonly<SchemaReadModelRoot>>;\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { SchemaReadModelRootRepository } from '../read/schema.read-model-root-repository';\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaReadModelRoot } from '../read/schema.read-model-root';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaCssClass } from '../read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelWarehouse {\n\n\tconstructor(private schemaReadModelRootRepository: SchemaReadModelRootRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaReadModelRootRepository\n\t\t\t\t   .on(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1),\n\t\t\t\t\t   map((schema: SchemaReadModelRoot) => {\n\t\t\t\t\t\t   return schema.getTheme();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaReadModelRootRepository\n\t\t\t\t   .on(schemaId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: SchemaReadModelRoot) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from '../read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from '../read/composition.read-mode-root';\nimport { CellTemplateWithContext } from '../read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from '../read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input, ElementRef } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign();\n\t\t}\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { CellView } from '../../domain/column/cell-view';\nimport { ColumnAlign } from '../../domain/column/column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../domain/column/field/column-field';\nimport { SortOrder } from '../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../domain/column/view.entity';\nimport { ColumnAlign } from '../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../domain/column/cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.CHECKBOX;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.CENTER;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\t// onWidthChanged(compositionId: CompositionId): Observable<number> {\n\t// \treturn this.domainEventBus\n\t// \t\t\t   .ofEvent(\n\t// \t\t\t\t   CompositionColumnsSetEvent\n\t// \t\t\t   )\n\t// \t\t\t   .pipe(\n\t// \t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === compositionId.toString())\n\t// \t\t\t   );\n\t// }\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionReadModelWarehouse } from './composition.read-model-warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from '../read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from '../read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionReadModelWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements AggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation, Input } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from '../read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from '../read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from '../read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from '../read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingReadModelWarehouse } from '../../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../read/paging/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../read/paging/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelWarehouse extends StructurePagingReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../structure/structure.read-model-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../structure/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { Formation } from '../../read/formation/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../read/formation/formation-repository';\nimport { SelectedRowsList } from '../../../read/formation/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelWarehouse extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { structureGlobalId } from '../../../../ui-api/structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { CreateStructureCommand } from '../../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { structureGlobalId } from '../../../ui-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/formation';\nimport { Paging } from '../paging/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../read/structure/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../read/structure/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../infrastructure/in-memory/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(aggregateId: AggregateId = structureGlobalId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(aggregateId);\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = structureGlobalId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelWarehouse } from '../../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../read/structure/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelWarehouse extends StructureReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { StructureSourceReadModelWarehouse } from './structure-source.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceReadModelWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../read/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../read/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelWarehouse extends StructureSourceReadModelWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/ui-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionReadModelWarehouse extends CompositionReadModelWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootRepository } from '../../../../schema/read/schema.read-model-root-repository';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/read/schema-css-class';\n\n\n@Injectable()\nexport class LocalSchemaReadModelWarehouse extends SchemaReadModelWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaReadModelRootRepository: SchemaReadModelRootRepository) {\n\t\tsuper(schemaReadModelRootRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from '../schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends Command {\n\n\tconstructor(private readonly schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { schemaGlobalId } from './schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/ui-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/ui-api/structure/structure.command-dispatcher';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setRowColoring(rowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/ui-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: SchemaRowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingReadModelWarehouse } from './paging/local-paging.read-model-warehouse';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelWarehouse } from './formation/local-formation.read-model-warehouse';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { LocalStructureReadModelWarehouse } from './structure/local-structure.read-model-warehouse';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { LocalSourceReadModelWarehouse } from './source/local-source.read-model-warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { LocalCompositionReadModelWarehouse } from './composition/local-composition.read-model-warehouse';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaReadModelWarehouse } from '../../../schema/ui-api/schema.read-model-warehouse';\nimport { LocalSchemaReadModelWarehouse } from './schema/local-schema.read-model-warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingReadModelWarehouse, useClass: LocalPagingReadModelWarehouse },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandDispatcher },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureReadModelWarehouse, useClass: LocalStructureReadModelWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceReadModelWarehouse, useClass: LocalSourceReadModelWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionReadModelWarehouse, useClass: LocalCompositionReadModelWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: SchemaReadModelWarehouse, useClass: LocalSchemaReadModelWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/read/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SchemaReadModelWarehouse } from '../../../schema/ui-api/schema.read-model-warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandDispatcher } from '../../../ui-api/structure/aggregation/structure-aggregation.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../ui-api/structure/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingReadModelWarehouse } from './structure-paging.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from '../../read/paging/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingReadModelWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelWarehouse } from '../structure/structure.read-model-warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureReadModelService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from '../../../read/structure/searching/phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../read/structure/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../ui-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../ui-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../ui-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/ui-api/composition.event-repository';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../ui-api/structure/structure.read-model-warehouse';\nimport { CompositionReadModelWarehouse } from '../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../ui-api/structure/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/ui-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-aggregation.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaReadModelWarehouse } from '../../../../schema/ui-api/schema.read-model-warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaReadModelWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../read/structure/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterReadModelWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterReadModelWarehouse } from '../../ui-api/structure/filter/structure-filter.read-model-warehouse';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelWarehouse,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../ui-api/structure/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../read/formation/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../read/structure/searching/highlight/structure.search-highlight.archive';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationReadModelService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation, ViewChild, ElementRef } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../ui-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureSourceReadModelWarehouse } from '../../ui-api/source/structure-source.read-model-warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/ui-api/composition.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../composition/ui-api/composition.read-model-warehouse';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse,\n\t\t\t\tprivate formationReadModelService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tcombineLatest(\n\t\t\tthis.sourceReadModelService.onEntities(),\n\t\t\tthis.structureReadModelService.onContainerHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\tcontainerHeight: number = combine[1];\n\n\t\t\t\tthis.source = source;\n\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../../domain/structure.id';\nimport { Reactive } from '../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../read/structure/structure.read-model-root';\nimport { Paging } from '../../read/paging/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureReadModelWarehouse } from '../../ui-api/structure/structure.read-model-warehouse';\nimport { StructurePagingReadModelWarehouse } from '../../ui-api/paging/structure-paging.read-model-warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelWarehouse } from '../../ui-api/structure/filter/structure-filter.read-model-warehouse';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingReadModelWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../read/structure/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../read/structure/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../read/structure/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../structure/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../structure/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetAggregationEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetAggregationEnabledCommand> {\n\t\treturn StructureSetAggregationEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetAggregationEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setAggregationEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.container.getHeight() / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.container.getHeight() / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../composition/domain/column/column-aggregation.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../structure.id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../../domain/structure/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.horizontalGrid = SchemaAggregate.DEFAULT_HORIZONTAL_GRID;\n\t\tthis.verticalGrid = SchemaAggregate.DEFAULT_VERTICAL_GRID;\n\t\tthis.theme = SchemaAggregate.DEFAULT_THEME;\n\t\tthis.rowColoring = SchemaAggregate.DEFAULT_ROW_COLORING;\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.rowColoring = SchemaRowColoring.NONE;\n\t\t\tthis.verticalGrid = false;\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.rowColoring = SchemaRowColoring.ODD;\n\t\t}\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n}\n","import { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../read/paging/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from '../../read/paging/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingReadModelWarehouse } from './structure-paging.read-model-warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingReadModelWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../read/formation/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from '../../read/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../read/source/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../read/source/source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceReadModelWarehouse } from './structure-source.read-model-warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from '../../read/source/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../read/source/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../read/source/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceReadModelWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../../domain/structure/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../read/structure/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../read/structure/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../read/structure/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../read/structure/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelWarehouse } from './filter/structure-filter.read-model-warehouse';\nimport { StructureFilterRepository } from '../../read/structure/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../read/structure/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../read/structure/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandDispatcher } from './aggregation/structure-aggregation.command-dispatcher';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure-aggregation.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from '../../read/structure/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../../domain/structure/structure.aggregate-factory';\nimport { StructureReadModelWarehouse } from './structure.read-model-warehouse';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../read/structure/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../read/structure/searching/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from '../../read/structure/searching/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetAggregationEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureAggregationCommandDispatcher,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureReadModelWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureReadModelWarehouse } from '../../../../ui-api/structure/structure.read-model-warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../read/structure/searching/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../read/structure/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\" \n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureReadModelService: StructureReadModelWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../ui-api/structure/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../ui-api/structure/structure.command-dispatcher';\nimport { CompositionReadModelWarehouse } from '../../../../../../composition/ui-api/composition.read-model-warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/ui-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure-aggregation.ui-events-repository';\nimport { CompositionReadModelWarehouse } from '../../../../composition/ui-api/composition.read-model-warehouse';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceReadModelWarehouse } from '../../../ui-api/source/structure-source.read-model-warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Count</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-aggregation-value\">{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-aggregation-panel]': 'true'\n\t}\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceReadModelWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionReadModelWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, Command, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements AggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, Input, SimpleChanges, ElementRef, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateCommandHandler, AggregateRepository, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaCreatedEvent } from './schema-created.event';\nimport { SchemaAggregate } from '../schema.aggregate';\nimport { SchemaId } from '../schema.id';\nimport { SchemaAggregateRepository } from '../schema.aggregate-repository';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements AggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tconstructor(private readonly schemaAggregateRepository: SchemaAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<SchemaId, SchemaAggregate> {\n\t\treturn this.schemaAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: CreateSchemaCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaThemeSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../../domain/schema.id';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from '../in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { SchemaId } from '../../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from './schema.read-model-root-id';\nimport { SchemaTheme } from '../domain/schema-theme';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../domain/schema-row-coloring';\n\n\nexport class SchemaReadModelRoot extends ReadModelRoot<SchemaReadModelRootId> {\n\n\tconstructor(schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly schemaTheme: SchemaTheme,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaReadModelRootId);\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.schemaTheme;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.verticalGridEnabled,\n\t\t\tthis.horizontalGridEnabled,\n\t\t\tthis.getTheme(),\n\t\t\tthis.rowColoring\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from '../domain/schema.aggregate';\nimport { SchemaReadModelRoot } from './schema.read-model-root';\n\n\n@Injectable()\nexport class SchemaReadModelRootConverter {\n\n\tconvert(aggregate: SchemaAggregate): SchemaReadModelRoot {\n\n\t\treturn new SchemaReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\taggregate.getTheme(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRoot } from '../../../read/schema.read-model-root';\nimport { SchemaId } from '../../../domain/schema.id';\nimport { SchemaAggregate } from '../../../domain/schema.aggregate';\nimport { SchemaReadModelRootId } from '../../../read/schema.read-model-root-id';\nimport { InMemorySchemaStore } from '../in-memory.schema.store';\nimport { SchemaReadModelRootConverter } from '../../../read/schema.read-model-root-converter';\n\n\n@Injectable()\nexport class InMemorySchemaReadModelStore extends InMemoryReadModelStore<SchemaReadModelRootId,\n\tSchemaReadModelRoot,\n\tSchemaId,\n\tSchemaAggregate> {\n\n\tconstructor(private inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\tprivate schemaReadModelRootConverter: SchemaReadModelRootConverter) {\n\t\tsuper(inMemorySchemaStore);\n\t}\n\n\ttoReadModel(schemaAggregate: SchemaAggregate): SchemaReadModelRoot {\n\t\treturn this.schemaReadModelRootConverter.convert(schemaAggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootRepository } from '../../../read/schema.read-model-root-repository';\nimport { SchemaReadModelRoot } from '../../../read/schema.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../domain/theme/schema-theme-set.event';\nimport { InMemorySchemaReadModelStore } from './in-memory.schema.read-model-store';\nimport { SchemaReadModelRootId } from '../../../read/schema.read-model-root-id';\nimport { SchemaHorizontalGridSetEvent } from '../../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { RowColoringSetEvent } from '../../../domain/coloring/row-coloring-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCreatedEvent } from '../../../domain/create/schema-created.event';\n\n\n@Injectable()\nexport class InMemorySchemaReadModelRootRepository extends SchemaReadModelRootRepository {\n\n\tprivate readonly schemaIdToReadModel = new Map<string, SchemaReadModelRoot>();\n\n\tprivate readonly schemaIdToReadModel$ = new ReplaySubject<Map<string, SchemaReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly inMemorySchemaReadModelStore: InMemorySchemaReadModelStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(readModelRootId: SchemaReadModelRootId): Observable<Readonly<SchemaReadModelRoot>> {\n\n\t\treturn this.schemaIdToReadModel$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((schemaIdToReadModel: Map<string, SchemaReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = readModelRootId.getId();\n\n\t\t\t\t\t\t   return schemaIdToReadModel.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((schemaIdToReadModel: Map<string, SchemaReadModelRoot>) => schemaIdToReadModel.get(readModelRootId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tSchemaThemeSetEvent,\n\t\t\tRowColoringSetEvent,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tSchemaCreatedEvent\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optSchemaReadModel = this.inMemorySchemaReadModelStore.getById(aggregateId);\n\n\t\toptSchemaReadModel.ifPresent((schemaReadModelRoot: SchemaReadModelRoot) => {\n\n\t\t\tconst key = schemaReadModelRoot.getId().toString();\n\n\t\t\tthis.schemaIdToReadModel.set(key, schemaReadModelRoot);\n\n\t\t\tthis.schemaIdToReadModel$.next(this.schemaIdToReadModel);\n\t\t});\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new RowColoringSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publish(new SchemaHorizontalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publish(new SchemaVerticalGridSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/domain/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\nimport { InMemorySchemaReadModelRootRepository } from '../infrastructure/in-memory/read/in-memory.schema.read-model-root-repository';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaReadModelWarehouse } from './schema.read-model-warehouse';\nimport { SchemaReadModelRootRepository } from '../read/schema.read-model-root-repository';\nimport { InMemorySchemaReadModelStore } from '../infrastructure/in-memory/read/in-memory.schema.read-model-store';\nimport { SchemaReadModelRootConverter } from '../read/schema.read-model-root-converter';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tInMemorySchemaReadModelStore,\n\t\t{\n\t\t\tprovide: SchemaReadModelRootRepository,\n\t\t\tuseClass: InMemorySchemaReadModelRootRepository\n\t\t},\n\t\tSchemaReadModelRootConverter,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaReadModelWarehouse\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, Input, SimpleChanges, ElementRef, ViewChild, AfterViewInit, OnChanges } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../ui-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../ui/structure-fabric.imports';\nimport { StructurePagingModule } from '../ui/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../ui/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from '../ui/structure.component';\nimport { StructureHeaderComponent } from '../ui/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../ui/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../ui/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../ui/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../ui/content/structure-content.component';\nimport { StructureRowComponent } from '../ui/content/row/structure-row.component';\nimport { StructureCellComponent } from '../ui/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../ui/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../ui/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../ui/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../ui/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure/structure-tokens';\nimport { StructureDefinition } from '../ui/structure-definition';\nimport { StructureSourceReadModelWarehouse } from './source/structure-source.read-model-warehouse';\nimport { StructureIdGenerator } from '../ui/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure/structure.providers';\nimport { StructureModuleConfig } from '../ui/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../ui/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../ui/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../ui/header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from '../ui/panel/aggregation/structure.aggregation-panel.module';\nimport { StructureColumnManagerModule } from '../ui/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../ui/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../ui/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/ui-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../ui/content/cell/boolean/structure.cell-edit-boolean.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceReadModelWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui-api/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}