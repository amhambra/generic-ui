{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.type.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/summaries/grid.column-summaries.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/sorting/grid.column-sorting.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/cell-editing/grid.column-cell-editing.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-align.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/align/grid.column-align.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/feature/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.global-id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/structure-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.id.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/structure.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.read-model-root-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/read/schema.global-id.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema.theme.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema.css-classes.repository.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/dialog/structure.dialog-column-manager.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.global-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/menu/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/icon/structure.column-manager-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/column-manager/structure.column-manager.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/icon/structure.info-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/function/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/domain/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/sort-order.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/abstract-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-mode-root.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/composition.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/feature-api/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/number-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/boolean-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/date-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/string-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/data-type/unknown-column.presentation.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/presentation/column.presentation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.event-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/composition-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/create/create-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/edit/template/date-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/bar/bar-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/read/view/percentage/percentage-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/feature-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/paging/local-paging.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/structure-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/formation/local-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/highlight/structure.search-highlight.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/placeholder/structure.search-placeholder.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/structure.search.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/read/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/read/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/read/structure.read-model-root-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/structure/local-structure.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/source/local-source.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/composition/local-composition.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/search/local-structure-search.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.warehouse.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/schema/local-schema.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/vertical-formation/structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/vertical-formation/local-structure-vertical-formation.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.command-dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/structure-paging.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/edit/structure.cell-edit-close-all.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-bottom-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header-top-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.event-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/view/structure.row-detail-view.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/row-detail/structure.row-detail.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.config-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/structure-filter.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/structure-search.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/domain/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/feature-api/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/structure.summaries-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.summaries-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/set/structure.set-summaries-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/vertical-formation.container-height.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/base.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/matcher/field.matchers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/data-type/type.field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/summaries.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/boolean/boolean-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/date/date-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/number/number-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/string/string-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summarized.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/calculation/unknown/unknown-summaries.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/summaries/summaries.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/filter/read/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/origin-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/field/init/fields-inited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/schema-theme-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/row-coloring-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/schema-vertical-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/schema-horizontal-grid-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/schema-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/search/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/structure-summaries.warehouse.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/structure-created.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/summaries/enabled/structure.summaries-enabled-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/icon/structure.filter-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/column-selector/structure.column-selector.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/filter/structure.filter-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/icon/structure.column-menu-arrow-icon.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/panel/summaries/structure.summaries-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/create-structure/create-structure-command-handler.service.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/edit/structure.cell-edit.component.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/create/create-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/schema/infrastructure/in-memory/in-memory.schema.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/coloring/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/domain/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/css-classes/schema-css-classes.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/theme/schema-theme-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/schema/feature-api/schema.module.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/content/cell/boolean/structure.cell-edit-boolean.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/title-panel/structure.title-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature/footer-panel/structure.footer-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/feature-api/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/feature-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","BAR","PERCENTAGE_BAR","PERCENTAGE","FABRIC","MATERIAL","LIGHT","DARK","GENERIC","NONE","EVEN","ODD","ASC","DESC","BASIC","ADVANCED","RIGHT","CENTER","LEFT","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnSummariesConverter","convert","summariesConfig","columnSummariesConfig","undefined","enabled","summariesTypes","convertSummariesTypes","configSummariesTypes","_this","forEach","summariesType","convertSummariesType","SummariesType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnSortingConverter","sortingConfig","GridColumnCellEditingConverter","config","GridColumnAlignConverter","align","GuiColumnAlign","ColumnAlign","GridColumnConverter","columnTypeConverter","columnSummariesConverter","columnViewConverter","columnSortingConverter","columnCellEditingConverter","columnAlignConverter","map","convertColumn","guiColumn","columnConfig","header","field","width","summaries","sorting","cellEditing","matcher","GridThemeConverter","theme","convertToGuiTheme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","convertToGuiRowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","searchPhraseChanged","themeChanged","horizontalGridChanged","verticalGridChanged","rowColoringChanged","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","onSearchPhrase","onTheme","onHorizontalGrid","onVerticalGrid","onRowColoring","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDrawerModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","isStopped","complete","takeUntil","SmartComponent","StructureReadModelRepository","domainEventBus","ofEvent","forEvents","pipe","subscribe","event","subs","console","PagingRepository","structureRepository","on","onStructure","filter","structure","getId","toString","getPaging","StructureReadModelRootId","id","toAggregateId","StructureId","ReadModelRootId","toReadModelRootId","AggregateId","structureGlobalId","StructurePagingWarehouse","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","getPagingConfig","Command","ChangePagesizeCommand","getPageSize","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","StructurePagingCommandDispatcher","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","StructureSourceWarehouse","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","StructurePagingDisplayModeArchive","onValue","Archive","StructurePagingComponent","pagingReadModelService","pagingCommandService","sourceReadModelService","structurePagingDisplayModeArchive","alternativeDisplay","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","ReadModelObject","Boolean","Number","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","CompositionReadModelRootId","CompositionId","StructureDialogColumnManagerComponent","[class.gui-structure-dialog-column-manager]","StructureThemeConverter","convertTheme","schemaTheme","Theme","SchemaId","SchemaReadModelRootId","schemaGlobalId","SchemaThemeRepository","theme$","setTheme","schemaId","SchemaCssClassesRepository","SchemaWarehouse","schemaCssClassesRepository","schemaThemeRepository","onSingleTheme","onCssClasses","StructureDialogColumnManagerService","injector","schemaReadModelRepository","structureThemeConverter","fabricDialogService","open","compositionId","readModelId","Injector","parent","FabricDialogService","StructureInfoPanelComponent","renderer","dialog","schemaReadModelRootId","menuColumnManagerService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","openInfo","openColumnManager","Renderer2","CompositionReadModelRootRepository","ReadModelRootRepository","compositionGlobalId","CompositionWarehouse","compositionRepository","onWidth","composition","getWidth","onContainerWidth","getContainerWidth","onWidthForEachColumn","getAllColumns","onHeaderColumns","getActiveHeaderColumns","onAllColumns","getHeaderColumns","onSortOrder","fieldId","getFieldId","getSortStatus","onTemplateColumns","getTemplateColumns","onResizeWidth","isResizeWidthEnabled","CreateCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","getEnabled","CompositionChangeSortStatusCommand","sortParams","getCompositionId","getSortParams","CompositionSetColumnEnabledCommand","columnId","getColumnId","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","createComposition","setColumns","params","setWidth","setContainerWidth","setResizeWidth","changeSort","setColumnEnabled","moveLeft","moveRight","ColumnId","EntityId","CompositionCommandDispatcher","compositionDispatcher","enableColumn","columnDefinitionId","toColumnId","disableColumn","defId","StructureColumnManagerComponent","compositionCommandService","compositionReadModelService","enabledColumnsCount","reduce","accumulator","toggleColumn","column","stopPropagation","getColumnDefinitionId","[class.gui-structure-column-manager]","StructureMenuColumnManagerComponent","[class.gui-structure-menu-column-manager]","StructureColumnManagerIconComponent","[class.gui-icon]","StructureColumnManagerModule","entryComponents","StructureInfoIconComponent","StructureInfoPanelModule","ViewTemplatesComponent","getTemplate","textTemplate","numberTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","dateTemplate","barTemplate","percentageBarTemplate","percentageTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","CompositionAggregateRepository","AggregateRepository","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","getById","aggregateId","save","aggregate","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ViewEntity","columnView","templateFunction","fromDataType","getCellView","getTemplateFunction","AbstractColumnEntity","columnField","presentation","getDataType","setInitialAlign","getPresentation","getColumnConfig","getField","getHeader","setView","setHeader","getView","getAlign","getSortingEnabled","isCellEditingEnabled","Entity","ColumnEntity","sortStatus","SortOrder","getDefaultView","getDefaultAlign","setEnabled","setSortStatus","CellTemplateWithContext","viewTemplate","editTemplate","context","sortable","isSortEnabled","isAscSort","isDescSort","isNoSort","isAlignLeft","isAlignCenter","isAlignRight","CellContext","FieldId","CellTemplateWithAccessor","editable","templateFun","accessor","searchAccessor","columnFieldId","cellEditingEnabled","isBooleanDataType","getValue","entity","searchPhrase","findValue","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getSearchAccessor","ReadModelEntity","ColumnDefinitionId","ReadModelEntityId","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","CompositionReadModeRoot","uid","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","isReady","equalsByColumns","ReadModelRoot","CompositionReadModelRootConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","toReadModel","InMemoryReadModelStore","CompositionCreatedEvent","DomainEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","payload","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getAggregateId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionReadStore","compositionIdToComposition","composition$","has","ifPresent","DomainEventBus","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionReadModelProviders","inMemoryCompositionProviders","NumberColumnPresentation","getInstance","getPossibleViews","ColumnPresentation","BooleanColumnPresentation","DateColumnPresentation","StringColumnPresentation","UnknownColumnPresentation","ColumnPresentationConverter","ColumnEntityFactory","columnPresentationConverter","data","isArray","createColumn","getColumn","convertWidth","columnEntity","RandomStringGenerator","generate","columnEntities","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","ColumnField","ColumnFieldFactory","CompositionEventRepository","onColumnsChanged","onContainerWidthChanged","getPayload","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","direction","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","handle","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","getSearchAccessorMethod","commandProviders","readProviders","DOMAIN_EVENT_HANDLERS","multi","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","toDomainEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","param","this_1","sortParams_1","sortParams_1_1","findColumnIndex","move","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","fromEntity","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionCreatedAggregateEvent","CompositionAggregate","columnFactory","columnsParams","resizeWidthEnabled","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","createEvent","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","AggregateRoot","CompositionAggregateFactory","AggregateFactory","CreateCompositionCommandHandler","compositionAggregateRepository","domainEventPublisher","getAggregateRepository","forCommand","publishDomainEvents","command","publish","DomainEventPublisher","CompositionSetColumnEnabledCommandHandler","compositionEventConverter","publishEvents","handleAggregate","events","getEvents","domainEvents","SetColumnsCommandHandler","setColumnsParams","SetCompositionWidthCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","CompositionChangeSortStatusCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","SetCompositionResizeWidthCommandHandler","DateEditTemplateComponent","opened","datePickerRef","querySelector","dialogOpened","BarViewComponent","showPercentage","[class.gui-bar-view]","PercentageViewComponent","[class.gui-percentage-view]","components","exportDeclarations","compositionKey","CompositionModule","ReactiveFormsModule","FabricDatePickerModule","HermesModule","defineAggregate","registerCommandHandler","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedEvent","PageChangedAggregateEvent","PagesizeChangedEvent","PagesizeChangedAggregateEvent","PagingManager","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","find","ps","setPage","setPageSize","calculateStart","firstItem","calculateEnd","lastItem","PagingManagerFactory","createDefault","createFromConfig","Logger","LocalPagingCommandDispatcher","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingWarehouse","Observable","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","getSelectedRow","FormationDispatcher","setDefault","toggleSelectedRow","StructureFormationDispatcher","formationDispatcher","setDefaultFormation","LocalFormationCommandDispatcher","FormationRepository","onFormation","getFormation","StructureFormationWarehouse","formationRepository","onSelectedRows","formation","getSelectedRows","LocalFormationWarehouse","StructureSetConfigFilterCommand","filterConfig","getConfig","StructureToggleFilterCommand","externalFilterId","filterValue","getExternalFilterId","getFilterValue","StructureFilterCommandDispatcher","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","getItems","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","CreateStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","position","getPosition","SetSortingCommand","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","InitFieldsCommand","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","rowHeight","getRowHeight","StructureSetConfigSearchingCommand","searchConfig","StructureSetSearchPhraseCommand","phrase","getPhrase","StructureSearchHighlightArchive","idToHighlight","idToHighlight$","HIGHLIGHTING","StructureSearchPlaceholderArchive","idToPlaceholder","idToPlaceholder$","PLACEHOLDER","StructureSearchDispatcher","structureSearchHighlightArchive","structureSearchPlaceholderArchive","setSearchingConfig","highlighting","placeholder","search","StructureSetHeightCommand","height","getHeight","SetRowHeightBasedOnThemeCommand","getTheme","StructureCommandDispatcher","structureFilterCommandService","sourceDispatcher","structureSearchDispatcher","createStructure","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setRowHeight","setContainerHeight","setRowHeightBasedOnTheme","LocalStructureCommandDispatcher","StructureCreatedEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","SelectedRowsList","rowIds","isRowSelected","equalsById","getIds","Formation","selectedRows","selectedRowsList","FormationConverter","rows","PagingConverter","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","sourceHeight","viewportHeight","getTopMargin","getSourceHeight","getViewPortHeight","VerticalFormationConverter","verticalFormation","StructureReadModelRoot","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ItemEntity","version","getData","getUiId","getVersion","isEven","isOdd","StructureReadModelRootConverter","formationConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","pagingAggregate","originItemEntities","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","RowHeightSetEvent","SchemaThemeSetEvent","StructureHeightSetEvent","OriginSetEvent","getOrigin","ScrollPositionSetEvent","RowHeightSetBasedOnThemeEvent","StructureSearchPhraseSetDomainEvent","VerticalFormationRepository","inMemoryStructureReadStore","verticalFormation$","structureReadModelRoot","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","onContainerHeight","onTopMargin","idToVerticalFormation","StructureWarehouse","verticalFormationRepository","LocalStructureWarehouse","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandDispatcher","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandDispatcher","LocalSourceWarehouse","LocalCompositionCommandDispatcher","columnDefId","LocalCompositionWarehouse","LocalStructureSearchCommandDispatcher","LocalSchemaWarehouse","SetSchemaThemeCommand","CreateSchemaCommand","CreateAggregateCommand","SetRowColoringCommand","coloring","getColoring","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SchemaDispatcher","setRowColoring","setVerticalGrid","verticalGrid","setHorizontalGrid","horizontalGrid","SchemaCommandDispatcher","schemaDispatcher","structureCommandService","schemaRowColoring","toSchemaRowColoring","SchemaRowColoring","LocalSchemaCommandDispatcher","StructureVerticalFormationWarehouse","LocalStructureVerticalFormationWarehouse","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","THEME_GENERIC_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","init","cssHostRef","classes","diff","updateState","renderCssClasses","css","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureSummariesPanelConfig","top","bottom","itTopEnabled","itBottomEnabled","StructureSummariesArchive","StructureSummariesPanelConfigConverter","StructureSetSummariesEnabledCommand","StructureSummariesCommandDispatcher","setSummariesEnabled","StructureSummariesConfigService","structureSummariesPanelConfigConverter","structureSummariesArchive","structureSummariesCommandDispatcher","summariesPanelConfig","structureComponentToken","ENTER","StructureGateway","pagingEventService","sourceCommandService","sourceEventService","schemaCommandDispatcher","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureSummariesConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","structureSearchEventService","structureHeaderTopEnabledArchive","structureHeaderBottomEnabledArchive","structureDetailViewConfigArchive","structureTitlePanelConfigArchive","structureFooterPanelConfigArchive","schemaEventRepository","simpleChanges","rowDetail","titlePanel","footerPanel","nextConfig","rowSelecting","editMode","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","filtering","quickFilters","searching","onItemSelected","onSourceEdited","values","state","StructureCellEditState","connectSchemaEvents","onThemeChanged","onHorizontalGridChanged","onVerticalGridChanged","NextPageEvent","PrevPageEvent","StructurePagingEventRepository","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureWarehouse","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","observePhrases","StructureSearchEventService","structureSearchPhraseRepository","StructureCellEditCloseAllService","closeAll$","closeAll","onCloseAll","StructureHeaderBottomEnabledArchive","StructureHeaderTopEnabledArchive","SchemaHorizontalGridSetEvent","getHorizontalGrid","SchemaVerticalGridSetEvent","getVerticalGrid","RowColoringSetEvent","getRowColoring","SchemaEventRepository","onEvent","EventRepository","StructureRowDetailConfigArchive","structureRowDetailViewItem","structureRowDetailViewTemplate","StructureRowDetailViewComponent","selectedRowValues","StructureRowDetailService","drawerService","ref","turnOn","turnOff","close","FabricDrawerService","StructureTitlePanelConfigArchive","title","StructureFooterPanelConfigArchive","structureIdFactory","generator","compositionIdFactory","schemaIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","structureReadModelService","schemaStylesManager","structureDetailViewService","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","offsetWidth","timer","setStyle","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","StructureColumnConfigService","inlineDialogService","placement","InlineDialogPlacement","Top","offset","FabricInlineDialogService","StructureHeaderColumnsComponent","globalSearching","isSortAsc","isSortDesc","isGlobalSortEnabled","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterWarehouse","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","structureVerticalFormationWarehouse","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureContentComponent","formationCommandService","formationReadModelService","rowDetailOpened","rowsList","clearSelectedRows","strippedId","selectedRowEl","combineLatest","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","detailsEnabled","StructureCellComponent","cellEditCloseAllService","inEditMode","exitEditMode","cell","enterEditMode","forceCheck","valueChanges$","status$","parentElement","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","structureReadModelWarehouse","compositionWarehouse","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","containerHeight","observe","recalculateContainer","sourceCollectionRef","enableScrollObservation","disableScrollObservation","setSourceHeight","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchWarehouse","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topSummariesPanelEnabled","bottomSummariesPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","topHeaderEnabled","bottomHeaderEnabled","pagingReadModel","titlePanelEnabled","footerPanelEnabled","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","StructureAggregateRepository","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","SetSourceLoadingEvent","PagingSetEvent","FormationSetEvent","StructureFilterToggledEvent","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","SetVerticalScrollEnabledCommandHandler","setVerticalFormationEnabled","SetScrollPositionCommandHandler","InitFieldsCommandHandler","fieldTypes","createFields","ToggleSortCommandHandler","structureAggregateRepository","sorters","publishSortEvent","sorter","hasDirection","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","toggleFilter","StructureSummariesChangedEvent","getSummaries","StructureSummariesChangedAggregateEventName","StructureSummariesChangedAggregateEvent","summarizedValues","StructurePreparedEntitiesSetEvent","getPreparedItems","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureSummariesChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureSummariesEnabledSetEventName","StructureSummariesEnabledSetEvent","StructureSetSummariesEnabledCommandHandler","structureSourceDomainEventPublisher","VerticalRange","margin","getMargin","VerticalFormationContainerHeight","empty","isContainerHeightProperForVirtualScroll","isPresent","getValueOrNullOrThrowError","getVisibleContainerHeight","getContainerHeight","of","DomainObject","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","calcFullHeight","itemsInViewport","viewportPositionIndex","floor","max","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","FieldIdGenerator","BaseField","matchers","accessorMethod","getKey","getMatchers","getSearchMatcher","val","getSortValue","getSortMatcher","getSearchValue","Field","summariesEnabled","possibleSummaries","assignPossibleSummaries","assignSummaries","isSummaries","isSummariesEnabled","assignDefaultSummaries","UnknownField","one","two","filterPhrase","NumberField","numOne","numTwo","StringField","toLowerCase","strOne","strTwo","localeCompare","BooleanField","booleanOne","booleanTwo","sureBoolTwo","DateField","dateOne","dateTwo","FieldMatchers","sortMatcher","searchMatcher","getMatcher","FieldFactory","fieldIdGenerator","fieldMatchers","createMatchers","columnType","TypeField","mapNumber","callback","ifNumber","entityOne","entityTwo","valueOne","valueTwo","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","from","typeField","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureFilter","filterId","setFilterValue","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","SUMMARIES_CALCULATORS","SummariesCalculator","filteredFields","forDataType","distinct","Set","prepare","countForField","add","postCalculate","aggregatedValues","generateAggregatedValues","setCount","setDistinct","SummariesValues","BooleanSummarizedValues","truthy","falsy","BooleanSummariesCalculator","booleanValue","truthyForField","falsyForField","DateSummarizedValues","DateSummariesCalculator","NumberSummarizedValues","min","average","median","setValueWithPrecision","toFixed","NumberSummariesCalculator","MAX_SAFE_INTEGER","numberValue","sumForField","minForField","maxForField","StringSummarizedValues","StringSummariesCalculator","UnknownSummarizedValues","UnknownSummariesCalculator","SummariesManager","calculators","DEFAULT_ENABLED","calculations","calc","allFields","remove","update","SummariesManagerFactory","provideSummariesCalculator","clazz","summariesProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureSummariesUiEventsRepository","onSummariesChanged","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","OriginId","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","StructurePreparedEntitiesSetAggregateEvent","FieldsInitedAggregateEvent","SchemaThemeSetAggregateEvent","RowColoringSetAggregateEvent","SchemaVerticalGridSetAggregateEvent","SchemaHorizontalGridSetAggregateEvent","SchemaCreatedEvent","SchemaCreatedAggregateEvent","SchemaAggregate","DEFAULT_THEME","DEFAULT_HORIZONTAL_GRID","DEFAULT_VERTICAL_GRID","DEFAULT_ROW_COLORING","changeTheme","StructureCreatedAggregateEvent","StructureAggregate","sourceManager","summariesManager","sorterCollection","filterCollection","searchManager","fieldCollection","pagingManager","filterManager","initTheme","calculateSource","editParams","setHeight","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","typeFields","setConfig","addSearchPhrase","removeSearchPhrase","removeSearchFilters","searchedEntities","ents","ae","StructureSorter","rank","sorterId","getRank","changeDirection","setDirection","SorterId","SorterCollection","multiSorting","clear","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","FormationAggregateFactory","SearchManager","searchFields","enabledDataTypes","searchableFields","searchedItems","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","summariesManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","sorterContainer","filterContainer","fieldContainer","structureAggregate","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingCommandHandlers","pagingProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","formationCommandHandlers","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceCommandHandlers","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","StructureSetHeightCommandHandler","SetRowHeightBasedOnThemeCommandHandler","StructureSummariesRepository","onSummariesEnabled","StructureSummariesWarehouse","structureSummariesRepository","StructureCreatedEventHandler","StructureSummariesEnabledSetEventHandler","structureCommandHandlers","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","verticalFormationWarehouse","controlsConfig","FORM_SEARCH_NAME","searchForm","formRef","debounceTime","StructureFilterIconComponent","StructureFilterMenuComponent","onColumnSelect","selectedColumnId","[class.gui-structure-filter-menu]","StructureFilterMenuTriggerComponent","structureComponent","openDrawer","structureElement","StructureColumnSelectorComponent","columnSelected","options","onSelectChange","StructureFilterMenuModule","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureColumnConfigSortComponent","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuIconComponent","[class.gui-structure-column-menu-icon]","StructureColumnMenuArrowIconComponent","rotateDeg","StructureColumnMenuModule","StructureSummariesPanelComponent","structureSummariesUiEventsRepository","sourceEmpty","isSummariesTypePresent","[class.gui-structure-summaries-panel]","StructureSummariesPanelModule","CreateStructureCommandHandler","StructureCellEditComponent","initEditContext","cellContainerRef","SchemaAggregateFactory","CreateSchemaCommandHandler","SetSchemaThemeCommandHandler","publishFromAggregate","schemaAggregate","SchemaAggregateRepository","InMemorySchemaStore","InMemorySchemaAggregateStore","inMemorySchemaStore","InMemorySchemaAggregateRepository","inMemorySchemaAggregateStore","SetRowColoringCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaVerticalGridCommandHandler","SchemaCssClass","SchemaCssClassesEventHandler","SchemaThemeSetEventHandler","themeRepository","schemaKey","SchemaModule","StructureCellEditBooleanComponent","submitChanges","StructureTitlePanelComponent","StructureFooterPanelComponent","footerTitle","createStructureDefinition","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$2","elementComponents","GridModule","imports$1","declarations$3","providers$1","entryComponents$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\tenabled?: boolean;\n\n\talign?: string | GuiColumnAlign;\n\n\tsummaries?: GuiColumnSummaries;\n\n\tsorting?: GuiColumnSorting;\n\n\tcellEditing?: GuiColumnCellEditing;\n\n\tmatcher?: (item: any) => any;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport enum GuiSortingOrder {\n\tNONE,\n\tASC,\n\tDESC\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n\thighlighting?: boolean;\n\n\tplaceholder?: string;\n\n\tphrase?: string;\n\n}\n\nexport interface GuiSummaries {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnSummaries {\n\n\tenabled?: boolean;\n\n\tsummariesTypes?: Array<any>;\n}\n\nexport interface GuiColumnSorting {\n\n\tenabled?: boolean;\n\n\tmatcher?: (item: any) => any;\n\n\torder?: GuiSortingOrder\n}\n\nexport interface GuiColumnCellEditing {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n\nexport enum GuiColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n\nexport interface GuiRowDetail {\n\n\tenabled?: boolean;\n\n\ttemplate?: (item: any) => string;\n}\n\nexport interface GuiTitlePanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n\nexport interface GuiFooterPanel {\n\tenabled?: boolean\n\ttemplate?: string | ((title: any) => string);\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../feature-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum SummariesType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6, // doesn't work\n\tFALSY = 1 << 7, // doesn't work\n\tEARLIEST = 1 << 8, // doesn't work\n\tLATEST = 1 << 9, // doesn't work\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnSummariesConfig } from '../../../../../../lib/composition/domain/column/column-summaries.config';\nimport { SummariesType } from '../../../../../../lib/structure/domain/structure/summaries/summaries.type';\n\nimport { GuiColumnSummaries } from '../../../../../../grid.index';\n\n\nexport class GridColumnSummariesConverter {\n\n\tconvert(summariesConfig: GuiColumnSummaries): ColumnSummariesConfig {\n\t\tlet columnSummariesConfig: ColumnSummariesConfig = {};\n\n\t\tif (summariesConfig.enabled !== undefined && summariesConfig.enabled !== null) {\n\t\t\tcolumnSummariesConfig.enabled = summariesConfig.enabled;\n\t\t}\n\n\t\tif (summariesConfig.summariesTypes !== undefined && summariesConfig.summariesTypes !== null) {\n\t\t\tcolumnSummariesConfig.summariesTypes = this.convertSummariesTypes(summariesConfig.summariesTypes);\n\t\t}\n\n\t\treturn columnSummariesConfig;\n\t}\n\n\tprivate convertSummariesTypes(configSummariesTypes: Array<string>): Array<SummariesType> {\n\n\t\tconst summariesTypes: Array<SummariesType> = [];\n\n\t\tconfigSummariesTypes.forEach((type: string) => {\n\n\t\t\tconst summariesType = this.convertSummariesType(type);\n\n\t\t\tif (summariesType !== undefined && summariesType !== null) {\n\t\t\t\tsummariesTypes.push(summariesType);\n\t\t\t}\n\t\t});\n\n\t\treturn summariesTypes;\n\t}\n\n\tprivate convertSummariesType(type: string): SummariesType {\n\n\t\tconst loweredSummariesType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredSummariesType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn SummariesType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn SummariesType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn SummariesType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn SummariesType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn SummariesType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn SummariesType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn SummariesType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn SummariesType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn SummariesType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn SummariesType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn SummariesType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tNUMBER,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION,\n\tDATE,\n\tBAR,\n\tPERCENTAGE_BAR,\n\tPERCENTAGE\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../feature-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/column/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase 'bar':\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase 'percentage_bar':\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase 'percentage':\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tcase GuiCellView.BAR:\n\t\t\t\treturn CellView.BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE_BAR:\n\t\t\t\treturn CellView.PERCENTAGE_BAR;\n\n\t\t\tcase GuiCellView.PERCENTAGE:\n\t\t\t\treturn CellView.PERCENTAGE;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { ColumnSortingConfig } from '../../../../../../lib/composition/domain/sort/column-sorting.config';\n\nimport { GuiColumnSorting } from '../../../../../../grid.index';\n\nexport class GridColumnSortingConverter {\n\n\tconvert(sortingConfig: GuiColumnSorting): ColumnSortingConfig {\n\n\t\treturn sortingConfig as any;\n\t}\n\n}\n","import { GuiColumnCellEditing } from '../../../../../../grid.index';\nimport { ColumnCellEditingConfig } from '../../../../../../lib/composition/domain/column/column-cell-editing.config';\n\nexport class GridColumnCellEditingConverter {\n\n\tconvert(config: GuiColumnCellEditing): ColumnCellEditingConfig {\n\n\t\treturn config as any;\n\t}\n\n}\n","export enum ColumnAlign {\n\tRIGHT,\n\tCENTER,\n\tLEFT\n}\n","import { GuiColumnAlign } from '../../../../feature-api/grid.api';\nimport { ColumnAlign } from '../../../../../../lib/composition/domain/column/column-align';\n\nexport class GridColumnAlignConverter {\n\n\tconvert(align: string | GuiColumnAlign): ColumnAlign {\n\n\t\tif (typeof align === 'string') {\n\t\t\treturn this.convertTypeString(align);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(align);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(align: GuiColumnAlign): ColumnAlign {\n\n\t\tswitch (align) {\n\n\t\t\tcase GuiColumnAlign.RIGHT:\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase GuiColumnAlign.CENTER:\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase GuiColumnAlign.LEFT:\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n\n\tprivate convertTypeString(align: string): ColumnAlign {\n\t\tconst loweredType = align.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'right':\n\t\t\t\treturn ColumnAlign.RIGHT;\n\n\t\t\tcase 'center':\n\t\t\t\treturn ColumnAlign.CENTER;\n\n\t\t\tcase 'left':\n\t\t\t\treturn ColumnAlign.LEFT;\n\n\t\t\tdefault:\n\t\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\t}\n}\n","import { GuiColumn } from '../../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnSummariesConverter } from './summaries/grid.column-summaries.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\nimport { GridColumnSortingConverter } from './sorting/grid.column-sorting.converter';\nimport { GridColumnCellEditingConverter } from './cell-editing/grid.column-cell-editing.converter';\nimport { GridColumnAlignConverter } from './align/grid.column-align.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnSummariesConverter = new GridColumnSummariesConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tprivate readonly columnSortingConverter = new GridColumnSortingConverter();\n\n\tprivate readonly columnCellEditingConverter = new GridColumnCellEditingConverter();\n\n\tprivate readonly columnAlignConverter = new GridColumnAlignConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.enabled !== undefined && guiColumn.enabled !== null) {\n\t\t\tcolumnConfig.enabled = guiColumn.enabled;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.align !== undefined && guiColumn.align !== null) {\n\t\t\tcolumnConfig.align = this.columnAlignConverter.convert(guiColumn.align);\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.summaries !== undefined && guiColumn.summaries !== null) {\n\t\t\tcolumnConfig.summaries = this.columnSummariesConverter.convert(guiColumn.summaries);\n\t\t}\n\n\t\tif (guiColumn.sorting !== undefined && guiColumn.sorting !== null) {\n\t\t\tcolumnConfig.sorting = this.columnSortingConverter.convert(guiColumn.sorting);\n\t\t}\n\n\t\tif (guiColumn.cellEditing !== undefined && guiColumn.cellEditing !== null) {\n\t\t\tcolumnConfig.cellEditing = this.columnCellEditingConverter.convert(guiColumn.cellEditing);\n\t\t}\n\n\t\tif (guiColumn.matcher !== undefined && guiColumn.matcher !== null) {\n\t\t\tcolumnConfig.matcher = guiColumn.matcher;\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK,\n\tGENERIC\n}\n","import { GuiTheme } from '../../../feature-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/schema/domain/theme/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tconvertToGuiTheme(theme: SchemaTheme): GuiTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn GuiTheme.MATERIAL;\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn GuiTheme.FABRIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn GuiTheme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn GuiTheme.DARK;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiTheme.GENERIC;\n\n\t\t}\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase 'generic':\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tcase GuiTheme.GENERIC:\n\t\t\t\treturn SchemaTheme.GENERIC;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../feature-api/grid.api';\nimport { RowColoring } from '../../../../../lib/schema/feature-api/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tconvertToGuiRowColoring(value: RowColoring): GuiRowColoring {\n\t\tswitch (value) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn GuiRowColoring.NONE;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn GuiRowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn GuiRowColoring.EVEN;\n\n\t\t}\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../feature-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/feature-api/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/feature/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../feature-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering, GuiFooterPanel,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiRowDetail,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiSummaries,\n\tGuiTheme, GuiTitlePanel\n} from '../../feature-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/feature-api/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\nimport { SchemaTheme } from '../../../../lib/schema/domain/theme/schema-theme';\nimport { RowColoring } from '../../../../lib/schema/feature-api/row-coloring';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t@Input()\n\ttitlePanel: GuiTitlePanel;\n\n\t@Input()\n\tfooterPanel: GuiFooterPanel;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tsummaries: GuiSummaries;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\t@Input()\n\trowDetail: GuiRowDetail;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<GuiTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<GuiRowColoring> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n\tonSearchPhrase(value: string): void {\n\t\tthis.searchPhraseChanged.emit(value);\n\t}\n\n\tonTheme(value: SchemaTheme): void {\n\t\tthis.themeChanged.emit(this.gridThemeConverter.convertToGuiTheme(value));\n\t}\n\n\tonHorizontalGrid(value: boolean): void {\n\t\tthis.horizontalGridChanged.emit(value);\n\t}\n\n\tonVerticalGrid(value: boolean): void {\n\t\tthis.verticalGridChanged.emit(value);\n\t}\n\n\tonRowColoring(value: RowColoring): void {\n\t\tthis.rowColoringChanged.emit(this.gridRowColoringConverter.convertToGuiRowColoring(value));\n\t}\n\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/feature/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/feature/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDrawerModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\n\t\tif (this.unsubscribe$.isStopped) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport abstract class StructureReadModelRepository extends Reactive {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper();\n\t\tdomainEventBus\n\t\t\t.ofEvent(\n\t\t\t\t...this.forEvents()\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\ttry {\n\t\t\t\t\tthis.subs(event);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot>;\n\n\tprotected abstract forEvents(): Array<typeof DomainEvent>;\n\n\tprotected abstract subs(event: DomainEvent<StructureId>): void;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Paging } from './paging';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\n\n\nexport class StructureReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): AggregateId {\n\t\treturn new StructureId(this.toString());\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRootId } from '../feature-api/read/structure.read-model-root-id';\n\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): StructureReadModelRootId {\n\t\treturn new StructureReadModelRootId(this.getId());\n\t}\n\n}\n","import { StructureId } from '../domain/structure.id';\n\nexport const structureGlobalId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from './read/paging.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class StructurePagingWarehouse {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = structureGlobalId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagingConfig } from '../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly config: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n\tgetPagingConfig(): PagingConfig {\n\t\treturn this.config;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { PagingConfig } from './paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class StructurePagingCommandDispatcher {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../../domain/source/origin/origin-item-entity';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructureSourceWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = structureGlobalId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = structureGlobalId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = structureGlobalId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate pagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../feature-api/paging/read/paging';\nimport { StructurePagingCommandDispatcher } from '../../../../feature-api/paging/structure-paging.command-dispatcher';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: StructurePagingCommandDispatcher) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-info-dialog',\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-dialog-title gui-info-title\">Generic UI Grid</p>\n\n\n\t\t\t<p class=\"gui-info-version\">\n\t\t\t\tver. 0.11.2\n\t\t\t</p>\n\n\t\t\t<p class=\"gui-quote\">\n\t\t\t\t\"The best way to success is to help others succeed.\"\n\t\t\t</p>\n\n\t\t\t<br/>\n\n\t\t\t<section>\n\t\t\t\t<p>Links:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/\">Website</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<br/>\n\n\t\t\t\t<p>Feedback:</p>\n\t\t\t\t<ul>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../domain/composition.id';\n\nexport class CompositionReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): CompositionId {\n\t\treturn new CompositionId(this.toString());\n\t}\n}\n","import { AggregateId, ReadModelRootId } from '@generic-ui/hermes';\nimport { CompositionReadModelRootId } from '../feature-api/read/composition.read-model-root-id';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): ReadModelRootId {\n\t\treturn new CompositionReadModelRootId(this.getId());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-dialog-column-manager',\n\ttemplateUrl: `./structure.dialog-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-dialog-column-manager]': 'true'\n\t}\n})\nexport class StructureDialogColumnManagerComponent {\n}\n","import { Injectable } from '@angular/core';\n\nimport { Theme } from '@generic-ui/fabric';\n\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class StructureThemeConverter {\n\n\tconvertTheme(schemaTheme: SchemaTheme): Theme {\n\t\tswitch (schemaTheme) {\n\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\t\treturn Theme.MATERIAL;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\t\treturn Theme.GENERIC;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\t\treturn Theme.LIGHT;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\t\treturn Theme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn Theme.FABRIC;\n\n\t\t}\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { SchemaReadModelRootId } from '../feature-api/read/schema.read-model-root-id';\n\n\nexport class SchemaId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoReadModelRootId(): SchemaReadModelRootId {\n\t\treturn new SchemaReadModelRootId(this.getId());\n\t}\n}\n","import { ReadModelRootId } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\n\n\nexport class SchemaReadModelRootId extends ReadModelRootId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n\ttoAggregateId(): SchemaId {\n\t\treturn new SchemaId(this.getId());\n\t}\n}\n","import { SchemaReadModelRootId } from './schema.read-model-root-id';\n\nexport const schemaGlobalId = new SchemaReadModelRootId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaThemeRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaTheme>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaTheme>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaTheme> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaTheme>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { SchemaCssClass } from './schema-css-class';\n\n\n@Injectable()\nexport class SchemaCssClassesRepository extends Reactive {\n\n\tprivate theme = new Map<string, SchemaCssClass>();\n\n\tprivate theme$ = new ReplaySubject<Map<string, SchemaCssClass>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetTheme(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.next(theme, schemaId);\n\t}\n\n\ton(schemaId: SchemaId): Observable<SchemaCssClass> {\n\n\t\treturn this.theme$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, SchemaCssClass>) => {\n\t\t\t\t\t\t   return map.get(schemaId.toString());\n\t\t\t\t\t   })\n\t\t\t\t\t   // distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(theme: SchemaCssClass, schemaId: SchemaId): void {\n\t\tthis.theme.set(schemaId.toString(), theme);\n\t\tthis.theme$.next(this.theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaCssClass } from './css-classes/schema-css-class';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\n\n\n@Injectable()\nexport class SchemaWarehouse {\n\n\tconstructor(private readonly schemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tprivate readonly schemaThemeRepository: SchemaThemeRepository) {\n\t}\n\n\tonSingleTheme(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\t\treturn this.schemaThemeRepository\n\t\t\t\t   .on(schemaId.toAggregateId())\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaCssClass> {\n\t\treturn this.schemaCssClassesRepository\n\t\t\t\t   .on(schemaId.toAggregateId());\n\t}\n\n}\n","import { Injectable, Injector } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureDialogColumnManagerComponent } from './structure.dialog-column-manager.component';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Injectable()\nexport class StructureDialogColumnManagerService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly fabricDialogService: FabricDialogService) {\n\t\tsuper();\n\t}\n\n\topen(compositionId: CompositionId, readModelId: SchemaReadModelRootId) {\n\n\t\tconst injector = Injector.create({ parent: this.injector, providers: [{ provide: CompositionId, useValue: compositionId }] });\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme(readModelId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\n\t\t\t\tthis.fabricDialogService.open(StructureDialogColumnManagerComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureDialogColumnManagerService } from '../../column-manager/dialog/structure.dialog-column-manager.service';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<div>\n\n\t\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t\t</ng-container>\n\n\t\t\t</ng-container>\n\n\t\t</div>\n\n\t\t<div>\n\t\t\t<div class=\"gui-right-section\">\n\n\t\t\t\t<span\n\t\t\t\t\t\t(click)=\"openColumnManager()\">\n\t\t\t\t\t<gui-structure-column-manager-icon>\n\t\t\t\t\t</gui-structure-column-manager-icon>\n\t\t\t\t</span>\n\n\t\t\t\t<span [gui-tooltip]=\"'Info'\"\n\t\t\t\t\t  (click)=\"openInfo()\">\n\t\t\t\t\t<gui-structure-info-icon></gui-structure-info-icon>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly dialog: FabricDialogService,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly menuColumnManagerService: StructureDialogColumnManagerService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenInfo(): void {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n\topenColumnManager(): void {\n\t\tthis.menuColumnManagerService.open(this.compositionId, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../../domain/composition.id';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { DomainEventBus, ReadModelRootRepository } from '@generic-ui/hermes';\n\n\nexport abstract class CompositionReadModelRootRepository extends ReadModelRootRepository<CompositionId> {\n\n\tprotected constructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tabstract on(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>>;\n}\n","import { CompositionId } from '../domain/composition.id';\n\nexport const compositionGlobalId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionReadModelRootRepository } from './read/composition.read-model-root-repository';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { CompositionReadModeRoot } from './read/composition.read-mode-root';\nimport { CellTemplateWithContext } from './read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './read/definition/cell-template-with-accessor';\nimport { SortOrder } from '../domain/column/sort/sort-order';\nimport { FieldId } from '../../structure/domain/structure/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionWarehouse {\n\n\tconstructor(private compositionRepository: CompositionReadModelRootRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = compositionGlobalId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = compositionGlobalId): Observable<SortOrder> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = compositionGlobalId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: CompositionReadModeRoot) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\n\n\nexport class CreateCompositionCommand extends Command {\n\n\tconstructor(private readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CreateCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure/domain/structure.id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition.id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CreateCompositionCommand } from './create/create-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class ColumnId extends EntityId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { CompositionId } from '../domain/composition.id';\nimport { compositionGlobalId } from './composition.global-id';\nimport { ColumnParams } from '../domain/column/set-columns/column.params';\nimport { ColumnId } from '../domain/column/column.id';\nimport { ColumnDefinitionId } from './read/definition/column-definition-id';\n\n\n@Injectable()\nexport class CompositionCommandDispatcher {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.createComposition(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), true);\n\t}\n\n\tdisableColumn(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, this.toColumnId(columnDefinitionId), false);\n\t}\n\n\tmoveLeft(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tmoveRight(columnDefinitionId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, this.toColumnId(columnDefinitionId));\n\t}\n\n\tprivate toColumnId(defId: ColumnDefinitionId): ColumnId {\n\t\treturn new ColumnId(defId.getId());\n\t}\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../composition/domain/composition.id';\n\n\n@Component({\n\tselector: 'gui-structure-column-manager',\n\ttemplate: `\n\n\t\t<ol>\n\t\t\t<li *ngFor=\"let column of columns\"\n\t\t\t\t(click)=\"toggleColumn(column)\">\n\n\t\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\">\n\n\t\t\t\t\t<ng-container\n\t\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t\t</ng-container>\n\t\t\t\t</gui-checkbox>\n\n\t\t\t</li>\n\t\t</ol>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-manager]': 'true'\n\t}\n})\nexport class StructureColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionId: CompositionId,\n\t\t\t\tprivate compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnDefinitionId(), this.compositionId);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplateUrl: `./structure.menu-column-manager.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-manager-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 10.31\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.65\" x2=\"0.75\" y2=\"3.65\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-2\" x1=\"0.75\" y1=\"9.56\" x2=\"0.75\" y2=\"0.88\"/>\n\t\t\t<line class=\"cls-1\" x1=\"3.69\" y1=\"9.65\" x2=\"3.69\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.63\" y1=\"9.56\" x2=\"6.63\" y2=\"3.89\"/>\n\t\t\t<line class=\"cls-2\" x1=\"9.57\" y1=\"9.56\" x2=\"9.57\" y2=\"0.88\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnManagerIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnManagerComponent } from './structure.column-manager.component';\nimport { fabricImports } from '../structure-fabric.imports';\nimport { StructureDialogColumnManagerService } from './dialog/structure.dialog-column-manager.service';\nimport { StructureDialogColumnManagerComponent } from './dialog/structure.dialog-column-manager.component';\nimport { StructureMenuColumnManagerComponent } from './menu/structure.menu-column-manager.component';\nimport { StructureColumnManagerIconComponent } from './icon/structure.column-manager-icon.component';\n\n\nconst declarations = [\n\tStructureColumnManagerComponent,\n\tStructureDialogColumnManagerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnManagerIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations,\n\tentryComponents: [\n\t\tStructureColumnManagerComponent,\n\t\tStructureDialogColumnManagerComponent,\n\t\tStructureMenuColumnManagerComponent\n\t],\n\tproviders: [\n\t\tStructureDialogColumnManagerService\n\t]\n})\nexport class StructureColumnManagerModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-info-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.08 10.08\">\n\t\t\t<path class=\"cls-1\"\n\t\t\t\t  d=\"M401.64,307.76c0-.28.23-.45.54-.45s.55.17.55.45v0a.49.49,0,0,1-.55.46.48.48,0,0,1-.54-.46Zm.05,1.27a.49.49,0,0,1,1,0v2.54a.49.49,0,0,1-1,0Z\"\n\t\t\t\t  transform=\"translate(-397.14 -304.64)\"/>\n\t\t\t<circle class=\"cls-2\" cx=\"5.04\" cy=\"5.04\" r=\"4.54\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`,\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureInfoIconComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureInfoIconComponent } from './icon/structure.info-icon.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule,\n\t\tFabricModule,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoIconComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span class=\"gui-view-text\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-view-text gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-element=\"element\">\n\t\t\t<span class=\"gui-view-text\">{{ element | date: 'dd/MM/yyyy' }}</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"false\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentageBar let-element=\"element\">\n\t\t\t<gui-bar-view [value]=\"element\" [showPercentage]=\"true\"></gui-bar-view>\n\t\t</ng-template>\n\n\t\t<ng-template #percentage let-element=\"element\">\n\t\t\t<gui-percentage-view [value]=\"element\"></gui-percentage-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('bar', { read: TemplateRef, static: true })\n\tbarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentageBar', { read: TemplateRef, static: true })\n\tpercentageBarTemplate: TemplateRef<any>;\n\n\t@ViewChild('percentage', { read: TemplateRef, static: true })\n\tpercentageTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tcase CellView.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tcase CellView.BAR:\n\t\t\t\treturn this.barTemplate;\n\n\t\t\tcase CellView.PERCENTAGE_BAR:\n\t\t\t\treturn this.percentageBarTemplate;\n\n\t\t\tcase CellView.PERCENTAGE:\n\t\t\t\treturn this.percentageTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { ElementRef, Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\t@Input()\n\tparent: ElementRef;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #date let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" let-parent=\"parent\" >\n\t\t\t<gui-date-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\" [parent]=\"parent\" >\n\t\t\t</gui-date-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('date', { read: TemplateRef, static: true })\n\tdateTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tcase DataType.DATE:\n\t\t\t\treturn this.dateTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<span class=\"gui-cell-boolean\">\n\t\t\t<gui-checkbox #checkbox\n\t\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t\t</gui-checkbox>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t\tthis.submit();\n\t}\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionId } from '../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionId, CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionId, CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository extends AggregateRepository<CompositionId, CompositionAggregate> {\n\n\tabstract getById(compositionId: CompositionId): Optional<CompositionAggregate>;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId, Optional } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): Optional<CompositionAggregate> {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private readonly componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../../domain/column/cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortOrder {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from './cell-view';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\n\nexport class ViewEntity {\n\n\tpublic static fromDataType(dataType: DataType): ViewEntity {\n\n\t\tif (dataType === DataType.DATE) {\n\t\t\treturn new ViewEntity(CellView.DATE);\n\t\t} else {\n\t\t\treturn new ViewEntity(CellView.TEXT);\n\t\t}\n\n\t}\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { ColumnAlign } from './column-align';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { CellView } from './cell-view';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\nexport abstract class AbstractColumnEntity extends Entity<ColumnId> {\n\n\tprivate columnField: ColumnField;\n\n\tprivate header?: string | HeaderTemplate;\n\n\tprivate width?: number;\n\n\tprotected align: ColumnAlign;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprotected view: ViewEntity;\n\n\tprotected presentation: ColumnPresentation;\n\n\tprotected constructor(columnId: ColumnId,\n\t\t\t\t\t\t  columnField: ColumnField,\n\t\t\t\t\t\t  columnConfig: ColumnConfig,\n\t\t\t\t\t\t  presentation: ColumnPresentation,\n\t\t\t\t\t\t  header?: string | HeaderTemplate,\n\t\t\t\t\t\t  align?: ColumnAlign,\n\t\t\t\t\t\t  view?: ViewEntity,\n\t\t\t\t\t\t  width?: number) {\n\t\tsuper(columnId);\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\t\tthis.presentation = presentation;\n\n\t\tthis.view = ViewEntity.fromDataType(columnField.getDataType());\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.setInitialAlign(columnField, align);\n\t}\n\n\tgetPresentation(): ColumnPresentation {\n\t\treturn this.presentation;\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tsetHeader(header: string | HeaderTemplate): void {\n\t\tthis.header = header;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetAlign(): ColumnAlign {\n\t\treturn this.align;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetSortingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.sorting !== undefined && config.sorting !== null) {\n\n\t\t\tif (config.sorting.enabled === undefined || config.sorting.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.sorting.enabled;\n\t\t}\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\tconst config = this.columnConfig;\n\n\t\tif (config.cellEditing !== undefined && config.cellEditing !== null) {\n\n\t\t\tif (config.cellEditing.enabled === undefined || config.cellEditing.enabled === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn config.cellEditing.enabled;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate setInitialAlign(columnField: ColumnField, align?: ColumnAlign): void {\n\n\t\tif (align !== undefined && align !== null) {\n\t\t\tthis.align = align;\n\t\t} else if (columnField.getDataType() === DataType.NUMBER) {\n\t\t\tthis.align = ColumnAlign.RIGHT;\n\t\t} else {\n\t\t\tthis.align = ColumnAlign.LEFT;\n\t\t}\n\t}\n\n}\n","import { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from './column.config';\nimport { SortOrder } from './sort/sort-order';\nimport { ViewEntity } from './view.entity';\nimport { ColumnAlign } from './column-align';\nimport { AbstractColumnEntity } from './abstract-column.entity';\nimport { ColumnPresentation } from './presentation/column.presentation';\n\n\nexport class ColumnEntity extends AbstractColumnEntity {\n\n\tsortable?: boolean;\n\n\tprivate sortStatus = SortOrder.NONE;\n\n\tprivate enabled: boolean = true;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\tenabled: boolean,\n\t\t\t\tpresentation: ColumnPresentation,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\talign: ColumnAlign,\n\t\t\t\tview: ViewEntity,\n\t\t\t\twidth: number) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tcolumnConfig,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tthis.enabled = enabled;\n\n\t\tif (view === undefined) {\n\t\t\tthis.view = new ViewEntity(this.presentation.getDefaultView());\n\t\t}\n\n\t\tif (align === undefined) {\n\t\t\tthis.align = this.presentation.getDefaultAlign(this.view);\n\t\t}\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tsetSortStatus(status: SortOrder): void {\n\t\tthis.sortStatus = status;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n// Basically header template\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnDefinitionId: ColumnDefinitionId,\n\t\t\t\tprivate readonly sortStatus: SortOrder,\n\t\t\t\tprivate readonly enabled: boolean,\n\t\t\t\tprivate readonly sortable: boolean,\n\t\t\t\tprivate readonly align: ColumnAlign) {\n\t}\n\n\tgetColumnDefinitionId(): ColumnDefinitionId {\n\t\treturn this.columnDefinitionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortOrder {\n\t\treturn this.sortStatus;\n\t}\n\n\tisSortEnabled(): boolean {\n\t\treturn this.sortable;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../../domain/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { ColumnAlign } from '../../../domain/column/column-align';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic templateFun: (i: any) => any,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic searchAccessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly align: ColumnAlign,\n\t\t\t\tprivate readonly cellEditingEnabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled;\n\t}\n\n\tisBooleanDataType(): boolean {\n\t\treturn this.type === DataType.BOOLEAN;\n\t}\n\n\tisAlignLeft(): boolean {\n\t\treturn this.align === ColumnAlign.LEFT;\n\t}\n\n\tisAlignCenter(): boolean {\n\t\treturn this.align === ColumnAlign.CENTER;\n\t}\n\n\tisAlignRight(): boolean {\n\t\treturn this.align === ColumnAlign.RIGHT;\n\t}\n\n\t// REFACTOR #1581\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\treturn this.templateFun(this.findValue(entity, searchPhrase));\n\t}\n\n\tprivate findValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.searchAccessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ReadModelEntity } from '@generic-ui/hermes';\n\nimport { ColumnField } from '../../../domain/column/field/column-field';\nimport { SortOrder } from '../../../domain/column/sort/sort-order';\nimport { HeaderTemplate } from '../../../domain/column/column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ViewEntity } from '../../../domain/column/view.entity';\nimport { ColumnAlign } from '../../../domain/column/column-align';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\nexport class ColumnDefinition extends ReadModelEntity<ColumnDefinitionId> {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnDefinitionId: ColumnDefinitionId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortOrder;\n\n\tprivate sortable: boolean = true;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tprivate cellEditingEnabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnDefinitionId: ColumnDefinitionId, // REFACTOR Id first argument\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\tprivate readonly align: ColumnAlign, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tcellEditingEnabled: boolean,\n\t\t\t\tsort: SortOrder = SortOrder.NONE,\n\t\t\t\tsortable = true) {\n\t\tsuper(columnDefinitionId);\n\t\tthis.field = field;\n\t\tthis.columnDefinitionId = columnDefinitionId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.cellEditingEnabled = cellEditingEnabled;\n\t\tthis.sortStatus = sort;\n\t\tthis.sortable = sortable;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(\n\t\t\tthis.headerTemplate,\n\t\t\tthis.editTemplate,\n\t\t\theaderCellContext,\n\t\t\tthis.width,\n\t\t\tfieldId,\n\t\t\tthis.columnDefinitionId,\n\t\t\tthis.sortStatus,\n\t\t\tthis.enabled,\n\t\t\tthis.sortable,\n\t\t\tthis.align\n\t\t);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tconst accessor = (entity: any) => {\n\t\t\treturn this.field.getAccessor()(entity);\n\t\t}, searchAccessor = (entity: any) => {\n\t\t\treturn this.field.getSearchAccessor()(entity);\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(\n\t\t\tthis.cellTemplate,\n\t\t\tthis.editTemplate,\n\t\t\ttrue,\n\t\t\tthis.templateFunction,\n\t\t\taccessor,\n\t\t\tsearchAccessor,\n\t\t\tthis.width,\n\t\t\tthis.field.getId(),\n\t\t\tthis.align,\n\t\t\tthis.cellEditingEnabled,\n\t\t\tthis.type,\n\t\t\tthis.view\n\t\t);\n\t}\n\n}\n","import { ReadModelEntityId } from '@generic-ui/hermes';\n\nexport class ColumnDefinitionId extends ReadModelEntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../../domain/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../../domain/column/cell-view';\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../../domain/column/active/active-column.entity';\nimport { ColumnDefinitionId } from './column-definition-id';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tnew ColumnDefinitionId(column.getId().toString()),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getAlign(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.isCellEditingEnabled(),\n\t\t\tcolumn.getSortStatus(),\n\t\t\tcolumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tnew ColumnDefinitionId(activeColumn.getId().toString()),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getAlign(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.isCellEditingEnabled(),\n\t\t\tactiveColumn.getSortStatus(),\n\t\t\tactiveColumn.getSortingEnabled()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\nimport { CompositionReadModelRootId } from './composition.read-model-root-id';\n\n\nexport class CompositionReadModeRoot extends ReadModelRoot<CompositionReadModelRootId> {\n\n\tconstructor(uid: CompositionReadModelRootId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: CompositionReadModeRoot): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './definition/column-definition.factory';\nimport { CompositionAggregate } from '../../domain/composition.aggregate';\nimport { CompositionReadModeRoot } from './composition.read-mode-root';\nimport { ColumnEntity } from '../../domain/column/column.entity';\nimport { ColumnDefinition } from './definition/column-definition';\nimport { ActiveColumnEntity } from '../../domain/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionReadModelRootConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\taggregateId = aggregate.getId();\n\n\t\treturn new CompositionReadModeRoot(aggregateId.toReadModelRootId(), ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { CompositionAggregate } from '../../../domain/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionReadModelRootConverter } from '../../../feature-api/read/composition.read-model-root-converter';\nimport { CompositionId } from '../../../domain/composition.id';\nimport { CompositionReadModelRootId } from '../../../feature-api/read/composition.read-model-root-id';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<CompositionReadModelRootId,\n\tCompositionReadModeRoot,\n\tCompositionId,\n\tCompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionReadModelRootConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): CompositionReadModeRoot {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../composition.id';\n\nexport class CompositionCreatedEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnsSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpayload: any) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionWidthSetEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.getAggregateId();\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../composition.id';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition.id';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent<CompositionId> {\n\n\tconstructor(aggregateId: CompositionId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionReadModelRootRepository } from '../../../feature-api/read/composition.read-model-root-repository';\nimport { CompositionReadModeRoot } from '../../../feature-api/read/composition.read-mode-root';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionCreatedEvent } from '../../../domain/create/composition-created.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from '../../../domain/composition.id';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionReadModelRootRepository {\n\n\tprivate readonly compositionIdToComposition = new Map<string, CompositionReadModeRoot>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, CompositionReadModeRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionReadStore: InMemoryCompositionReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\ton(compositionId: CompositionId): Observable<Readonly<CompositionReadModeRoot>> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => {\n\n\t\t\t\t\t\t   const key = compositionId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, CompositionReadModeRoot>) => compositionIdToComposition.get(compositionId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tCompositionCreatedEvent,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tCompositionColumnsSetEvent,\n\t\t\tCompositionContainerWidthSetEvent,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\tCompositionColumnMovedRightEvent,\n\t\t\tCompositionChangeSortStatusEvent as any\n\t\t];\n\t}\n\n\tprotected subscribe(event: DomainEvent<CompositionId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optComposition = this.inMemoryCompositionReadStore.getById(aggregateId);\n\n\t\toptComposition.ifPresent((composition: CompositionReadModeRoot) => {\n\t\t\tconst key = composition.getId().toString();\n\n\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t});\n\t}\n}\n","import { InMemoryCompositionAggregateStore } from './domain/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './domain/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './feature-api/in-memory.composition.read-store';\nimport { CompositionReadModelRootRepository } from '../../feature-api/read/composition.read-model-root-repository';\nimport { InMemoryCompositionRepository } from './feature-api/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionReadModelProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionReadModelRootRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","import { CellView } from '../cell-view';\nimport { ColumnAlign } from '../column-align';\nimport { ViewEntity } from '../view.entity';\n\nexport abstract class ColumnPresentation {\n\n\tabstract getPossibleViews(): Array<CellView>;\n\n\tabstract getDefaultView(): CellView;\n\n\tabstract getDefaultAlign(view: ViewEntity): ColumnAlign;\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class NumberColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): NumberColumnPresentation {\n\t\tif (!NumberColumnPresentation.instance) {\n\t\t\tNumberColumnPresentation.instance = new NumberColumnPresentation();\n\t\t}\n\t\treturn NumberColumnPresentation.instance;\n\t}\n\n\tprivate static instance: NumberColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.BAR,\n\t\t\tCellView.PERCENTAGE_BAR,\n\t\t\tCellView.PERCENTAGE\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.NUMBER;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\t\treturn ColumnAlign.RIGHT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\nimport { ViewEntity } from '../../view.entity';\n\n\nexport class BooleanColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): BooleanColumnPresentation {\n\t\tif (!BooleanColumnPresentation.instance) {\n\t\t\tBooleanColumnPresentation.instance = new BooleanColumnPresentation();\n\t\t}\n\t\treturn BooleanColumnPresentation.instance;\n\t}\n\n\tprivate static instance: BooleanColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.CHIP,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHECKBOX\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(view: ViewEntity): ColumnAlign {\n\n\t\tif (view.getCellView() === CellView.CHECKBOX) {\n\t\t\treturn ColumnAlign.CENTER;\n\t\t} else {\n\t\t\treturn ColumnAlign.LEFT;\n\t\t}\n\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class DateColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): DateColumnPresentation {\n\t\tif (!DateColumnPresentation.instance) {\n\t\t\tDateColumnPresentation.instance = new DateColumnPresentation();\n\t\t}\n\t\treturn DateColumnPresentation.instance;\n\t}\n\n\tprivate static instance: DateColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.DATE,\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.DATE;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class StringColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): StringColumnPresentation {\n\t\tif (!StringColumnPresentation.instance) {\n\t\t\tStringColumnPresentation.instance = new StringColumnPresentation();\n\t\t}\n\t\treturn StringColumnPresentation.instance;\n\t}\n\n\tprivate static instance: StringColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT,\n\t\t\tCellView.ITALIC,\n\t\t\tCellView.BOLD,\n\t\t\tCellView.IMAGE,\n\t\t\tCellView.LINK,\n\t\t\tCellView.CHIP\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { ColumnPresentation } from '../column.presentation';\nimport { ColumnAlign } from '../../column-align';\nimport { CellView } from '../../cell-view';\n\n\nexport class UnknownColumnPresentation extends ColumnPresentation {\n\n\tstatic getInstance(): UnknownColumnPresentation {\n\t\tif (!UnknownColumnPresentation.instance) {\n\t\t\tUnknownColumnPresentation.instance = new UnknownColumnPresentation();\n\t\t}\n\t\treturn UnknownColumnPresentation.instance;\n\t}\n\n\tprivate static instance: UnknownColumnPresentation = null;\n\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\tgetPossibleViews(): Array<CellView> {\n\t\treturn [\n\t\t\tCellView.TEXT\n\t\t];\n\t}\n\n\tgetDefaultView(): CellView {\n\t\treturn CellView.TEXT;\n\t}\n\n\tgetDefaultAlign(): ColumnAlign {\n\t\treturn ColumnAlign.LEFT;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\nimport { ColumnPresentation } from './column.presentation';\nimport { NumberColumnPresentation } from './data-type/number-column.presentation';\nimport { BooleanColumnPresentation } from './data-type/boolean-column.presentation';\nimport { DateColumnPresentation } from './data-type/date-column.presentation';\nimport { StringColumnPresentation } from './data-type/string-column.presentation';\nimport { UnknownColumnPresentation } from './data-type/unknown-column.presentation';\n\n\n@Injectable()\nexport class ColumnPresentationConverter {\n\n\tconvert(dataType: DataType): ColumnPresentation {\n\n\t\tif (dataType === DataType.NUMBER) {\n\t\t\treturn NumberColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.BOOLEAN) {\n\t\t\treturn BooleanColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.DATE) {\n\t\t\treturn DateColumnPresentation.getInstance();\n\t\t} else if (dataType === DataType.STRING) {\n\t\t\treturn StringColumnPresentation.getInstance();\n\t\t} else {\n\t\t\treturn UnknownColumnPresentation.getInstance();\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from './column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\nimport { DataType } from '../../../structure/domain/structure/field/data-type/data-type';\nimport { ColumnPresentation } from './presentation/column.presentation';\nimport { ColumnPresentationConverter } from './presentation/column.presentation.converter';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tconstructor(private readonly columnPresentationConverter: ColumnPresentationConverter) {\n\t}\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tlet columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField(),\n\t\t\twidth = this.convertWidth(columnConfig.width) || undefined,\n\t\t\tview,\n\t\t\tenabled,\n\t\t\tdataType = field.getDataType();\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tview = new ViewEntity(columnConfig.view);\n\t\t}\n\n\t\tif (columnConfig.enabled !== undefined) {\n\t\t\tenabled = columnConfig.enabled;\n\t\t} else {\n\t\t\tenabled = true;\n\t\t}\n\n\t\tconst presentation = this.getPresentation(dataType);\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig,\n\t\t\tenabled,\n\t\t\tpresentation,\n\t\t\tundefined,\n\t\t\tcolumnConfig.align,\n\t\t\tview,\n\t\t\twidth\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.setHeader(columnConfig.header);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n\n\tprivate getPresentation(dataType: DataType): ColumnPresentation {\n\n\t\treturn this.columnPresentationConverter.convert(dataType);\n\t}\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\nimport { CompositionId } from './composition.id';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent<CompositionId>): DomainEvent<CompositionId>;\n\tconvert(events: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>>;\n\tconvert(arg: AggregateEvent<CompositionId> | Array<AggregateEvent<CompositionId>>): DomainEvent<CompositionId> | Array<DomainEvent<CompositionId>> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): Array<DomainEvent<CompositionId>> {\n\t\treturn aggregateEvents.map((event: AggregateEvent<CompositionId>) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent<CompositionId>): DomainEvent<CompositionId> {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../structure/domain/source/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly searchAccessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType,\n\t\t\t\tsearchAccessor: ColumnFieldAccessor) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.searchAccessor = searchAccessor;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetSearchAccessor(): ColumnFieldAccessor {\n\t\treturn this.searchAccessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../structure/domain/structure/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType, searchAccessor: ColumnFieldAccessor): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType, searchAccessor);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition.id';\nimport { CompositionColumnsSetEvent } from '../domain/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<CompositionColumnsSetEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<CompositionId>) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SortToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortOrderSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../structure/domain/structure/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../structure/domain/structure/sort/order/sort-order-set.event';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { TypeField } from '../data-type/type.field';\n\n\nexport class FieldsInitedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../structure/domain/structure/field/init/fields-inited.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column.params';\nimport { TypeField } from '../../../../structure/domain/structure/field/data-type/type.field';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler<CompositionId> {\n\n\tconstructor(private readonly compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent<CompositionId>): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<TypeField>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: TypeField) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<TypeField>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType(), field.getSearchAccessorMethod());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionReadModelProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionDispatcher } from '../domain/composition.dispatcher';\nimport { ColumnEntityFactory } from '../domain/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/composition.event-converter';\nimport { ColumnFieldFactory } from '../domain/column/field/colum-field.factory';\nimport { CompositionEventRepository } from './composition.event-repository';\nimport { CompositionWarehouse } from './composition.warehouse';\nimport { CompositionCommandDispatcher } from './composition.command-dispatcher';\nimport { CompositionReadModelRootConverter } from './read/composition.read-model-root-converter';\nimport { EditTemplateRepository } from './read/edit/edit-template.repository';\nimport { EditTemplateFactory } from './read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from './read/view/view-template.factory';\nimport { ViewTemplateRepository } from './read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/column/set-columns/composition-fields-inited.event-handler';\nimport { ColumnPresentationConverter } from '../domain/column/presentation/column.presentation.converter';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tColumnEntityFactory,\n\tColumnPresentationConverter,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionReadModelProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionReadModelRootConverter,\n\n\tCompositionCommandDispatcher,\n\tCompositionWarehouse,\n\tCompositionEventRepository\n];\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl } from '@angular/platform-browser';\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {\n\t}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl':\n\t\t\t\treturn this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionWidthSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionContainerWidthSetEvent } from './composition-container-width-set.event';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionContainerWidthSetEvent(this.getAggregateId(), this.containerWidth);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionResizeWidthSetEvent(this.getAggregateId());\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../active/active-column.entity';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnSetEnabledEvent } from './composition.column-set-enabled.event';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnSetEnabledEvent(this.getAggregateId());\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionChangeSortStatusEvent(this.getAggregateId(), this.activeColumns);\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortOrder } from '../sort/sort-order';\nimport { CompositionId } from '../../composition.id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent<CompositionId> {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortOrder.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortOrder.ASC : SortOrder.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId(), this.columns);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getId().equals(columnId));\n\t}\n\n}\n","import { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../column.config';\nimport { ViewEntity } from '../view.entity';\nimport { ColumnAlign } from '../column-align';\nimport { ColumnEntity } from '../column.entity';\nimport { ColumnPresentation } from '../presentation/column.presentation';\n\n\nexport class ActiveColumnEntity extends ColumnEntity {\n\n\tstatic fromEntity(entity: ColumnEntity): ActiveColumnEntity {\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getAlign(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig(),\n\t\t\tentity.getPresentation()\n\t\t);\n\t}\n\n\tprivate constructor(columnId: ColumnId,\n\t\t\t\t\t\tcolumnField: ColumnField,\n\t\t\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\t\t\talign: ColumnAlign,\n\t\t\t\t\t\tview: ViewEntity,\n\t\t\t\t\t\tconfig: ColumnConfig,\n\t\t\t\t\t\tpresentation: ColumnPresentation) {\n\t\tsuper(\n\t\t\tcolumnId,\n\t\t\tcolumnField,\n\t\t\tconfig,\n\t\t\ttrue,\n\t\t\tpresentation,\n\t\t\theader,\n\t\t\talign,\n\t\t\tview,\n\t\t\tundefined\n\t\t);\n\t}\n\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn ActiveColumnEntity.fromEntity(entity);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedLeftEvent } from './composition.column-moved-left.event';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedLeftEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\nimport { CompositionId } from '../../../composition.id';\nimport { CompositionColumnMovedRightEvent } from './composition.column-moved-right.event';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnMovedRightEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition.id';\nimport { CompositionColumnsSetEvent } from './composition.columns-set.event';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'ColumnsSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionColumnsSetEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition.id';\nimport { CompositionCreatedEvent } from './composition-created.event';\n\nexport class CompositionCreatedAggregateEvent extends AggregateEvent<CompositionId> {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<CompositionId> {\n\t\treturn new CompositionCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateId, AggregateRoot } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from './column/column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\nimport { CompositionId } from './composition.id';\nimport { CompositionCreatedAggregateEvent } from './create/composition-created.aggregate-event';\n\n\nexport class CompositionAggregate extends AggregateRoot<CompositionId> {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\tprivate readonly columnFactory: ColumnEntityFactory;\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnFactory: ColumnEntityFactory,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id, 'CompositionAggregate');\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\n\t\tthis.columnFactory = columnFactory;\n\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<CompositionId>> {\n\t\treturn CompositionCreatedAggregateEvent;\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getColumnConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { CompositionId } from './composition.id';\nimport { CompositionAggregate } from './composition.aggregate';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\n\n\n@Injectable()\nexport class CompositionAggregateFactory extends AggregateFactory<CompositionId, CompositionAggregate> {\n\n\tconstructor(private readonly columnFactory: ColumnEntityFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id, this.columnFactory);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateRepository, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CreateCompositionCommand } from './create-composition.command';\nimport { CompositionCreatedEvent } from './composition-created.event';\nimport { CompositionAggregate } from '../composition.aggregate';\nimport { CompositionId } from '../composition.id';\n\n\n@Injectable()\nexport class CreateCompositionCommandHandler implements CreateAggregateCommandHandler<CompositionAggregate, CreateCompositionCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<CompositionId, CompositionAggregate> {\n\t\treturn this.compositionAggregateRepository;\n\t}\n\n\tforCommand(): Type<CreateCompositionCommand> {\n\t\treturn CreateCompositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CreateCompositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionCreatedEvent(command.getAggregateId()));\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\nimport { CompositionId } from '../../composition.id';\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler implements CommandHandler<CompositionAggregate, CompositionSetColumnEnabledCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionSetColumnEnabledCommand> {\n\t\treturn CompositionSetColumnEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionSetColumnEnabledCommand): void {\n\n\t\tconst columnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\taggregate.enableColumn(columnId, enabled);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler implements CommandHandler<CompositionAggregate, SetColumnsCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate readonly compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetColumnsCommand> {\n\t\treturn SetColumnsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: Command): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: SetColumnsCommand): void {\n\n\t\tconst setColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\taggregate.setColumns(setColumnsParams);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionWidthCommand> {\n\n\tconstructor(compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionWidthCommand> {\n\t\treturn SetCompositionWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setWidth(width);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveLeftColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveLeftColumnCommand> {\n\t\treturn CompositionMoveLeftColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveLeft(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveLeftColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition.event-converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\nimport { CompositionId } from '../../../composition.id';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler implements CommandHandler<CompositionAggregate, CompositionMoveRightColumnCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<CompositionMoveRightColumnCommand> {\n\t\treturn CompositionMoveRightColumnCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\t\tthis.publishEvents(aggregate, command);\n\t}\n\n\thandleAggregate(aggregate: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst columnId = command.getColumnId();\n\n\t\taggregate.moveRight(columnId);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: CompositionMoveRightColumnCommand): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent<CompositionId>>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler implements CommandHandler<CompositionAggregate, CompositionChangeSortStatusCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<CompositionChangeSortStatusCommand> {\n\t\treturn CompositionChangeSortStatusCommand;\n\t}\n\n\tpublishDomainEvents(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst compositionId = command.getAggregateId(),\n\t\t\tcolumns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: CompositionChangeSortStatusCommand): void {\n\n\t\tconst sortParams = command.getSortParams();\n\n\t\tcomposition.changeSort(sortParams);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition.event-converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionId } from '../../composition.id';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionContainerWidthCommand> {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t}\n\n\tforCommand(): Type<SetCompositionContainerWidthCommand> {\n\t\treturn SetCompositionContainerWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\t\tthis.publishAggregateEvents(aggregate.getEvents() as Array<AggregateEvent<CompositionId>>);\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionContainerWidthCommand): void {\n\n\t\tconst width = command.getWidth();\n\n\t\tcomposition.setContainerWidth(width);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent<CompositionId>>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler implements CommandHandler<CompositionAggregate, SetCompositionResizeWidthCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetCompositionResizeWidthCommand> {\n\t\treturn SetCompositionResizeWidthCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\t\tthis.domainEventPublisher.publish(new CompositionResizeWidthSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(composition: CompositionAggregate, command: SetCompositionResizeWidthCommand): void {\n\n\t\tconst enabled = command.getEnabled();\n\n\t\tcomposition.setResizeWidth(enabled);\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { EditCommunicationComponent } from '../edit-communication.component';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n\n@Component({\n\tselector: 'gui-date-edit',\n\ttemplate: `\n\n\t\t<gui-date-picker #datepicker\n\t\t\t\t\t\t [selectDate]=\"value\"\n\t\t\t\t\t\t [name]=\"filterFieldName\"\n\t\t\t\t\t\t [openDialog]=\"true\"\n\t\t\t\t\t\t [onlyDialog]=\"false\"\n\t\t\t\t\t\t [parentElement]=\"parent\"\n\t\t\t\t\t\t (dialogOpened)=\"dialogOpened($event)\"\n\t\t\t\t\t\t (dateSelected)=\"toggle($event)\">\n\t\t</gui-date-picker>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class DateEditTemplateComponent extends EditCommunicationComponent<Date> {\n\n\t@ViewChild('datepicker', { read: ElementRef, static: true })\n\tdatePickerRef: ElementRef;\n\n\treadonly filterFieldName = 'dateEdit';\n\n\tprivate opened = false;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.datePickerRef.nativeElement.querySelector('.gui-date-picker-input');\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\ttoggle(changed: Date): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\tdialogOpened(opened: boolean): void {\n\t\tthis.opened = opened;\n\n\t\tif (!opened) {\n\t\t\tthis.unsubscribe();\n\t\t\tthis.submit();\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-bar-view[value]',\n\ttemplate: `\n\t\t<div class=\"gui-percentage-bar\">\n\t\t\t<div class=\"gui-percentage\" [style.width.%]=\"width\">\n\t\t\t</div>\n\t\t\t<gui-percentage-view *ngIf=\"showPercentage\"\n\t\t\t\t\t\t\t\t [value]=\"value\">\n\t\t\t</gui-percentage-view>\n\t\t</div>\n\t`,\n\thost: {\n\t\t'[class.gui-bar-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BarViewComponent implements OnChanges {\n\n\t@Input()\n\tvalue: number;\n\n\t@Input()\n\tshowPercentage: boolean = false;\n\n\twidth: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined && changes.value !== null) {\n\t\t\tthis.width = this.value > 100 ? 100 : this.value;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n\tselector: 'gui-percentage-view[value]',\n\ttemplate: `\n\t\t{{ value }} %\n\t`,\n\thost: {\n\t\t'[class.gui-percentage-view]': 'true'\n\t},\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class PercentageViewComponent {\n\n\t@Input()\n\tvalue: number;\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricDatePickerModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\n\nimport { HermesModule } from '@generic-ui/hermes';\n\nimport { ViewTemplatesComponent } from './read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from './read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from './read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from './read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from './read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../feature/column-query.component';\nimport { FunctionViewComponent } from './read/view/function/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\nimport { CompositionAggregateFactory } from '../domain/composition.aggregate-factory';\nimport { InMemoryCompositionAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.composition.aggregate-repository';\nimport { CreateCompositionCommandHandler } from '../domain/create/create-composition.command-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/width/set-width/set-composition-width.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/column/move/right/composition.move-right-column.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/column/sort/composition-change-sort-status.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/width/set-container-width/set-composition-container-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/width/resize-width/set-composition-resize-width.command-handler';\nimport { DateEditTemplateComponent } from './read/edit/template/date-edit-template.component';\nimport { BarViewComponent } from './read/view/bar/bar-view.component';\nimport { PercentageViewComponent } from './read/view/percentage/percentage-view.component';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tDateEditTemplateComponent,\n\tColumnQueryComponent,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\n\tFunctionViewComponent,\n\tBarViewComponent,\n\tPercentageViewComponent\n];\n\nexport const compositionKey = 'CompositionAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule,\n\t\tFabricDatePickerModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tcompositionKey,\n\t\t\tCompositionAggregateFactory,\n\t\t\tInMemoryCompositionAggregateRepository,\n\t\t\tCreateCompositionCommandHandler,\n\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetColumnsCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionResizeWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetCompositionContainerWidthCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionSetColumnEnabledCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionChangeSortStatusCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveLeftColumnCommandHandler, compositionKey),\n\t\t\t\t...HermesModule.registerCommandHandler(CompositionMoveRightColumnCommandHandler, compositionKey)\n\t\t\t]\n\t\t)\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PageChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\nimport { PageChangedEvent } from './page-changed.event';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PageChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagesizeChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { PagesizeChangedEvent } from '../change-pagesize/pagesize-changed.event';\n\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new PagesizeChangedEvent(this.getAggregateId());\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingConfigWithId } from './paging-config-with-id';\nimport { PagingConfig } from './paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../structure.id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\nexport class PagingManager {\n\n\t// TODO\n\tprivate readonly events: Array<AggregateEvent<StructureId>> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingManager(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingManager {\n\n\t\tconst defaultPagingDefinition = PagingManager.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingManager(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../common/cdk/logger/logger';\n\nimport { PagingManager } from './paging.manager';\nimport { PagingConfigWithId } from './paging-config-with-id';\n\n\n@Injectable()\nexport class PagingManagerFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingManager {\n\t\treturn PagingManager.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingManager {\n\t\treturn PagingManager.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructurePagingCommandDispatcher } from '../../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingManagerFactory } from '../../../domain/paging/paging.manager-factory';\nimport { PagingDispatcher } from '../../../domain/paging/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandDispatcher extends StructurePagingCommandDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingManagerFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { StructurePagingWarehouse } from '../../../feature-api/paging/structure-paging.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { PagingRepository } from '../../../feature-api/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../feature-api/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingWarehouse extends StructurePagingWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n\tgetSelectedRow(): string {\n\t\treturn this.selectedRow;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../structure.id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureFormationDispatcher {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureFormationDispatcher } from '../../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { FormationDispatcher } from '../../../domain/formation/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandDispatcher extends StructureFormationDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureReadModelRepository } from '../../read/structure.read-model-repository';\nimport { StructureId } from '../../../domain/structure.id';\nimport { Formation } from './formation';\nimport { StructureReadModelRoot } from '../../read/structure.read-model-root';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureReadModelRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: StructureReadModelRoot) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: StructureReadModelRoot) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from './read/formation-repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { SelectedRowsList } from './read/selected-rows/selected-rows-list';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class StructureFormationWarehouse {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = structureGlobalId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureFormationWarehouse } from '../../../feature-api/formation/structure-formation.warehouse';\nimport { FormationRepository } from '../../../feature-api/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../feature-api/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationWarehouse extends StructureFormationWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FilterConfig } from '../../../../feature-api/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly externalFilterId: string,\n\t\t\t\tprivate readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetExternalFilterId(): string {\n\t\treturn this.externalFilterId;\n\t}\n\n\tgetFilterValue(): string {\n\t\treturn this.filterValue;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetConfigFilterCommand } from '../../domain/structure/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../domain/structure/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n\tgetItems(): Array<any> {\n\t\treturn this.items;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../structure.id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class CreateStructureCommand extends Command {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'CreateStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortingConfig } from '../../../../feature-api/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { QuickFiltersConfig } from '../../../../feature-api/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SortOrder } from '../../../../../composition/domain/column/sort/sort-order';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortOrder) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortOrder {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SearchConfig } from '../../../../feature-api/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { structureGlobalId } from '../../structure.global-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchHighlightArchive {\n\n\tprivate static readonly HIGHLIGHTING = true;\n\n\tprivate readonly idToHighlight = new Map<string, boolean>();\n\n\tprivate readonly idToHighlight$ = new ReplaySubject<Map<string, boolean>>();\n\n\tnext(value: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToHighlight.set(structureId.getId(), value);\n\t\tthis.idToHighlight$.next(this.idToHighlight);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.idToHighlight$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, boolean>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchHighlightArchive.HIGHLIGHTING;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { structureGlobalId } from '../../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchPlaceholderArchive {\n\n\tprivate static readonly PLACEHOLDER = 'Search ...';\n\n\tprivate readonly idToPlaceholder = new Map<string, string>();\n\n\tprivate readonly idToPlaceholder$ = new ReplaySubject<Map<string, string>>();\n\n\tnext(value: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.idToPlaceholder.set(structureId.getId(), value);\n\t\tthis.idToPlaceholder$.next(this.idToPlaceholder);\n\t}\n\n\tonValue(structureId: StructureId = structureGlobalId): Observable<string> {\n\t\treturn this.idToPlaceholder$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((idToHighlight: Map<string, string>) => {\n\t\t\t\t\t\t   return idToHighlight.get(structureId.getId()) || StructureSearchPlaceholderArchive.PLACEHOLDER;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { StructureId } from '../../structure.id';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { StructureSetConfigSearchingCommand } from './config/structure.set-config-searching.command';\nimport { StructureSetSearchPhraseCommand } from './set-phrase/structure.set-search-phrase.command';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class StructureSearchDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate structureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\n\t\tif (config.highlighting !== undefined && config.highlighting !== null) {\n\t\t\tthis.structureSearchHighlightArchive.next(config.highlighting);\n\t\t}\n\n\t\tif (config.placeholder !== undefined && config.placeholder !== null) {\n\t\t\tthis.structureSearchPlaceholderArchive.next(config.placeholder);\n\t\t}\n\n\t\tif (config.phrase !== undefined && config.phrase !== null) {\n\t\t\tthis.search(config.phrase, structureId);\n\t\t}\n\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureSetHeightCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly height: number) {\n\t\tsuper(structureId, 'StructureSetHeightCommand');\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\nimport { SchemaTheme } from '../../../../../schema/domain/theme/schema-theme';\n\nexport class SetRowHeightBasedOnThemeCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetRowHeightBasedOnThemeCommand');\n\t}\n\n\tgetTheme(): number {\n\t\treturn this.theme;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../domain/source/source.dispatcher';\nimport { StructureId } from '../domain/structure.id';\nimport { structureGlobalId } from './structure.global-id';\nimport { CreateStructureCommand } from '../domain/structure/create-structure/create-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../domain/structure/sort/set-config/set-sorting.command';\nimport { FieldId } from '../domain/structure/field/data-type/field.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { ToggleSortCommand } from '../domain/structure/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { ColumnConfig } from '../../composition/domain/column/column.config';\nimport { InitFieldsCommand } from '../domain/structure/field/init/init-fields.command';\nimport { SortOrder } from '../../composition/domain/column/sort/sort-order';\nimport { SetSortOrderCommand } from '../domain/structure/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSetHeightCommand } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command';\nimport { SchemaTheme } from '../../schema/domain/theme/schema-theme';\nimport { SetRowHeightBasedOnThemeCommand } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command';\n\n\n@Injectable()\nexport class StructureCommandDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate readonly structureSearchDispatcher: StructureSearchDispatcher) {\n\t}\n\n\tcreateStructure(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder, compositionId?: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.setSearchingConfig(config, structureId);\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = structureGlobalId): void {\n\t\tthis.structureSearchDispatcher.search(phrase, structureId);\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, +rowHeight));\n\t}\n\n\tsetContainerHeight(height: number, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetHeightCommand(structureId, +height));\n\t}\n\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme, structureId: StructureId = structureGlobalId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightBasedOnThemeCommand(structureId, theme));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { structureGlobalId } from '../../../feature-api/structure.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\n\n\n@Injectable()\nexport class LocalStructureCommandDispatcher extends StructureCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureSearchDispatcher: StructureSearchDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher, structureSearchDispatcher);\n\t}\n\n\t@Override\n\tcreateStructure(): void {\n\t\tsuper.createStructure(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = structureGlobalId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetContainerHeight(rowHeight: number): void {\n\t\tsuper.setContainerHeight(rowHeight, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeightBasedOnTheme(theme: SchemaTheme): void {\n\t\tsuper.setRowHeightBasedOnTheme(theme, this.structureId);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\n\nexport class StructureCreatedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureId, StructureAggregate> {\n}\n","import { ItemEntity } from '../../../../domain/source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\nimport { SelectedRowsList } from './selected-rows/selected-rows-list';\n\n@ReadModelObject\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from '../../../domain/formation/formation-aggregate';\nimport { Formation } from './formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingManager } from '../../../domain/paging/paging.manager';\nimport { Paging } from './paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingManager): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n@ReadModelObject\nexport class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './source';\nimport { SourceManager } from '../../domain/source/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","import { ReadModelObject } from '@generic-ui/hermes';\n\n\n@ReadModelObject\nexport class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly sourceHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin; //  * this.rowHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../domain/structure/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tsourceHeight = verticalFormation.getSourceHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, sourceHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { ReadModelRoot } from '@generic-ui/hermes';\n\nimport { Formation } from '../formation/read/formation';\nimport { Paging } from '../paging/read/paging';\nimport { Source } from '../source/source';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationReadModel } from '../vertical-formation/vertical-formation.read-model';\nimport { StructureReadModelRootId } from './structure.read-model-root-id';\n\n\nexport class StructureReadModelRoot extends ReadModelRoot<StructureReadModelRootId> {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: StructureReadModelRootId,\n\t\t\t\tformation: Formation,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\t// TODO Remove\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\treturn this.getSource().isLoading();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.verticalFormation.getSourceHeight();\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\n\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/read/formation.converter';\nimport { PagingConverter } from '../paging/read/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from '../vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from '../../domain/structure/structure.aggregate';\nimport { StructureReadModelRoot } from './structure.read-model-root';\nimport { OriginItemEntity } from '../../domain/source/origin/origin-item-entity';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class StructureReadModelRootConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): StructureReadModelRoot {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\toriginItemEntities = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new StructureReadModelRoot(\n\t\t\taggregate.getId().toReadModelRootId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(originItemEntities),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureReadModelRootConverter } from '../../../feature-api/read/structure.read-model-root-converter';\nimport { StructureReadModelRootId } from '../../../feature-api/read/structure.read-model-root-id';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<StructureReadModelRootId,\n\tStructureReadModelRoot,\n\tStructureId,\n\tStructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureReadModelRootConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): StructureReadModelRoot {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class RowHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\nexport class SchemaThemeSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetEvent');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure.id';\n\n\nexport class StructureHeightSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureHeightSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class OriginSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class ScrollPositionSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\n\nexport class RowHeightSetBasedOnThemeEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'RowHeightSetBasedOnThemeEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureId } from '../../domain/structure.id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureCreatedEvent } from '../../domain/structure/create-structure/structure-created.event';\nimport { VerticalScrollEnabledSetEvent } from '../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../infrastructure/in-memory/feature-api/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { SchemaThemeSetEvent } from '../../../schema/domain/theme/schema-theme-set.event';\nimport { StructureHeightSetEvent } from '../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { OriginSetEvent } from '../../domain/source/origin/set-origin/origin-set.event';\nimport { ScrollPositionSetEvent } from '../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureCreatedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tStructureHeightSetEvent,\n\t\t\t\tRowHeightSetEvent,\n\t\t\t\tSchemaThemeSetEvent as any, // TODO\n\t\t\t\tRowHeightSetBasedOnThemeEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent<StructureId>) => {\n\n\t\t\t\tconst aggregateId = event.getAggregateId();\n\n\t\t\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\t\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\t\t\tconst verticalFormation = structureReadModelRoot.getVerticalFormation(),\n\t\t\t\t\t\tstructureReadModelRootId = structureReadModelRoot.getId();\n\n\t\t\t\t\tthis.next(aggregateId, verticalFormation);\n\t\t\t\t});\n\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getViewPortHeight())\n\t\t\t\t   );\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getTopMargin())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from './read/structure.read-model-repository';\nimport { structureGlobalId } from './structure.global-id';\nimport { StructureReadModelRoot } from './read/structure.read-model-root';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureWarehouse {\n\n\tconstructor(private structureRepository: StructureReadModelRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = structureGlobalId): Observable<StructureReadModelRoot> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureWarehouse } from '../../../feature-api/structure.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureWarehouse extends StructureWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<StructureReadModelRoot> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../composition/domain/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandDispatcher extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = structureGlobalId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = structureGlobalId): void {\n\n\t\tconst itemId$ = this.sourceReadModelService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SourceDispatcher } from '../../../domain/source/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../feature-api/field/structure.field.ui-repository';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandDispatcher extends SourceCommandDispatcher {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceReadModelService: StructureSourceWarehouse) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceReadModelService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureSourceOriginRepository } from '../../../feature-api/source/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../feature-api/source/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceWarehouse extends StructureSourceWarehouse {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureReadModelRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandDispatcher } from '../../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionDispatcher } from '../../../../composition/domain/composition.dispatcher';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { ColumnParams } from '../../../../composition/domain/column/set-columns/column.params';\nimport { ColumnDefinitionId } from '../../../../composition/feature-api/read/definition/column-definition-id';\n\n\n@Injectable()\nexport class LocalCompositionCommandDispatcher extends CompositionCommandDispatcher {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tcreateComposition(compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.createComposition(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.enableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.disableColumn(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveLeft(columnDefId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnDefId: ColumnDefinitionId, compositionId: CompositionId = compositionGlobalId): void {\n\t\tsuper.moveRight(columnDefId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CompositionId } from '../../../../composition/domain/composition.id';\nimport { CompositionReadModelRootRepository } from '../../../../composition/feature-api/read/composition.read-model-root-repository';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { compositionGlobalId } from '../../../../composition/feature-api/composition.global-id';\nimport { FieldId } from '../../../domain/structure/field/data-type/field.id';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\n\n\n@Injectable()\nexport class LocalCompositionWarehouse extends CompositionWarehouse {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionReadModelRootRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = compositionGlobalId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = compositionGlobalId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortOrder> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureSearchDispatcher } from '../../../domain/structure/search/structure.search.dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureSearchHighlightArchive } from '../../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from '../../../feature-api/search/placeholder/structure.search-placeholder.archive';\n\n\n@Injectable()\nexport class LocalStructureSearchCommandDispatcher extends StructureSearchDispatcher {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureSearchHighlightArchive: StructureSearchHighlightArchive,\n\t\t\t\tstructureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper(commandDispatcher, structureSearchHighlightArchive, structureSearchPlaceholderArchive);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SchemaCssClass } from '../../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaCssClassesRepository } from '../../../../schema/feature-api/css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from '../../../../schema/feature-api/theme/schema.theme.repository';\n\n\n@Injectable()\nexport class LocalSchemaWarehouse extends SchemaWarehouse {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tschemaCssClassesRepository: SchemaCssClassesRepository,\n\t\t\t\tschemaThemeRepository: SchemaThemeRepository) {\n\t\tsuper(schemaCssClassesRepository, schemaThemeRepository);\n\t}\n\n\t@Override\n\tonSingleTheme(): Observable<SchemaTheme> {\n\t\treturn super.onSingleTheme(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.schemaReadModelRootId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\n\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SetSchemaThemeCommand');\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n}\n","import { CreateAggregateCommand } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\n\nexport class CreateSchemaCommand extends CreateAggregateCommand {\n\n\tconstructor(schemaId: SchemaId) {\n\t\tsuper(schemaId, 'CreateSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { SchemaId } from '../schema.id';\n\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly coloring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'SetRowColoringCommand');\n\t}\n\n\tgetColoring(): SchemaRowColoring {\n\t\treturn this.coloring;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaVerticalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { SchemaId } from '../../schema.id';\n\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(schemaId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaId } from './schema.id';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { CreateSchemaCommand } from './create/create-schema.command';\nimport { SetRowColoringCommand } from './coloring/set-row-coloring.command';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new CreateSchemaCommand(schemaId));\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(schemaId, theme));\n\t}\n\n\tsetRowColoring(rowColoring: SchemaRowColoring, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(schemaId, rowColoring));\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(schemaId, verticalGrid));\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(schemaId, horizontalGrid));\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../structure/domain/structure.id';\nimport { structureGlobalId } from '../../structure/feature-api/structure.global-id';\nimport { StructureCommandDispatcher } from '../../structure/feature-api/structure.command-dispatcher';\nimport { RowColoring } from './row-coloring';\n\n\n@Injectable()\nexport class SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher) {\n\t}\n\n\tcreate(schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.create(schemaId.toAggregateId());\n\t}\n\n\tsetTheme(theme: SchemaTheme, schemaId: SchemaReadModelRootId = schemaGlobalId, structureId: StructureId = structureGlobalId): void {\n\t\tthis.schemaDispatcher.setTheme(theme, schemaId.toAggregateId());\n\n\t\tthis.structureCommandService.setRowHeightBasedOnTheme(theme, structureId);\n\t}\n\n\tsetRowColoring(rowColoring: RowColoring, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\n\t\tconst schemaRowColoring: SchemaRowColoring = this.toSchemaRowColoring(rowColoring);\n\n\t\tthis.schemaDispatcher.setRowColoring(schemaRowColoring, schemaId.toAggregateId());\n\t}\n\n\tsetVerticalGrid(verticalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setVerticalGrid(verticalGrid, schemaId.toAggregateId());\n\t}\n\n\tsetHorizontalGrid(horizontalGrid: boolean, schemaId: SchemaReadModelRootId = schemaGlobalId): void {\n\t\tthis.schemaDispatcher.setHorizontalGrid(horizontalGrid, schemaId.toAggregateId());\n\t}\n\n\tprivate toSchemaRowColoring(coloring: RowColoring): SchemaRowColoring {\n\t\tswitch (coloring) {\n\n\t\t\tcase RowColoring.NONE:\n\t\t\t\treturn SchemaRowColoring.NONE;\n\n\t\t\tcase RowColoring.ODD:\n\t\t\t\treturn SchemaRowColoring.ODD;\n\n\t\t\tcase RowColoring.EVEN:\n\t\t\t\treturn SchemaRowColoring.EVEN;\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaDispatcher } from '../../../../schema/domain/schema.dispatcher';\nimport { SchemaReadModelRootId } from '../../../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { SchemaCommandDispatcher } from '../../../../schema/feature-api/schema.command-dispatcher';\nimport { SchemaRowColoring } from '../../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\n\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { StructureId } from '../../../domain/structure.id';\nimport { RowColoring } from '../../../../schema/feature-api/row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandDispatcher extends SchemaCommandDispatcher {\n\n\tconstructor(private readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, structureCommandService);\n\t}\n\n\t@Override\n\tcreate(): void {\n\t\tsuper.create(this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.schemaReadModelRootId, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(rowColoring: RowColoring): void {\n\t\tsuper.setRowColoring(rowColoring, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetVerticalGrid(verticalGrid: boolean): void {\n\t\tsuper.setVerticalGrid(verticalGrid, this.schemaReadModelRootId);\n\t}\n\n\t@Override\n\tsetHorizontalGrid(horizontalGrid: boolean): void {\n\t\tsuper.setHorizontalGrid(horizontalGrid, this.schemaReadModelRootId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { VerticalFormationRepository } from './vertical-formation.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureVerticalFormationWarehouse {\n\n\tconstructor(private verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.verticalFormationRepository.onVerticalScrollEnabled(structureId);\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(structureId);\n\t}\n\n\tonContainerHeight(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onContainerHeight(structureId);\n\t}\n\n\tonTopMargin(structureId: StructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onTopMargin(structureId);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureVerticalFormationWarehouse } from '../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureId } from '../../../domain/structure.id';\nimport { VerticalFormationRepository } from '../../../feature-api/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureVerticalFormationWarehouse extends StructureVerticalFormationWarehouse {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(verticalFormationRepository);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonTopMargin(): Observable<number> {\n\t\treturn super.onTopMargin(this.structureId);\n\t}\n}\n","import { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { LocalPagingCommandDispatcher } from './paging/local-paging.command-dispatcher';\nimport { LocalPagingWarehouse } from './paging/local-paging.warehouse';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { LocalFormationCommandDispatcher } from './formation/local-formation.command-dispatcher';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { LocalFormationWarehouse } from './formation/local-formation.warehouse';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { LocalStructureCommandDispatcher } from './structure/local-structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { LocalStructureWarehouse } from './structure/local-structure.warehouse';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { LocalSourceCommandDispatcher } from './source/local-source.command-dispatcher';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { LocalSourceWarehouse } from './source/local-source.warehouse';\nimport { LocalCompositionCommandDispatcher } from './composition/local-composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { LocalCompositionWarehouse } from './composition/local-composition.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureSearchDispatcher } from '../../domain/structure/search/structure.search.dispatcher';\nimport { LocalStructureSearchCommandDispatcher } from './search/local-structure-search.command-dispatcher';\n\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { LocalSchemaWarehouse } from './schema/local-schema.warehouse';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { LocalSchemaCommandDispatcher } from './schema/local-schema.command-dispatcher';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\nimport { LocalStructureVerticalFormationWarehouse } from './vertical-formation/local-structure-vertical-formation.warehouse';\n\nexport const localProviders = [\n\t{ provide: StructurePagingCommandDispatcher, useClass: LocalPagingCommandDispatcher },\n\t{ provide: StructurePagingWarehouse, useClass: LocalPagingWarehouse },\n\t{ provide: StructureFormationDispatcher, useClass: LocalFormationCommandDispatcher },\n\t{ provide: StructureFormationWarehouse, useClass: LocalFormationWarehouse },\n\t{ provide: StructureCommandDispatcher, useClass: LocalStructureCommandDispatcher },\n\t{ provide: StructureWarehouse, useClass: LocalStructureWarehouse },\n\t{ provide: SourceCommandDispatcher, useClass: LocalSourceCommandDispatcher },\n\t{ provide: StructureSourceWarehouse, useClass: LocalSourceWarehouse },\n\n\t{ provide: CompositionCommandDispatcher, useClass: LocalCompositionCommandDispatcher },\n\t{ provide: CompositionWarehouse, useClass: LocalCompositionWarehouse },\n\n\t{ provide: StructureSearchDispatcher, useClass: LocalStructureSearchCommandDispatcher },\n\n\t{ provide: StructureVerticalFormationWarehouse, useClass: LocalStructureVerticalFormationWarehouse },\n\n\t{ provide: SchemaWarehouse, useClass: LocalSchemaWarehouse },\n\t{ provide: SchemaCommandDispatcher, useClass: LocalSchemaCommandDispatcher }\n];\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { SchemaCssClass } from '../../../schema/feature-api/css-classes/schema-css-class';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SchemaWarehouse } from '../../../schema/feature-api/schema.warehouse';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { Reactive } from '../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class SchemaCssClassManager extends Reactive {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly THEME_GENERIC_CLASS_NAME = 'gui-generic';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tconstructor(private readonly rendererFactory2: RendererFactory2,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse) {\n\t\tsuper();\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tinit(elementRef: ElementRef, schemaReadModelRootId: SchemaReadModelRootId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onCssClasses(schemaReadModelRootId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.GENERIC:\n\t\t\tcase SchemaTheme[SchemaTheme.GENERIC]:\n\t\t\t\treturn this.THEME_GENERIC_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureSummariesPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\n\n@Injectable()\nexport class StructureSummariesArchive extends Archive<StructureSummariesPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureSummariesPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfig } from './structure.summaries-panel.config';\n\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesPanelConfigConverter {\n\n\tconvert(config: SummariesConfig): StructureSummariesPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureSummariesPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureSummariesPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSetSummariesEnabledCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetSummariesEnabledCommand');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSetSummariesEnabledCommand } from '../../domain/structure/summaries/set/structure.set-summaries-enabled.command';\n\n\n@Injectable()\nexport class StructureSummariesCommandDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSummariesEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSummariesEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesArchive } from './structure.summaries.archive';\n\nimport { StructureSummariesCommandDispatcher } from '../../../feature-api/summaries/structure-summaries.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesConfig } from '../../../feature-api/summaries/summaries-config';\n\n\n@Injectable()\nexport class StructureSummariesConfigService {\n\n\tconstructor(private structureSummariesPanelConfigConverter: StructureSummariesPanelConfigConverter,\n\t\t\t\tprivate structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate structureSummariesCommandDispatcher: StructureSummariesCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: SummariesConfig): void {\n\n\t\tconst summariesPanelConfig = this.structureSummariesPanelConfigConverter.convert(config);\n\n\t\tthis.structureSummariesArchive.next(summariesPanelConfig);\n\n\t\tthis.structureSummariesCommandDispatcher.setSummariesEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SummariesConfig } from '../../feature-api/summaries/summaries-config';\nimport { EditemItemValues } from '../../feature-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure.id';\nimport { CompositionId } from '../../../composition/domain/composition.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructurePagingCommandDispatcher } from '../../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesConfigService } from '../panel/summaries/structure.summaries-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../feature-api/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../../feature-api/search/structure-search-event.service';\nimport { SchemaCommandDispatcher } from '../../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../../schema/feature-api/schema.event-repository';\nimport { SchemaReadModelRootId } from '../../../schema/feature-api/read/schema.read-model-root-id';\nimport { RowColoring } from '../../../schema/feature-api/row-coloring';\nimport { RowDetailConfig } from '../row-detail/row-detail.config';\nimport { StructureRowDetailConfigArchive } from '../row-detail/structure.row-detail.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: RowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\tsummaries: SummariesConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\t@Input()\n\trowDetail: RowDetailConfig;\n\n\t@Input()\n\ttitlePanel: TitlePanelConfig;\n\n\t@Input()\n\tfooterPanel: FooterPanelConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tsearchPhraseChanged: EventEmitter<string> = new EventEmitter();\n\n\t@Output()\n\tthemeChanged: EventEmitter<SchemaTheme> = new EventEmitter();\n\n\t@Output()\n\thorizontalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\tverticalGridChanged: EventEmitter<boolean> = new EventEmitter();\n\n\t@Output()\n\trowColoringChanged: EventEmitter<SchemaRowColoring> = new EventEmitter();\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected schemaId: SchemaReadModelRootId,\n\t\tprotected structureCommandService: StructureCommandDispatcher,\n\t\tprotected pagingCommandService: StructurePagingCommandDispatcher,\n\t\tprotected pagingEventService: StructurePagingEventRepository,\n\t\tprotected sourceCommandService: SourceCommandDispatcher,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandDispatcher: SchemaCommandDispatcher,\n\t\tprotected compositionCommandService: CompositionCommandDispatcher,\n\t\tprotected compositionEventService: CompositionEventRepository,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureSummariesConfigService: StructureSummariesConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\tprotected structureSearchEventService: StructureSearchEventService,\n\t\tprotected structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\tprotected structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\tprotected structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\tprotected structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\tprotected structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\tprotected schemaEventRepository: SchemaEventRepository\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowDetail !== undefined && simpleChanges.rowDetail.currentValue !== undefined) {\n\t\t\tthis.structureDetailViewConfigArchive.next(this.rowDetail);\n\t\t}\n\n\t\tif (simpleChanges.titlePanel !== undefined && simpleChanges.titlePanel.currentValue !== undefined) {\n\t\t\tthis.structureTitlePanelConfigArchive.next(this.titlePanel);\n\t\t}\n\n\t\tif (simpleChanges.footerPanel !== undefined && simpleChanges.footerPanel.currentValue !== undefined) {\n\t\t\tthis.structureFooterPanelConfigArchive.next(this.footerPanel);\n\t\t}\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.summaries !== undefined && simpleChanges.summaries.currentValue !== undefined) {\n\t\t\tthis.structureSummariesConfigService.set(this.summaries);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.structureHeaderTopEnabledArchive.next(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.structureHeaderBottomEnabledArchive.next(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandDispatcher.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.structureCommandService.setContainerHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tthis.structureSearchEventService\n\t\t\t.onSearchPhrase(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.searchPhraseChanged.emit(phrase);\n\t\t\t});\n\n\t\tthis.connectSchemaEvents();\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tprivate connectSchemaEvents(): void {\n\n\t\tthis.schemaEventRepository\n\t\t\t.onThemeChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.themeChanged.emit(theme);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onHorizontalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.horizontalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onVerticalGridChanged(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.verticalGridChanged.emit(enabled);\n\t\t\t});\n\n\t\tthis.schemaEventRepository\n\t\t\t.onRowColoring(this.schemaId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((coloring: SchemaRowColoring) => {\n\t\t\t\tthis.rowColoringChanged.emit(coloring);\n\t\t\t});\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class NextPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PrevPageEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { NextPageEvent } from '../../domain/paging/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/page/page-changed.event';\nimport { Paging } from './read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class StructurePagingEventRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.pagingReadModelService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SelectedRowToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureWarehouse } from '../structure.warehouse';\nimport { StructureId } from '../../domain/structure.id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/toggle/selected-row-toggled.event';\nimport { StructureReadModelRoot } from '../read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureWarehouse\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: StructureReadModelRoot) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../feature-api/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.observePhrases(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate observePhrases(structureId: StructureId): Observable<string> {\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseSetDomainEvent } from '../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureSearchPhraseRepository } from './phrase/structure.search-phrase.repository';\n\n\n@Injectable()\nexport class StructureSearchEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t}\n\n\tonSearchPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSearchPhraseSetDomainEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent<StructureId>) => {\n\n\t\t\t\t\t\t   return this.structureSearchPhraseRepository\n\t\t\t\t\t\t\t\t\t  .onPhrase(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class StructureCellEditCloseAllService {\n\n\tprivate readonly closeAll$ = new Subject<void>();\n\n\tcloseAll(): void {\n\t\tthis.closeAll$.next();\n\t}\n\n\tonCloseAll(): Observable<void> {\n\t\treturn this.closeAll$.asObservable();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderBottomEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\n@Injectable()\nexport class StructureHeaderTopEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\tgetHorizontalGrid(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaVerticalGridSetEvent');\n\t}\n\n\tgetVerticalGrid(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\n\n\nexport class RowColoringSetEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DomainEventBus, EventRepository } from '@generic-ui/hermes';\n\nimport { SchemaThemeSetEvent } from '../domain/theme/schema-theme-set.event';\nimport { SchemaReadModelRootId } from './read/schema.read-model-root-id';\nimport { schemaGlobalId } from './read/schema.global-id';\nimport { SchemaTheme } from '../domain/theme/schema-theme';\nimport { SchemaHorizontalGridSetEvent } from '../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaRowColoring } from '../domain/coloring/schema-row-coloring';\nimport { RowColoringSetEvent } from '../domain/coloring/row-coloring-set.event';\nimport { SchemaId } from '../domain/schema.id';\n\n\n@Injectable()\nexport class SchemaEventRepository extends EventRepository<SchemaReadModelRootId, SchemaId> {\n\n\tconstructor(domainEventBus: DomainEventBus) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonThemeChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaTheme> {\n\n\t\treturn this.onEvent(schemaId, SchemaThemeSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaThemeSetEvent) => event.getTheme())\n\t\t\t\t   );\n\t}\n\n\tonHorizontalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaHorizontalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaHorizontalGridSetEvent) => event.getHorizontalGrid())\n\t\t\t\t   );\n\t}\n\n\tonVerticalGridChanged(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<boolean> {\n\n\t\treturn this.onEvent(schemaId, SchemaVerticalGridSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: SchemaVerticalGridSetEvent) => event.getVerticalGrid())\n\t\t\t\t   );\n\t}\n\n\tonRowColoring(schemaId: SchemaReadModelRootId = schemaGlobalId): Observable<SchemaRowColoring> {\n\n\t\treturn this.onEvent(schemaId, RowColoringSetEvent)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((event: RowColoringSetEvent) => event.getRowColoring())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '@generic-ui/hermes';\n\nimport { RowDetailConfig } from './row-detail.config';\n\n\n@Injectable()\nexport class StructureRowDetailConfigArchive extends Archive<RowDetailConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (item => 'Detail View')\n\t\t});\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const structureRowDetailViewItem = new InjectionToken('structureRowDetailViewItem');\n\nexport const structureRowDetailViewTemplate = new InjectionToken('structureRowDetailViewTemplate');\n","import { Component, Inject, OnInit, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './structure.row-detail-view.tokens';\n\n\n@Component({\n\ttemplate: `\n\t\t\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowDetailViewComponent implements OnInit {\n\n\tselectedRowValues: Array<any>;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(@Inject(structureRowDetailViewItem) private item: any,\n\t\t\t\t@Inject(structureRowDetailViewTemplate) private template: any,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.template(this.item));\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedRowValues = this.item;\n\t}\n\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricDrawerService } from '@generic-ui/fabric';\n\nimport { FormationEventService } from '../../feature-api/formation/formation-event.service';\nimport { StructureId } from '../../domain/structure.id';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { StructureRowDetailConfigArchive } from './structure.row-detail.config-archive';\nimport { RowDetailConfig } from './row-detail.config';\nimport { StructureRowDetailViewComponent } from './view/structure.row-detail-view.component';\nimport { structureRowDetailViewItem, structureRowDetailViewTemplate } from './view/structure.row-detail-view.tokens';\n\n\n@Injectable()\nexport class StructureRowDetailService extends Reactive {\n\n\tenabled: boolean = false;\n\n\tconfig: RowDetailConfig;\n\n\telementRef: ElementRef;\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tprivate readonly formationEventService: FormationEventService,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService) {\n\t\tsuper();\n\t}\n\n\tinit(ref: ElementRef): void {\n\t\tthis.elementRef = ref;\n\n\t\tthis.structureDetailViewConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((config: RowDetailConfig) => {\n\n\t\t\t\tthis.config = config;\n\n\t\t\t\tif (config.enabled === true) {\n\t\t\t\t\tthis.turnOn();\n\t\t\t\t} else if (config.enabled === false) {\n\t\t\t\t\tthis.turnOff();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\n\t\t\t\tif (!this.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.drawerService.close();\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst item = items[0];\n\n\t\t\t\tconst injector = Injector.create({\n\t\t\t\t\tparent: this.injector,\n\t\t\t\t\tproviders: [\n\t\t\t\t\t\t{ provide: structureRowDetailViewItem, useValue: item },\n\t\t\t\t\t\t{ provide: structureRowDetailViewTemplate, useValue: this.config.template }\n\t\t\t\t\t]\n\t\t\t\t});\n\n\t\t\t\tthis.drawerService.open(this.elementRef, StructureRowDetailViewComponent, { injector: injector });\n\t\t\t});\n\t}\n\n\tprivate turnOn(): void {\n\t\tthis.enabled = true;\n\t}\n\n\tprivate turnOff(): void {\n\t\tthis.enabled = false;\n\t}\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {TitlePanelConfig } from './title-panel.config';\n\nexport class StructureTitlePanelConfigArchive extends Archive<TitlePanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Title Panel')\n\t\t});\n\t}\n\n}\n","import { Archive } from '@generic-ui/hermes';\nimport {FooterPanelConfig } from './footer-panel.config';\n\nexport class StructureFooterPanelConfigArchive extends Archive<FooterPanelConfig> {\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tenabled: false,\n\t\t\ttemplate: (title => 'Footer Panel')\n\t\t});\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure.id';\nimport { CompositionId } from '../../composition/domain/composition.id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from './panel/summaries/structure.summaries.archive';\nimport { StructureSummariesConfigService } from './panel/summaries/structure.summaries-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { StructureReadModelRoot } from '../feature-api/read/structure.read-model-root';\nimport { StructurePagingCommandDispatcher } from '../feature-api/paging/structure-paging.command-dispatcher';\nimport { StructurePagingEventRepository } from '../feature-api/paging/structure-paging.event-repository';\nimport { SourceCommandDispatcher } from '../feature-api/source/source.command-dispatcher';\nimport { SourceEventService } from '../feature-api/source/event/source-event.service';\nimport { CompositionCommandDispatcher } from '../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionEventRepository } from '../../composition/feature-api/composition.event-repository';\nimport { FormationEventService } from '../feature-api/formation/formation-event.service';\nimport { StructureCommandDispatcher } from '../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../feature-api/structure.warehouse';\nimport { CompositionWarehouse } from '../../composition/feature-api/composition.warehouse';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\nimport { StructureSearchEventService } from '../feature-api/search/structure-search-event.service';\nimport { StructureCellEditCloseAllService } from './edit/structure.cell-edit-close-all.service';\nimport { SchemaReadModelRootId } from '../../schema/feature-api/read/schema.read-model-root-id';\nimport { SchemaCommandDispatcher } from '../../schema/feature-api/schema.command-dispatcher';\nimport { StructureHeaderBottomEnabledArchive } from './header/structure-header-bottom-enabled.archive';\nimport { StructureHeaderTopEnabledArchive } from './header/structure-header-top-enabled.archive';\nimport { SchemaEventRepository } from '../../schema/feature-api/schema.event-repository';\nimport { StructureRowDetailConfigArchive } from './row-detail/structure.row-detail.config-archive';\nimport { StructureRowDetailService } from './row-detail/structure.row-detail.service';\nimport { StructureTitlePanelConfigArchive } from './title-panel/structure.title-panel.config-archive';\nimport { StructureFooterPanelConfigArchive } from './footer-panel/structure.footer-panel.config-archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function schemaIdFactory(generator: StructureIdGenerator): SchemaReadModelRootId {\n\treturn new SchemaReadModelRootId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: SchemaReadModelRootId,\n\t\tuseFactory: schemaIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditCloseAllService,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureSummariesArchive,\n\tStructureSummariesConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive,\n\tStructureHeaderTopEnabledArchive,\n\tStructureHeaderBottomEnabledArchive,\n\tStructureRowDetailConfigArchive,\n\tStructureRowDetailService,\n\tStructureTitlePanelConfigArchive,\n\tStructureFooterPanelConfigArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-column-manager.ngx.scss',\n\t\t'./style/structure-summaries.ngx.scss',\n\t\t'./style/structure-info-modal.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'./style/structure-filter.ngx.scss',\n\t\t'../../composition/feature/composition.ngx.scss',\n\t\t'./style/themes/fabric.structure.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss',\n\t\t'./style/themes/generic.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tprivate structure: StructureReadModelRoot;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: StructurePagingCommandDispatcher,\n\t\t\t\tpagingEventService: StructurePagingEventRepository,\n\t\t\t\tsourceCommandService: SourceCommandDispatcher,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandDispatcher: SchemaCommandDispatcher,\n\t\t\t\tcompositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tcompositionEventService: CompositionEventRepository,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandDispatcher,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureSummariesConfigService: StructureSummariesConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tstructureSearchEventService: StructureSearchEventService,\n\t\t\t\tstructureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tstructureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tstructureDetailViewConfigArchive: StructureRowDetailConfigArchive,\n\t\t\t\tstructureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tstructureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tschemaEventRepository: SchemaEventRepository,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate readonly schemaStylesManager: SchemaCssClassManager,\n\t\t\t\tprivate readonly schemaReadModelRootId: SchemaReadModelRootId,\n\t\t\t\tprivate readonly structureDetailViewService: StructureRowDetailService) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tschemaReadModelRootId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandDispatcher,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureSummariesConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive,\n\t\t\tstructureSearchEventService,\n\t\t\tstructureHeaderTopEnabledArchive,\n\t\t\tstructureHeaderBottomEnabledArchive,\n\t\t\tstructureDetailViewConfigArchive,\n\t\t\tstructureTitlePanelConfigArchive,\n\t\t\tstructureFooterPanelConfigArchive,\n\t\t\tschemaEventRepository\n\t\t);\n\n\t\tthis.structureCommandService.createStructure();\n\t\tcompositionCommandService.createComposition();\n\t\tschemaCommandDispatcher.create();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structureReadModelRoot: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structureReadModelRoot;\n\n\t\t\t\tthis.loaderEnabled = structureReadModelRoot.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structureReadModelRoot.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureDetailViewService.init(this.elementRef);\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.schemaReadModelRootId);\n\n\t\tthis.compositionReadModelService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort *ngIf=\"column.isSortEnabled()\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  [column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { SchemaTheme } from '../../../../schema/domain/theme/schema-theme';\nimport { Reactive } from '../../../../../common/cdk/reactive';\nimport { StructureThemeConverter } from '../../schema/structure.theme.converter';\nimport { SchemaWarehouse } from '../../../../schema/feature-api/schema.warehouse';\n\n@Injectable()\nexport class StructureColumnConfigService extends Reactive {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly schemaReadModelRepository: SchemaWarehouse,\n\t\t\t\tprivate readonly structureThemeConverter: StructureThemeConverter,\n\t\t\t\tprivate readonly inlineDialogService: FabricInlineDialogService) {\n\t\tsuper();\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column', // TODO\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.schemaReadModelRepository\n\t\t\t.onSingleTheme()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((theme: SchemaTheme) => {\n\t\t\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, {\n\t\t\t\t\tinjector: injector,\n\t\t\t\t\tplacement: InlineDialogPlacement.Top,\n\t\t\t\t\toffset: -2,\n\t\t\t\t\ttheme: this.structureThemeConverter.convertTheme(theme)\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInjector,\n\tInput,\n\tOnInit,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tglobalSearching = false;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\t// \tthis.structureSearchReadModelRepository\n\t\t// \t\t.onSearchEnabled()\n\t\t// \t\t.pipe(\n\t\t// \t\t\tthis.takeUntil()\n\t\t// \t\t)\n\t\t// \t\t.subscribe((searching: boolean) => {\n\t\t// \t\t\tthis.globalSearching = searching;\n\t\t// \t\t\tthis.changeDetectorRef.detectChanges();\n\t\t// \t\t});\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext): void {\n\n\t\tif (column.isSortEnabled()) {\n\t\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t\t}\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortOrder.DESC;\n\t}\n\n\tisGlobalSortEnabled(): boolean {\n\t\treturn this.globalSearching;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from './read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './read/structure.quick-filter.repository';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFilterWarehouse {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\">\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\t// if (this.containerRef) {\n\t\t\t\t// \tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t// }\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { StructureFilterCommandDispatcher } from '../../../feature-api/filter/structure-filter.command-dispatcher';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\n\t\t<!--\t\t<ng-container-->\n\t\t<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n\t\t<!--\t\t</ng-container>-->\n\n\t\t<button gui-button [primary]=\"true\">Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandDispatcher,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { combineLatest } from 'rxjs';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureFormationDispatcher } from '../../feature-api/formation/structure-formation.dispatcher';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { SelectedRowsList } from '../../feature-api/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../feature-api/vertical-formation/vertical-formation.repository';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSearchPhraseRepository } from '../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureSearchHighlightArchive } from '../../feature-api/search/highlight/structure.search-highlight.archive';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string = '';\n\n\thighlighting: boolean = true;\n\n\tphrase: boolean = true;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\trowDetailOpened = 4;\n\n\tconstructor(@Inject(PLATFORM_ID) private readonly platformId: any,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly formationCommandService: StructureFormationDispatcher,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate readonly verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate readonly structureId: StructureId, // REfactor\n\t\t\t\tprivate readonly structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate readonly structureSearchHighlightArchive: StructureSearchHighlightArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationReadModelService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.structureSearchPhraseRepository\n\t\t\t\t.onPhrase(this.structureId),\n\t\t\tthis.structureSearchHighlightArchive\n\t\t\t\t.onValue()\n\t\t).pipe(\n\t\t\tthis.takeUntil()\n\t\t )\n\t\t .subscribe((args: Array<any>) => {\n\n\t\t\t const searchPhrase = args[0],\n\t\t\t\t highlighting = args[1];\n\n\t\t\t this.highlighting = highlighting;\n\t\t\t this.searchPhrase = searchPhrase;\n\n\t\t\t if (!this.highlighting) {\n\t\t\t\t this.searchPhrase = '';\n\t\t\t }\n\n\t\t\t this.changeDetectorRef.detectChanges();\n\t\t });\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\n\t\tlet height = index * this.rowHeight;\n\n\t\t// if (index > this.rowDetailOpened) {\n\t\t// \theight += 200;\n\t\t// }\n\n\t\treturn `translateY(${height}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\t@Input()\n\tindex: number;\n\n\t@Input()\n\tdetailsEnabled: boolean = false;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnChanges,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandDispatcher } from '../../../feature-api/source/source.command-dispatcher';\nimport { ChangedValueEmitter } from '../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureCellEditCloseAllService } from '../../edit/structure.cell-edit-close-all.service';\n\n\n@Component({\n\tselector: 'gui-structure-cell[entity][cell]',\n\ttemplateUrl: `structure.cell.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate readonly structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate readonly cellEditCloseAllService: StructureCellEditCloseAllService,\n\t\t\t\tprivate readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\t// if (changes.editMode !== undefined) {\n\t\t// \tif (this.editMode) {\n\t\t// \t\tthis.cellEditingEnabled = true;\n\t\t// \t\tthis.enterEditMode(false);\n\t\t// \t} else if (!this.editMode) {\n\t\t// \t\tthis.exitEditMode();\n\t\t// \t}\n\t\t// }\n\t\t//\n\t\t// if (!this.editMode) {\n\t\t// \tthis.exitEditMode();\n\t\t// }\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.cellEditCloseAllService\n\t\t\t.onCloseAll()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.exitEditMode();\n\t\t\t});\n\t}\n\n\tisCellEditingEnabled(): boolean {\n\t\treturn this.cellEditingEnabled && this.cell.isCellEditingEnabled();\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.isCellEditingEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cellEditCloseAllService.closeAll();\n\n\t\ttimer(0)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.inEditMode = true;\n\n\t\t\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\t\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\t\t\tconst parentElement = this.elementRef.nativeElement.querySelector('.gui-cell-edit-mode');\n\n\t\t\t\tthis.editContext = {\n\t\t\t\t\tstatus: this.status$,\n\t\t\t\t\tvalueChanges: this.valueChanges$,\n\t\t\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\t\t\tfocus: forceCheck,\n\t\t\t\t\tparent: parentElement\n\t\t\t\t};\n\n\t\t\t\tthis.observeFieldStatus();\n\t\t\t\tthis.observeValueChanges();\n\n\t\t\t\tthis.publishEditEnter();\n\n\t\t\t\tif (!forceCheck) {\n\t\t\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t\t\t} else {\n\t\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t\t}\n\t\t\t});\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../../schema/domain/coloring/schema-row-coloring';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureCommandDispatcher } from '../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructureSourceWarehouse } from '../../feature-api/source/structure-source.warehouse';\nimport { CompositionCommandDispatcher } from '../../../composition/feature-api/composition.command-dispatcher';\nimport { CompositionWarehouse } from '../../../composition/feature-api/composition.warehouse';\nimport { StructureFormationWarehouse } from '../../feature-api/formation/structure-formation.warehouse';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructureVerticalFormationWarehouse } from '../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('sourceCollection', { static: false })\n\tsourceCollectionRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private readonly elementRef: ElementRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly ngZone: NgZone,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate readonly structureReadModelWarehouse: StructureWarehouse,\n\t\t\t\tprivate readonly structureVerticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate readonly sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate readonly compositionWarehouse: CompositionWarehouse,\n\t\t\t\tprivate readonly formationReadModelService: StructureFormationWarehouse,\n\t\t\t\tprivate readonly resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private readonly structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onContainerHeight(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((containerHeight: number) => {\n\t\t\t\tthis.setContainerHeight(containerHeight);\n\t\t\t});\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntities()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((source: Array<ItemEntity>) => {\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionWarehouse\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionWarehouse\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureVerticalFormationWarehouse\n\t\t\t.onVerticalScrollEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.structureReadModelWarehouse\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: StructureReadModelRoot) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\n\t\t\t\tconst topMargin = structure.getTopMargin(),\n\t\t\t\t\tsourceHeight = structure.getSourceHeight();\n\n\t\t\t\tthis.setSourceHeight(topMargin, sourceHeight);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tprivate setContainerHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate setSourceHeight(topMargin: number, sourceHeight: number): void {\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\tthis.renderer.setStyle(this.sourceCollectionRef.nativeElement, 'height', sourceHeight + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\n\t\tQuickFilters\n\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from './enabled/structure.searching.repository';\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\n\n\n@Injectable()\nexport class StructureSearchWarehouse {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { StructureReadModelRoot } from '../../feature-api/read/structure.read-model-root';\nimport { Paging } from '../../feature-api/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureWarehouse } from '../../feature-api/structure.warehouse';\nimport { StructurePagingWarehouse } from '../../feature-api/paging/structure-paging.warehouse';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureSummariesArchive } from '../panel/summaries/structure.summaries.archive';\nimport { StructureFilterWarehouse } from '../../feature-api/filter/structure-filter.warehouse';\nimport { StructureSearchWarehouse } from '../../feature-api/search/structure-search.warehouse';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../feature-api/structure-tokens';\nimport { StructureSummariesPanelConfig } from '../panel/summaries/structure.summaries-panel.config';\nimport { StructureHeaderTopEnabledArchive } from '../header/structure-header-top-enabled.archive';\nimport { StructureHeaderBottomEnabledArchive } from '../header/structure-header-bottom-enabled.archive';\nimport { StructureTitlePanelConfigArchive } from '../title-panel/structure.title-panel.config-archive';\nimport { TitlePanelConfig } from '../title-panel/title-panel.config';\nimport { StructureFooterPanelConfigArchive } from '../footer-panel/structure.footer-panel.config-archive';\nimport { FooterPanelConfig } from '../footer-panel/footer-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: StructureReadModelRoot;\n\n\tsearchEnabled: boolean = false;\n\n\ttopSummariesPanelEnabled: boolean = false;\n\n\tbottomSummariesPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\ttopHeaderEnabled: boolean;\n\n\tbottomHeaderEnabled: boolean;\n\n\tprivate pagingReadModel: Paging;\n\n\ttitlePanelEnabled: boolean;\n\n\tfooterPanelEnabled: boolean;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly structureDefinition: StructureDefinition,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureReadModelService: StructureWarehouse,\n\t\t\t\tprivate readonly pagingReadModelService: StructurePagingWarehouse,\n\t\t\t\tprivate readonly structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate readonly structureSummariesArchive: StructureSummariesArchive,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterWarehouse,\n\t\t\t\tprivate readonly structureSearchReadModelRepository: StructureSearchWarehouse,\n\t\t\t\tprivate readonly structureHeaderTopEnabledArchive: StructureHeaderTopEnabledArchive,\n\t\t\t\tprivate readonly structureHeaderBottomEnabledArchive: StructureHeaderBottomEnabledArchive,\n\t\t\t\tprivate readonly structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureHeaderTopEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((topHeaderEnabled: boolean) => {\n\t\t\t\tthis.topHeaderEnabled = topHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureHeaderBottomEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((bottomHeaderEnabled: boolean) => {\n\t\t\t\tthis.bottomHeaderEnabled = bottomHeaderEnabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: StructureReadModelRoot) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingReadModelService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSummariesArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureSummariesPanelConfig) => {\n\t\t\t\tthis.topSummariesPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomSummariesPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((titlePanel: TitlePanelConfig) => {\n\t\t\t\tthis.titlePanelEnabled = titlePanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((footerPanel: FooterPanelConfig) => {\n\t\t\t\tthis.footerPanelEnabled = footerPanel.enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.topHeaderEnabled;\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.bottomHeaderEnabled;\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureId, StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\nimport { StructureId } from '../structure.id';\n\nexport abstract class StructureAggregateRepository extends AggregateRepository<StructureId, StructureAggregate> {\n\n\tabstract getById(aggregateId: StructureId): Optional<StructureAggregate>;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../domain/structure/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../domain/structure/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: StructureId): Optional<StructureAggregate> {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class SetSourceLoadingEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class PagingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure.id';\n\nexport class FormationSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'FormationSetEvent');\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureFilterToggledEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelRepository } from '../../../feature-api/read/structure.read-model-repository';\nimport { StructureReadModelRoot } from '../../../feature-api/read/structure.read-model-root';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureCreatedEvent } from '../../../domain/structure/create-structure/structure-created.event';\nimport { SetSourceLoadingEvent } from '../../../domain/source/loading/set-source-loading.event';\nimport { PagingSetEvent } from '../../../domain/paging/set/paging-set.event';\nimport { PrevPageEvent } from '../../../domain/paging/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../domain/paging/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../domain/paging/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../domain/formation/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../domain/formation/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../domain/structure/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../domain/structure/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../domain/structure/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../domain/structure/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../domain/structure/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../domain/structure/vertical-formation/set-row-height/row-height-set.event';\nimport { StructureHeightSetEvent } from '../../../domain/structure/vertical-formation/container/set-height/structure-height-set.event';\nimport { RowHeightSetBasedOnThemeEvent } from '../../../domain/structure/vertical-formation/set-row-height-theme/row-height-set-based-on-theme.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureReadModelRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, StructureReadModelRoot>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, StructureReadModelRoot>>(1);\n\n\tconstructor(domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureReadStore: InMemoryStructureReadStore) {\n\t\tsuper(domainEventBus);\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<StructureReadModelRoot> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, StructureReadModelRoot>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, StructureReadModelRoot>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprotected forEvents(): Array<typeof DomainEvent> {\n\t\treturn [\n\t\t\tStructureCreatedEvent,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tPagingSetEvent,\n\t\t\tPrevPageEvent,\n\t\t\tNextPageEvent,\n\t\t\tPagesizeChangedEvent,\n\t\t\tFormationSetEvent,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\tScrollPositionSetEvent,\n\t\t\tSortToggledEvent as any,\n\t\t\tStructureFilterToggledEvent,\n\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\tSortOrderSetEvent as any,\n\t\t\tOriginSetEvent as any,\n\t\t\tRowHeightSetEvent,\n\t\t\tStructureHeightSetEvent,\n\t\t\tRowHeightSetBasedOnThemeEvent\n\t\t];\n\t}\n\n\tprotected subs(event: DomainEvent<StructureId>): void {\n\n\t\tconst aggregateId = event.getAggregateId();\n\n\t\tconst optStructure = this.inMemoryStructureReadStore.getById(aggregateId);\n\n\t\toptStructure.ifPresent((structureReadModelRoot: StructureReadModelRoot) => {\n\n\t\t\tconst key = structureReadModelRoot.getId().toString();\n\n\t\t\tthis.structureIdToStructure.set(key, structureReadModelRoot);\n\n\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t});\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './domain/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './domain/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../domain/structure/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './feature-api/in-memory-structure.read-store';\nimport { StructureReadModelRepository } from '../../feature-api/read/structure.read-model-repository';\nimport { InMemoryStructureRepository } from './feature-api/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureReadModelRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler implements CommandHandler<StructureAggregate, SetVerticalScrollEnabledCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetVerticalScrollEnabledCommand> {\n\t\treturn SetVerticalScrollEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetVerticalScrollEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setVerticalFormationEnabled(enabled);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler implements CommandHandler<StructureAggregate, SetScrollPositionCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetScrollPositionCommand> {\n\t\treturn SetScrollPositionCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetScrollPositionCommand): void {\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetScrollPositionCommand): void {\n\n\t\tconst position = command.getPosition();\n\n\t\tstructure.setScrollPosition(position);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { FieldsInitedAggregateEvent } from './fields-inited.aggregate-event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler implements CommandHandler<StructureAggregate, InitFieldsCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<InitFieldsCommand> {\n\t\treturn InitFieldsCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tcolumns = command.getColumns();\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tconst fieldTypes = (aggregateEvents[0] as FieldsInitedAggregateEvent).getFields();\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(command.getAggregateId(), compositionId, columns, fieldTypes));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: InitFieldsCommand): void {\n\n\t\tconst columns = command.getColumns();\n\n\t\tstructure.createFields(columns);\n\t}\n\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler implements CommandHandler<StructureAggregate, ToggleSortCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSortCommand> {\n\t\treturn ToggleSortCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSortCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: ToggleSortCommand): void {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class SortingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortingCommandHandler implements CommandHandler<StructureAggregate, SetSortingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortingCommand> {\n\t\treturn SetSortingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetSortingCommand): void {\n\n\t\tconst sortingConfig = command.getSortingConfig();\n\n\t\taggregate.setSortingConfig(sortingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigFilterCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigFilterCommand> {\n\t\treturn StructureSetConfigFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(command.getAggregateId(), filterConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigFilterCommand): void {\n\n\t\tconst filterConfig = command.getConfig();\n\n\t\taggregate.setFilterConfig(filterConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigSearchingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigSearchingCommand> {\n\t\treturn StructureSetConfigSearchingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(command.getAggregateId(), searchingConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigSearchingCommand): void {\n\n\t\tconst searchingConfig = command.getConfig();\n\n\t\taggregate.setSearchingConfig(searchingConfig);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure.id';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler implements CommandHandler<StructureAggregate, StructureSetConfigQuickFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetConfigQuickFilterCommand> {\n\t\treturn StructureSetConfigQuickFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetConfigQuickFilterCommand): void {\n\n\t\tconst quickFiltersConfig = command.getConfig();\n\n\t\taggregate.setQuickFiltersConfig(quickFiltersConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler implements CommandHandler<StructureAggregate, StructureToggleFilterCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureToggleFilterCommand> {\n\t\treturn StructureToggleFilterCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureToggleFilterCommand): void {\n\n\t\tconst fieldId: FieldId = command.getFieldId(),\n\t\t\texternalFieldId: string = command.getExternalFilterId(),\n\t\t\tfilterValue = command.getFilterValue();\n\n\t\taggregate.toggleFilter(fieldId, externalFieldId, filterValue);\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { SummariesValues } from './calculation/summaries.values';\n\n\nexport class StructureSummariesChangedEvent extends DomainEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, SummariesValues>) {\n\t\tsuper(structureId, 'StructureSummariesChangedEvent');\n\t}\n\n\tgetSummaries() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { SummariesValues } from './calculation/summaries.values';\nimport { StructureId } from '../../structure.id';\nimport { StructureSummariesChangedEvent } from './structure.summaries-changed.event';\n\nexport const StructureSummariesChangedAggregateEventName = 'StructureSummariesChangedAggregateEvent';\n\nexport class StructureSummariesChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly summarizedValues: Map<string, SummariesValues>) {\n\t\tsuper(aggregateId, StructureSummariesChangedAggregateEventName);\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSummariesChangedEvent(this.getAggregateId(), this.summarizedValues);\n\t}\n\n\tgetSummaries(): Map<string, SummariesValues> {\n\t\treturn this.summarizedValues;\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport {\n\tStructureSummariesChangedAggregateEvent,\n\tStructureSummariesChangedAggregateEventName\n} from '../structure/summaries/structure.summaries-changed.aggregate-event';\nimport { StructureSummariesChangedEvent } from '../structure/summaries/structure.summaries-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\nimport { StructureId } from '../structure.id';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent<StructureId>>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent<StructureId>): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === StructureSummariesChangedAggregateEventName) {\n\n\t\t\tconst structureSummariesChangedAggregateEvent = (event as StructureSummariesChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSummariesChangedEvent(structureSummariesChangedAggregateEvent.getAggregateId(), structureSummariesChangedAggregateEvent.getSummaries());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure.id';\n\nexport const StructureSummariesEnabledSetEventName = 'StructureSummariesEnabledSetEvent';\n\nexport class StructureSummariesEnabledSetEvent extends DomainEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, StructureSummariesEnabledSetEventName);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureSetSummariesEnabledCommand } from './structure.set-summaries-enabled.command';\nimport { StructureSummariesEnabledSetEvent } from './structure.summaries-enabled-set.event';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSummariesEnabledCommandHandler implements CommandHandler<StructureAggregate, StructureSetSummariesEnabledCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSummariesEnabledCommand> {\n\t\treturn StructureSetSummariesEnabledCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\taggregateEvents = aggregate.getEvents();\n\n\t\tthis.domainEventPublisher.publish(new StructureSummariesEnabledSetEvent(command.getAggregateId(), enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureSetSummariesEnabledCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tstructure.setSummariesEnabled(enabled);\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly margin: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetMargin(): number {\n\t\treturn this.margin;\n\t}\n\n}\n","import { DomainObject, Optional } from '@generic-ui/hermes';\n\n@DomainObject\nexport class VerticalFormationContainerHeight {\n\n\tprivate containerHeight: Optional<number> = Optional.empty();\n\n\tprivate sourceHeight: number;\n\n\tisContainerHeightProperForVirtualScroll(): boolean {\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError() > 0;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetVisibleContainerHeight(): number {\n\t\treturn this.getHeight();\n\t}\n\n\tgetHeight(): number {\n\n\t\tif (this.containerHeight.isPresent()) {\n\t\t\treturn this.getContainerHeight();\n\t\t}\n\n\t\treturn this.sourceHeight;\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.sourceHeight;\n\t}\n\n\tsetContainerHeight(height: number): void {\n\n\t\tif (height >= 0) {\n\t\t\tthis.containerHeight = Optional.of(height);\n\t\t}\n\t}\n\n\tsetSourceSize(height: number): void {\n\t\tthis.sourceHeight = height;\n\t}\n\n\tprivate getContainerHeight(): number {\n\n\t\tif (this.containerHeight.getValueOrNullOrThrowError() > this.sourceHeight) {\n\t\t\treturn this.sourceHeight;\n\t\t} else {\n\t\t\treturn this.containerHeight.getValueOrNullOrThrowError();\n\t\t}\n\t}\n}\n","import { DomainObject } from '@generic-ui/hermes';\n\nimport { VerticalRange } from './vertical-range';\nimport { VerticalFormationContainerHeight } from './container/vertical-formation.container-height';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\n\n@DomainObject\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 42;\n\n\tprivate hiddenItemsTop: number = 5;\n\n\tprivate hiddenItemsBottom: number = 2;\n\n\tprivate container: VerticalFormationContainerHeight = new VerticalFormationContainerHeight();\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.container.setContainerHeight(viewportHeight);\n\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.container.getHeight() > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.container.getVisibleContainerHeight();\n\t}\n\n\tgetSourceHeight(): number {\n\t\treturn this.container.getSourceHeight();\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.container.getHeight()) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize, 0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.ceil(this.container.getHeight() / this.rowHeight),\n\t\t\tviewportPositionIndex = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tlet end = (viewportPositionIndex + itemsInViewport + this.hiddenItemsBottom);\n\n\t\tlet topMargin = viewportPositionIndex;\n\n\t\tif (topMargin + itemsInViewport >= this.sourceSize) {\n\t\t\ttopMargin = this.sourceSize - itemsInViewport;\n\t\t}\n\n\t\tlet start = Math.max(viewportPositionIndex - this.hiddenItemsTop, 0);\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\t// end - itemsInViewport;\n\n\t\tthis.range = new VerticalRange(start, end, topMargin);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && !this.container.isContainerHeightProperForVirtualScroll()) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.container.setContainerHeight(height);\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(rowHeight: number): void {\n\t\tthis.rowHeight = rowHeight;\n\t\tthis.container.setSourceSize(this.sourceSize * this.rowHeight);\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO REMOVE\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = -1,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { FieldMatcherType } from '../matcher/field.matcher.type';\nimport { FieldMatchers } from '../matcher/field.matchers';\n\nexport abstract class BaseField {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate readonly matchers: FieldMatchers;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t\tthis.matchers = matchers;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t}\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetMatchers(): FieldMatchers {\n\t\treturn this.matchers;\n\t}\n\n\tgetSearchAccessorMethod(): (entity: OriginItemEntity) => any {\n\n\t\tlet matcher: (i: any) => any;\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((m: FieldMatcherType) => {\n\t\t\t\tmatcher = m;\n\t\t\t});\n\n\t\tif (matcher) {\n\t\t\treturn (entity) => {\n\t\t\t\tconst val = this.accessorMethod(entity);\n\t\t\t\treturn matcher(val);\n\t\t\t};\n\t\t} else {\n\t\t\treturn (entity) => {\n\t\t\t\treturn this.accessorMethod(entity);\n\t\t\t};\n\t\t}\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tgetSortValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSortMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\tgetSearchValue(entity: OriginItemEntity): any {\n\t\tlet value = this.accessorMethod(entity);\n\n\t\tthis.matchers\n\t\t\t.getSearchMatcher()\n\t\t\t.ifPresent((matcher: FieldMatcherType) => {\n\t\t\t\tvalue = matcher(value);\n\t\t\t});\n\n\t\treturn value;\n\t}\n\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../../summaries/summaries.type';\nimport { ColumnSummariesConfig } from '../../../../../composition/domain/column/column-summaries.config';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { BaseField } from './base.field';\n\nexport abstract class Field<T> extends BaseField {\n\n\tprivate summariesEnabled: boolean = true;\n\n\tprivate summariesTypes: SummariesType;\n\n\tprivate readonly possibleSummaries: SummariesType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  matchers: FieldMatchers,\n\t\t\t\t\t\t  summariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tdataType,\n\t\t\tmatchers);\n\n\t\tthis.possibleSummaries = this.assignPossibleSummaries();\n\n\t\tthis.assignSummaries(summariesConfig);\n\t}\n\n\tabstract assignDefaultSummaries(): SummariesType;\n\n\tabstract assignPossibleSummaries(): SummariesType;\n\n\tabstract search(item: OriginItemEntity, searchPhrase: string): boolean;\n\n\tabstract sort(one: T, two: T): number;\n\n\tabstract filter(value: T, filterPhrase: T): boolean;\n\n\tisSummaries(type: SummariesType): boolean {\n\n\t\tif (!this.isSummariesEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.summariesTypes & type);\n\t}\n\n\tisSummariesEnabled(): boolean {\n\t\treturn this.summariesEnabled;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): void {\n\t\tthis.summariesEnabled = enabled;\n\t}\n\n\tprivate assignSummaries(summariesConfig: ColumnSummariesConfig): void {\n\n\t\tif (!!summariesConfig && Object.keys(summariesConfig).length !== 0) {\n\n\t\t\tif (summariesConfig.enabled) {\n\t\t\t\tthis.summariesEnabled = !!summariesConfig.enabled;\n\t\t\t}\n\n\t\t\tif (summariesConfig.summariesTypes) {\n\n\t\t\t\tthis.summariesTypes = 0;\n\n\t\t\t\tsummariesConfig.summariesTypes.forEach((t: any) => {\n\t\t\t\t\tthis.summariesTypes |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.summariesTypes = this.assignDefaultSummaries();\n\t\t}\n\t}\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class UnknownField extends Field<any> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(one: any, two: any): number {\n\t\treturn 0;\n\t}\n\n\tfilter(value: any, filterPhrase: any): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class NumberField extends Field<number> {\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tgetField(): NumberField {\n\t\treturn this;\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.SUM |\n\t\t// \tSummariesType.MIN |\n\t\t// \tSummariesType.MAX |\n\t\t// \tSummariesType.AVERAGE |\n\t\t// \tSummariesType.MEDIAN;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.SUM |\n\t\t\tSummariesType.MIN |\n\t\t\tSummariesType.MAX |\n\t\t\tSummariesType.AVERAGE |\n\t\t\tSummariesType.MEDIAN;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tfilter(value: number, filterPhrase: number): boolean {\n\t\treturn value > filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class StringField extends Field<string> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\tconst value = this.getSearchValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsort(strOne: string, strTwo: string): number {\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tfilter(value: string, filterPhrase: string): boolean {\n\t\treturn value.toLowerCase().indexOf(filterPhrase.toLowerCase()) > -1;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class BooleanField extends Field<boolean> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT |\n\t\t// \tSummariesType.TRUTHY |\n\t\t// \tSummariesType.FALSY;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT |\n\t\t\tSummariesType.TRUTHY |\n\t\t\tSummariesType.FALSY;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tfilter(value: boolean, filterPhrase: boolean): boolean {\n\t\treturn value === filterPhrase;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnSummariesConfig } from '../../../../../../composition/domain/column/column-summaries.config';\nimport { DataType } from '../data-type';\nimport { SummariesType } from '../../../summaries/summaries.type';\nimport { FieldMatchers } from '../../matcher/field.matchers';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\nexport class DateField extends Field<Date> {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\tmatchers: FieldMatchers,\n\t\t\t\tsummariesConfig?: ColumnSummariesConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\tmatchers,\n\t\t\tsummariesConfig);\n\t}\n\n\tassignDefaultSummaries(): SummariesType {\n\t\treturn 0;\n\t\t// return SummariesType.COUNT |\n\t\t// \tSummariesType.DISTINCT;\n\t}\n\n\tassignPossibleSummaries(): SummariesType {\n\t\treturn SummariesType.COUNT |\n\t\t\tSummariesType.DISTINCT;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn false;\n\t}\n\n\tsort(dateOne: Date, dateTwo: Date): number {\n\t\treturn dateOne as any - (dateTwo as any);\n\t}\n\n\tfilter(value: Date, filterPhrase: Date): boolean {\n\t\treturn false;\n\t}\n\n}\n","import { Optional } from '@generic-ui/hermes';\n\nimport { FieldMatcherType } from './field.matcher.type';\n\nexport class FieldMatchers {\n\n\tconstructor(private readonly matcher?: FieldMatcherType,\n\t\t\t\tprivate readonly sortMatcher?: FieldMatcherType,\n\t\t\t\tprivate readonly searchMatcher?: FieldMatcherType) { // TODO\n\t}\n\n\tgetMatcher(): Optional<FieldMatcherType> {\n\t\treturn Optional.of(this.matcher);\n\t}\n\n\tgetSortMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.sortMatcher) {\n\t\t\tmatcher = this.sortMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n\n\tgetSearchMatcher(): Optional<FieldMatcherType> {\n\n\t\tlet matcher;\n\n\t\tif (this.searchMatcher) {\n\t\t\tmatcher = this.searchMatcher;\n\t\t}\n\n\t\tif (this.matcher) {\n\t\t\tmatcher = this.matcher;\n\t\t}\n\n\t\treturn Optional.of(matcher);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\nimport { FieldMatchers } from '../matcher/field.matchers';\nimport { AllFieldTypes } from './all-field-types';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): AllFieldTypes {\n\n\t\tconst fieldMatchers = this.createMatchers(column);\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers, column.summaries);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string, fieldMatchers);\n\t\t}\n\n\t}\n\n\tprivate createMatchers(column: ColumnConfig): FieldMatchers {\n\n\t\tlet matcher = column.matcher,\n\t\t\tsortMatcher;\n\n\t\tif (column.sorting) {\n\t\t\tsortMatcher = column.sorting.matcher;\n\t\t}\n\n\t\treturn new FieldMatchers(matcher, sortMatcher);\n\t}\n\n\n}\n","import { AllFieldTypes } from './all-field-types';\nimport { DataType } from './data-type';\nimport { NumberField } from './fields/number-field';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { BooleanField } from './fields/boolean-field';\nimport { StringField } from './fields/string-field';\nimport { DateField } from './fields/date-field';\nimport { BaseField } from './base.field';\n\n\nexport class TypeField extends BaseField {\n\n\tstatic of(field: AllFieldTypes): TypeField {\n\t\treturn new TypeField(field);\n\t}\n\n\t// private readonly allDataTypes = [\n\t// \t// DataType\n\t// ]\n\n\tprivate readonly field: AllFieldTypes;\n\n\tconstructor(field: AllFieldTypes) {\n\t\tsuper(\n\t\t\tfield.getId(),\n\t\t\tfield.getAccessor(),\n\t\t\tfield.getDataType(),\n\t\t\tfield.getMatchers()\n\t\t);\n\t\tthis.field = field;\n\t}\n\n\tmapNumber<U>(callback: (field: NumberField) => U): U {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn callback(this.field as NumberField);\n\t\t}\n\t}\n\n\tifNumber(): NumberField {\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tgetField(): AllFieldTypes {\n\t\treturn this.field;\n\t}\n\n\tsearch(item: OriginItemEntity, searchPhrase: string): boolean {\n\t\treturn this.field.search(item, searchPhrase);\n\t}\n\n\tfilter(item: OriginItemEntity, filterPhrase: any): boolean {\n\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).filter(value, filterPhrase);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).filter(value, filterPhrase);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tsort(entityOne: OriginItemEntity, entityTwo: OriginItemEntity, direction: boolean): number {\n\n\t\tlet valueOne = direction ? this.field.getSortValue(entityOne) : this.field.getSortValue(entityTwo),\n\t\t\tvalueTwo = direction ? this.field.getSortValue(entityTwo) : this.field.getSortValue(entityOne);\n\n\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\treturn (this.field as NumberField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\treturn (this.field as BooleanField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\treturn (this.field as StringField).sort(valueOne, valueTwo);\n\t\t} else if (this.field.getDataType() === DataType.DATE) {\n\t\t\treturn (this.field as DateField).sort(valueOne, valueTwo);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n}\n","import { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\n\nimport { ColumnConfig } from '../../../../composition/domain/column/column.config';\nimport { TypeField } from './data-type/type.field';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, TypeField>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): TypeField {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<TypeField> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tconst typeField = new TypeField(field);\n\n\t\t\tthis.addField(typeField);\n\t\t});\n\t}\n\n\taddFields(fields: Array<TypeField>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: TypeField): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: TypeField;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tfilterValue: any) { // TODO not any\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\t\t\treturn this.field.filter(item, this.filterValue);\n\t\t});\n\t}\n\n}\n","import { TypeField } from '../field/data-type/type.field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: TypeField,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../feature-api/filter/filter-config';\nimport { SearchConfig } from '../../../feature-api/search/search-config';\nimport { QuickFiltersConfig } from '../../../feature-api/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: TypeField, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","export const SUMMARIES_CALCULATORS = 'GUI - Summaries Calculators';\n","import { SummariesValues } from './summaries.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { OriginItemEntity } from '../../../source/origin/origin-item-entity';\nimport { SummariesType } from '../summaries.type';\nimport { AllFieldTypes } from '../../field/data-type/all-field-types';\n\n\nexport abstract class SummariesCalculator<T, A extends SummariesValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: AllFieldTypes): void;\n\n\tabstract postCalculate(field: AllFieldTypes, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: AllFieldTypes, value: T): void;\n\n\tabstract generateAggregatedValues(field: AllFieldTypes): A;\n\n\tcalculate(fields: Array<AllFieldTypes>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: AllFieldTypes) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet summaries = new Map();\n\n\t\tfilteredFields.forEach((field: AllFieldTypes) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isSummaries(SummariesType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isSummaries(SummariesType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\tsummaries.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn summaries;\n\t}\n\n}\n","export abstract class SummariesValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class BooleanSummarizedValues extends SummariesValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { BooleanSummarizedValues } from './boolean-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanSummariesCalculator extends SummariesCalculator<boolean, BooleanSummarizedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field<boolean>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field<boolean>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<boolean>, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isSummaries(SummariesType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isSummaries(SummariesType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<boolean>): BooleanSummarizedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanSummarizedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class DateSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { DateSummarizedValues } from './date-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateSummariesCalculator extends SummariesCalculator<Date, DateSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field<Date>): void {\n\t}\n\n\tpostCalculate(field: Field<Date>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<Date>, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<Date>): DateSummarizedValues {\n\t\treturn new DateSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class NumberSummarizedValues extends SummariesValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { NumberSummarizedValues } from './number-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { SummariesType } from '../../summaries.type';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberSummariesCalculator extends SummariesCalculator<number, NumberSummarizedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field<number>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field<number>, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field<number>, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isSummaries(SummariesType.SUM) || field.isSummaries(SummariesType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isSummaries(SummariesType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field<number>): NumberSummarizedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isSummaries(SummariesType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isSummaries(SummariesType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isSummaries(SummariesType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isSummaries(SummariesType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isSummaries(SummariesType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberSummarizedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class StringSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { StringSummarizedValues } from './string-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringSummariesCalculator extends SummariesCalculator<string, StringSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field<string>): void {\n\t}\n\n\tpostCalculate(field: Field<string>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<string>, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<string>): StringSummarizedValues {\n\t\treturn new StringSummarizedValues();\n\t}\n\n}\n","import { SummariesValues } from '../summaries.values';\n\nexport class UnknownSummarizedValues extends SummariesValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SummariesCalculator } from '../summaries.calculator';\nimport { UnknownSummarizedValues } from './unknown-summarized.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownSummariesCalculator extends SummariesCalculator<any, UnknownSummarizedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field<any>): void {\n\t}\n\n\tpostCalculate(field: Field<any>, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field<any>, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field<any>): UnknownSummarizedValues {\n\t\treturn new UnknownSummarizedValues();\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { StructureSummariesChangedAggregateEvent } from './structure.summaries-changed.aggregate-event';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SummariesManager {\n\n\tstatic DEFAULT_ENABLED = false;\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<SummariesCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t\tthis.enabled = SummariesManager.DEFAULT_ENABLED;\n\t}\n\n\tcalculate(fields: Array<TypeField>, entities: Array<OriginItemEntity>): Array<AggregateEvent<StructureId>> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: SummariesCalculator<any, any>) => {\n\n\t\t\tconst allFields = fields.map((typeField: TypeField) => typeField.getField());\n\n\t\t\tconst aggregatedValues = calc.calculate(allFields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureSummariesChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { SummariesCalculator } from './calculation/summaries.calculator';\nimport { StructureId } from '../../structure.id';\nimport { SummariesManager } from './summaries.manager';\n\n\n@Injectable()\nexport class SummariesManagerFactory {\n\n\tconstructor(@Inject(SUMMARIES_CALCULATORS) private calculators: Array<SummariesCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): SummariesManager {\n\t\treturn new SummariesManager(structureId, this.calculators);\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { SUMMARIES_CALCULATORS } from './calculation/summaries.calculators.token';\nimport { BooleanSummariesCalculator } from './calculation/boolean/boolean-summaries.calculator';\nimport { DateSummariesCalculator } from './calculation/date/date-summaries.calculator';\nimport { NumberSummariesCalculator } from './calculation/number/number-summaries.calculator';\nimport { StringSummariesCalculator } from './calculation/string/string-summaries.calculator';\nimport { UnknownSummariesCalculator } from './calculation/unknown/unknown-summaries.calculator';\nimport { SummariesManagerFactory } from './summaries.manager.factory';\n\n\nexport function provideSummariesCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: SUMMARIES_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const summariesProviders = [\n\tprovideSummariesCalculator(BooleanSummariesCalculator),\n\tprovideSummariesCalculator(DateSummariesCalculator),\n\tprovideSummariesCalculator(NumberSummariesCalculator),\n\tprovideSummariesCalculator(StringSummariesCalculator),\n\tprovideSummariesCalculator(UnknownSummariesCalculator),\n\n\tSummariesManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../../domain/structure/filter/config/structure.config-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../domain/structure/search/config/structure.config-searching-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../../domain/structure/filter/quick/structure.config-quick-filter-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../domain/structure/field/data-type/field.id';\nimport { DataType } from '../../domain/structure/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureFieldUiModel } from './structure.field.ui-model';\nimport { TypeField } from '../../domain/structure/field/data-type/type.field';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<TypeField>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: TypeField) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: TypeField): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../domain/structure/field/init/fields-inited.event';\nimport { StructureId } from '../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { StructureSummariesChangedEvent } from '../../domain/structure/summaries/structure.summaries-changed.event';\n\n\n@Injectable()\nexport class StructureSummariesUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSummariesChanged(structureId: StructureId): Observable<DomainEvent<StructureId>> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event instanceof StructureSummariesChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent<StructureId>) => event.getAggregateId().toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Entity } from '@generic-ui/hermes';\n\nimport { OriginId } from './origin-id';\n\n\nexport class OriginItemEntity extends Entity<OriginId> {\n\n\trawData: any; // tODO\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: OriginId,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tsuper(id);\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.getId(), rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\nimport { StructureId } from '../../../structure.id';\nimport { StructureSourceItemEditedEvent } from './structure.source-item-edited.event';\n\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureSourceItemEditedEvent(this.getAggregateId(), this.beforeItem, this.afterItem);\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { OriginSetEvent } from './set-origin/origin-set.event';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new OriginSetEvent(this.getAggregateId(), this.origin);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { EntityId } from '@generic-ui/hermes';\n\nexport class OriginId extends EntityId {\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../structure.id';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { TypeField } from '../structure/field/data-type/type.field';\nimport { OriginId } from './origin/origin-id';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent<StructureId> {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: TypeField, structureId: StructureId): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent<StructureId>> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(new OriginId(RandomStringGenerator.generate()), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent<StructureId> {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.getId().toString() === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","import { AggregateEvent, AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\nimport { StructureId } from '../../structure.id';\nimport { StructurePreparedEntitiesSetEvent } from './structure.prepared-entities-set.event';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructurePreparedEntitiesSetEvent(this.getAggregateId(), this.preparedItems);\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { ColumnConfig } from '../../../../../composition/domain/column/column.config';\nimport { StructureId } from '../../../structure.id';\nimport { TypeField } from '../data-type/type.field';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\nexport class FieldsInitedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<TypeField>) {\n\t\tsuper(structureId, 'FieldsInitedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\n\t\tthrow new Error('COMPOSITION ID IS MISSING');\n\n\t\treturn new FieldsInitedEvent(\n\t\t\tthis.getAggregateId(),\n\t\t\tnull,\n\t\t\tthis.columns,\n\t\t\tthis.fields\n\t\t);\n\t}\n\n\tgetColumns(): Array<ColumnConfig> {\n\t\treturn this.columns;\n\t}\n\n\tgetFields(): Array<TypeField> {\n\t\treturn this.fields;\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaTheme } from './schema-theme';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\nexport class SchemaThemeSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly theme: SchemaTheme) {\n\t\tsuper(schemaId, 'SchemaThemeSetAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaThemeSetEvent(this.getAggregateId(), this.theme);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaRowColoring } from './schema-row-coloring';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\nexport class RowColoringSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t\tsuper(schemaId, 'RowColoringSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new RowColoringSetEvent(this.getAggregateId(), this.rowColoring);\n\t}\n\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from '../horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\nexport class SchemaVerticalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly verticalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaVerticalGridSetEvent(this.getAggregateId(), this.verticalGrid);\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../schema.id';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n\nexport class SchemaHorizontalGridSetAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(schemaId: SchemaId,\n\t\t\t\tprivate readonly horizontalGrid: boolean) {\n\t\tsuper(schemaId, 'SchemaHorizontalGridSetEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaHorizontalGridSetEvent(this.getAggregateId(), this.horizontalGrid);\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\n\nexport class SchemaCreatedEvent extends DomainEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../schema.id';\nimport { SchemaCreatedEvent } from './schema-created.event';\n\nexport class SchemaCreatedAggregateEvent extends AggregateEvent<SchemaId> {\n\n\tconstructor(aggregateId: SchemaId) {\n\t\tsuper(aggregateId, 'SchemaCreatedEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<SchemaId> {\n\t\treturn new SchemaCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaTheme } from './theme/schema-theme';\nimport { SchemaRowColoring } from './coloring/schema-row-coloring';\nimport { SchemaThemeSetAggregateEvent } from './theme/schema-theme-set.aggregate-event';\nimport { RowColoringSetAggregateEvent } from './coloring/row-coloring-set.aggregate-event';\nimport { SchemaVerticalGridSetAggregateEvent } from './grid/vertical/schema-vertical-grid-set.aggregate-event';\nimport { SchemaHorizontalGridSetAggregateEvent } from './grid/horizontal/schema-horizontal-grid-set.aggregate-event';\nimport { SchemaCreatedAggregateEvent } from './create/schema-created.aggregate-event';\n\n\nexport class SchemaAggregate extends AggregateRoot<SchemaId> {\n\n\tstatic readonly DEFAULT_THEME = SchemaTheme.GENERIC;\n\n\tstatic readonly DEFAULT_ROW_COLORING = SchemaRowColoring.ODD;\n\n\tstatic readonly DEFAULT_VERTICAL_GRID = true;\n\n\tstatic readonly DEFAULT_HORIZONTAL_GRID = true;\n\n\tprivate horizontalGrid: boolean;\n\n\tprivate verticalGrid: boolean;\n\n\tprivate theme: SchemaTheme;\n\n\tprivate rowColoring: SchemaRowColoring;\n\n\tconstructor(id: SchemaId) {\n\t\tsuper(id, 'SchemaAggregate');\n\t\tthis.setTheme(SchemaAggregate.DEFAULT_THEME);\n\t\tthis.setHorizontalGrid(SchemaAggregate.DEFAULT_HORIZONTAL_GRID);\n\t\tthis.setVerticalGrid(SchemaAggregate.DEFAULT_VERTICAL_GRID);\n\t\tthis.setRowColoring(SchemaAggregate.DEFAULT_ROW_COLORING);\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<SchemaId>> {\n\t\treturn SchemaCreatedAggregateEvent;\n\t}\n\n\tchangeTheme(theme: SchemaTheme): void {\n\t\tthis.setTheme(theme);\n\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.NONE);\n\t\t\tthis.setVerticalGrid(false);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.setRowColoring(SchemaRowColoring.ODD);\n\t\t}\n\t}\n\n\tprivate setTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t\tthis.addEvent(new SchemaThemeSetAggregateEvent(this.getId(), this.theme));\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t\tthis.addEvent(new RowColoringSetAggregateEvent(this.getId(), this.rowColoring));\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t\tthis.addEvent(new SchemaVerticalGridSetAggregateEvent(this.getId(), this.verticalGrid));\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t\tthis.addEvent(new SchemaHorizontalGridSetAggregateEvent(this.getId(), this.horizontalGrid));\n\t}\n}\n","import { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure.id';\nimport { StructureCreatedEvent } from './structure-created.event';\n\n\nexport class StructureCreatedAggregateEvent extends AggregateEvent<StructureId> {\n\n\tconstructor(aggregateId: StructureId) {\n\t\tsuper(aggregateId, 'StructureCreatedAggregateEvent');\n\t}\n\n\ttoDomainEvent(): DomainEvent<StructureId> {\n\t\treturn new StructureCreatedEvent(this.getAggregateId());\n\t}\n}\n","import { Type } from '@angular/core';\n\nimport { AggregateEvent, AggregateRoot } from '@generic-ui/hermes';\n\nimport { PagingManager } from '../paging/paging.manager';\nimport { SourceManager } from '../source/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { SummariesManager } from './summaries/summaries.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../formation/formation-aggregate';\nimport { StructureId } from '../structure.id';\nimport { StructureEditSourceItemParams } from '../source/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../paging/paging-config';\nimport { OriginItemEntity } from '../source/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../composition/domain/column/column.config';\nimport { SortingConfig } from '../../feature-api/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../feature-api/filter/filter-config';\nimport { QuickFiltersConfig } from '../../feature-api/filter/quick-filters.config';\nimport { SearchConfig } from '../../feature-api/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../source/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortOrder } from '../../../composition/domain/column/sort/sort-order';\nimport { FieldsInitedAggregateEvent } from './field/init/fields-inited.aggregate-event';\nimport { SchemaTheme } from '../../../schema/domain/theme/schema-theme';\nimport { SchemaAggregate } from '../../../schema/domain/schema.aggregate';\nimport { StructureCreatedAggregateEvent } from './create-structure/structure-created.aggregate-event';\n\n\nexport class StructureAggregate extends AggregateRoot<StructureId> {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate pagingManager: PagingManager;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate summariesManager: SummariesManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingManager,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\tsummariesManager: SummariesManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection) {\n\t\tsuper(structureId, 'StructureAggregate');\n\t\tthis.pagingManager = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.summariesManager = summariesManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t}\n\n\tcreateEvent(): Type<AggregateEvent<StructureId>> {\n\t\treturn StructureCreatedAggregateEvent;\n\t}\n\n\tinit(): void {\n\t\tthis.initTheme();\n\t}\n\n\tsetVerticalFormationEnabled(enabled: boolean): void {\n\t\tthis.verticalFormation.setEnabled(enabled);\n\t\tthis.calculateSource();\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetSummariesEnabled(enabled: boolean): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.summariesManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\n\t\tthis.verticalFormation.setViewportHeight(height);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\n\t\t// #1707 Move to SchemeAggregate\n\t\tif (theme === SchemaTheme.MATERIAL) {\n\t\t\tthis.getVerticalFormation().setRowHeight(52);\n\t\t}\n\n\t\tif (theme === SchemaTheme.GENERIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(42);\n\t\t}\n\n\t\tif (theme === SchemaTheme.FABRIC) {\n\t\t\tthis.getVerticalFormation().setRowHeight(36);\n\t\t}\n\n\t\tif (theme === SchemaTheme.LIGHT) {\n\t\t\tthis.getVerticalFormation().setRowHeight(56);\n\t\t}\n\n\t\tif (theme === SchemaTheme.DARK) {\n\t\t\tthis.getVerticalFormation().setRowHeight(38);\n\t\t}\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tgetPaging(): PagingManager {\n\t\treturn this.pagingManager;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingManager.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingManager): void {\n\t\tthis.pagingManager = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingManager.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingManager.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent<StructureId>> {\n\n\t\tconst pagingEvents = this.pagingManager.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): ReadonlyArray<AggregateEvent<StructureId>> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\tconst typeFields = this.fieldCollection.getAllFields();\n\n\t\tthis.addEvent(\n\t\t\tnew FieldsInitedAggregateEvent(this.getId(), columns, typeFields)\n\t\t);\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortOrder): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent<StructureId>> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent<StructureId>> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingManager) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingManager.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// summaries\n\t\tconst summariesEvents = this.summariesManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\tsummariesEvents.forEach((ae: AggregateEvent<StructureId>) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingManager.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate initTheme() {\n\n\t\t// TODO\n\t\tconst theme = SchemaAggregate.DEFAULT_THEME;\n\n\t\tthis.setTheme(theme);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { TypeField } from '../field/data-type/type.field';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: TypeField;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: TypeField,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): TypeField {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\t\t\treturn this.field.sort(entityOne, entityTwo, this.direction);\n\t\t});\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../feature-api/sorting-config';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { SortOrder } from '../../../../composition/domain/column/sort/sort-order';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: TypeField): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: TypeField, sortOrder: SortOrder): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortOrder.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortOrder.ASC || sortOrder === SortOrder.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortOrder.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: TypeField, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { OriginItemEntity } from '../../source/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\nimport { TypeField } from '../field/data-type/type.field';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<TypeField> = [];\n\n\tprivate searchPhrase: string;\n\n\tprivate enabledDataTypes: Array<DataType> = [\n\t\tDataType.STRING\n\t];\n\n\taddSearchPhrase(fields: Array<TypeField>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: TypeField) => {\n\t\t\t\treturn this.enabledDataTypes.some((dt: DataType) => dt === field.getDataType());\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tthis.searchFields\n\t\t\t\t.filter((field: TypeField) => field.search(entities[i], this.searchPhrase))\n\t\t\t\t.forEach(() => {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t});\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { PagingManagerFactory } from '../paging/paging.manager-factory';\nimport { SourceManagerFactory } from '../source/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { SummariesManagerFactory } from './summaries/summaries.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../structure.id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FormationAggregateFactory } from '../formation/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory extends AggregateFactory<StructureId, StructureAggregate> {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingManagerFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly summariesManagerFactory: SummariesManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory) {\n\t\tsuper();\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\tsummariesManager = this.summariesManagerFactory.create(structureId),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\tconst structureAggregate = new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\tsummariesManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer\n\t\t);\n\n\t\tthis.init(structureAggregate);\n\n\t\treturn structureAggregate;\n\t}\n\n\tinit(structureAggregate: StructureAggregate): void {\n\t\tstructureAggregate.init();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetPagingCommandHandler implements CommandHandler<StructureAggregate, SetPagingCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetPagingCommand> {\n\t\treturn SetPagingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetPagingCommand): void {\n\t\tthis.domainEventPublisher.publish(new PagingSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: SetPagingCommand): void {\n\n\t\tconst pagingConfig = command.getPagingConfig();\n\n\t\tstructureAggregate.changePaging(pagingConfig);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class NextPageCommandHandler implements CommandHandler<StructureAggregate, NextPageCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<NextPageCommand> {\n\t\treturn NextPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: NextPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new NextPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: NextPageCommand): void {\n\n\t\t// missing implementation\n\t\taggregate.nextPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class PrevPageCommandHandler implements CommandHandler<StructureAggregate, PrevPageCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<PrevPageCommand> {\n\t\treturn PrevPageCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: PrevPageCommand): void {\n\t\tthis.domainEventPublisher.publish(new PrevPageEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: PrevPageCommand): void {\n\n\t\tstructure.prevPage();\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler implements CommandHandler<StructureAggregate, ChangePagesizeCommand> {\n\n\tconstructor(protected domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ChangePagesizeCommand> {\n\t\treturn ChangePagesizeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent<StructureId>) => {\n\t\t\t(event as any).aggregateId = aggregate.getId();\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\thandleAggregate(structureAggregate: StructureAggregate, command: ChangePagesizeCommand): void {\n\n\t\tconst pageSize = command.getPageSize();\n\n\t\tstructureAggregate.changePageSize(pageSize);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent<StructureId>>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent<StructureId>, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from './read/paging.repository';\nimport { PagingManagerFactory } from '../../domain/paging/paging.manager-factory';\nimport { PagingConverter } from './read/paging.converter';\nimport { StructurePagingCommandDispatcher } from './structure-paging.command-dispatcher';\nimport { StructurePagingWarehouse } from './structure-paging.warehouse';\nimport { StructurePagingEventRepository } from './structure-paging.event-repository';\n\n\nconst commandProviders = [\n\tPagingDispatcher\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetPagingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(NextPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(PrevPageCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ChangePagesizeCommandHandler, 'StructureAggregate')\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingManagerFactory,\n\tPagingConverter,\n\n\tStructurePagingCommandDispatcher,\n\tStructurePagingWarehouse,\n\tStructurePagingEventRepository\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SetFormationCommandHandler implements CommandHandler<StructureAggregate, SetFormationCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetFormationCommand> {\n\t\treturn SetFormationCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\t\tthis.domainEventPublisher.publish(new FormationSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SetFormationCommand): void {\n\n\t\t// missing implementation\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler implements CommandHandler<StructureAggregate, ToggleSelectedRowCommand> {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<ToggleSelectedRowCommand> {\n\t\treturn ToggleSelectedRowCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\t\tthis.domainEventPublisher.publish(new SelectedRowToggledEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: ToggleSelectedRowCommand): void {\n\n\t\tconst formation = aggregate.getFormation(),\n\t\t\tselectedRow = command.getSelectedRow();\n\n\t\tformation.toggleRow(selectedRow);\n\t}\n\n}\n","import { HermesModule } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from './read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/formation.aggregate-factory';\nimport { FormationConverter } from './read/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { StructureFormationDispatcher } from './structure-formation.dispatcher';\nimport { StructureFormationWarehouse } from './structure-formation.warehouse';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetFormationCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSelectedRowCommandHandler, 'StructureAggregate')\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tStructureFormationDispatcher,\n\tStructureFormationWarehouse\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler implements CommandHandler<StructureAggregate, SetOriginCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetOriginCommand> {\n\t\treturn SetOriginCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetOriginCommand): void {\n\n\t\tconst items = command.getItems();\n\n\t\tstructure.setOrigin(items);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler implements CommandHandler<StructureAggregate, StructureEditSourceItemCommand> {\n\n\tconstructor(private structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureEditSourceItemCommand> {\n\t\treturn StructureEditSourceItemCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst aggregateEvents = aggregate.getEvents();\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: StructureEditSourceItemCommand): void {\n\n\t\tconst params = command.getParams();\n\n\t\tstructure.editItem(params);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../../domain/source/origin/set-origin/origin-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\nimport { StructureAggregate } from '../../structure/structure.aggregate';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler implements CommandHandler<StructureAggregate, SourceSetLoadingCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SourceSetLoadingCommand> {\n\t\treturn SourceSetLoadingCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\t\tthis.domainEventPublisher.publish(new SetSourceLoadingEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: SourceSetLoadingCommand): void {\n\n\t\tconst enabled = command.isEnabled(),\n\t\t\tsource = aggregate.getSource();\n\n\t\tsource.setLoading(enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../../domain/source/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from './origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from './source.converter';\nimport { SourceCommandDispatcher } from './source.command-dispatcher';\nimport { StructureSourceWarehouse } from './structure-source.warehouse';\nimport { SourceEventService } from './event/source-event.service';\nimport { StructureSourceOriginRepository } from './origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from './prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from './prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SourceSetLoadingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetOriginCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureEditSourceItemCommandHandler, 'StructureAggregate')\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandDispatcher,\n\tStructureSourceWarehouse,\n\tSourceEventService\n];\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../source/structure.source.domain-event.publisher';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler implements CommandHandler<StructureAggregate, StructureSetSearchPhraseCommand> {\n\n\tconstructor(private readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetSearchPhraseCommand> {\n\t\treturn StructureSetSearchPhraseCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(command.getAggregateId(), phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregate.getEvents());\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetSearchPhraseCommand): void {\n\n\t\tconst phrase = command.getPhrase();\n\n\t\taggregate.addSearchPhrase(phrase);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../composition/domain/composition.id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { StructureAggregate } from '../../structure.aggregate';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler implements CommandHandler<StructureAggregate, SetSortOrderCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSortOrderCommand> {\n\t\treturn SetSortOrderCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetSortOrderCommand): void {\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetSortOrderCommand): void {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tprivate publishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightCommand> {\n\t\treturn SetRowHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightCommand): void {\n\n\t\tconst rowHeight = command.getRowHeight();\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../domain/structure/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureSetHeightCommand } from './structure-set-height.command';\nimport { StructureHeightSetEvent } from './structure-height-set.event';\nimport { StructureAggregate } from '../../../structure.aggregate';\n\n\n@Injectable()\nexport class StructureSetHeightCommandHandler implements CommandHandler<StructureAggregate, StructureSetHeightCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<StructureSetHeightCommand> {\n\t\treturn StructureSetHeightCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureHeightSetEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(aggregate: StructureAggregate, command: StructureSetHeightCommand): void {\n\n\t\tconst height = command.getHeight();\n\n\t\taggregate.setHeight(height);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowHeightBasedOnThemeCommand } from './set-row-height-based-on-theme.command';\nimport { StructureAggregate } from '../../structure.aggregate';\nimport { RowHeightSetBasedOnThemeEvent } from './row-height-set-based-on-theme.event';\n\n\n@Injectable()\nexport class SetRowHeightBasedOnThemeCommandHandler implements CommandHandler<StructureAggregate, SetRowHeightBasedOnThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowHeightBasedOnThemeCommand> {\n\t\treturn SetRowHeightBasedOnThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\t\tthis.domainEventPublisher.publish(new RowHeightSetBasedOnThemeEvent(command.getAggregateId()));\n\t}\n\n\thandleAggregate(structure: StructureAggregate, command: SetRowHeightBasedOnThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tstructure.setTheme(theme);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../common/cdk/reactive';\n\nimport { StructureId } from '../../../domain/structure.id';\nimport { SummariesManager } from '../../../domain/structure/summaries/summaries.manager';\n\n\n@Injectable()\nexport class StructureSummariesRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tinit(structureId: StructureId): void {\n\t\tthis.setEnabled(SummariesManager.DEFAULT_ENABLED, structureId);\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.next(enabled, structureId);\n\t}\n\n\tonSummariesEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   this.takeUntil(),\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tprivate next(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureId } from '../../domain/structure.id';\nimport { structureGlobalId } from '../structure.global-id';\nimport { StructureSummariesRepository } from './enabled/structure.summaries.repository';\n\n\n@Injectable()\nexport class StructureSummariesWarehouse {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t}\n\n\tonSummariesEnabled(structureId: StructureId = structureGlobalId): Observable<boolean> {\n\t\treturn this.structureSummariesRepository.onSummariesEnabled(structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from '../../../feature-api/summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class StructureCreatedEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureCreatedEvent): void {\n\n\t\tconst structureId = event.getAggregateId();\n\n\t\tif (event instanceof StructureCreatedEvent) {\n\n\t\t\tthis.structureSummariesRepository.init(structureId);\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSummariesRepository } from './structure.summaries.repository';\nimport { StructureSummariesEnabledSetEvent } from '../../../domain/structure/summaries/set/structure.summaries-enabled-set.event';\nimport { StructureId } from '../../../domain/structure.id';\n\n\n@Injectable()\nexport class StructureSummariesEnabledSetEventHandler extends DomainEventHandler<StructureId> {\n\n\tconstructor(private structureSummariesRepository: StructureSummariesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSummariesEnabledSetEvent): void {\n\n\t\tif (event instanceof StructureSummariesEnabledSetEvent) {\n\t\t\tthis.structureSummariesRepository.setEnabled(event.isEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../infrastructure/in-memory/in-memory.structure.providers';\nimport { SetVerticalScrollEnabledCommandHandler } from '../domain/structure/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../domain/structure/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../domain/structure/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../domain/structure/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../domain/structure/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../domain/structure/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../domain/structure/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../domain/structure/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../domain/structure/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetSummariesEnabledCommandHandler } from '../domain/structure/summaries/set/structure.set-summaries-enabled.command-handler';\nimport { VerticalFormationFactory } from '../domain/structure/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../domain/structure/field/field-collection.factory';\nimport { FilterManagerFactory } from '../domain/structure/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../domain/structure/field/field-id.generator';\nimport { StructureFilterCommandDispatcher } from './filter/structure-filter.command-dispatcher';\nimport { FieldFactory } from '../domain/structure/field/data-type/field.factory';\nimport { summariesProviders } from '../domain/structure/summaries/summaries.providers';\nimport { StructureConfigFilterSetEventHandler } from './filter/read/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from './search/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from './filter/read/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from './vertical-formation/vertical-formation.converter';\nimport { StructureFilterWarehouse } from './filter/structure-filter.warehouse';\nimport { StructureFilterRepository } from './filter/read/structure.filter.repository';\nimport { StructureQuickFilterRepository } from './filter/read/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from './search/enabled/structure.searching.repository';\nimport { StructureSearchWarehouse } from './search/structure-search.warehouse';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureSummariesCommandDispatcher } from './summaries/structure-summaries.command-dispatcher';\nimport { StructureSummariesUiEventsRepository } from './summaries/structure-summaries.ui-events-repository';\nimport { StructureCommandDispatcher } from './structure.command-dispatcher';\nimport { StructureReadModelRootConverter } from './read/structure.read-model-root-converter';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureWarehouse } from './structure.warehouse';\nimport { pagingProviders } from './paging/paging.providers';\nimport { formationProviders } from './formation/formation.providers';\nimport { sourceProviders } from './source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../domain/structure/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../domain/structure/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../domain/structure/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from './vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../domain/structure/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from './search/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from './search/phrase/structure.search-phrase-set.event-handler';\nimport { StructureSearchDispatcher } from '../domain/structure/search/structure.search.dispatcher';\nimport { StructureSearchEventService } from './search/structure-search-event.service';\nimport { StructureSearchHighlightArchive } from './search/highlight/structure.search-highlight.archive';\nimport { StructureSearchPlaceholderArchive } from './search/placeholder/structure.search-placeholder.archive';\nimport { StructureSetHeightCommandHandler } from '../domain/structure/vertical-formation/container/set-height/structure-set-height.command-handler';\nimport { SetRowHeightBasedOnThemeCommandHandler } from '../domain/structure/vertical-formation/set-row-height-theme/set-row-height-based-on-theme.command-handler';\nimport { StructureVerticalFormationWarehouse } from './vertical-formation/structure-vertical-formation.warehouse';\nimport { StructureSummariesWarehouse } from './summaries/structure-summaries.warehouse';\nimport { StructureSummariesRepository } from './summaries/enabled/structure.summaries.repository';\nimport { StructureCreatedEventHandler } from '../domain/structure/create-structure/structure-created.event-handler';\nimport { StructureSummariesEnabledSetEventHandler } from './summaries/enabled/structure.summaries-enabled-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandDispatcher,\n\tFieldFactory,\n\tStructureSearchDispatcher,\n\n\t...summariesProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureCreatedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSummariesEnabledSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterWarehouse,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchWarehouse,\n\tStructureSummariesRepository,\n\tStructureSummariesWarehouse,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository,\n\tStructureSearchHighlightArchive,\n\tStructureSearchPlaceholderArchive\n];\n\nexport const structureCommandHandlers = [\n\t...HermesModule.registerCommandHandler(SetVerticalScrollEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightBasedOnThemeCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetScrollPositionCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(InitFieldsCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(ToggleSortCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigSearchingCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetConfigQuickFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureToggleFilterCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSummariesEnabledCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetSearchPhraseCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetSortOrderCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(SetRowHeightCommandHandler, 'StructureAggregate'),\n\t...HermesModule.registerCommandHandler(StructureSetHeightCommandHandler, 'StructureAggregate')\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureSearchEventService,\n\n\tStructureSummariesCommandDispatcher,\n\tStructureSummariesUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureReadModelRootConverter,\n\n\tStructureVerticalFormationWarehouse,\n\tStructureWarehouse,\n\tStructureCommandDispatcher,\n\n\t...pagingProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(originItem: OriginItemEntity | any): ItemEntity {\n\n\t\tif (originItem instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.getId().toString(), originItem.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(originItem, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n<!--\t\t<gui-structure-filter-menu-trigger></gui-structure-filter-menu-trigger>-->\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandDispatcher } from '../../../../feature-api/structure.command-dispatcher';\nimport { StructureWarehouse } from '../../../../feature-api/structure.warehouse';\nimport { StructureSearchPlaceholderArchive } from '../../../../feature-api/search/placeholder/structure.search-placeholder.archive';\nimport { StructureSearchPhraseRepository } from '../../../../feature-api/search/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../../domain/structure.id';\nimport { StructureVerticalFormationWarehouse } from '../../../../feature-api/vertical-formation/structure-vertical-formation.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<svg class=\"gui-search-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"10.231\" height=\"10.601\" viewBox=\"0 0 10.231 10.601\">\n\t\t\t\t<line x2=\"1.77\" y2=\"1.77\" transform=\"translate(7.4 7.77)\" fill=\"none\" stroke-linecap=\"round\"\n\t\t\t\t\t  stroke-linejoin=\"round\" stroke-width=\"1.5\"/>\n\t\t\t\t<circle cx=\"4.02\" cy=\"4.02\" r=\"4.02\" transform=\"translate(0.5 0.5)\" stroke-width=\"1\"\n\t\t\t\t\t\tstroke-linecap=\"round\" stroke-linejoin=\"round\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"placeholder\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\tprivate static readonly FORM_SEARCH_NAME = 'searchPhrase';\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tplaceholder = 'Search';\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureWarehouse: StructureWarehouse,\n\t\t\t\tprivate verticalFormationWarehouse: StructureVerticalFormationWarehouse,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository,\n\t\t\t\tprivate structureSearchPlaceholderArchive: StructureSearchPlaceholderArchive) {\n\t\tsuper();\n\n\t\tlet controlsConfig = {};\n\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = '';\n\n\t\tthis.searchForm = this.formBuilder.group(controlsConfig);\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\n\t\tthis.structureSearchPlaceholderArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((placeholder: string) => {\n\t\t\t\tthis.placeholder = placeholder;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\n\t\t\t\tif (phrase === undefined) {\n\t\t\t\t\tphrase = null;\n\t\t\t\t}\n\n\t\t\t\tlet controlsConfig = {};\n\t\t\t\tcontrolsConfig[StructureSearchComponent.FORM_SEARCH_NAME] = phrase;\n\n\t\t\t\tif (phrase !== this.searchForm.get([StructureSearchComponent.FORM_SEARCH_NAME]).value) {\n\t\t\t\t\tthis.searchForm.setValue(controlsConfig);\n\t\t\t\t}\n\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.verticalFormationWarehouse\n\t\t\t.onRowHeight(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-filter-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.23\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"8.14\" y1=\"3.62\" x2=\"2.18\" y2=\"3.62\"/>\n\t\t\t<line class=\"cls-1\" x1=\"6.71\" y1=\"6.48\" x2=\"3.62\" y2=\"6.48\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureFilterIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-filter-menu',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-column-selector\n\t\t\t\t(columnSelected)=\"onColumnSelect($event)\">\n\t\t</gui-structure-column-selector>\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-filter-menu]': 'true'\n\t}\n})\nexport class StructureFilterMenuComponent {\n\n\tselectedColumnId: string;\n\n\tonColumnSelect(value: string): void {\n\t\tthis.selectedColumnId = value;\n\t}\n}\n","import { Component, Inject, Injector } from '@angular/core';\nimport { FabricDrawerService } from '@generic-ui/fabric';\nimport { structureComponentToken } from '../structure-component-token';\nimport { StructureComponent } from '../structure.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\n\n@Component({\n\tselector: 'gui-structure-filter-menu-trigger',\n\ttemplate: `\n\t\t<div [gui-tooltip]=\"'Filters'\"\n\t\t\t (click)=\"openDrawer()\"\n\t\t\t class=\"gui-structure-filter-icon-wrapper\">\n\t\t\t<gui-structure-filter-icon></gui-structure-filter-icon>\n\t\t</div>\n\t`\n})\nexport class StructureFilterMenuTriggerComponent {\n\n\tconstructor(private readonly injector: Injector,\n\t\t\t\tprivate readonly drawerService: FabricDrawerService,\n\t\t\t\t@Inject(structureComponentToken) private readonly structureComponent: StructureComponent) {\n\t}\n\n\topenDrawer(): void {\n\t\tconst structureElement = this.structureComponent.getElementRef();\n\n\t\tthis.drawerService.open(structureElement, StructureFilterMenuComponent, { injector: this.injector });\n\t}\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Output, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\n\n@Component({\n\tselector: 'gui-structure-column-selector',\n\ttemplate: `\n\n\t\t<gui-select\n\t\t\t\t[options]=\"options\"\n\t\t\t\t(optionChanged)=\"onSelectChange($event)\">\n\t\t</gui-select>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnSelectorComponent extends SmartComponent {\n\n\t@Output()\n\tcolumnSelected = new EventEmitter<string>();\n\n\tcolumns: Array<CellTemplateWithContext> = [];\n\n\toptions: Array<string> = [];\n\n\tconstructor(private readonly compositionWarehouse: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionWarehouse\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.options = columns.map((column: CellTemplateWithContext) => column.getColumnDefinitionId().toString());\n\t\t\t});\n\t}\n\n\tonSelectChange(columnId: string): void {\n\t\tthis.columnSelected.emit(columnId);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureFilterIconComponent } from './icon/structure.filter-icon.component';\nimport { StructureFilterMenuTriggerComponent } from './structure.filter-menu-trigger.component';\nimport { StructureFilterMenuComponent } from './structure.filter-menu.component';\nimport { StructureColumnSelectorComponent } from './column-selector/structure.column-selector.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureFilterIconComponent,\n\t\tStructureFilterMenuComponent,\n\t\tStructureFilterMenuTriggerComponent,\n\t\tStructureColumnSelectorComponent\n\t],\n\texports: [\n\t\tStructureFilterMenuTriggerComponent\n\t],\n\tentryComponents: [\n\t\tStructureFilterMenuComponent\n\t]\n})\nexport class StructureFilterMenuModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\nimport { StructureFilterMenuModule } from '../../filter/structure.filter-menu.module';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tStructureFilterMenuModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInput,\n\tOnInit,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../feature-api/structure.command-dispatcher';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\n\t\t\t<gui-structure-column-menu-icon [ngClass]=\"'gui-header-menu-icon'\"></gui-structure-column-menu-icon>\n\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortOrder } from '../../../../../../composition/domain/column/sort/sort-order';\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureCommandDispatcher } from '../../../../../feature-api/structure.command-dispatcher';\nimport { CompositionWarehouse } from '../../../../../../composition/feature-api/composition.warehouse';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"0\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending\n\t\t\t\t\t<gui-structure-column-menu-arrow-icon [sort]=\"true\" [rotateDeg]=\"180\">\n\t\t\t\t\t</gui-structure-column-menu-arrow-icon>\n\t\t\t\t</div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortOrder;\n\n\tsortStatus: SortOrder;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandDispatcher,\n\t\t\t\tprivate compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortOrder) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortOrder.NONE;\n\t}\n\n\tsetSortOrder(sort: SortOrder): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnDefinitionId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { CompositionCommandDispatcher } from '../../../../../../composition/feature-api/composition.command-dispatcher';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-item left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\t<gui-structure-column-menu-arrow-icon [rotateDeg]=\"-90\"></gui-structure-column-menu-arrow-icon>\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-item right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t\t<gui-structure-column-menu-arrow-icon></gui-structure-column-menu-arrow-icon>\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandDispatcher,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnDefinitionId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.32 7.46\">\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"3.73\" x2=\"0.75\" y2=\"3.73\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"0.75\" x2=\"0.75\" y2=\"0.75\"/>\n\t\t\t<line class=\"cls-1\" x1=\"9.57\" y1=\"6.71\" x2=\"0.75\" y2=\"6.71\"/>\n\t\t</svg>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-column-menu-icon]': 'true',\n\t\t'[class.gui-icon]': 'true'\n\t}\n})\nexport class StructureColumnMenuIconComponent {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nexport const selector = 'gui-structure-column-menu-arrow-icon';\n\n@Component({\n\tselector: selector,\n\ttemplate: `\n\t\t<div [style.transform]=\"'rotate(' + rotateDeg + 'deg)'\"\n\t\t\t [class.gui-structure-column-menu-sort-icon]=\"sort\">\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10.04 11.72\">\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"2.15\" x2=\"5.02\" y2=\"10.97\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"9.29\" y2=\"5.02\"/>\n\t\t\t\t<line class=\"cls-1\" x1=\"5.02\" y1=\"0.75\" x2=\"0.75\" y2=\"5.02\"/>\n\t\t\t</svg>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"${selector}\"`\n\t}\n})\nexport class StructureColumnMenuArrowIconComponent {\n\t@Input()\n\trotateDeg: number = 90;\n\n\t@Input()\n\tsort: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\nimport { StructureColumnManagerModule } from '../../column-manager/structure.column-manager.module';\nimport { StructureColumnMenuIconComponent } from './icon/structure.column-menu-icon.component';\nimport { StructureColumnMenuArrowIconComponent } from './icon/structure.column-menu-arrow-icon.component';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent,\n\tStructureColumnMenuIconComponent,\n\tStructureColumnMenuArrowIconComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports,\n\t\tStructureColumnManagerModule\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/feature-api/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure.id';\nimport { StructureSummariesUiEventsRepository } from '../../../feature-api/summaries/structure-summaries.ui-events-repository';\nimport { CompositionWarehouse } from '../../../../composition/feature-api/composition.warehouse';\nimport { StructureSummariesChangedEvent } from '../../../domain/structure/summaries/structure.summaries-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureSourceWarehouse } from '../../../feature-api/source/structure-source.warehouse';\n\n\n@Component({\n\tselector: 'gui-structure-summaries-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && summaries && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-structure-summaries-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"summaries && !!summaries.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).count)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Number of items in the grid'\">Count</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).distinct)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Distinct Values'\">Dist</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).sum)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" -->\n\t\t\t\t\t\t\t<!--\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>-->\n\t\t\t\t\t\t\tSum\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).average)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-mean\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>_</span><span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Average'\">Avg</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).min)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\tMin\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isSummariesTypePresent(summaries.get(column.getFieldId().getId()).max)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\tMax\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).median)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\n\t\t\t\t\t\t<!--\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t class=\"gui-median\">-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>~</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t\t<span>X</span>-->\n\t\t\t\t\t\t<!--\t\t\t\t\t\t</div>-->\n\n\t\t\t\t\t\t<span [gui-tooltip]=\"'Median'\">Med</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).truthy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Truthy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isSummariesTypePresent(summaries.get(column.getFieldId().getId()).falsy)\"\n\t\t\t\t\t\t class=\"gui-structure-summaries-value\">\n\t\t\t\t\t\t<span>Falsy</span>\n\t\t\t\t\t\t<span class=\"gui-summaries-value\">{{ summaries.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-summaries-panel]': 'true'\n\t}\n})\nexport class StructureSummariesPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\tsummaries: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureSummariesUiEventsRepository: StructureSummariesUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: StructureSourceWarehouse,\n\t\t\t\tprivate readonly compositionReadModelService: CompositionWarehouse) {\n\t\tsuper();\n\n\t\tthis.structureSummariesUiEventsRepository\n\t\t\t.onSummariesChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureSummariesChangedEvent) => {\n\n\t\t\t\tthis.summaries = event.getSummaries();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionReadModelService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisSummariesTypePresent(summaries: number): boolean {\n\t\treturn summaries !== undefined && summaries !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureSummariesArchive } from './structure.summaries.archive';\nimport { StructureSummariesConfigService } from './structure.summaries-config.service';\nimport { StructureSummariesPanelConfigConverter } from './structure.summaries-panel.config-converter';\nimport { StructureSummariesPanelComponent } from './structure.summaries-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureSummariesPanelComponent\n\t],\n\texports: [\n\t\tStructureSummariesPanelComponent\n\t],\n\tproviders: [\n\t\tStructureSummariesArchive,\n\t\tStructureSummariesConfigService,\n\t\tStructureSummariesPanelConfigConverter\n\t]\n})\nexport class StructureSummariesPanelModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateRepository, Command, CreateAggregateCommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { CreateStructureCommand } from './create-structure.command';\nimport { StructureCreatedEvent } from './structure-created.event';\nimport { StructureAggregate } from '../structure.aggregate';\nimport { StructureId } from '../../structure.id';\n\n\n@Injectable()\nexport class CreateStructureCommandHandler implements CreateAggregateCommandHandler<StructureAggregate, CreateStructureCommand> {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tgetAggregateRepository(): AggregateRepository<StructureId, StructureAggregate> {\n\t\treturn this.structureAggregateRepository;\n\t}\n\n\tforCommand(): Command | any {\n\t\treturn CreateStructureCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: StructureAggregate, command: CreateStructureCommand): void {\n\t\tthis.domainEventPublisher.publish(new StructureCreatedEvent(command.getAggregateId()));\n\t}\n\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\nimport { StructureCellEditState } from '../../../edit/structure.cell-edit.state';\n\n@Component({\n\tselector: 'gui-structure-cell-edit[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\t// this.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\t// this.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateFactory } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory extends AggregateFactory<SchemaId, SchemaAggregate> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcreate(aggregateId: SchemaId): SchemaAggregate {\n\t\treturn new SchemaAggregate(aggregateId);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CreateAggregateCommandHandler } from '@generic-ui/hermes';\n\nimport { CreateSchemaCommand } from './create-schema.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class CreateSchemaCommandHandler implements CreateAggregateCommandHandler<SchemaAggregate, CreateSchemaCommand> {\n\n\tforCommand(): Type<CreateSchemaCommand> {\n\t\treturn CreateSchemaCommand;\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaThemeCommand> {\n\n\tconstructor(private readonly domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaThemeCommand> {\n\t\treturn SetSchemaThemeCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaThemeCommand): void {\n\n\t\tconst theme = command.getTheme();\n\n\t\tschemaAggregate.changeTheme(theme);\n\t}\n\n}\n","import { AggregateRepository, Optional } from '@generic-ui/hermes';\n\nimport { SchemaId } from './schema.id';\nimport { SchemaAggregate } from './schema.aggregate';\n\n\nexport abstract class SchemaAggregateRepository extends AggregateRepository<SchemaId, SchemaAggregate> {\n\n\tabstract getById(schemaId: SchemaId): Optional<SchemaAggregate>;\n\n\tabstract save(aggregate: SchemaAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\n\n\n@Injectable()\nexport class InMemorySchemaStore extends InMemoryStore<SchemaId, SchemaAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { InMemorySchemaStore } from './in-memory.schema.store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateStore extends InMemoryAggregateStore<SchemaId, SchemaAggregate> {\n\n\tconstructor(inMemorySchemaStore: InMemorySchemaStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemorySchemaStore, aggregateStoreRegister);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Optional } from '@generic-ui/hermes';\n\nimport { SchemaAggregateRepository } from '../../domain/schema.aggregate-repository';\nimport { SchemaAggregate } from '../../domain/schema.aggregate';\nimport { SchemaId } from '../../domain/schema.id';\nimport { InMemorySchemaAggregateStore } from './in-memory.schema.aggregate-store';\n\n\n@Injectable()\nexport class InMemorySchemaAggregateRepository extends SchemaAggregateRepository {\n\n\tconstructor(private inMemorySchemaAggregateStore: InMemorySchemaAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(schemaId: SchemaId): Optional<SchemaAggregate> {\n\t\treturn this.inMemorySchemaAggregateStore.getById(schemaId);\n\t}\n\n\tsave(schemaAggregate: SchemaAggregate): void {\n\t\tthis.inMemorySchemaAggregateStore.save(schemaAggregate);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { SchemaAggregate } from '../schema.aggregate';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler implements CommandHandler<SchemaAggregate, SetRowColoringCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetRowColoringCommand> {\n\t\treturn SetRowColoringCommand;\n\t}\n\n\tpublishDomainEvents(aggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(aggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetRowColoringCommand): void {\n\n\t\tconst coloring = command.getColoring();\n\n\t\tschemaAggregate.setRowColoring(coloring);\n\t}\n\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaHorizontalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaHorizontalGridCommand> {\n\t\treturn SetSchemaHorizontalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaHorizontalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setHorizontalGrid(enabled);\n\t}\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { Command, CommandHandler, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaAggregate } from '../../schema.aggregate';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler implements CommandHandler<SchemaAggregate, SetSchemaVerticalGridCommand> {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tforCommand(): Type<SetSchemaVerticalGridCommand> {\n\t\treturn SetSchemaVerticalGridCommand;\n\t}\n\n\tpublishDomainEvents(schemaAggregate: SchemaAggregate, command: Command): void {\n\t\tthis.domainEventPublisher.publishFromAggregate(schemaAggregate);\n\t}\n\n\thandleAggregate(schemaAggregate: SchemaAggregate, command: SetSchemaVerticalGridCommand): void {\n\n\t\tconst enabled = command.isEnabled();\n\n\t\tschemaAggregate.setVerticalGrid(enabled);\n\t}\n\n}\n","import { SchemaTheme } from '../../domain/theme/schema-theme';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaCssClassesRepository } from './schema.css-classes.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\nimport { RowColoringSetEvent } from '../../domain/coloring/row-coloring-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../domain/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../domain/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaCssClass } from './schema-css-class';\nimport { SchemaRowColoring } from '../../domain/coloring/schema-row-coloring';\nimport { SchemaTheme } from '../../domain/theme/schema-theme';\n\n\n@Injectable()\nexport class SchemaCssClassesEventHandler extends DomainEventHandler<SchemaId> {\n\n\trowColoring: SchemaRowColoring;\n\n\thorizontalGrid: boolean;\n\n\tverticalGrid: boolean;\n\n\tschemaTheme: SchemaTheme;\n\n\tconstructor(private schemaCssClassesRepository: SchemaCssClassesRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent | RowColoringSetEvent | SchemaHorizontalGridSetEvent | SchemaVerticalGridSetEvent): void {\n\n\t\tif (event instanceof RowColoringSetEvent) {\n\t\t\tthis.rowColoring = event.getRowColoring();\n\t\t}\n\n\t\tif (event instanceof SchemaHorizontalGridSetEvent) {\n\t\t\tthis.horizontalGrid = event.getHorizontalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaVerticalGridSetEvent) {\n\t\t\tthis.verticalGrid = event.getVerticalGrid();\n\t\t}\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.schemaTheme = event.getTheme();\n\t\t}\n\n\t\tthis.publish(event.getAggregateId());\n\n\t}\n\n\tprivate publish(aggregateId: SchemaId): void {\n\t\tif (this.rowColoring !== undefined && this.horizontalGrid !== undefined && this.verticalGrid !== undefined && this.schemaTheme !== undefined) {\n\t\t\tthis.schemaCssClassesRepository.setTheme(new SchemaCssClass(this.verticalGrid, this.horizontalGrid, this.schemaTheme, this.rowColoring), aggregateId);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SchemaThemeRepository } from './schema.theme.repository';\nimport { SchemaId } from '../../domain/schema.id';\nimport { SchemaThemeSetEvent } from '../../domain/theme/schema-theme-set.event';\n\n\n@Injectable()\nexport class SchemaThemeSetEventHandler extends DomainEventHandler<SchemaId> {\n\n\tconstructor(private themeRepository: SchemaThemeRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: SchemaThemeSetEvent): void {\n\n\t\tif (event instanceof SchemaThemeSetEvent) {\n\t\t\tthis.themeRepository.setTheme(event.getTheme(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DOMAIN_EVENT_HANDLERS, HermesModule } from '@generic-ui/hermes';\n\nimport { SchemaAggregateFactory } from '../domain/schema.aggregate-factory';\n\nimport { CreateSchemaCommandHandler } from '../domain/create/create-schema.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../domain/theme/set-schema-theme.command-handler';\nimport { SchemaDispatcher } from '../domain/schema.dispatcher';\nimport { SchemaAggregateRepository } from '../domain/schema.aggregate-repository';\n\nimport { InMemorySchemaAggregateRepository } from '../infrastructure/in-memory/in-memory.schema.aggregate-repository';\nimport { InMemorySchemaAggregateStore } from '../infrastructure/in-memory/in-memory.schema.aggregate-store';\nimport { InMemorySchemaStore } from '../infrastructure/in-memory/in-memory.schema.store';\n\nimport { SchemaCommandDispatcher } from './schema.command-dispatcher';\nimport { SchemaWarehouse } from './schema.warehouse';\nimport { SetRowColoringCommandHandler } from '../domain/coloring/set-row-coloring.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../domain/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaVerticalGridCommandHandler } from '../domain/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SchemaCssClassesEventHandler } from './css-classes/schema-css-classes.event-handler';\nimport { SchemaThemeSetEventHandler } from './theme/schema-theme-set.event-handler';\nimport { SchemaCssClassesRepository } from './css-classes/schema.css-classes.repository';\nimport { SchemaThemeRepository } from './theme/schema.theme.repository';\nimport { SchemaEventRepository } from './schema.event-repository';\n\nexport const schemaKey = 'SchemaAggregate';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\n\t\tHermesModule.defineAggregate(\n\t\t\tschemaKey,\n\t\t\tSchemaAggregateFactory,\n\t\t\tInMemorySchemaAggregateRepository,\n\t\t\tCreateSchemaCommandHandler,\n\t\t\t[\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaThemeCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetRowColoringCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaHorizontalGridCommandHandler, schemaKey),\n\t\t\t\t...HermesModule.registerCommandHandler(SetSchemaVerticalGridCommandHandler, schemaKey)\n\t\t\t]\n\t\t)\n\n\t],\n\tdeclarations: [],\n\tproviders: [\n\t\tSchemaDispatcher,\n\t\t{\n\t\t\tprovide: SchemaAggregateRepository,\n\t\t\tuseClass: InMemorySchemaAggregateRepository\n\t\t},\n\t\tInMemorySchemaAggregateStore,\n\t\tInMemorySchemaStore,\n\n\t\tSchemaCommandDispatcher,\n\t\tSchemaWarehouse,\n\t\tSchemaEventRepository,\n\n\t\t{\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaCssClassesEventHandler,\n\t\t\tmulti: true\n\t\t}, {\n\t\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\t\tuseClass: SchemaThemeSetEventHandler,\n\t\t\tmulti: true\n\t\t},\n\n\t\tSchemaCssClassesRepository,\n\t\tSchemaThemeRepository\n\t]\n})\nexport class SchemaModule {\n}\n","import { Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../../composition/feature-api/read/definition/cell-template-with-accessor';\nimport { ChangedValueEmitter } from '../../../../../composition/feature-api/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../../composition/feature-api/read/edit/state/edit.event-type';\nimport { ItemEntity } from '../../../../domain/source/item.entity';\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\nimport { StructureEditSourceItemParams } from '../../../../domain/source/origin/edit/structure.edit-source-item.params';\nimport { SourceCommandDispatcher } from '../../../../feature-api/source/source.command-dispatcher';\n\n@Component({\n\tselector: 'gui-structure-cell-edit-boolean[entity][cell]',\n\ttemplate: `\n\n\t\t<span #cellContainer >\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`\n})\nexport class StructureCellEditBooleanComponent extends SmartComponent implements OnChanges {\n\n\t@ViewChild('cellContainer', { static: true })\n\tcellContainerRef: ElementRef;\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private readonly sourceCommandService: SourceCommandDispatcher) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.entity !== null && changes.entity !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\n\t\tif (changes.cell !== null && changes.cell !== undefined) {\n\t\t\tthis.initEditContext();\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.initEditContext();\n\t}\n\n\tprivate submitChanges(): void {\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\t}\n\n\tprivate initEditContext(): void {\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: false,\n\t\t\tparent: this.cellContainerRef\n\t\t};\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChanges();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureTitlePanelConfigArchive } from './structure.title-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { TitlePanelConfig } from './title-panel.config';\n\n@Component({\n\tselector: 'gui-structure-title-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-title-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTitlePanelComponent extends Reactive {\n\ttitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureTitlePanelConfigArchive: StructureTitlePanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureTitlePanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: TitlePanelConfig) => {\n\t\t\t\tthis.title = title.template;\n\n\t\t\t\tif (typeof this.title === 'function') {\n\t\t\t\t\tthis.title = this.title('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.title);\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { StructureFooterPanelConfigArchive } from './structure.footer-panel.config-archive';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Reactive } from '../../../../common/cdk/reactive';\nimport { FooterPanelConfig } from './footer-panel.config';\n\n@Component({\n\tselector: 'gui-structure-footer-panel',\n\ttemplate: `\n\t\t<div [innerHTML]=\"safeHTML\" class=\"gui-footer-panel\"></div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureFooterPanelComponent extends Reactive {\n\tfooterTitle: string | ((title: any) => string);\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private structureFooterPanelConfigArchive: StructureFooterPanelConfigArchive,\n\t\t\t\tprivate readonly sanitizer: DomSanitizer) {\n\t\tsuper();\n\t\tthis.structureFooterPanelConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((title: FooterPanelConfig) => {\n\t\t\t\tthis.footerTitle = title.template;\n\n\t\t\t\tif (typeof this.footerTitle === 'function') {\n\t\t\t\t\tthis.footerTitle = this.footerTitle('Title panel');\n\t\t\t\t}\n\n\t\t\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.footerTitle);\n\t\t\t});\n\t}\n\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from '../feature/structure-fabric.imports';\nimport { StructurePagingModule } from '../feature/paging/structure-paging.module';\nimport { StructureInfoPanelModule } from '../feature/panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/feature-api/composition.module';\nimport { StructureComponent } from '../feature/structure.component';\nimport { StructureHeaderComponent } from '../feature/header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from '../feature/header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from '../feature/header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from '../feature/header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from '../feature/content/structure-content.component';\nimport { StructureRowComponent } from '../feature/content/row/structure-row.component';\nimport { StructureCellComponent } from '../feature/content/cell/structure.cell.component';\nimport { StructureContainerComponent } from '../feature/content/structure-container.component';\nimport { StructureQuickFiltersComponent } from '../feature/header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from '../feature/blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from '../feature/header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from './structure-tokens';\nimport { StructureDefinition } from '../feature/structure-definition';\nimport { StructureSourceWarehouse } from './source/structure-source.warehouse';\nimport { StructureIdGenerator } from '../feature/structure-id.generator';\nimport { structureCommandHandlers, structureProviders } from './structure.providers';\nimport { StructureModuleConfig } from '../feature/structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from '../feature/panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from '../feature/content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from '../feature/header/menu/structure.column-menu.module';\nimport { StructureSummariesPanelModule } from '../feature/panel/summaries/structure.summaries-panel.module';\nimport { StructureColumnManagerModule } from '../feature/column-manager/structure.column-manager.module';\nimport { StructureAggregateFactory } from '../domain/structure/structure.aggregate-factory';\nimport { StructureAggregate } from '../domain/structure/structure.aggregate';\nimport { InMemoryStructureAggregateRepository } from '../infrastructure/in-memory/domain/in-memory.structure-aggregate.repository';\nimport { CreateStructureCommandHandler } from '../domain/structure/create-structure/create-structure-command-handler.service';\nimport { formationCommandHandlers } from './formation/formation.providers';\nimport { pagingCommandHandlers } from './paging/paging.providers';\nimport { sourceCommandHandlers } from './source/source.providers';\nimport { StructureCellEditComponent } from '../feature/content/cell/edit/structure.cell-edit.component';\nimport { StructureThemeConverter } from '../feature/schema/structure.theme.converter';\nimport { SchemaModule } from '../../schema/feature-api/schema.module';\nimport { StructureCellEditBooleanComponent } from '../feature/content/cell/boolean/structure.cell-edit-boolean.component';\nimport { StructureRowDetailViewComponent } from '../feature/row-detail/view/structure.row-detail-view.component';\nimport { StructureTitlePanelComponent } from '../feature/title-panel/structure.title-panel.component';\nimport { StructureFooterPanelComponent } from '../feature/footer-panel/structure.footer-panel.component';\n\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\nexport const structureKey = 'StructureAggregate';\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\tHermesModule.defineAggregate(\n\t\tstructureKey,\n\t\tStructureAggregateFactory,\n\t\tInMemoryStructureAggregateRepository,\n\t\tCreateStructureCommandHandler,\n\t\t[\n\t\t\t...formationCommandHandlers,\n\t\t\t...pagingCommandHandlers,\n\t\t\t...sourceCommandHandlers,\n\t\t\t...structureCommandHandlers\n\t\t]\n\t),\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureSummariesPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\tStructureColumnManagerModule,\n\n\tCompositionModule,\n\tSchemaModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureCellEditComponent,\n\tStructureCellEditBooleanComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent,\n\tStructureRowDetailViewComponent,\n\tStructureTitlePanelComponent,\n\tStructureFooterPanelComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent,\n\tStructureRowDetailViewComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\tStructureThemeConverter,\n\n\tStructureSourceWarehouse,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = {\n\t\tcssClassName: '',\n\t\thermesModuleConfig: { loggers: false }\n\t}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../feature/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/feature-api/structure.module';\n\nimport { GridIdGenerator } from '../feature/grid/register/grid-id.generator';\nimport { GridRegister } from '../feature/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}