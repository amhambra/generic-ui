{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.api.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/data-type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-type.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.type.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-aggregation.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/cell-view.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column-view.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/grid.column.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-theme.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/theme/grid.theme.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/row-coloring.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/coloring/grid.row-coloring.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/column/menu/grid.column-menu.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/paging-display-mode.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/paging/grid.paging.converter.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-gateway.ts","ng://@generic-ui/ngx-grid/common/cdk/generic-builder.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging-definition.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid-structure-definition.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-parent-component.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid-id.generator.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/register/grid.register.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/console/grid.console.api.ts","ng://@generic-ui/ngx-grid/gui/grid/ui/grid/grid.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-fabric.imports.ts","ng://@generic-ui/ngx-grid/common/cdk/reactive.ts","ng://@generic-ui/ngx-grid/common/cdk/smart-component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/global-structure-id.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.source-origin.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-read-model.service.ts","ng://@generic-ui/ngx-grid/common/cdk/archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/mode/structure-paging.display-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/read/paging.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/navigator/structure-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/select/structure-paging-select.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/stats/structure-paging-stats.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/navigator/structure-alternative-paging-navigator.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/alternative-paging/pages/structure-alternative-paging-pages.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/paging/structure-paging.module.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/number-formatter/number-formatter.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure-info-modal.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/structure-inited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/selected-rows/selected-rows-list.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-css-class.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-column-header.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/paging.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/source.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.read-model.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/structure.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/structure.converter.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory-structure.read-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/row-height-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/vertical-formation/vertical-formation.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel.module.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/changed-value.emitter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/state/edit.event-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-communication.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/input-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/number-edit-template.component.ts","ng://@generic-ui/ngx-grid/common/cdk/decorators.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/string-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-templates.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/template/boolean-edit-template.component.ts","ng://@generic-ui/ngx-grid/lib/composition/ui/column-query.component.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/function-view.component.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.store.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/command/in-memory.composition.aggregate-repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/template/template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/view/view-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/edit/edit-template.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/sort-status.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/view.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-context.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-context.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/cell-template-with-accessor.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/definition/column-definition.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.read-store.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/read/composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/composition-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition.columns-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.event.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/read/in-memory.composition.repository.ts","ng://@generic-ui/ngx-grid/lib/composition/infrastructure/in-memory/in-memory.composition.providers.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-entity.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-container-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/composition-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/composition-container-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/composition-resize-width-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.column-set-enabled.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-type.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/composition-width.calculator.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/column-width/column-width-collection.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.container.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/active/active-column.entity-converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.column-moved-left.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.column-moved-right.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/columns-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/init/init-composition.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition.events.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/composition-event.converter.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/set-columns.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-width/set-composition-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/resize-width/set-composition-resize-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/width/set-container-width/set-composition-container-width.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/colum-field.factory.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.event-service.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/global-composition-id.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/sort-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/field/column-field.id.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/change-sort.params.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/sort-order-set.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/sort/composition-change-sort-status.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/fields-inited.event.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/column.params.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-columns/composition-fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/set-enabled/composition.set-column-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/left/composition.move-left-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/domain/command/column/move/right/composition.move-right-column.command-handler.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/safe.pipe.ts","ng://@generic-ui/ngx-grid/common/cdk/sanitize/sanitize.module.ts","ng://@generic-ui/ngx-grid/lib/composition/ui-api/composition.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-id.generator.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/pagesize/pagesize-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/paging.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/paging/local-paging-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/read/schema-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/schema-row-coloring.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/schema/local-schema-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/read/formation-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/formation/local-formation-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.dispatcher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/structure/local-structure-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.params.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/source/local-source-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-command.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/composition/local-composition-read-model.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/local/local-providers.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/schema/schema-css-class.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.store.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.edit-mode.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/info/structure.info-panel-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.config-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.command-service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure-component-token.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/edit/structure.cell-edit.state.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/gateway/structure.gateway.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/page/page-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/pagesize-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/editem-item.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/event/source-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/selected-row-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation-event.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/config/structure.column-menu-config.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure.row-select-enabled.archive.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config.service.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/columns/structure-header-columns.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.quick-filter.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/filter/structure.filter.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure-header-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/structure-header.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/filters/structure.header-filter.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-content.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/row/structure-row.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/cell/structure.cell.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/structure-container.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/quick-filters/structure.quick-filters.component.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.searching.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/search/structure-search.read-model.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure-tokens.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/blueprint/structure.blueprint.component.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure.aggregate-store.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/commad/in-memory.structure-aggregate.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/set-source-loading.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/schema-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/schema-theme-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/schema-vertical-grid-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/schema-top-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/schema-bottom-header-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/row-coloring-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/paging-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/formation-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/origin-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.filter-toggled.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/read/in-memory.structure.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/infrastructure/in-memory/structure/in-memory.structure.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/origin-item-entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.source-item-edited.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/structure.origin-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/source.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-range.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/vertical-formation.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculators.token.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.manager.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/structure.filter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.settings.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/filter.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-id.generator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/unknown-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/number-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/string-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/boolean-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/fields/date-field.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/data-type/field.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/field-collection.factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/structure.sorter.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.id.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/sorter.collection.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/column-header.entity.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema-aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.aggregate-event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/schema.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/formation.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/search.manager-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/structure.aggregate-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/init/init-structure.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/field/init/init-fields.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/toggle/toggle-sort.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/sorting-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/set-config/set-sorting.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.config-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/config/structure.set-config-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.config-searching-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/config/structure.set-config-searching.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.config-quick-filter-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/filter/toggle/structure.toggle-filter.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/structure.aggregations-changed.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/prepared/structure.prepared-entities-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/structure.source.domain-event.publisher.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.aggregation-enabled-set.event.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/boolean/boolean-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/date/date-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/number/number-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/string/string-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregated.values.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/calculation/unknown/unknown-aggregation.calculator.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/aggregation/aggregation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/enabled/structure.config-searching-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/filter/structure.config-quick-filter-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-model.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.field.ui-converter.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/field/structure.fields-inited.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/aggregation/structure.aggregation.ui-events-repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/set/set-paging.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/next-page/next-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/prev-page/prev-page.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/paging/command/change-pagesize/change-pagesize.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/paging/paging.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/theme/set-schema-theme.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/column-header/top/change-schema-top-header.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/coloring/set/set-row-coloring.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/schema/command/set/set-schema.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/schema/schema.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/set/set-formation.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/formation/command/toggle/toggle-selected-row.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/formation/formation.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/set-origin/set-origin.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/origin/edit/structure.edit-source-item.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/origin/structure.origin-changed.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/source.repository.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/command/loading/source-set-loading.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/read/prepared/structure.prepared-items.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/source/source.providers.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/sort/order/set-sort-order.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler.ts","ng://@generic-ui/ngx-grid/lib/structure/ui-api/structure/structure.providers.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/console.logger.ts","ng://@generic-ui/ngx-grid/common/cdk/logger/logger.module.ts","ng://@generic-ui/ngx-grid/lib/structure/domain/source/item.entity-factory.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/search/structure.search.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/top/structure.top-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/content/empty-source/structure-empty-source.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-config-trigger.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/column-manager/structure.menu-column-manager.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/sort/structure.column-config-sort.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/hide/structure.column-config-column-hide.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/main/move/structure.column-config-column-move.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/header/menu/structure.column-menu.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.component.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/panel/aggregation/structure.aggregation-panel.module.ts","ng://@generic-ui/ngx-grid/lib/structure/ui/structure.module.ts","ng://@generic-ui/ngx-grid/gui/grid/ui-api/grid.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","UNKNOWN","NUMBER","STRING","BOOLEAN","DATE","CUSTOM","TEXT","CHIP","LINK","IMAGE","BOLD","ITALIC","CHECKBOX","FABRIC","MATERIAL","LIGHT","DARK","NONE","EVEN","ODD","BASIC","ADVANCED","GridColumnTypeConverter","convertType","type","convertTypeString","convertTypeEnum","enumType","GuiDataType","DataType","toLocaleLowerCase","COUNT","DISTINCT","SUM","AVERAGE","MIN","MAX","MEDIAN","TRUTHY","FALSY","EARLIEST","LATEST","GridColumnAggregationConverter","convert","aggregationConfig","columnAggregationConfig","undefined","enabled","aggregationTypes","convertAggregationTypes","configAggregationTypes","_this","forEach","aggregationType","convertAggregationType","AggregationType","FUNCTION","GridColumnViewConverter","view","convertString","convertEnum","CellView","GuiCellView","GridColumnConverter","columnTypeConverter","columnAggregationConverter","columnViewConverter","config","map","convertColumn","guiColumn","columnConfig","header","field","width","aggregation","GridThemeConverter","theme","SchemaTheme","GuiTheme","GridRowColoringConverter","rowColoring","RowColoring","GuiRowColoring","GridColumnMenuConverter","Injectable","GridPagingConverter","guiPaging","pagingConfig","page","pageSize","pageSizes","pagerTop","pagerBottom","display","displayMode","convertDisplay","pagingDisplay","PagingDisplayMode","GuiPagingDisplay","GridGateway","source","columns","pageChanged","EventEmitter","pageSizeChanged","itemsSelected","columnsChanged","containerWidthChanged","sourceEdited","cellEditEntered","cellEditCanceled","cellEditSubmitted","gridColumnConverter","gridThemeConverter","gridRowColoringConverter","gridColumnMenuConverter","gridPagingConverter","ngOnChanges","changes","currentValue","columnsConfig","themeConfig","rowColoringConfig","columnMenu","columnMenuConfig","paging","onPageChange","emit","onPageSizeChange","onItemSelect","item","onColumnsChange","onContainerWidthChange","containerWidth","onSourceEdit","onCellEditEnter","onCellEditSubmit","onCellEditCancel","Input","Output","GenericBuilder","build","buildObject","StructurePagingDefinitionBuilder","_super","tslib_1.__extends","StructurePagingDefinition","withEnabled","StructurePagingDefinitionDefaultBuilder","defaultEnabled","isEnabled","Builder","DefaultBuilder","StructureDefinitionBuilder","headerEnabled","bottomPaging","topPaging","border","StructureDefinition","withHeader","withBottomPaging","withTopPaging","withBorder","StructureDefinitionDefaultBuilder","defaultHeaderEnabled","defaultBottomPaging","defaultTopPaging","isHeaderEnabled","isBorderEnabled","getBottomPaging","getTopPaging","gridStructureDefinition","gridProviders","provide","useValue","structureParentComponent","InjectionToken","GridIdGenerator","generateId","index","PREFIX","GridRegister","gridMap","Map","register","gridId","component","structureId","set","unregister","delete","getValues","get","GridConsoleApiProvider","gridComponent","changeColumnHeaderTop","columnHeaderTop","detectChanges","GridComponent","platformId","elementRef","changeDetectorRef","gridRegister","gridIdGenerator","ngOnInit","localGridId","exposeGridId","structureRef","getStructureId","isPlatformBrowser","window","gridConsoleConfig","ngOnDestroy","getElementRef","getGridId","nativeElement","setAttribute","Component","args","selector","template","providers","useExisting","host","[class]","[style.height]","encapsulation","ViewEncapsulation","None","Inject","PLATFORM_ID","ElementRef","ChangeDetectorRef","ViewChild","static","fabricImports","FabricBadgeModule","FabricButtonModule","FabricButtonGroupModule","FabricCheckboxModule","FabricChipModule","FabricDropdownModule","FabricRadioButtonModule","FabricRadioGroupModule","FabricProgressBarModule","FabricProgressSpinnerModule","FabricSelectModule","FabricSpinnerModule","FabricTabModule","FabricToggleButtonModule","FabricInputModule","FabricDialogModule","FabricInlineDialogModule","Reactive","unsubscribe$","Subject","unsubscribe","complete","takeUntil","SmartComponent","PagingRepository","structureRepository","on","onStructure","pipe","filter","structure","getId","toString","getPaging","StructureRepository","StructureId","id","AggregateId","globalStructureId","PagingReadModelService","pagingRepository","onPaging","onSinglePaging","take","SetPagingCommand","payload","Command","ChangePagesizeCommand","NextPageCommand","PrevPageCommand","PagingDispatcher","commandDispatcher","setPaging","dispatch","changePageSize","nextPage","prevPage","CommandDispatcher","PagingCommandService","pagingDispatcher","enable","disable","goToPage","pageNumber","currentPage","changePagerTop","changePagerBottom","StructureSourceOriginRepository","origin","origin$","ReplaySubject","setOrigin","onOrigin","asObservable","distinctUntilChanged","StructurePreparedItemsRepository","setItems","onPreparedItems","SourceReadModelService","structurePreparedItemsRepository","structureSourceOriginRepository","onEntities","getEntities","ents1","ents2","flag","ent","equals","onEntitiesSize","entities","onSingleEntities","onOriginSize","onLoading","getSource","isLoading","onPreparedEntities","Archive","archive$","BehaviorSubject","onValue","StructurePagingDisplayModeArchive","StructurePagingComponent","pagingQueryService","pagingCommandService","sourceQueryService","structurePagingDisplayModeArchive","alternativeDisplay","subscribe","mode","size","sourceSize","changeDetection","ChangeDetectionStrategy","OnPush","Paging","isNextDisabled","isPrevDisabled","start","end","getPage","getPageSize","getPageSizes","isPagerTop","isPagerBottom","isNextPageDisabled","isPrevPageDisabled","getStart","getEnd","getSourceSize","calculateVisiblePages","numberOfVisiblePages","sample","slice","StructurePagingNavigatorComponent","nextPageChanged","prevPageChanged","prevDisabled","nextDisabled","calculatePrev","calculateNext","StructurePagingSelectComponent","StructurePagingStatsComponent","calculate","firstItemIndex","lastItemIndex","isSourceNotEmpty","StructureAlternativePagingNavigatorComponent","firstPage","lastPage","numberOfPages","Math","ceil","StructureAlternativePagingPagesComponent","pages","activePage","StructurePagingModule","NgModule","imports","CommonModule","FabricModule","declarations","exports","NumberFormatterPipe","transform","number","replace","Pipe","name","NumberFormatterModule","StructureInfoModalComponent","StructureInitedEvent","aggregateId","DomainEvent","VerticalScrollEnabledSetEvent","InMemoryStructureStore","InMemoryStore","SelectedRowsList","rowIds","isRowSelected","entity","find","equalsById","getIds","Formation","selectedRows","selectedRowsList","getSelectedRows","FormationConverter","aggregate","rows","SchemaCssClass","verticalGrid","horizontalGrid","getRowColoring","Schema","height","containerHeight","verticalGridEnabled","horizontalGridEnabled","columnHeader","getTheme","getHeight","getContainerHeight","getWidth","isVerticalGridEnabled","isHorizontalGridEnabled","getColumnHeader","getCssClasses","SchemaColumnHeader","top","bottom","isTopHeaderEnabled","isBottomHeaderEnabled","SchemaConverter","convertColumnHeader","isHeaderOnTop","isHeaderOnBottom","PagingConverter","calculateStart","calculateEnd","Source","loading","SourceConverter","VerticalFormationReadModel","topMargin","viewportHeight","rowHeight","getTopMargin","getViewPortHeight","getRowHeight","VerticalFormationConverter","verticalFormation","calcFullHeight","Structure","uid","formation","schema","getFormation","getSchema","getVerticalFormation","getSelectedEntities","selectedIds","some","isLoaderVisible","isReadyToDisplay","isVerticalScrollEnabled","ReadModel","ItemEntity","data","position","version","RandomStringGenerator","generate","getData","getUiId","getVersion","getPosition","isEven","isOdd","Entity","StructureConverter","formationConverter","schemaConverter","pagingConverter","sourceConverter","verticalFormationConverter","formationAggregate","schemaAggregate","pagingAggregate","sourceQuery","sourceCoordinator","convertSource","originItem","rawData","InMemoryStructureReadStore","inMemoryProjectStore","structureConverter","toReadModel","InMemoryReadModelStore","RowHeightSetEvent","VerticalFormationRepository","domainEventBus","inMemoryStructureQueryStore","verticalFormation$","ofEvent","event","getById","onVerticalScrollEnabled","onVerticalFormation","v","onRowHeight","idToVerticalFormation","has","DomainEventBus","StructureReadModelService","verticalFormationRepository","StructureInfoPanelComponent","renderer","dialog","structureReadModelService","infoPanel","totalItemsSize","preparedItems","preparedItemsSize","setStyle","openInfo","open","Renderer2","FabricDialogService","StructureInfoPanelModule","entryComponents","ViewTemplatesComponent","getTemplate","textTemplate","chipTemplate","linkTemplate","imageTemplate","checkboxTemplate","boldTemplate","italicTemplate","customTemplate","functionTemplate","read","TemplateRef","ChangedValueEmitter","subject$","SUBMIT","BLUR","CANCEL","EditCommunicationComponent","ENTER_KEY_CODE","ESC_KEY_CODE","submit","emitStatus","EditEventType","cancel","status","InputEditTemplateComponent","formBuilder","filterFieldName","filterForm","group","_a","setValue","observeChanges","ngAfterViewInit","inputElement","inputRef","focusField","emitValueChange","fromEvent","keyup$","keyCode","focus","controls","valueChanges","NumberEditTemplateComponent","fb","FormBuilder","Override","container","getPrototypeOf","Error","StringEditTemplateComponent","setSelectionRange","tslib_1.__decorate","EditTemplatesComponent","dataType","stringTemplate","numberTemplate","booleanTemplate","emptyTemplate","BooleanEditTemplateComponent","checkboxRef","querySelector","debounceTime","toggle","changed","ColumnQueryComponent","ContentChild","FunctionViewComponent","sanitizer","safeHTML","bypassSecurityTrustHtml","element","DomSanitizer","InMemoryCompositionStore","InMemoryCompositionAggregateStore","inMemoryCompositionStore","aggregateStoreRegister","AggregateStoreRegister","InMemoryAggregateStore","InMemoryCompositionAggregateRepository","inMemoryCompositionAggregateStore","save","CompositionAggregateRepository","TemplateFactory","templatesComponentDefinition","componentFactoryResolver","templates","templatesComponent","createTemplatesComponent","getTemplates","destroy","componentFactory","resolveComponentFactory","injector","Injector","generateMap","generateMapKeys","findAndSetTemplate","dt","instance","ViewTemplateFactory","keys","ComponentFactoryResolver","ViewTemplateRepository","columnTemplateFactory","findTemplate","EditTemplateFactory","EditTemplateRepository","editTemplateFactory","ASC","DESC","ViewEntity","columnView","templateFunction","getCellView","getTemplateFunction","ColumnEntity","columnId","columnField","sortStatus","SortStatus","getColumnConfig","getColumnId","setEnabled","getField","getHeader","getDataType","setSortStatus","setView","getView","CellTemplateWithContext","viewTemplate","editTemplate","context","fieldId","getFieldId","getSortStatus","isAscSort","isDescSort","isNoSort","CellContext","FieldId","CellTemplateWithAccessor","editable","accessor","columnFieldId","getValue","searchPhrase","txt","lowerCasedText","loweredSearchPhrase","positions","found","indexOf","arr_1","split","pos","ph","join","ColumnDefinition","sort","setHeader","setField","getHeaderCellTemplateWithContext","headerCellContext","headerTemplate","getContentCellTemplateWithAccessor","cellTemplate","getAccessor","getColumn","ColumnDefinitionFactory","viewTemplateRepository","editTemplateRepository","column","createFromColumnEntity","createFromActiveColumnEntity","columnDef","findViewTemplate","findEditTemplate","activeColumn","createColumns","Composition","ready","allColumns","activeColumns","resizeWidth","getActiveColumns","getAllColumns","getActiveHeaderColumns","getHeaderColumns","getTemplateColumns","getContainerWidth","isReady","isResizeWidthEnabled","composition","equalsByColumns","CompositionConverter","columnDefinitionFactory","getColumns","allColumnDefs","convertToColumnDef","activeColumnDefs","convertActiveColumnsToColumnDef","isResizeEnabled","columnDefs","InMemoryCompositionReadStore","compositionConverter","CompositionInitedEvent","CompositionResizeWidthSetEvent","CompositionColumnsSetEvent","CompositionContainerWidthSetEvent","CompositionWidthSetEvent","CompositionChangeSortStatusEvent","getCompositionId","CompositionColumnSetEnabledEvent","CompositionColumnMovedLeftEvent","CompositionColumnMovedRightEvent","InMemoryCompositionRepository","inMemoryCompositionQueryStore","compositionIdToComposition","composition$","CompositionRepository","inMemoryCompositionCommandProviders","useClass","inMemoryCompositionQueryProviders","inMemoryCompositionProviders","ColumnId","ColumnEntityFactory","isArray","createColumn","params","columnEntity","convertWidth","columnEntities","CompositionContainerWidthCalculator","MIN_COLUMN_WIDTH","calculateMinWidth","columnWidths","segregateColumns","staticColumns","fluidColumns","sum","columnWidth","isTypeNumber","isTypeAuto","isTypePercentage","CompositionWidthSetAggregateEvent","AggregateEvent","CompositionContainerWidthSetAggregateEvent","compositionId","CompositionResizeWidthSetAggregateEvent","CompositionColumnSetEnabledAggregateEvent","PERCENTAGE","AUTO","ColumnWidth","baseWidth","setWidthAndType","getColumnType","ColumnWidthType","setWidth","isPercentage","percentageToNumber","isStringNumber","clone","widthAsNumber","Number","isNaN","CompositionWidthCalculator","adjustMinimalWidth","newColumns","evenWidth_1","adjustPercentageWidth","_b","tslib_1.__values","_c","adjustAutoWidth","leftWidth","autoColumns","splitWidth","autoColumns_1","autoColumns_1_1","ColumnWidthCollection","baseColumnWidths","setContainerWidth","getColumnWidths","getColumnsWidth","getWidths","getMinWidth","setColumns","columnConfigs","getMinColumnWidth","calculator","CompositionChangeSortStatusAggregateEvent","ActiveColumnContainer","gridWidth","columnWidthCollection","addColumn","splice","removeColumn","updatedWidths","changeSort","sortParams","param","direction","this_1","sortParams_1","sortParams_1_1","moveLeft","findColumnIndex","move","moveRight","fromIndex","toIndex","validateMoveIndex","findIndex","ActiveColumnEntity","getConfig","ActiveColumnEntityConverter","convertMany","CompositionColumnMovedLeftAggregateEvent","CompositionColumnMovedRightAggregateEvent","ColumnsSetAggregateEvent","CompositionAggregate","columnsParams","resizeWidthEnabled","columnFactory","activeColumnEntityConverter","baseParams","baseColumns","getEnabledColumns","activeColumnContainer","containerInDOMWidth","addEvent","setContainerWidthWithEvent","recalculateColumns","setWidthWithEvent","setResizeWidthWithEvent","setResizeWidth","enableColumn","enabledIndex","prevState","columnToAdd","nextLeft","columnIndex","nextLeftIndex","leftColumn","nextRight","nextRightIndex","rightColumn","minWidth","RootAggregate","Boolean","Aggregate","CompositionAggregateFactory","InitCompositionCommand","SetColumnsCommand","getParams","SetCompositionWidthCommand","SetCompositionContainerWidthCommand","SetCompositionResizeWidthCommand","CompositionChangeSortStatusCommand","getSortParams","CompositionSetColumnEnabledCommand","CompositionMoveLeftColumnCommand","CompositionMoveRightColumnCommand","CompositionDispatcher","init","setColumnEnabled","InitCompositionCommandHandler","compositionAggregateRepository","compositionAggregateFactory","domainEventPublisher","handle","command","compositionAggregate","DomainEventPublisher","CommandHandler","CompositionAggregateEvents","CompositionEventConverter","arg","convertEvents","convertEvent","aggregateEvents","aggregateEvent","getType","getAggregateId","SetColumnsCommandHandler","compositionEventConverter","setColumnsParams","publishEvents","events","getEvents","domainEvents","publish","SetCompositionWidthCommandHandler","columnConverter","SetCompositionResizeWidthCommandHandler","SetCompositionContainerWidthCommandHandler","publishAggregateEvents","CompositionChangeSortStatusCommandHandler","ColumnField","ColumnFieldFactory","CompositionEventService","onColumnsChanged","onWidthChanged","onContainerWidthChanged","getPayload","CompositionId","globalCompositionId","CompositionReadModelService","compositionRepository","onWidth","onContainerWidth","onWidthForEachColumn","onHeaderColumns","onAllColumns","onSortOrder","onTemplateColumns","onResizeWidth","CompositionCommandService","compositionDispatcher","disableColumn","SortToggledEvent","directions","getDirections","ColumnFieldId","ChangeSortParams","SortOrderSetEvent","CompositionChangeSortStatusEventHandler","dir","DomainEventHandler","FieldsInitedEvent","fields","getFields","ColumnParams","CompositionFieldsInitedEventHandler","columnFieldFactory","columnFieldIds","convertColumnFieldIds","convertColumns","getAccessorMethod","CompositionSetColumnEnabledCommandHandler","CompositionMoveLeftColumnCommandHandler","CompositionMoveRightColumnCommandHandler","commandProviders","COMMAND_HANDLERS","multi","readProviders","DOMAIN_EVENT_HANDLERS","compositionProviders","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SanitizeModule","components","exportDeclarations","CompositionModule","ReactiveFormsModule","FabricChipComponent","FabricCheckboxComponent","FabricButtonComponent","FabricInputComponent","StructureIdGenerator","increment","PageChangedAggregateEvent","PagesizeChangedAggregateEvent","PagingAggregate","logger","default","fromConfig","defaultPagingDefinition","isDisabled","change","warn","setSourceSize","ps","setPage","setPageSize","firstItem","lastItem","PagingAggregateFactory","createDefault","createFromConfig","Logger","LocalPagingCommandService","aggregateFactory","setDefaultPaging","defaultPaggingAggregate","LocalPagingReadModelService","Observable","SetSchemaCommand","SetSchemaVerticalGridCommand","SetSchemaHorizontalGridCommand","SetSchemaThemeCommand","SetRowColoringCommand","coloring","ChangeSchemaTopHeaderCommand","ChangeSchemaBottomHeaderCommand","SchemaDispatcher","setSchema","changeVerticalGrid","changeHorizontalGrid","setTheme","setRowColoring","changeTopHeader","changeBottomHeader","SchemaRepository","SchemaReadModelService","schemaRepository","onSchema","onSingleSchema","onHeight","onContainerHeight","onCssClasses","onColumnHeader","SchemaCommandService","schemaDispatcher","schemaQueryService","setHeight","toggleVerticalGrid","css","grid","toggleHorizontalGrid","toggleTopHeader","toggleBottomHeader","LocalSchemaCommandService","setDefaultSchema","MAX_SAFE_INTEGER","LocalSchemaReadModelService","SetFormationCommand","ToggleSelectedRowCommand","selectedRow","FormationDispatcher","setDefault","toggleSelectedRow","FormationCommandService","formationDispatcher","setDefaultFormation","LocalFormationCommandService","FormationRepository","onFormation","FormationReadModelService","formationRepository","onSelectedRows","LocalFormationReadModelService","StructureSetConfigFilterCommand","filterConfig","StructureToggleFilterCommand","externalFilterId","filterValue","StructureFilterCommandService","setFilteringEnabled","addFilter","externalFieldId","SourceSetLoadingCommand","SetOriginCommand","items","StructureEditSourceItemCommand","SourceDispatcher","setLoading","editItem","InitStructureCommand","SetVerticalScrollEnabledCommand","SetScrollPositionCommand","SetSortingCommand","sortingConfig","getSortingConfig","ToggleSortCommand","StructureSetConfigQuickFilterCommand","quickFiltersConfig","StructureSetConfigSearchingCommand","searchConfig","InitFieldsCommand","StructureSetSearchPhraseCommand","phrase","SetSortOrderCommand","sortOrder","getSortOrder","SetRowHeightCommand","StructureCommandService","structureFilterCommandService","sourceDispatcher","enableVerticalScroll","disableVerticalScroll","setScrollPosition","setSortingConfig","toggleSort","setSortOrder","setFilterConfig","setQuickFiltersConfig","initFields","setSearchingConfig","search","setRowHeight","LocalStructureCommandService","LocalStructureReadModelService","StructureFieldUiArchive","AggregateArchive","StructureFieldUiRepository","structureFieldUiArchive","onFields","when","StructureEditSourceItemParams","itemId","getItemId","getColumnFieldId","SourceCommandService","structureFieldUiRepository","editItemByIndex","itemIndex","fieldIndex","itemId$","fieldId$","zip","array","LocalSourceCommandService","LocalSourceReadModelService","LocalCompositionCommandService","LocalCompositionReadModelService","localProviders","SchemaCssClassManager","rendererFactory2","VERTICAL_GRID_CLASS_NAME","HORIZONTAL_GRID_CLASS_NAME","THEME_FABRIC_CLASS_NAME","THEME_MATERIAL_CLASS_NAME","THEME_LIGHT_CLASS_NAME","THEME_DARK_CLASS_NAME","ROW_COLORING_ODD","ROW_COLORING_EVEN","cssClass","createRenderer","cssHostRef","classes","diff","updateState","renderCssClasses","diff_1","toggleCssClass","removeThemeCssClasses","addClass","resolveThemeClassName","removeRowColoringClasses","resolveRowColoringClassName","cssClassName","removeClass","className","SchemaRowColoring","RendererFactory2","StructureCellEditArchive","StructureCellEditStore","StructureEditModeArchive","StructureInfoPanelEnabledArchive","StructureAggregationPanelConfig","itTopEnabled","itBottomEnabled","StructureAggregationArchive","StructureAggregationPanelConfigConverter","StructureSetAggregationEnabledCommand","StructureAggregationCommandService","setAggregationEnabled","StructureAggregationConfigService","structureAggregationPanelConfigConverter","structureAggregationArchive","structureAggregationCommandService","aggregationPanelConfig","structureComponentToken","ENTER","StructureGateway","structureCommandService","pagingEventService","sourceCommandService","sourceEventService","schemaCommandService","compositionCommandService","compositionEventService","formationEventService","structureEditModeArchive","structureCellEditArchive","structureInfoPanelEnabledArchive","structureAggregationConfigService","structureCellEditStore","structureColumnMenuConfigArchive","structureRowSelectEnabledArchive","simpleChanges","nextConfig","rowSelecting","editMode","cellEditing","autoResizeWidth","columnHeaderBottom","maxHeight","virtualScroll","sorting","filtering","quickFilters","searching","onItemSelected","skip","onSourceEdited","values","state","StructureCellEditState","NextPageEvent","PrevPageEvent","PageChangedEvent","PagesizeChangedEvent","PagingEventService","switchMap","EditemItemValues","after","before","StructureSourceItemEditedEvent","beforeItem","afterItem","getBeforeItem","getAfterItem","SourceEventService","SelectedRowToggledEvent","FormationEventService","structureQueryService","str","StructureColumnMenuConfig","columnsManager","isMainEnabled","isSortingEnabled","isFilteringEnabled","isColumnManagerEnabled","getMenus","menus","getMainMenu","getFilterMenu","getColumnMenu","getActiveMenu","MAIN","FILTER","COLUMNS","StructureColumnMenuConfigArchive","menuConfig","StructureRowSelectEnabledArchive","DEFAULT_ROW_SELECT","structureIdFactory","generator","compositionIdFactory","structureComponentSelfProviders","useFactory","deps","StructureComponent","structureDefinition","compositionQueryService","schemaReadModelService","schemaStylesManager","loaderEnabled","circleLoaderEnabled","initialLoaderAnimation","structureHeight","offsetWidth","timer","[class.gui-structure-border]","[id]","StructureColumnConfigComponent","compositionReadModelService","StructureColumnConfigService","inlineDialogService","parent","InlineDialogPlacement","Top","close","FabricInlineDialogService","StructureHeaderColumnsComponent","isSortAsc","isSortDesc","StructureFilterRepository","enabled$","selectFilterEnabled","StructureQuickFilterRepository","selectQuickFilterEnabled","StructureFilterReadModelRepository","structureFilterRepository","structureQuickFilterRepository","onFilteringEnabled","onQuickFiltersEnabled","StructureHeaderFiltersComponent","cd","closed","filterMode","f","clearFilters","reset","turnOnFilterMode","turnOffFilterMode","StructureHeaderComponent","eventBus","structureFilterReadModelRepository","headerColumns","filterRowEnabled","containerRef","headerHeight","filtersRef","StructureHeaderFilterComponent","sub","editContext","StructureSearchPhraseRepository","phrase$","setPhrase","onPhrase","StructureContentComponent","formationCommandService","formationQueryService","structureSearchPhraseRepository","rowsList","clearSelectedRows","strippedId","selectedRowEl","trackByFn","translateY","selectedElements","querySelectorAll","el","StructureRowComponent","StructureCellComponent","inEditMode","cellEditingEnabled","enterEditMode","exitEditMode","forceCheck","valueChanges$","status$","cell","observeFieldStatus","observeValueChanges","publishEditEnter","markForCheck","submitChangesAndExit","updatedValue","actualValue","publishEditSubmit","publishEditCancel","publishEditState","StructureContainerComponent","ngZone","resizeDetector","structureParent","autoResizeWidthEnabled","scrollObservation$","combineLatest","combine","sourceSizeHeight","observe","recalculateContainer","enableScrollObservation","disableScrollObservation","runOutsideAngular","scrollTop","NgZone","ResizeDetector","Optional","StructureQuickFiltersComponent","StructureSearchingRepository","onSearchingEnabled","StructureSearchReadModelRepository","structureSearchingRepository","onSearchEnabled","STRUCTURE_CSS_CLASS_NAME","prefix","StructureBlueprintComponent","structureSearchReadModelRepository","searchEnabled","topAggregationPanelEnabled","bottomAggregationPanelEnabled","quickFiltersEnabled","infoPanelEnabled","headerCssClass","contentCssClass","pagingReadModel","getHeaderTopClasses","getHeaderBottomClasses","isColumnHeaderTopEnabled","isColumnHeaderBottomEnabled","isPagingTopEnabled","isPagingBottomEnabled","isSourceEmpty","InMemoryStructureAggregateStore","inMemoryStructureStore","InMemoryStructureAggregateRepository","inMemoryStructureAggregateStore","StructureAggregateRepository","SetSourceLoadingEvent","SchemaSetEvent","SchemaThemeSetEvent","SchemaHorizontalGridSetEvent","SchemaVerticalGridSetEvent","SchemaTopHeaderChangedEvent","SchemaBottomHeaderChangedEvent","RowColoringSetEvent","PagingSetEvent","FormationSetEvent","ScrollPositionSetEvent","OriginSetEvent","getOrigin","StructureFilterToggledEvent","StructureSearchPhraseSetDomainEvent","getPhrase","InMemoryStructureRepository","structureIdToStructure","structure$","inMemoryStructureCommandProviders","inMemoryStructureReadProviders","inMemoryStructureProviders","OriginItemEntity","bumpVersion","setPosition","StructureSourceItemEditedAggregateEvent","StructureOriginChangedAggregateEvent","SourceManager","fetched","preparedEntities","slicedEntities","isFetched","setEntities","recalculatePositions","setPreparedEntities","getPreparedEntities","setSlicedEntities","getSlicedEntities","convertItems","createOriginChangedEvent","setConvertedOrigin","getOriginSize","editOriginItem","findOriginItem","itemBeforeChange","removeOriginItem","findOriginItemIndex","SourceManagerFactory","VerticalRange","VerticalFormation","scrollPosition","hiddenItemsTop","hiddenItemsBottom","isInteger","calculateRange","getRange","range","itemsInViewport","floor","hiddenElements","abs","setTopHiddenItemsCount","count","setBottomHiddenItemsCount","setViewportHeight","setLogger","VerticalFormationFactory","vf","AGGREGATION_CALCULATORS","StructureAggregationsChangedAggregateEvent","aggregatedValues","getAggregations","AggregationManager","calculators","calculations","calc","from","add","remove","update","AggregationManagerFactory","StructureFilter","filterId","getFilterValue","setFilterValue","filterString","filterNumber","filterBoolean","toLowerCase","FilterId","FilterSettings","filteringEnabled","isQuickFilteringEnabled","isSearchingEnabled","FilterManager","filterSettings","filters","getAll","arr","getSettings","filteredEntities","filters_1","filters_1_1","FilterManagerFactory","FieldIdGenerator","Field","aggregationEnabled","accessorMethod","possibleAggregations","assignPossibleAggregations","assignAggregations","getKey","isAggregation","isAggregationEnabled","aggregations","assignDefaultAggregations","UnknownField","NumberField","StringField","BooleanField","DateField","FieldFactory","fieldIdGenerator","columnType","FieldCollection","fieldFactory","getAllFields","getAllFieldIds","addField","addFields","fields_1","fields_1_1","FieldCollectionFactory","StructureSorter","rank","sorterId","getRank","hasDirection","changeDirection","setDirection","entityOne","entityTwo","valueOne","valueTwo","sortNumber","sortBoolean","sortString","sortUnknown","strOne","strTwo","localeCompare","numOne","numTwo","booleanOne","booleanTwo","sureBoolTwo","a","SorterId","SorterCollection","sorters","setConfig","multiSorting","clear","sorter","addSorter","sortedEntities","sorters_1","sorters_1_1","sorterOne","sorterTwo","reverse","FormationAggregate","toggleRow","ColumnHeaderEntity","setHeaderTop","setHeaderBottom","SchemaAggregate","pagerHeight","active","calculateContainerHeight","setVerticalGrid","setHorizontalGrid","getHeaderHeight","getPagerHeight","SearchManager","searchFields","addSearchPhrase","searchableFields","removeSearchFilters","searchedItems","Set","e_1","StructurePreparedEntitiesSetAggregateEvent","getPreparedItems","StructureAggregate","sourceManager","aggregationManager","sorterCollection","filterCollection","searchManager","fieldCollection","filterManager","calculateSource","editParams","calculateSourceBasedOnVirtualScroll","setFormation","changePaging","createFields","toggleFilter","removeSearchPhrase","searchedEntities","ents","ae","SchemaAggregateFactory","FormationAggregateFactory","SearchManagerFactory","StructureAggregateFactory","pagingAggregateFactory","sourceManagerFactory","formationAggregateFactory","verticalFormationFactory","aggregationManagerFactory","filterManagerFactory","searchManagerFactory","fieldCollectionFactory","schemaAggregateFactory","sorterContainer","filterContainer","fieldContainer","InitStructureCommandHandler","structureAggregateRepository","structureAggregateFactory","SetVerticalScrollEnabledCommandHandler","SetScrollPositionCommandHandler","InitFieldsCommandHandler","ToggleSortCommandHandler","publishSortEvent","SortingSetEvent","SetSortingCommandHandler","StructureConfigFilterSetEvent","getEnabled","StructureSetConfigFilterCommandHandler","StructureConfigSearchingSetEvent","StructureSetConfigSearchingCommandHandler","searchingConfig","StructureConfigQuickFilterSetEvent","StructureSetConfigQuickFilterCommandHandler","StructureToggleFilterCommandHandler","StructureAggregationsChangedEvent","StructurePreparedEntitiesSetEvent","StructureSourceDomainEventPublisher","publishEvent","structureOriginChangedAggregateEvent","domainEvent","structureSourceItemEditedAggregateEvent","structureAggregationsChangedAggregateEvent","structurePreparedEntitiesSetAggregateEvent","StructureAggregationEnabledSetEvent","StructureSetAggregationEnabledCommandHandler","structureSourceDomainEventPublisher","AggregationCalculator","filteredFields","forDataType","distinct","prepare","countForField","postCalculate","generateAggregatedValues","setCount","setDistinct","AggregatedValues","BooleanAggregatedValues","truthy","falsy","BooleanAggregationCalculator","booleanValue","truthyForField","falsyForField","DateAggregatedValues","DateAggregationCalculator","NumberAggregatedValues","min","max","average","median","setValueWithPrecision","toFixed","NumberAggregationCalculator","numberValue","sumForField","minForField","maxForField","StringAggregatedValues","StringAggregationCalculator","UnknownAggregatedValues","UnknownAggregationCalculator","provideAggregationCalculator","clazz","aggregationProviders","StructureConfigFilterSetEventHandler","StructureConfigSearchingSetEventHandler","StructureConfigQuickFilterSetEventHandler","StructureFieldUiModel","StructureFieldUiConverter","convertOne","StructureFieldsInitedEventHandler","structureFieldsRepository","structureFieldUiConverter","StructureAggregationUiEventsRepository","onAggregationsChanged","SetPagingCommandHandler","NextPageCommandHandler","PrevPageCommandHandler","ChangePagesizeCommandHandler","newPageSize","events_1","events_1_1","event_1","publishAggregateEvent","pageChangedEvent","pagesizeChangedEvent","pagingProviders","SetSchemaVerticalGridCommandHandler","SetSchemaHorizontalGridCommandHandler","SetSchemaThemeCommandHandler","ChangeSchemaBottomHeaderCommandHandler","ChangeSchemaTopHeaderCommandHandler","SetRowColoringCommandHandler","SetSchemaCommandHandler","schemaProviders","SetFormationCommandHandler","ToggleSelectedRowCommandHandler","console","formationProviders","SetOriginCommandHandler","StructureEditSourceItemCommandHandler","StructureOriginChangedEventHandler","origin_1","SourceRepository","select","SourceSetLoadingCommandHandler","StructurePreparedItemsEventHandler","sourceProviders","StructureSetSearchPhraseCommandHandler","SetSortOrderCommandHandler","SetRowHeightCommandHandler","StructureSearchPhraseSetEventHandler","structureProviders","ConsoleLogger","text","LoggerModule","ItemEntityFactory","createEntities","createEntity","StructureTopPanelComponent","StructureSearchComponent","renderer2","searchForm","formRef","StructureTopPanelModule","StructureEmptySourceComponent","[class.gui-structure-empty-source]","StructureColumnConfigTriggerComponent","structureColumnConfigService","openConfigDialog","headerDialogContainer","closeConfigDialog","StructureMenuColumnManagerComponent","enabledColumnsCount","reduce","accumulator","toggleColumn","stopPropagation","[class.gui-structure-menu-column-manager]","StructureColumnConfigSortComponent","placement","Placement","Right","isNoneSort","StructureColumnConfigColumnHideComponent","hideColumn","StructureColumnConfigColumnMoveComponent","StructureColumnMenuModule","StructureAggregationPanelComponent","structureAggregationUiEventsRepository","sourceReadModelService","sourceEmpty","isAggregateTypePresent","StructureAggregationPanelModule","createStructureDefinition","HermesModule","StructureModule","loggers","withConfig","structureConfig","hermesModuleConfig","ngModule","COMMAND_LOGGER_ENABLED","EVENT_LOGGER_ENABLED","declarations$1","elementComponents","GridModule","imports$1","declarations$2","providers$1","entryComponents$1"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAazB,SAASI,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2H5B,EAAvH6B,EAAIT,UAAUC,OAAQS,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO1B,OAAO6B,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIV,EAAIO,EAAWJ,OAAS,EAAGH,GAAK,EAAGA,KAASlB,EAAIyB,EAAWP,MAAIY,GAAKD,EAAI,EAAI7B,EAAE8B,GAAKD,EAAI,EAAI7B,EAAE0B,EAAQC,EAAKG,GAAK9B,EAAE0B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAK5B,OAAOgC,eAAeR,EAAQC,EAAKG,GAAIA,EAOzD,SAASK,EAAWC,EAAaC,GACpC,GAAuB,iBAAZL,SAAoD,mBAArBA,QAAQM,SAAyB,OAAON,QAAQM,SAASF,EAAaC,GA4C7G,SAASE,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWzB,EAAI,EAChE,OAAIuB,EAAUA,EAAEnB,KAAKkB,GACd,CACHI,KAAM,WAEF,OADIJ,GAAKtB,GAAKsB,EAAEnB,SAAQmB,OAAI,GACrB,CAAEK,MAAOL,GAAKA,EAAEtB,KAAM4B,MAAON,KAKzC,SAASO,EAAOP,EAAGrB,GACtB,IAAIsB,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBV,EAAYkB,EAA3B9B,EAAIuB,EAAEnB,KAAKkB,GAAOS,EAAK,GAC3B,IACI,WAAc,IAAN9B,GAAgBA,KAAM,MAAQW,EAAIZ,EAAE0B,QAAQE,MAAMG,EAAGC,KAAKpB,EAAEe,OAExE,MAAOM,GAASH,EAAI,CAAEG,MAAOA,GACjC,QACQ,IACQrB,IAAMA,EAAEgB,OAASL,EAAIvB,EAAU,SAAIuB,EAAEnB,KAAKJ,GAE1D,QAAkB,GAAI8B,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGJ,SAASG,IACZ,IAAK,IAAIH,EAAK,GAAI/B,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3C+B,EAAKA,EAAGI,OAAON,EAAO3B,UAAUF,KACpC,OAAO+B,SCpHVK,QAAA,EACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,OAAA,wIAIAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,SAAA,EACAP,OAAA,oKAIAC,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAIAD,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAIAD,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,EACAK,SAAA,2GAIAN,KAAA,EACAI,KAAA,EACAC,OAAA,EACAJ,KAAA,kFAsBAM,OAAA,EACAC,SAAA,EACAC,MAAA,EACAC,KAAA,4FAIAC,KAAA,EACAC,KAAA,EACAC,IAAA,2DA8DAC,MAAA,EACAC,SAAA,sDC/JArB,QAAA,EACAC,OAAA,EACAC,OAAA,EACAC,QAAA,EACAC,KAAA,EACAC,OAAA,iICND,IAAAiB,EAAA,WAGA,SAAAA,KAkEA,OAhECA,EAAAhE,UAAAiE,YAAA,SAAYC,GAEX,MAAoB,iBAATA,EACHpE,KAAKqE,kBAAkBD,GAEvBpE,KAAKsE,gBAAgBF,IAItBF,EAAAhE,UAAAoE,gBAAR,SAAwBC,GAEvB,OAAQA,GAEP,KAAKC,EAAY1B,OAChB,OAAO2B,EAAS3B,OAEjB,KAAK0B,EAAY3B,OAChB,OAAO4B,EAAS5B,OAEjB,KAAK2B,EAAYzB,QAChB,OAAO0B,EAAS1B,QAEjB,KAAKyB,EAAYxB,KAChB,OAAOyB,EAASzB,KAEjB,KAAKwB,EAAY5B,QAChB,OAAO6B,EAAS7B,QAEjB,KAAK4B,EAAYvB,OAChB,OAAOwB,EAASxB,OAEjB,QACC,OAAOwB,EAAS3B,SAIXoB,EAAAhE,UAAAmE,kBAAR,SAA0BD,GAGzB,OAFoBA,EAAKM,qBAIxB,IAAK,SACJ,OAAOD,EAAS3B,OAEjB,IAAK,SACJ,OAAO2B,EAAS5B,OAEjB,IAAK,UACJ,OAAO4B,EAAS1B,QAEjB,IAAK,OACJ,OAAO0B,EAASzB,KAEjB,IAAK,UACJ,OAAOyB,EAAS7B,QAEjB,IAAK,SACJ,OAAO6B,EAASxB,OAEjB,QACC,OAAOwB,EAAS3B,SAIpBoB,EArEA,MCCCS,MAAA,KACAC,SAAA,EACAC,IAAA,EACAC,QAAA,EACAC,IAAA,EACAC,IAAA,GACAC,OAAA,GACAC,OAAA,GACAC,MAAA,IACAC,SAAA,IACAC,OAAA,gOCVD,IAAAC,EAAA,WAKA,SAAAA,KA6EA,OA3ECA,EAAApF,UAAAqF,QAAA,SAAQC,OACHC,EAAmD,GAUvD,YARkCC,IAA9BF,EAAkBG,SAAuD,OAA9BH,EAAkBG,UAChEF,EAAwBE,QAAUH,EAAkBG,cAGVD,IAAvCF,EAAkBI,kBAAyE,OAAvCJ,EAAkBI,mBACzEH,EAAwBG,iBAAmB5F,KAAK6F,wBAAwBL,EAAkBI,mBAGpFH,GAGAH,EAAApF,UAAA2F,wBAAR,SAAgCC,GAAhC,IAAAC,EAAA/F,KAEO4F,EAA2C,GAWjD,OATAE,EAAuBE,SAAO,SAAE5B,OAEzB6B,EAAkBF,EAAKG,uBAAuB9B,GAEhD6B,MAAAA,GACHL,EAAiBpD,KAAKyD,MAIjBL,GAGAN,EAAApF,UAAAgG,uBAAR,SAA+B9B,GAI9B,OAF+BA,EAAKM,qBAInC,IAAK,QACJ,OAAOyB,EAAgBxB,MAExB,IAAK,WACJ,OAAOwB,EAAgBvB,SAExB,IAAK,MACJ,OAAOuB,EAAgBtB,IAExB,IAAK,UACJ,OAAOsB,EAAgBrB,QAExB,IAAK,MACJ,OAAOqB,EAAgBpB,IAExB,IAAK,MACJ,OAAOoB,EAAgBnB,IAExB,IAAK,SACJ,OAAOmB,EAAgBlB,OAExB,IAAK,SACJ,OAAOkB,EAAgBjB,OAExB,IAAK,QACJ,OAAOiB,EAAgBhB,MAExB,IAAK,WACJ,OAAOgB,EAAgBf,SAExB,IAAK,SACJ,OAAOe,EAAgBd,OAExB,QACC,OAAO,OAKXC,EAlFA,MCACpC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,OAAA,EACAC,SAAA,EACAP,OAAA,EACAmD,SAAA,sLCTD,IAAAC,EAAA,WAGA,SAAAA,KAiFA,OA/ECA,EAAAnG,UAAAqF,QAAA,SAAQe,GAEP,MAAoB,iBAATA,EACHtG,KAAKuG,cAAcD,GACA,mBAATA,EACVA,EAEAtG,KAAKwG,YAAYF,IAIlBD,EAAAnG,UAAAqG,cAAR,SAAsBD,GAIrB,OAFoBA,EAAK5B,qBAIxB,IAAK,OACJ,OAAO+B,EAASvD,KAEjB,IAAK,OACJ,OAAOuD,EAAStD,KAEjB,IAAK,OACJ,OAAOsD,EAASrD,KAEjB,IAAK,QACJ,OAAOqD,EAASpD,MAEjB,IAAK,OACJ,OAAOoD,EAASnD,KAEjB,IAAK,SACJ,OAAOmD,EAASlD,OAEjB,IAAK,WACJ,OAAOkD,EAASjD,SAEjB,IAAK,SACJ,OAAOiD,EAASxD,OAEjB,QACC,OAAOwD,EAASvD,OAIXmD,EAAAnG,UAAAsG,YAAR,SAAoBF,GAEnB,OAAQA,GAEP,KAAKI,EAAYxD,KAChB,OAAOuD,EAASvD,KAEjB,KAAKwD,EAAYvD,KAChB,OAAOsD,EAAStD,KAEjB,KAAKuD,EAAYtD,KAChB,OAAOqD,EAASrD,KAEjB,KAAKsD,EAAYrD,MAChB,OAAOoD,EAASpD,MAEjB,KAAKqD,EAAYpD,KAChB,OAAOmD,EAASnD,KAEjB,KAAKoD,EAAYnD,OAChB,OAAOkD,EAASlD,OAEjB,KAAKmD,EAAYlD,SAChB,OAAOiD,EAASjD,SAEjB,KAAKkD,EAAYzD,OAChB,OAAOwD,EAASxD,OAEjB,QACC,OAAOwD,EAASvD,OAIpBmD,EApFA,GCGAM,EAAA,WAKA,SAAAA,IAEkB3G,KAAA4G,oBAAsB,IAAI1C,EAE1BlE,KAAA6G,2BAA6B,IAAIvB,EAEjCtF,KAAA8G,oBAAsB,IAAIT,EAoC5C,OAlCCM,EAAAzG,UAAAqF,QAAA,SAAQwB,GAAR,IAAAhB,EAAA/F,KACC,OAAO+G,EAAOC,KAAG,SAAE7F,GAAM,OAAA4E,EAAKkB,cAAc9F,OAGrCwF,EAAAzG,UAAA+G,cAAR,SAAsBC,OACjBC,EAA6B,GA0BjC,YAxBuBzB,IAAnBwB,EAAU9C,MAAyC,OAAnB8C,EAAU9C,OAC7C+C,EAAa/C,KAAOpE,KAAK4G,oBAAoBzC,YAAY+C,EAAU9C,YAG3CsB,IAArBwB,EAAUE,QAA6C,OAArBF,EAAUE,SAC/CD,EAAaC,OAASF,EAAUE,aAGT1B,IAApBwB,EAAUG,OAA2C,OAApBH,EAAUG,QAC9CF,EAAaE,MAAQH,EAAUG,YAGR3B,IAApBwB,EAAUI,OAA2C,OAApBJ,EAAUI,QAC9CH,EAAaG,MAAQJ,EAAUI,YAGT5B,IAAnBwB,EAAUZ,MAAyC,OAAnBY,EAAUZ,OAC7Ca,EAAab,KAAOtG,KAAK8G,oBAAoBvB,QAAQ2B,EAAUZ,YAGlCZ,IAA1BwB,EAAUK,aAAuD,OAA1BL,EAAUK,cACpDJ,EAAaI,YAAcvH,KAAK6G,2BAA2BtB,QAAQ2B,EAAUK,cAGvEJ,GAGTR,EA/CA,UCFClD,OAAA,EACAC,SAAA,EACAC,MAAA,EACAC,KAAA,qFCJD,IAAA4D,EAAA,WAIA,SAAAA,KA4DA,OA1DCA,EAAAtH,UAAAqF,QAAA,SAAQkC,GAEP,MAAqB,iBAAVA,EACHzH,KAAKuG,cAAckB,GAEnBzH,KAAKwG,YAAYiB,IAKlBD,EAAAtH,UAAAqG,cAAR,SAAsBkB,GAIrB,OAFqBA,EAAM/C,qBAI1B,IAAK,WACJ,OAAOgD,EAAYhE,SAEpB,IAAK,SACJ,OAAOgE,EAAYjE,OAEpB,IAAK,QACJ,OAAOiE,EAAY/D,MAEpB,IAAK,OACJ,OAAO+D,EAAY9D,KAEpB,QACC,OAAO8D,EAAYjE,SAMd+D,EAAAtH,UAAAsG,YAAR,SAAoBiB,GAEnB,OAAQA,GAEP,KAAKE,EAASjE,SACb,OAAOgE,EAAYhE,SAEpB,KAAKiE,EAASlE,OACb,OAAOiE,EAAYjE,OAEpB,KAAKkE,EAAShE,MACb,OAAO+D,EAAY/D,MAEpB,KAAKgE,EAAS/D,KACb,OAAO8D,EAAY9D,KAEpB,QACC,OAAO8D,EAAYjE,SAMvB+D,EAhEA,MCCC3D,KAAA,EACAC,KAAA,EACAC,IAAA,oDCHD,IAAA6D,EAAA,WAIA,SAAAA,KAsDA,OApDCA,EAAA1H,UAAAqF,QAAA,SAAQsC,GAEP,MAA2B,iBAAhBA,EACH7H,KAAKuG,cAAcsB,GAEnB7H,KAAKwG,YAAYqB,IAKlBD,EAAA1H,UAAAqG,cAAR,SAAsBsB,GAIrB,OAF2BA,EAAYnD,qBAItC,IAAK,OACJ,OAAOoD,EAAYjE,KAEpB,IAAK,OACJ,OAAOiE,EAAYhE,KAEpB,IAAK,MACJ,OAAOgE,EAAY/D,IAEpB,QACC,OAAO+D,EAAYhE,OAMd8D,EAAA1H,UAAAsG,YAAR,SAAoBqB,GAEnB,OAAQA,GAEP,KAAKE,EAAelE,KACnB,OAAOiE,EAAYjE,KAEpB,KAAKkE,EAAejE,KACnB,OAAOgE,EAAYhE,KAEpB,KAAKiE,EAAehE,IACnB,OAAO+D,EAAY/D,IAEpB,QACC,OAAO+D,EAAYhE,OAMvB8D,EA1DA,GCAAI,EAAA,WAMA,SAAAA,KAMA,OAHCA,EAAA9H,UAAAqF,QAAA,SAAQwB,GACP,OAAA,uBAJDkB,EAAAA,aAMDD,EAZA,MCCChE,MAAA,EACAC,SAAA,+CCFD,IAAAiE,EAAA,WAKA,SAAAA,KA8EA,OA5ECA,EAAAhI,UAAAqF,QAAA,SAAQ4C,OAEHC,EAA6B,GA8BjC,YA5B0B1C,IAAtByC,EAAUxC,SAA+C,OAAtBwC,EAAUxC,UAChDyC,EAAazC,QAAUwC,EAAUxC,cAGXD,IAAnByC,EAAUE,MAAyC,OAAnBF,EAAUE,OAC7CD,EAAaC,KAAOF,EAAUE,WAGJ3C,IAAvByC,EAAUG,UAAiD,OAAvBH,EAAUG,WACjDF,EAAaE,SAAWH,EAAUG,eAGP5C,IAAxByC,EAAUI,WAAmD,OAAxBJ,EAAUI,YAClDH,EAAaG,UAAYJ,EAAUI,gBAGT7C,IAAvByC,EAAUK,UAAiD,OAAvBL,EAAUK,WACjDJ,EAAaI,SAAWL,EAAUK,eAGL9C,IAA1ByC,EAAUM,aAAuD,OAA1BN,EAAUM,cACpDL,EAAaK,YAAcN,EAAUM,kBAGZ/C,IAAtByC,EAAUO,SAA+C,OAAtBP,EAAUO,UAChDN,EAAaO,YAAc3I,KAAK4I,eAAeT,EAAUO,UAGnDN,GAGAF,EAAAhI,UAAA0I,eAAR,SAAuBC,GAEtB,MAA6B,iBAAlBA,EACH7I,KAAKuG,cAAcsC,GAEnB7I,KAAKwG,YAAYqC,IAIlBX,EAAAhI,UAAAqG,cAAR,SAAsBsC,GAIrB,OAFsBA,EAAcnE,qBAInC,IAAK,QACJ,OAAOoE,EAAkB9E,MAE1B,IAAK,WACJ,OAAO8E,EAAkB7E,SAE1B,QACC,OAAO6E,EAAkB9E,QAIpBkE,EAAAhI,UAAAsG,YAAR,SAAoBqC,GAEnB,OAAQA,GAEP,KAAKE,EAAiB/E,MACrB,OAAO8E,EAAkB9E,MAE1B,KAAK+E,EAAiB9E,SACrB,OAAO6E,EAAkB7E,SAE1B,QACC,OAAO6E,EAAkB9E,QAI7BkE,EAnFA,GCuBAc,EAAA,WAkJC,SAAAA,IA1HAhJ,KAAAiJ,OAAqB,GAGrBjJ,KAAAkJ,QAA4B,GAyE5BlJ,KAAAmJ,YAAoC,IAAIC,EAAAA,aAGxCpJ,KAAAqJ,gBAAwC,IAAID,EAAAA,aAG5CpJ,KAAAsJ,cAAmC,IAAIF,EAAAA,aAGvCpJ,KAAAuJ,eAAqC,IAAIH,EAAAA,aAGzCpJ,KAAAwJ,sBAA8C,IAAIJ,EAAAA,aAGlDpJ,KAAAyJ,aAA0D,IAAIL,EAAAA,aAG9DpJ,KAAA0J,gBAAsC,IAAIN,EAAAA,aAG1CpJ,KAAA2J,iBAAuC,IAAIP,EAAAA,aAG3CpJ,KAAA4J,kBAAwC,IAAIR,EAAAA,aAY3BpJ,KAAA6J,oBAA2C,IAAIlD,EAE/C3G,KAAA8J,mBAAyC,IAAItC,EAE7CxH,KAAA+J,yBAAqD,IAAInC,EAEzD5H,KAAAgK,wBAAmD,IAAIhC,EAEvDhI,KAAAiK,oBAA2C,IAAI/B,EAoEjE,OA/DCc,EAAA9I,UAAAgK,YAAA,SAAYC,QAEazE,IAApByE,EAAQjB,cAA0DxD,IAAjCyE,EAAQjB,QAAQkB,eACpDpK,KAAKqK,cAAgBrK,KAAK6J,oBAAoBtE,QAAQvF,KAAKkJ,eAGtCxD,IAAlByE,EAAQ1C,YAAsD/B,IAA/ByE,EAAQ1C,MAAM2C,eAChDpK,KAAKsK,YAActK,KAAK8J,mBAAmBvE,QAAQvF,KAAKyH,aAG7B/B,IAAxByE,EAAQtC,kBAAkEnC,IAArCyE,EAAQtC,YAAYuC,eAC5DpK,KAAKuK,kBAAoBvK,KAAK+J,yBAAyBxE,QAAQvF,KAAK6H,mBAG1CnC,IAAvByE,EAAQK,iBAAgE9E,IAApCyE,EAAQK,WAAWJ,eAC1DpK,KAAKyK,iBAAmBzK,KAAKgK,wBAAwBzE,QAAQvF,KAAKwK,kBAI5C9E,IAAnByE,EAAQO,aAAwDhF,IAAhCyE,EAAQO,OAAON,cAEvB,kBAAhBpK,KAAK0K,SACf1K,KAAK0K,OAAS1K,KAAKiK,oBAAoB1E,QAAQvF,KAAK0K,UAKvD1B,EAAA9I,UAAAyK,aAAA,SAAatC,GACZrI,KAAKmJ,YAAYyB,KAAKvC,IAGvBW,EAAA9I,UAAA2K,iBAAA,SAAiBvC,GAChBtI,KAAKqJ,gBAAgBuB,KAAKtC,IAG3BU,EAAA9I,UAAA4K,aAAA,SAAaC,GACZ/K,KAAKsJ,cAAcsB,KAAKG,IAGzB/B,EAAA9I,UAAA8K,gBAAA,WACChL,KAAKuJ,eAAeqB,QAGrB5B,EAAA9I,UAAA+K,uBAAA,SAAuBC,GACtBlL,KAAKwJ,sBAAsBoB,KAAKM,IAGjClC,EAAA9I,UAAAiL,aAAA,SAAahJ,GACZnC,KAAKyJ,aAAamB,KAAKzI,IAGxB6G,EAAA9I,UAAAkL,gBAAA,WACCpL,KAAK0J,gBAAgBkB,QAGtB5B,EAAA9I,UAAAmL,iBAAA,WACCrL,KAAK4J,kBAAkBgB,QAGxB5B,EAAA9I,UAAAoL,iBAAA,WACCtL,KAAK2J,iBAAiBiB,iDA5MtBW,EAAAA,kCAGAA,EAAAA,yBAGAA,EAAAA,qBAGAA,EAAAA,yBAGAA,EAAAA,+BAGAA,EAAAA,sBAGAA,EAAAA,uBAGAA,EAAAA,sBAGAA,EAAAA,4BAGAA,EAAAA,8BAGAA,EAAAA,qBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,uBAGAA,EAAAA,6BAGAA,EAAAA,uBAGAA,EAAAA,yBAGAA,EAAAA,yBAMAA,EAAAA,4BAMAA,EAAAA,wBAMAA,EAAAA,2BAMAA,EAAAA,yBAGAA,EAAAA,2BAMAA,EAAAA,0BAGAA,EAAAA,2BAOAC,EAAAA,gCAGAA,EAAAA,8BAGAA,EAAAA,+BAGAA,EAAAA,sCAGAA,EAAAA,6BAGAA,EAAAA,gCAGAA,EAAAA,iCAGAA,EAAAA,kCAGAA,EAAAA,UAyFFxC,EApNA,GCvBA,iBAAA,SAAAyC,KAQA,OAJCA,EAAAvL,UAAAwL,MAAA,WACC,OAAO1L,KAAK2L,eAGdF,KCNA,IAAAG,EAAA,SAAAC,GAIC,SAAAD,EAAYjG,GAAZ,IAAAI,EACC8F,EAAAjL,KAAAZ,OAAOA,YACP+F,EAAKJ,QAAUA,IAWjB,OAjBsDmG,EAAAA,EAAAA,GAS3CF,EAAA1L,UAAAyL,YAAV,WACC,OAAO,IAAII,EAA0B/L,KAAK2F,UAG3CiG,EAAA1L,UAAA8L,YAAA,SAAYrG,GAEX,OADA3F,KAAK2F,QAAUA,EACR3F,MAET4L,EAjBA,CAAsDH,GAmBtD,IAAAQ,EAAA,SAAAJ,GAIC,SAAAI,WACCJ,EAAAjL,KAAAZ,KAAMiM,EAAwCC,iBAAelM,KAE/D,OAP6D8L,EAAAA,EAAAA,GAEpCG,EAAAC,gBAAiB,EAK1CD,EAPA,CAA6DL,GAS7D,IAAAG,EAAA,WAIC,SAAAA,EAAYpG,GACX3F,KAAK2F,QAAUA,EAWjB,OAJCoG,EAAA7L,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SALNoG,EAAAK,QAAUR,EAEVG,EAAAM,eAAiBJ,EAMzBF,EAhBA,GC3BA,IAAAO,EAAA,SAAAT,GAIC,SAAAS,EAAoBC,EACTC,EACAC,GAFX,IAAA1G,EAGC8F,EAAAjL,KAAAZ,OAAOA,YAHY+F,EAAAwG,cAAAA,EACTxG,EAAAyG,aAAAA,EACAzG,EAAA0G,UAAAA,EAJH1G,EAAA2G,QAAkB,IAqC3B,OAvCgDZ,EAAAA,EAAAA,GAUrCQ,EAAApM,UAAAyL,YAAV,WACC,OAAO,IAAIgB,EACV3M,KAAKuM,cACLvM,KAAKwM,aACLxM,KAAKyM,UACLzM,KAAK0M,SAIPJ,EAAApM,UAAA0M,WAAA,SAAWjH,GAEV,OADA3F,KAAKuM,cAAgB5G,EACd3F,MAGRsM,EAAApM,UAAA2M,iBAAA,SAAiBnC,GAEhB,OADA1K,KAAKwM,aAAe9B,EACb1K,MAGRsM,EAAApM,UAAA4M,cAAA,SAAcpC,GAEb,OADA1K,KAAKyM,UAAY/B,EACV1K,MAGRsM,EAAApM,UAAA6M,WAAA,SAAWpH,GAEV,OADA3F,KAAK0M,OAAS/G,EACP3F,MAGTsM,EAvCA,CAAgDb,GAyChD,IAAAuB,EAAA,SAAAnB,GAMC,SAAAmB,WACCnB,EAAAjL,KAAAZ,KACCgN,EAAkCC,qBAClCD,EAAkCE,oBAClCF,EAAkCG,mBAClCnN,KAEH,OAbuD8L,EAAAA,EAAAA,GAE9BkB,EAAAC,sBAAgC,EAChCD,EAAAE,qBAAiD,IAAInB,EAA0BM,gBAAiBX,QAChGsB,EAAAG,kBAA8C,IAAIpB,EAA0BM,gBAAiBX,QAStHsB,EAbA,CAAuDV,GAevD,IAAAK,EAAA,WAUC,SAAAA,EAAYJ,EACTC,EACAC,EACAC,GACF1M,KAAKuM,cAAgBA,EACrBvM,KAAKwM,aAAeA,EACpBxM,KAAKyM,UAAYA,EACjBzM,KAAK0M,OAASA,EAuBhB,OAhBCC,EAAAzM,UAAAkN,gBAAA,WACC,OAAOpN,KAAKuM,eAGbI,EAAAzM,UAAAmN,gBAAA,WACC,OAAOrN,KAAK0M,QAGbC,EAAAzM,UAAAoN,gBAAA,WACC,OAAOtN,KAAKwM,cAGbG,EAAAzM,UAAAqN,aAAA,WACC,OAAOvN,KAAKyM,WAjBNE,EAAAP,QAAUE,EAEVK,EAAAN,eAAiBW,EAkBzBL,EAxCA,GCxDA,IAAaa,GAA0B,IAAIb,EAAoBN,gBAAiBX,QCGnE+B,EAAa,CAAI,CAC7BC,QAASf,EACTgB,SAAUH,ICNEI,EAA2B,IAAIC,EAAAA,eAAe,4BCF3DC,EAAA,WAEA,SAAAA,KAYA,OALCA,EAAA5N,UAAA6N,WAAA,WAGC,OAFAD,EAAgBE,QAETF,EAAgBG,OAASH,EAAgBE,OAPzBF,EAAAG,OAAS,YAElBH,EAAAE,MAAQ,sBALvB/F,EAAAA,aAYD6F,EAdA,GCAA,IAAAI,EAAA,WAIA,SAAAA,IAGkBlO,KAAAmO,QAAU,IAAIC,IAehC,OAZCF,EAAAhO,UAAAmO,SAAA,SAASC,EAAgBC,EAA0BC,GAClDxO,KAAKmO,QAAQM,IAAIH,EAAQ,CAAEC,UAASA,EAAEC,YAAWA,KAGlDN,EAAAhO,UAAAwO,WAAA,SAAWJ,GACVtO,KAAKmO,QAAQQ,OAAOL,IAGrBJ,EAAAhO,UAAA0O,UAAA,SAAUN,GACT,OAAOtO,KAAKmO,QAAQU,IAAIP,wBAfzBrG,EAAAA,aAkBDiG,EAtBA,GCSA,IAAAY,EAAA,WAEC,SAAAA,EAA6BC,EACTP,GADSxO,KAAA+O,cAAAA,EACT/O,KAAAwO,YAAAA,EAgBrB,OAbCM,EAAA5O,UAAAwN,QAAA,eAEOa,EAAYvO,KAAK+O,cAEvB,MAAO,CACNC,sBAAA,SAAsBrJ,GACrB4I,EAAUU,gBAAkBtJ,EAC5B4I,EAAUW,mBAMdJ,EAnBA,GCGA,IAEAK,GAAA,SAAAtD,GA6BC,SAAAsD,EAAyCC,EAC9BC,EACAC,EACAC,EACAC,GAJX,IAAAzJ,EAKC8F,EAAAjL,KAAAZ,OAAOA,YALiC+F,EAAAqJ,WAAAA,EAC9BrJ,EAAAsJ,WAAAA,EACAtJ,EAAAuJ,kBAAAA,EACAvJ,EAAAwJ,aAAAA,EACAxJ,EAAAyJ,gBAAAA,IAqDZ,OAnEmC1D,EAAAA,EAAAA,GAkBlCqD,EAAAjP,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAEKsO,EAAStO,KAAKsO,YAEH5I,IAAX4I,IACHA,EAAStO,KAAKwP,gBAAgBzB,cAG/B/N,KAAK0P,YAAcpB,EAEnBtO,KAAK2P,eAGL3P,KAAKuP,aAAalB,SAASC,EAAQtO,KAAMA,KAAK4P,aAAaC,kBAEvDC,EAAAA,kBAAkB9P,KAAKoP,cAC1BW,OAAmB,WAAC,SAAIzB,OAEjB0B,EAAoBjK,EAAKwJ,aAAaX,UAAUN,GAEtD,OAAI0B,EACI,IAAIlB,EAAuBkB,EAAkBzB,UAAWyB,EAAkBxB,aAAad,eAE9F,KAMJyB,EAAAjP,UAAA+P,YAAA,WACCjQ,KAAKuP,aAAab,WAAW1O,KAAK0P,cAGnCP,EAAAjP,UAAAgQ,cAAA,WACC,OAAOlQ,KAAKqP,YAGbF,EAAAjP,UAAAiQ,UAAA,WACC,MAAO,IAGRhB,EAAAjP,UAAAgP,cAAA,WACClP,KAAKsP,kBAAkBJ,iBAGhBC,EAAAjP,UAAAyP,aAAR,WACC3P,KAAKqP,WAAWe,cAAcC,aAAa,cAAerQ,KAAK0P,kCAnFhEY,EAAAA,UAASC,KAAA,CAAC,CACVC,SAH2B,WAI3BC,SAAA,grCAIAC,UAAShO,EACL+K,EAAa,CAChB,CACCC,QAASE,EACT+C,YAAaxB,KAGfyB,KAAM,CACLC,UAAW,aACXC,iBAAkB,aAEnBC,cAAeC,EAAAA,kBAAkBC,0HAYpBC,EAAAA,OAAMX,KAAA,CAACY,EAAAA,sBA3CkBC,EAAAA,kBAA9BC,EAAAA,yBAQAnD,SADAJ,2CA4BPwD,EAAAA,UAASf,KAAA,CAAC,YAAa,CAAEgB,QAAQ,oBAGjChG,EAAAA,SA8DF4D,EAtFA,CAmBmCnG,GCZnC,IAAawI,GAAgB,CAC5BC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,wBACAC,EAAAA,qBACAC,EAAAA,iBACAC,EAAAA,qBACAC,EAAAA,wBACAC,EAAAA,uBACAC,EAAAA,wBACAC,EAAAA,4BACAC,EAAAA,mBACAC,EAAAA,oBACAC,EAAAA,gBACAC,EAAAA,yBACAC,EAAAA,kBACAC,EAAAA,mBACAC,EAAAA,yBACAJ,EAAAA,+BC/BA,SAAAK,IAFiB1S,KAAA2S,aAAe,IAAIC,EAAAA,QAkBrC,OAbCF,EAAAxS,UAAA+P,YAAA,WACCjQ,KAAK6S,eAGIH,EAAAxS,UAAA2S,YAAV,WACC7S,KAAK2S,aAAazQ,OAClBlC,KAAK2S,aAAaG,YAGTJ,EAAAxS,UAAA6S,UAAV,WACC,OAAOA,EAAAA,UAAU/S,KAAK2S,eAGxBD,KCtBA,mBAAA,SAAAM,mDACA,OAD6ClH,EAAAA,EAAAA,GAC7CkH,GAD6CN,OCI7C,aCNA,IAAAO,GAAA,WAYC,SAAAA,EAAoBC,GAAAlT,KAAAkT,oBAAAA,EAarB,OAVCD,EAAA/S,UAAAiT,GAAA,SAAG3E,GAEF,OAAOxO,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACAC,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAejF,EAAYiF,cAC9EzM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAUG,qCAZ/CzL,EAAAA,sDANQ0L,MAsBTV,EAzBA,sBCIC,SAAAW,EAAYC,UACXhI,EAAAjL,KAAAZ,KAAM6T,IAAG7T,KAGX,OANiC8L,EAAAA,EAAAA,GAMjC8H,GANiCE,EAAAA,aCApBC,GAAoB,IAAIH,GAAY,MCFjDI,GAAA,WAaC,SAAAA,EAAoBC,GAAAjU,KAAAiU,iBAAAA,EAcrB,OAXCD,EAAA9T,UAAAgU,SAAA,SAAS1F,GACR,YADQ,IAAAA,IAAAA,EAAAuF,IACD/T,KAAKiU,iBAAiBd,GAAG3E,IAGjCwF,EAAA9T,UAAAiU,eAAA,SAAe3F,GACd,YADc,IAAAA,IAAAA,EAAAuF,IACP/T,KAAKkU,SAAS1F,GACf6E,KACAe,EAAAA,KAAK,yBAbZnM,EAAAA,sDANQgL,MAuBTe,EA3BA,GCKA,IAAAK,GAAA,SAAAxI,GAEC,SAAAwI,EAA4B7F,EACT8F,GADnB,IAAAvO,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,qBAAmBxO,YAFX+F,EAAAyI,YAAAA,EACTzI,EAAAuO,QAAAA,IAIpB,OAPsCxI,EAAAA,EAAAA,GAOtCuI,EAPA,CAAsCE,EAAAA,SCFtC,IAAAC,GAAA,SAAA3I,GAEC,SAAA2I,EAA4BhG,EACTlG,GADnB,IAAAvC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,0BAAwBxO,YAFhB+F,EAAAyI,YAAAA,EACTzI,EAAAuC,SAAAA,IAGpB,OAN2CwD,EAAAA,EAAAA,GAM3C0I,EANA,CAA2CD,EAAAA,SCA3C,IAAAE,GAAA,SAAA5I,GAEC,SAAA4I,EAA4BjG,GAA5B,IAAAzI,EACC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oBAAkBxO,YADV+F,EAAAyI,YAAAA,IAI7B,OANqC1C,EAAAA,EAAAA,GAMrC2I,EANA,CAAqCF,EAAAA,SCCrC,IAAAG,GAAA,SAAA7I,GAEC,SAAA6I,EAA4BlG,GAA5B,IAAAzI,EACC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oBAAkBxO,YADV+F,EAAAyI,YAAAA,IAI7B,OANqC1C,EAAAA,EAAAA,GAMrC4I,EANA,CAAqCH,EAAAA,SCJrC,IAAAI,GAAA,WAeC,SAAAA,EAAoBC,GAAA5U,KAAA4U,kBAAAA,EAkBrB,OAfCD,EAAAzU,UAAA2U,UAAA,SAAUrG,EAA0B9D,GACnC1K,KAAK4U,kBAAkBE,SAAS,IAAIT,GAAiB7F,EAAa9D,KAGnEiK,EAAAzU,UAAA6U,eAAA,SAAevG,EAA0BlG,GACxCtI,KAAK4U,kBAAkBE,SAAS,IAAIN,GAAsBhG,EAAalG,KAGxEqM,EAAAzU,UAAA8U,SAAA,SAASxG,GACRxO,KAAK4U,kBAAkBE,SAAS,IAAIL,GAAgBjG,KAGrDmG,EAAAzU,UAAA+U,SAAA,SAASzG,GACRxO,KAAK4U,kBAAkBE,SAAS,IAAIJ,GAAgBlG,yBAnBrDvG,EAAAA,sDAVQiN,EAAAA,qBA+BTP,EAjCA,GCAA,IAAAQ,GAAA,WAWC,SAAAA,EAAoBC,GAAApV,KAAAoV,iBAAAA,EAiDrB,OA9CCD,EAAAjV,UAAAmV,OAAA,SAAO7G,QAAA,IAAAA,IAAAA,EAAAuF,IACN/T,KAAKoV,iBAAiBP,UAAUrG,EAAa,CAAE7I,SAAS,KAGzDwP,EAAAjV,UAAAoV,QAAA,SAAQ9G,QAAA,IAAAA,IAAAA,EAAAuF,IACP/T,KAAKoV,iBAAiBP,UAAUrG,EAAa,CAAE7I,SAAS,KAGzDwP,EAAAjV,UAAA2U,UAAA,SAAUnK,EAAsB8D,QAAA,IAAAA,IAAAA,EAAAuF,IAC/B/T,KAAKoV,iBAAiBP,UAAUrG,EAAa9D,IAG9CyK,EAAAjV,UAAA6U,eAAA,SAAezM,EAAkBkG,QAAA,IAAAA,IAAAA,EAAAuF,IAChC/T,KAAKoV,iBAAiBL,eAAevG,EAAalG,IAGnD6M,EAAAjV,UAAA8U,SAAA,SAASxG,QAAA,IAAAA,IAAAA,EAAAuF,IACR/T,KAAKoV,iBAAiBJ,SAASxG,IAGhC2G,EAAAjV,UAAA+U,SAAA,SAASzG,QAAA,IAAAA,IAAAA,EAAAuF,IACR/T,KAAKoV,iBAAiBH,SAASzG,IAGhC2G,EAAAjV,UAAAqV,SAAA,SAASC,EAAoBC,GAE5B,GAAIA,EAAcD,EACjB,KAAOC,IAAgBD,GACtBxV,KAAKgV,WACLS,GAAe,OAGhB,KAAOA,IAAgBD,GACtBxV,KAAKiV,WACLQ,GAAe,GAKlBN,EAAAjV,UAAAwV,eAAA,SAAe/P,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IAChC/T,KAAKoV,iBAAiBP,UAAUrG,EAAa,CAAEhG,SAAU7C,KAG1DwP,EAAAjV,UAAAyV,kBAAA,SAAkBhQ,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACnC/T,KAAKoV,iBAAiBP,UAAUrG,EAAa,CAAE/F,YAAa9C,yBAlD7DsC,EAAAA,sDANQ0M,MA0DTQ,EA5DA,GCAA,IAAAS,GAAA,WAOA,SAAAA,IAGS5V,KAAA6V,OAAS,IAAIzH,IAEbpO,KAAA8V,QAAU,IAAIC,EAAAA,cAkBvB,OAhBCH,EAAA1V,UAAA8V,UAAA,SAAUH,EAAiCrH,GAC1CxO,KAAK6V,OAAOpH,IAAID,EAAYiF,WAAYoC,GACxC7V,KAAK8V,QAAQ5T,KAAKlC,KAAK6V,SAGxBD,EAAA1V,UAAA+V,SAAA,SAASzH,GAER,OAAOxO,KAAK8V,QACNI,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CApBPlO,EAAAA,aAuBD2N,EA9BA,GCAA,IAAAQ,GAAA,WAQA,SAAAA,IAGSpW,KAAA6V,OAAS,IAAIzH,IAEbpO,KAAA8V,QAAU,IAAIC,EAAAA,cAkBvB,OAhBCK,EAAAlW,UAAAmW,SAAA,SAASR,EAAiCrH,GACzCxO,KAAK6V,OAAOpH,IAAID,EAAYiF,WAAYoC,GACxC7V,KAAK8V,QAAQ5T,KAAKlC,KAAK6V,SAGxBO,EAAAlW,UAAAoW,gBAAA,SAAgB9H,GAEf,OAAOxO,KAAK8V,QACNI,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CApBPlO,EAAAA,aAuBDmO,EA/BA,GCAA,IAAAG,GAAA,WAgBC,SAAAA,EAAoBrD,EACTsD,EACAC,GAFSzW,KAAAkT,oBAAAA,EACTlT,KAAAwW,iCAAAA,EACAxW,KAAAyW,gCAAAA,EAkEZ,OA/DCF,EAAArW,UAAAwW,WAAA,SAAWlI,GAEV,YAFU,IAAAA,IAAAA,EAAAuF,IAEH/T,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACArM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAUoD,iBACxCR,EAAAA,sBAAoB,SAAES,EAA0BC,GAC/C,GAAID,EAAMjW,SAAWkW,EAAMlW,OAC1B,OAAO,MAGJmW,GAAO,EASX,OAPAF,EAAM5Q,SAAO,SAAE+Q,EAAK/I,GACd+I,EAAIC,OAAOH,EAAM7I,MACrB8I,GAAO,MAKFA,OAKfP,EAAArW,UAAA+W,eAAA,SAAezI,GAEd,YAFc,IAAAA,IAAAA,EAAAuF,IAEP/T,KAAK0W,WAAWlI,GACjB6E,KACArM,EAAAA,KAAG,SAAEkQ,GACJ,OAAOA,EAASvW,YAKxB4V,EAAArW,UAAAiX,iBAAA,SAAiB3I,GAEhB,YAFgB,IAAAA,IAAAA,EAAAuF,IAET/T,KAAK0W,WAAWlI,GACjB6E,KACAe,EAAAA,KAAK,KAIZmC,EAAArW,UAAAkX,aAAA,SAAa5I,GACZ,YADY,IAAAA,IAAAA,EAAAuF,IACL/T,KAAKyW,gCACNR,SAASzH,GACT6E,KACArM,EAAAA,KAAG,SAAC6O,GAAU,OAAAA,EAAOlV,YAI5B4V,EAAArW,UAAAmX,UAAA,SAAU7I,GACT,YADS,IAAAA,IAAAA,EAAAuF,IACF/T,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACArM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAU+D,YAAYC,iBAI3DhB,EAAArW,UAAAsX,mBAAA,SAAmBhJ,GAClB,YADkB,IAAAA,IAAAA,EAAAuF,IACX/T,KAAKwW,iCAAiCF,gBAAgB9H,wBApE9DvG,EAAAA,sDATQ0L,UAMAyC,UALAR,MA+ETW,EApFA,GCEA,kBAIC,SAAAkB,EAAsBtV,GAEpBnC,KAAK0X,SADFvV,EACa,IAAIwV,EAAAA,gBAAgBxV,GAEpB,IAAI4T,EAAAA,cAAc,GAYrC,OARC0B,EAAAvX,UAAA0X,QAAA,WACC,OAAO5X,KAAK0X,SAASxB,gBAGtBuB,EAAAvX,UAAAgC,KAAA,SAAKC,GACJnC,KAAK0X,SAASxV,KAAKC,IAGrBsV,wBCXC,SAAAI,WACChM,EAAAjL,KAAAZ,KAAM8I,EAAkB9E,QAAMhE,KAUhC,OAbuD8L,EAAAA,EAAAA,GAMtD+L,EAAA3X,UAAA0X,QAAA,WACC,OAAO/L,EAAA3L,UAAM0X,QAAOhX,KAAAZ,2BARrBiI,EAAAA,mDAcD4P,GAbuDJ,mBCgBtD,SAAAK,EAAoBxI,EACTyI,EACAC,EACAC,EACAC,GAJX,IAAAnS,EAKC8F,EAAAjL,KAAAZ,OAAOA,YALY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAgS,mBAAAA,EACAhS,EAAAiS,qBAAAA,EACAjS,EAAAkS,mBAAAA,EACAlS,EAAAmS,kCAAAA,EANXnS,EAAAoS,oBAA8B,IA0D/B,OAhE8CrM,EAAAA,EAAAA,GAgB7CgM,EAAA5X,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAKkY,kCACHN,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAEC,GACXtS,EAAKoS,mBAAqBE,IAASvP,EAAkB7E,SACrD8B,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK+X,mBACH7D,WACAb,KACArT,KAAK+S,aAELqF,WAAS,SAAE1N,GACX3E,EAAK2E,OAASA,EACd3E,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKiY,mBACHb,eACA/D,KAAKrT,KAAK+S,aACVqF,WAAS,SAAEE,GACXvS,EAAKwS,WAAaD,EAClBvS,EAAKuJ,kBAAkBJ,oBAI1B4I,EAAA5X,UAAA6U,eAAA,SAAezM,GACdtI,KAAKgY,qBAAqBjD,eAAezM,IAG1CwP,EAAA5X,UAAA8U,SAAA,WAEMhV,KAAKuY,YAIVvY,KAAKgY,qBAAqBhD,YAG3B8C,EAAA5X,UAAA+U,SAAA,WACCjV,KAAKgY,qBAAqB/C,gCAlE3B3E,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,uBACVC,SAAA,6kCACA+H,gBAAiBC,EAAAA,wBAAwBC,oDAfRrH,EAAAA,yBAKzB2C,UACAmB,UACAoB,UACAsB,MAyETC,GAhE8C9E,ICjB9C,IAAA2F,GAAA,WAEC,SAAAA,EAA6BhT,EACT0C,EACAC,EACAC,EACAC,EACAC,EACAmQ,EACAC,EACAC,EACAC,EACAR,GAVSvY,KAAA2F,QAAAA,EACT3F,KAAAqI,KAAAA,EACArI,KAAAsI,SAAAA,EACAtI,KAAAuI,UAAAA,EACAvI,KAAAwI,SAAAA,EACAxI,KAAAyI,YAAAA,EACAzI,KAAA4Y,eAAAA,EACA5Y,KAAA6Y,eAAAA,EACA7Y,KAAA8Y,MAAAA,EACA9Y,KAAA+Y,IAAAA,EACA/Y,KAAAuY,WAAAA,EA8DrB,OA3DCI,EAAAzY,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGbgT,EAAAzY,UAAA8Y,QAAA,WACC,OAAOhZ,KAAKqI,MAGbsQ,EAAAzY,UAAA+Y,YAAA,WACC,OAAOjZ,KAAKsI,UAGbqQ,EAAAzY,UAAAgZ,aAAA,WACC,OAAOlZ,KAAKuI,WAGboQ,EAAAzY,UAAAiZ,WAAA,WACC,OAAOnZ,KAAKwI,UAGbmQ,EAAAzY,UAAAkZ,cAAA,WACC,OAAOpZ,KAAKyI,aAGbkQ,EAAAzY,UAAAmZ,mBAAA,WACC,OAAOrZ,KAAK4Y,gBAGbD,EAAAzY,UAAAoZ,mBAAA,WACC,OAAOtZ,KAAK6Y,gBAGbF,EAAAzY,UAAAqZ,SAAA,WACC,OAAOvZ,KAAK8Y,OAGbH,EAAAzY,UAAAsZ,OAAA,WACC,OAAOxZ,KAAK+Y,KAGbJ,EAAAzY,UAAAuZ,cAAA,WACC,OAAOzZ,KAAKuY,YAGbI,EAAAzY,UAAAwZ,sBAAA,SAAsBjE,EAAqBkE,EAA8BtR,GACxE,OAAOoN,EAAckE,EAAuBtR,GAAQA,EAAOoN,EAAckE,GAG1EhB,EAAAzY,UAAA0Z,OAAA,SAAO3Q,OAEF6P,EAAQ9Y,KAAKuZ,WAMjB,OAJc,IAAVT,IACHA,GAAS,GAGH7P,EAAO4Q,MAAMf,EAAO9Y,KAAKwZ,WAGlCb,EA1EA,GCAA,IAAAmB,GAAA,WAIA,SAAAA,IAcC9Z,KAAA+Z,gBAAkB,IAAI3Q,EAAAA,aAGtBpJ,KAAAga,gBAAkB,IAAI5Q,EAAAA,aAEtBpJ,KAAAia,cAAwB,EAExBja,KAAAka,cAAwB,EAiCzB,OA/BCJ,EAAA5Z,UAAAgK,YAAA,WACClK,KAAKma,gBACLna,KAAKoa,iBAGNN,EAAA5Z,UAAA+U,SAAA,WACCjV,KAAKga,gBAAgBpP,QAGtBkP,EAAA5Z,UAAA8U,SAAA,WACChV,KAAK+Z,gBAAgBnP,QAGdkP,EAAA5Z,UAAAia,cAAR,WAEMna,KAAK0K,SAIV1K,KAAKia,aAAeja,KAAK0K,OAAO4O,uBAGzBQ,EAAA5Z,UAAAka,cAAR,YAEMpa,KAAK0K,QAAW1K,KAAKuY,cAI1BvY,KAAKka,aAAela,KAAK0K,OAAO2O,2CAnDjC/I,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,iCACVC,SAAA,0WACA+H,gBAAiBC,EAAAA,wBAAwBC,2CAIxCnN,EAAAA,0BAGAA,EAAAA,+BAGAC,EAAAA,gCAGAA,EAAAA,UAsCFsO,EA1DA,GCAA,IAAAO,GAAA,WAKA,SAAAA,IAWCra,KAAAqJ,gBAAkB,IAAID,EAAAA,aAKvB,OAHCiR,EAAAna,UAAA6U,eAAA,SAAezM,GACdtI,KAAKqJ,gBAAgBuB,KAAKtC,wBAd3BgI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAA,6MACA+H,gBAAiBC,EAAAA,wBAAwBC,2CAIxCnN,EAAAA,+BAGAC,EAAAA,UAMF6O,EArBA,GCAA,IAAAC,GAAA,WAKA,SAAAA,KAgCA,OAhBCA,EAAApa,UAAAgK,YAAA,SAAYC,GACXnK,KAAKua,aAGND,EAAApa,UAAAqa,UAAA,WACKva,KAAK0K,SACR1K,KAAKwa,eAAiBxa,KAAK0K,OAAO6O,WAClCvZ,KAAKya,cAAgBza,KAAK0K,OAAO8O,SACjCxZ,KAAKuY,WAAavY,KAAK0K,OAAO+O,kBAIhCa,EAAApa,UAAAwa,iBAAA,WACC,OAAO1a,KAAKuY,WAAa,uBA7B1BjI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6BACVC,SAAA,6eACA+H,gBAAiBC,EAAAA,wBAAwBC,2CAIxCnN,EAAAA,SAyBF+O,EArCA,GCAA,IAAAK,GAAA,WA6BC,SAAAA,EAAoB3C,GAAAhY,KAAAgY,qBAAAA,EATpBhY,KAAA+Z,gBAAkB,IAAI3Q,EAAAA,aAGtBpJ,KAAAga,gBAAkB,IAAI5Q,EAAAA,aAEtBpJ,KAAAia,cAAwB,EAExBja,KAAAka,cAAwB,EA6CzB,OAxCCS,EAAAza,UAAAgK,YAAA,WACClK,KAAKma,gBACLna,KAAKoa,iBAGNO,EAAAza,UAAA+U,SAAA,WACCjV,KAAKga,gBAAgBpP,QAGtB+P,EAAAza,UAAA8U,SAAA,WACChV,KAAK+Z,gBAAgBnP,QAGtB+P,EAAAza,UAAA0a,UAAA,WACC5a,KAAKgY,qBAAqBzC,SAAS,EAAGvV,KAAK0K,OAAOsO,YAGnD2B,EAAAza,UAAA2a,SAAA,eACKC,EAAgBC,KAAKC,KAAKhb,KAAKuY,WAAavY,KAAK0K,OAAOuO,eAC5DjZ,KAAKgY,qBAAqBzC,SAASuF,EAAe9a,KAAK0K,OAAOsO,YAGvD2B,EAAAza,UAAAia,cAAR,WAEMna,KAAK0K,SAIV1K,KAAKia,aAAeja,KAAK0K,OAAO4O,uBAGzBqB,EAAAza,UAAAka,cAAR,YAEMpa,KAAK0K,QAAW1K,KAAKuY,cAI1BvY,KAAKka,aAAela,KAAK0K,OAAO2O,2CA/DjC/I,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6CACVC,SAAA,6gBACA+H,gBAAiBC,EAAAA,wBAAwBC,oDANjCvD,sCAUP5J,EAAAA,0BAGAA,EAAAA,+BAGAC,EAAAA,gCAGAA,EAAAA,UAkDFmP,EAxEA,GCAA,IAAAM,GAAA,WAyBC,SAAAA,EAAoBjD,GAAAhY,KAAAgY,qBAAAA,EARpBhY,KAAAuY,WAAqB,EAMrBvY,KAAA2Z,qBAA+B,EA0ChC,OArCCsB,EAAA/a,UAAAgK,YAAA,SAAYC,GACXnK,KAAKua,aAGNU,EAAA/a,UAAAqa,UAAA,WACC,GAAIva,KAAK0K,QAAU1K,KAAKuY,WAAY,KAC/BuC,EAAgBC,KAAKC,KAAKhb,KAAKuY,WAAavY,KAAK0K,OAAOuO,eAK5D,GAHAjZ,KAAKyV,YAAczV,KAAK0K,OAAOsO,UAE/BhZ,KAAKkb,MAAQ,GACTlb,KAAKkb,MAAMva,QAAUma,EACxB,IAAK,IAAIta,EAAI,EAAGA,GAAKsa,EAAeta,IACnCR,KAAKkb,MAAM1Y,KAAKhC,KAOpBya,EAAA/a,UAAAwa,iBAAA,WACC,OAAO1a,KAAKuY,WAAa,GAG1B0C,EAAA/a,UAAAqV,SAAA,SAASC,OACFC,EAAczV,KAAK0K,OAAOsO,UAChChZ,KAAKgY,qBAAqBzC,SAASC,EAAYC,IAGhDwF,EAAA/a,UAAAwZ,sBAAA,SAAsBrR,GACrB,OAAOrI,KAAK0K,OAAOgP,sBAAsB1Z,KAAKyV,YAAazV,KAAK2Z,qBAAsBtR,IAGvF4S,EAAA/a,UAAAib,WAAA,SAAW9S,GACV,OAAOrI,KAAKyV,cAAgBpN,uBAxD7BiI,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,yCACVC,SAAA,whBACA+H,gBAAiBC,EAAAA,wBAAwBC,oDANjCvD,sCAUP5J,EAAAA,0BAGAA,EAAAA,SAiDF0P,EAjEA,GCAA,IAAAG,GAAA,WAaA,SAAAA,KAuBA,2BAvBCC,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACAC,EAAAA,cAEDC,aAAc,CACb3D,GACAgC,GACAO,GACAC,GACAK,GACAM,IAEDS,QAAS,CACR5D,GACAgC,GACAO,GACAC,GACAK,GACAM,QAIFG,EApCA,GCAAO,GAAA,WAEA,SAAAA,KAOA,OAJCA,EAAAzb,UAAA0b,UAAA,SAAUC,GACT,OAAOA,EAAOpI,WAAWqI,QAAQ,wBAAyB,0BAJ3DC,EAAAA,KAAIxL,KAAA,CAAC,CAAEyL,KAAM,sBAOdL,EATA,GCAAM,GAAA,WAIA,SAAAA,KAUA,2BAVCZ,EAAAA,SAAQ9K,KAAA,CAAC,CACTkL,aAAc,CACbE,IAEDD,QAAS,CACRC,QAKFM,EAdA,GCAAC,GAAA,WAEA,SAAAA,KAsCA,2BAtCC5L,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,gzBAkCV+H,gBAAiBC,EAAAA,wBAAwBC,WAG1CwD,EAxCA,GCEAC,GAAA,SAAAtQ,GAEC,SAAAsQ,EAAYC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,yBAAuBpc,KAE5C,OAL0C8L,EAAAA,EAAAA,GAK1CqQ,EALA,CAA0CE,EAAAA,aCA1CC,GAAA,SAAAzQ,GAEC,SAAAyQ,EAAYF,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,kCAAgCpc,KAErD,OALmD8L,EAAAA,EAAAA,GAKnDwQ,EALA,CAAmDD,EAAAA,4BCKnD,SAAAE,mDAEA,OAD4CzQ,EAAAA,EAAAA,uBAD3C7D,EAAAA,aAEDsU,GAD4CC,EAAAA,eCN5CC,GAAA,WAEC,SAAAA,EAA6BC,GAAA1c,KAAA0c,OAAAA,EAU9B,OAPCD,EAAAvc,UAAAyc,cAAA,SAAcC,GACb,QAAU5c,KAAK0c,OAAOG,MAAI,SAAEhJ,GAAO,OAAA+I,EAAOE,WAAWjJ,OAGtD4I,EAAAvc,UAAA6c,OAAA,WACC,OAAO/c,KAAK0c,QAEdD,EAZA,GCFA,IAAAO,GAAA,WAMC,SAAAA,EAAYC,GACXjd,KAAKkd,iBAAmB,IAAIT,GAAiBQ,GAO/C,OAJCD,EAAA9c,UAAAid,gBAAA,WACC,OAAOnd,KAAKkd,kBAGdF,EAdA,GCAA,IAAAI,GAAA,WAMA,SAAAA,KASA,OANCA,EAAAld,UAAAqF,QAAA,SAAQ8X,OAEDC,EAAOD,EAAUF,kBAEvB,OAAO,IAAIH,GAAUM,wBAPtBrV,EAAAA,aASDmV,EAfA,GCGAG,GAAA,WAEC,SAAAA,EAA4BC,EACTC,EACAhW,EACAI,GAHS7H,KAAAwd,aAAAA,EACTxd,KAAAyd,eAAAA,EACAzd,KAAAyH,MAAAA,EACAzH,KAAA6H,YAAAA,EAMpB,OAHC0V,EAAArd,UAAAwd,eAAA,WACC,OAAO1d,KAAK6H,aAEd0V,EAXA,GCAA,IAAAI,GAAA,WAIC,SAAAA,EAA6BrW,EACTsW,EACAC,EACAC,EACAC,EACAtW,EACAuW,EACAnW,GAPS7H,KAAAsH,MAAAA,EACTtH,KAAA4d,OAAAA,EACA5d,KAAA6d,gBAAAA,EACA7d,KAAA8d,oBAAAA,EACA9d,KAAA+d,sBAAAA,EACA/d,KAAAyH,MAAAA,EACAzH,KAAAge,aAAAA,EACAhe,KAAA6H,YAAAA,EA4CrB,OAzCC8V,EAAAzd,UAAAwd,eAAA,WACC,OAAO1d,KAAK6H,aAGb8V,EAAAzd,UAAA+d,SAAA,WACC,OAAOje,KAAKyH,OAGbkW,EAAAzd,UAAAge,UAAA,WACC,OAAOle,KAAK4d,QAGbD,EAAAzd,UAAAie,mBAAA,WACC,OAAOne,KAAK6d,iBAGbF,EAAAzd,UAAAke,SAAA,WACC,OAAOpe,KAAKsH,OAGbqW,EAAAzd,UAAAme,sBAAA,WACC,OAAOre,KAAK8d,qBAGbH,EAAAzd,UAAAoe,wBAAA,WACC,OAAOte,KAAK+d,uBAGbJ,EAAAzd,UAAAqe,gBAAA,WACC,OAAOve,KAAKge,cAGbL,EAAAzd,UAAAse,cAAA,WACC,OAAO,IAAIjB,GACVvd,KAAKqe,wBACLre,KAAKse,0BACLte,KAAKie,WACLje,KAAK0d,mBAIRC,EAvDA,GCHA,IAAAc,GAAA,WAEC,SAAAA,EAA6BC,EACTC,GADS3e,KAAA0e,IAAAA,EACT1e,KAAA2e,OAAAA,EAWrB,OARCF,EAAAve,UAAA0e,mBAAA,WACC,OAAO5e,KAAK0e,KAGbD,EAAAve,UAAA2e,sBAAA,WACC,OAAO7e,KAAK2e,QAGdF,EAdA,GCAA,IAAAK,GAAA,WAOA,SAAAA,KAuBA,OApBCA,EAAA5e,UAAAqF,QAAA,SAAQ8X,OAEDW,EAAeX,EAAUkB,kBAE/B,OAAO,IAAIZ,GACVN,EAAUe,WACVf,EAAUa,YACVb,EAAUc,qBACVd,EAAUgB,wBACVhB,EAAUiB,0BACVjB,EAAUY,WACVje,KAAK+e,oBAAoBf,GACzBX,EAAUK,mBAIJoB,EAAA5e,UAAA6e,oBAAR,SAA4Bf,GAC3B,OAAO,IAAIS,GAAmBT,EAAagB,gBAAiBhB,EAAaiB,yCApB1EhX,EAAAA,aAuBD6W,EA9BA,GCAAI,GAAA,WAMA,SAAAA,KAmBA,OAhBCA,EAAAhf,UAAAqF,QAAA,SAAQ8X,GACP,OAAO,IAAI1E,GACV0E,EAAUlR,YACVkR,EAAUrE,UACVqE,EAAUpE,cACVoE,EAAUnE,eACVmE,EAAUlE,aACVkE,EAAUjE,gBACViE,EAAUhE,qBACVgE,EAAU/D,qBACV+D,EAAU8B,iBACV9B,EAAU+B,eACV/B,EAAU5D,sCAfZxR,EAAAA,aAmBDiX,EAzBA,GCAAG,GAAA,WAEC,SAAAA,EAA6BC,GAAAtf,KAAAsf,QAAAA,EAO9B,OAJCD,EAAAnf,UAAAqX,UAAA,WACC,OAAOvX,KAAKsf,SAGdD,EATA,GCAA,IAAAE,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAArf,UAAAqF,QAAA,SAAQ8X,GACP,OAAO,IAAIgC,GAAOhC,EAAU9F,kCAJ7BtP,EAAAA,aAODsX,EAZA,GCAAC,GAAA,WAEC,SAAAA,EAA6B7Z,EACT8Z,EACA5B,EACA6B,EACAC,GAJS3f,KAAA2F,QAAAA,EACT3F,KAAAyf,UAAAA,EACAzf,KAAA6d,gBAAAA,EACA7d,KAAA0f,eAAAA,EACA1f,KAAA2f,UAAAA,EAuBrB,OApBCH,EAAAtf,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGb6Z,EAAAtf,UAAA0f,aAAA,WACC,OAAO5f,KAAKyf,WAGbD,EAAAtf,UAAAie,mBAAA,WACC,OAAOne,KAAK6d,iBAGb2B,EAAAtf,UAAA2f,kBAAA,WACC,OAAO7f,KAAK0f,gBAGbF,EAAAtf,UAAA4f,aAAA,WACC,OAAO9f,KAAK2f,WAGdH,EA7BA,GCAA,IAAAO,GAAA,WAMA,SAAAA,KAcA,OAXCA,EAAA7f,UAAAqF,QAAA,SAAQya,OAEDra,EAAUqa,EAAkB7T,YACjCsT,EAAYO,EAAkBJ,eAC9B/B,EAAkBmC,EAAkBC,iBACpCP,EAAiBM,EAAkBH,oBACnCF,EAAYK,EAAkBF,eAE/B,OAAO,IAAIN,GAA2B7Z,EAAS8Z,EAAW5B,EAAiB6B,EAAgBC,wBAX5F1X,EAAAA,aAcD8X,EApBA,GCUAG,GAAA,SAAArU,GAcC,SAAAqU,EAAYC,EACTC,EACAC,EACA3V,EACAwM,EACAjO,EACA+W,GANH,IAAAja,EAOC8F,EAAAjL,KAAAZ,KAAMmgB,IAAIngB,YACV+F,EAAKqa,UAAYA,EACjBra,EAAKsa,OAASA,EACdta,EAAK2E,OAASA,EACd3E,EAAKmR,SAAWA,EAChBnR,EAAKkD,OAASA,EACdlD,EAAKia,kBAAoBA,IAuE3B,OAlG+BlU,EAAAA,EAAAA,GA8B9BoU,EAAAhgB,UAAAogB,aAAA,WACC,OAAOtgB,KAAKogB,WAGbF,EAAAhgB,UAAAqgB,UAAA,WACC,OAAOvgB,KAAKqgB,QAGbH,EAAAhgB,UAAAwT,UAAA,WACC,OAAO1T,KAAK0K,QAGbwV,EAAAhgB,UAAAyW,YAAA,WACC,OAAO3W,KAAKkX,UAGbgJ,EAAAhgB,UAAAoX,UAAA,WACC,OAAOtX,KAAKiJ,QAGbiX,EAAAhgB,UAAAsgB,qBAAA,WACC,OAAOxgB,KAAKggB,mBAGbE,EAAAhgB,UAAAugB,oBAAA,eAEOC,EAAc1gB,KAAKogB,UAAUjD,kBAAkBJ,SAErD,OAAO/c,KAAKkX,SAAS5D,QAAM,SAAEsJ,GAC5B,OAAO8D,EAAYC,MAAI,SAAE9M,GAAe,OAAA+I,EAAOE,WAAWjJ,UAI5DqM,EAAAhgB,UAAA0f,aAAA,WACC,OAAO5f,KAAKggB,kBAAkBJ,gBAG/BM,EAAAhgB,UAAAie,mBAAA,WACC,OAAOne,KAAKggB,kBAAkB7B,sBAG/B+B,EAAAhgB,UAAA0gB,gBAAA,WACC,OAAI5gB,KAAKugB,YAAYrC,YAAc,KAC3Ble,KAAKsX,YAAYC,aAM1B2I,EAAAhgB,UAAA0e,mBAAA,WACC,OAAO5e,KAAKqgB,OAAO9B,kBAAkBK,sBAItCsB,EAAAhgB,UAAA2e,sBAAA,WACC,OAAO7e,KAAKqgB,OAAO9B,kBAAkBM,yBAItCqB,EAAAhgB,UAAA2gB,iBAAA,WACC,OAAO7gB,KAAKkX,SAASvW,OAAS,GAI/Buf,EAAAhgB,UAAA4gB,wBAAA,WACC,OAAO9gB,KAAKggB,kBAAkB7T,aAGhC+T,EAlGA,CAA+Ba,EAAAA,6BCI9B,SAAAC,EAAYC,EACTC,EACArN,EACAsN,QAAA,IAAAA,IAAAA,EAAA,GALcnhB,KAAAmhB,QAAkB,EAMlCnhB,KAAKihB,KAAOA,EACZjhB,KAAKkhB,SAAWA,EAChBlhB,KAAKmhB,QAAUA,EAIdnhB,KAAK6T,GAHDA,GACMuN,EAAAA,sBAAsBC,WA0CnC,OApCCL,EAAA9gB,UAAAohB,QAAA,WACC,OAAOthB,KAAKihB,MAGbD,EAAA9gB,UAAAqhB,QAAA,WACC,MAAO,MAAQvhB,KAAK6T,GAAGiI,QAAQ,KAAM,KAGtCkF,EAAA9gB,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAGbmN,EAAA9gB,UAAAshB,WAAA,WACC,OAAOxhB,KAAKmhB,SAGbH,EAAA9gB,UAAAuhB,YAAA,WACC,OAAOzhB,KAAKkhB,UAGbF,EAAA9gB,UAAAwhB,OAAA,WACC,OAAO1hB,KAAKkhB,SAAW,GAAM,GAG9BF,EAAA9gB,UAAAyhB,MAAA,WACC,OAAO3hB,KAAKkhB,SAAW,GAAM,GAG9BF,EAAA9gB,UAAA8W,OAAA,SAAO4F,GACN,OAAO5c,KAAK6T,KAAO+I,EAAO/I,IAAM7T,KAAKwhB,eAAiB5E,EAAO4E,cAG9DR,EAAA9gB,UAAA4c,WAAA,SAAWjJ,GACV,OAAO7T,KAAK6T,KAAOA,gGAzDRmN,EAAUlgB,EAAA,CADtB8gB,EAAAA,6DACYZ,MCJb,IAAAa,GAAA,WAgBC,SAAAA,EAAoBC,EACTC,EACAC,EACAC,EACAC,GAJSliB,KAAA8hB,mBAAAA,EACT9hB,KAAA+hB,gBAAAA,EACA/hB,KAAAgiB,gBAAAA,EACAhiB,KAAAiiB,gBAAAA,EACAjiB,KAAAkiB,2BAAAA,EA4BZ,OAzBCL,EAAA3hB,UAAAqF,QAAA,SAAQ8X,OAED8E,EAAqB9E,EAAUiD,eACpC8B,EAAkB/E,EAAUkD,YAC5B8B,EAAkBhF,EAAU3J,YAC5B4O,EAAcjF,EAAU1G,cACxB4L,EAAoBlF,EAAU/F,YAC9B0I,EAAoB3C,EAAUmD,uBAE/B,OAAO,IAAIN,GACV7C,EAAU7J,QACVxT,KAAK8hB,mBAAmBvc,QAAQ4c,GAChCniB,KAAK+hB,gBAAgBxc,QAAQ6c,GAC7BpiB,KAAKgiB,gBAAgBzc,QAAQ8c,GAC7BriB,KAAKwiB,cAAcF,GACnBtiB,KAAKiiB,gBAAgB1c,QAAQgd,GAC7BviB,KAAKkiB,2BAA2B3c,QAAQya,KAIlC6B,EAAA3hB,UAAAsiB,cAAR,SAAsBvZ,GACrB,OAAOA,EAAOjC,KAAG,SAAEyb,GAClB,OAAO,IAAIzB,GAAWyB,EAAWC,QAASD,EAAWhB,cAAegB,EAAW5O,GAAI4O,EAAWjB,sCAhChGvZ,EAAAA,sDAXQmV,UACA0B,UACAI,UACAK,UACAQ,MA0CT8B,EAhDA,sBCaC,SAAAc,EAAoBC,EACTC,GADX,IAAA9c,EAEC8F,EAAAjL,KAAAZ,KAAM4iB,IAAqB5iB,YAFR+F,EAAA6c,qBAAAA,EACT7c,EAAA8c,mBAAAA,IAQZ,OAXgD/W,EAAAA,EAAAA,GAO/C6W,EAAAziB,UAAA4iB,YAAA,SAAYzF,GACX,OAAOrd,KAAK6iB,mBAAmBtd,QAAQ8X,wBATxCpV,EAAAA,sDAJQsU,UACAsF,MAeTc,GAXgDI,EAAAA,wBCThD,IAAAC,GAAA,SAAAnX,GAEC,SAAAmX,EAAY5G,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,sBAAoBpc,KAEzC,OALuC8L,EAAAA,EAAAA,GAKvCkX,EALA,CAAuC3G,EAAAA,4BCoBtC,SAAA4G,EAA6BC,EAClBC,GADX,IAAApd,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFqB+F,EAAAmd,eAAAA,EAClBnd,EAAAod,4BAAAA,EALMpd,EAAAia,kBAAoB,IAAI5R,IAExBrI,EAAAqd,mBAAqB,IAAIrN,EAAAA,cAMzChQ,EAAKmd,eACHG,QACAlH,GACAG,GACA0G,IAEA3P,KAAKtN,EAAKgN,aACVqF,WAAS,SAAEkL,OAELlH,EAAckH,EAAMlH,YAEpB7I,EAAYxN,EAAKod,4BAA4BI,QAAQnH,GAC1D4D,EAAoBzM,EAAUiN,uBAC9BhS,EAAc+E,EAAUC,QAEzBzN,EAAK7D,KAAKsM,EAAawR,QAyC3B,OAlEiDlU,EAAAA,EAAAA,GA6BhDmX,EAAA/iB,UAAAsjB,wBAAA,SAAwBhV,GAEvB,OAAOxO,KAAKyjB,oBAAoBjV,GAC1B6E,KACArM,EAAAA,KAAG,SAAE0c,GAAkC,OAAAA,EAAEvX,iBAIhD8W,EAAA/iB,UAAAyjB,YAAA,SAAYnV,GAEX,OAAOxO,KAAKyjB,oBAAoBjV,GAC1B6E,KACArM,EAAAA,KAAG,SAAE0c,GAAkC,OAAAA,EAAE5D,oBAIxCmD,EAAA/iB,UAAAujB,oBAAR,SAA4BjV,GAE3B,OAAOxO,KAAKojB,mBACNlN,eACA7C,KACAC,EAAAA,QAAM,SAAEsQ,OAED3iB,EAAMuN,EAAYgF,QAExB,OAAOoQ,EAAsBC,IAAI5iB,MAElC+F,EAAAA,KAAG,SAAE4c,GAAmE,OAAAA,EAAsB/U,IAAIL,EAAYgF,cAI7GyP,EAAA/iB,UAAAgC,KAAR,SAAasM,EAA0BwR,GACtChgB,KAAKggB,kBAAkBvR,IAAID,EAAYiF,WAAYuM,GACnDhgB,KAAKojB,mBAAmBlhB,KAAKlC,KAAKggB,wCA/DnC/X,EAAAA,sDAXqB6b,EAAAA,sBAObnB,MAuETM,GAlEiDvQ,IChBjD,IAAAqR,GAAA,WAeC,SAAAA,EAAoB7Q,EACT8Q,GADShkB,KAAAkT,oBAAAA,EACTlT,KAAAgkB,4BAAAA,EAoBZ,OAjBCD,EAAA7jB,UAAAkT,YAAA,SAAYgJ,GACX,YADW,IAAAA,IAAAA,EAAArI,IACJ/T,KAAKkT,oBAAoBE,YAAYgJ,IAG7C2H,EAAA7jB,UAAAsjB,wBAAA,SAAwBpH,GACvB,YADuB,IAAAA,IAAAA,EAAArI,IAChB/T,KAAKkT,oBACNE,YAAYgJ,GACZ/I,KACArM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAUuN,6BACxC3K,EAAAA,yBAIP4N,EAAA7jB,UAAAyjB,YAAA,SAAYvH,GACX,YADW,IAAAA,IAAAA,EAAArI,IACJ/T,KAAKgkB,4BAA4BL,YAAYvH,wBArBrDnU,EAAAA,sDANQ0L,UAGAsP,MA2BTc,EApCA,sBC+CC,SAAAE,EAAoB3U,EACT4U,EACA7U,EACA4I,EACAkM,EACAC,GALX,IAAAre,EAMC8F,EAAAjL,KAAAZ,OAAOA,YANY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAme,SAAAA,EACAne,EAAAsJ,WAAAA,EACAtJ,EAAAkS,mBAAAA,EACAlS,EAAAoe,OAAAA,EACApe,EAAAqe,0BAAAA,EAPXre,EAAAse,UAAYnI,KAgDb,OAxDiDpQ,EAAAA,EAAAA,GAmBhDmY,EAAA/jB,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAKiY,mBACHb,eACA/D,KACArT,KAAK+S,aAELqF,WAAS,SAAEE,GACXvS,EAAKue,eAAiBhM,EACtBvS,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKiY,mBACHT,qBACAnE,KACArT,KAAK+S,aAELqF,WAAS,SAAEmM,GACXxe,EAAKye,kBAAoBD,EAAc5jB,OACvCoF,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKokB,0BACHT,cACAtQ,KACArT,KAAK+S,aAELqF,WAAS,SAAEuH,GACX5Z,EAAK4Z,UAAYA,EACjB5Z,EAAKme,SAASO,SAAS1e,EAAKsJ,WAAWe,cAAe,cAAe,YAIxE6T,EAAA/jB,UAAAwkB,SAAA,WACC1kB,KAAKmkB,OAAOQ,KAAK3kB,KAAKqkB,gCA9EvB/T,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,2BACVC,SAAU,ijBAoBV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAnCAI,EAAAA,yBAAkDuT,EAAAA,iBAApBxT,EAAAA,kBAQvDmF,UANAsO,EAAAA,2BAOAd,MAoFTE,GAxDiDjR,ICrCjD,IAAA8R,GAAA,WAQA,SAAAA,KAmBA,2BAnBCzJ,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACAU,IAEDR,aAAc,CACbwI,GACA/H,IAEDR,QAAS,CACRQ,GACA+H,IAEDc,gBAAiB,CAChB7I,QAKF4I,EA3BA,GCAAE,GAAA,WAMA,SAAAA,KAyHA,OApCCA,EAAA9kB,UAAA+kB,YAAA,SAAY3e,GAEX,OAAQA,GAEP,KAAKG,EAASvD,KACb,OAAOlD,KAAKklB,aAEb,KAAKze,EAAStD,KACb,OAAOnD,KAAKmlB,aAEb,KAAK1e,EAASrD,KACb,OAAOpD,KAAKolB,aAEb,KAAK3e,EAASpD,MACb,OAAOrD,KAAKqlB,cAEb,KAAK5e,EAASjD,SACb,OAAOxD,KAAKslB,iBAEb,KAAK7e,EAASnD,KACb,OAAOtD,KAAKulB,aAEb,KAAK9e,EAASlD,OACb,OAAOvD,KAAKwlB,eAEb,KAAK/e,EAASxD,OACb,OAAOjD,KAAKylB,eAEb,KAAKhf,EAASL,SACb,OAAOpG,KAAK0lB,iBAEb,QACC,OAAO1lB,KAAKklB,mCArHf5U,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,0gDAsDTa,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,4BAG/CD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,0BAGjDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,0BAG/CD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,2BAG/CD,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,8BAGhDD,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,0BAGnDD,EAAAA,UAASf,KAAA,CAAC,OAAQ,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,4BAG/CD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,4BAGjDD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,8BAGjDD,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,OAuCrDyT,EA/HA,GCEA,kBAIC,SAAAa,IAFQ7lB,KAAA8lB,SAAW,IAAI/P,EAAAA,cAAiB,GAYzC,OAPC8P,EAAA3lB,UAAA0K,KAAA,SAAKzI,GACJnC,KAAK8lB,SAAS5jB,KAAKC,IAGpB0jB,EAAA3lB,UAAAiT,GAAA,WACC,OAAOnT,KAAK8lB,SAAS5P,gBAEvB2P,aCfCE,OAAA,EACAC,KAAA,EACAC,OAAA,oECKD,IAAAC,GAAA,SAAAra,GAAA,SAAAqa,IAAA,IAAAngB,EAAA,OAAA8F,GAAAA,EAAAhL,MAAAb,KAAAU,YAAAV,YAcoB+F,EAAAogB,eAAiB,GAEjBpgB,EAAAqgB,aAAe,KAgBnC,OAhC4Dta,EAAAA,EAAAA,GAkB3Doa,EAAAhmB,UAAAmmB,OAAA,WACCrmB,KAAKsmB,WAAWC,GAAcR,SAG/BG,EAAAhmB,UAAAsmB,OAAA,WACCxmB,KAAKsmB,WAAWC,GAAcN,SAGvBC,EAAAhmB,UAAAomB,WAAR,SAAmBG,GACdzmB,KAAKymB,QACRzmB,KAAKymB,OAAO7b,KAAK6b,mCA1BlBlb,EAAAA,4BAGAA,EAAAA,sBAGAA,EAAAA,qBAGAA,EAAAA,SAqBF2a,EAhCA,CAA4DlT,ICA5D,IAAA0T,GAAA,SAAA7a,GASC,SAAA6a,EAA8BC,SAA9B5gB,EACC8F,EAAAjL,KAAAZ,OAAOA,YADsB+F,EAAA4gB,YAAAA,EAFrB5gB,EAAA6gB,gBAAkB,SAI1B7gB,EAAK8gB,WAAa9gB,EAAK4gB,YAAYG,QAAKC,EAAA,IACtChhB,EAAK6gB,iBAAkB,CAAC,UA4E5B,OAxF4D9a,EAAAA,EAAAA,GAgB3D4a,EAAAxmB,UAAAgK,YAAA,SAAYC,QACWzE,IAAlByE,EAAQhI,OACXnC,KAAK6mB,WAAWhY,IAAI7O,KAAK4mB,iBAAiBI,SAAShnB,KAAKmC,QAI1DukB,EAAAxmB,UAAAuP,SAAA,WACCzP,KAAKinB,kBAGNP,EAAAxmB,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KACOmnB,EAAennB,KAAKonB,SAAShX,cAEnCpQ,KAAKqnB,WAAWF,GAEhBnnB,KAAKsnB,gBAAgBH,EAAahlB,OAElColB,EAAAA,UAAUJ,EAAc,QACtB9T,KACArT,KAAK+S,aAELqF,WAAS,WACTrS,EAAK8M,cACL9M,EAAKsgB,gBAGDmB,EAASD,EAAAA,UAAUJ,EAAc,SAEvCK,EACEnU,KACAC,EAAAA,QAAM,SAAEhR,GAAW,OAAAA,EAAEmlB,UAAY1hB,EAAKogB,kBACtCnmB,KAAK+S,aAELqF,WAAS,WACTrS,EAAK8M,cACL9M,EAAKsgB,YAGPmB,EACEnU,KACAC,EAAAA,QAAM,SAAEhR,GAAW,OAAAA,EAAEmlB,UAAY1hB,EAAKqgB,gBACtCpmB,KAAK+S,aAELqF,WAAS,WACTrS,EAAK8M,cACL9M,EAAKygB,aAIRE,EAAAxmB,UAAAmnB,WAAA,SAAWF,GACNnnB,KAAK0nB,OACRP,EAAaO,SAIPhB,EAAAxmB,UAAA+mB,eAAR,WAAA,IAAAlhB,EAAA/F,KACCA,KAAK6mB,WACHc,SAAS3nB,KAAK4mB,iBACdgB,aACAvU,KACArT,KAAK+S,aAELqF,WAAS,SAAEjW,GACX4D,EAAKuhB,gBAAgBnlB,OAIhBukB,EAAAxmB,UAAAonB,gBAAR,SAAwBnlB,GACnBnC,KAAK4nB,cACR5nB,KAAK4nB,aAAahd,KAAKzI,sCAnFxBmP,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEgB,QAAQ,OAsF/BmV,EAxFA,CAA4DR,uBCW3D,SAAA2B,EAAYC,UACXjc,EAAAjL,KAAAZ,KAAM8nB,IAAG9nB,KAEX,OALiD8L,EAAAA,EAAAA,uBAZhDwE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,0JAOV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAdzB8W,EAAAA,eAqBTF,GALiDnB,ICLjD,SAAgBsB,GAASC,EAAmChnB,GAE3D,GAAkC,mBADZzB,OAAO0oB,eAAeD,GACnBhnB,GACxB,MAAM,IAAIknB,MAAM,WAAalnB,EAAM,eAAiBgnB,EAAUhoB,YAAY+b,KAAO,oECOlF,SAAAoM,EAAYN,UACXjc,EAAAjL,KAAAZ,KAAM8nB,IAAG9nB,KAWX,OAdiD8L,EAAAA,EAAAA,GAOhDsc,EAAAloB,UAAAmnB,WAAA,SAAWF,GAENnnB,KAAK0nB,QACRP,EAAaO,QACbP,EAAakB,kBAAkB,EAAGlB,EAAahlB,MAAMxB,8BAvBvD2P,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kBACVC,SAAU,wJAOV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAjBzB8W,EAAAA,eA0BRO,EAAAA,CADCN,2HAQFI,GAdiD1B,ICpBjD6B,GAAA,WAMA,SAAAA,KAwDA,OAlBCA,EAAAroB,UAAA+kB,YAAA,SAAYuD,GAEX,OAAQA,GAEP,KAAK/jB,EAAS3B,OACb,OAAO9C,KAAKyoB,eAEb,KAAKhkB,EAAS5B,OACb,OAAO7C,KAAK0oB,eAEb,KAAKjkB,EAAS1B,QACb,OAAO/C,KAAK2oB,gBAEb,QACC,OAAO3oB,KAAK4oB,oCApDftY,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,i5BAyBTa,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,4BAGjDD,EAAAA,UAASf,KAAA,CAAC,SAAU,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,6BAGjDD,EAAAA,UAASf,KAAA,CAAC,UAAW,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,2BAGlDD,EAAAA,UAASf,KAAA,CAAC,QAAS,CAAEoV,KAAMC,EAAAA,YAAarU,QAAQ,OAqBlDgX,EA9DA,sBC4BC,SAAAM,IAAA,IAAA9iB,EACC8F,EAAAjL,KAAAZ,OAAOA,YAHC+F,EAAA6gB,gBAAkB,gBA2B5B,OAhCkD9a,EAAAA,EAAAA,GAWjD+c,EAAA3oB,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KACOmnB,EAAennB,KAAK8oB,YAAY1Y,cAAc2Y,cAAc,0BAElE5B,EAAaO,QAEbH,EAAAA,UAAUJ,EAAc,QACtB9T,KACA2V,EAAAA,aAAa,KACbhpB,KAAK+S,aAELqF,WAAS,WACTrS,EAAK8M,cACL9M,EAAKsgB,aAIRwC,EAAA3oB,UAAA+oB,OAAA,SAAOC,GACNlpB,KAAK4nB,aAAahd,KAAKse,wBA1CxB5Y,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,mBACVC,SAAU,2KASV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,oFAIhCK,EAAAA,UAASf,KAAA,CAAC,WAAY,CAAEoV,KAAMvU,EAAAA,WAAYG,QAAQ,OA8BpDsX,GAhCkD3C,ICrBlD,IAAAiD,GAAA,WAGA,SAAAA,KAcA,2BAdC7Y,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,aACVC,SAAU,6CAIT2Y,EAAAA,aAAY7Y,KAAA,CAACqV,EAAAA,YAAa,CAAErU,QAAQ,oBAKpChG,EAAAA,SAGF4d,EAjBA,GCAA,IAAAE,GAAA,WAoBC,SAAAA,EAAoBC,GAAAtpB,KAAAspB,UAAAA,EAOrB,OAJCD,EAAAnpB,UAAAgK,YAAA,WACClK,KAAKupB,SAAWvpB,KAAKspB,UAAUE,wBAAwBxpB,KAAKypB,8BApB7DnZ,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oBACVC,SAAU,mDAKV+H,gBAAiBC,EAAAA,wBAAwBC,oDAVjCgR,EAAAA,iDAcPne,EAAAA,SAYF8d,EA3BA,sBCOA,SAAAM,mDAEA,OAD8C7d,EAAAA,EAAAA,uBAD7C7D,EAAAA,aAED0hB,GAD8CnN,EAAAA,8BCI7C,SAAAoN,EAAYC,EACTC,UACFje,EAAAjL,KAAAZ,KAAM6pB,EAA0BC,IAAuB9pB,KAGzD,OAPuD8L,EAAAA,EAAAA,uBADtD7D,EAAAA,sDAHQ0hB,UAJAI,EAAAA,0BAeTH,GAPuDI,EAAAA,2BCNvD,gCCQC,SAAAC,EAAoBC,GAApB,IAAAnkB,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAAmkB,kCAAAA,IAYrB,OAd4Dpe,EAAAA,EAAAA,GAM3Dme,EAAA/pB,UAAAqjB,QAAA,SAAQnH,GACP,OAAOpc,KAAKkqB,kCAAkC3G,QAAQnH,IAGvD6N,EAAA/pB,UAAAiqB,KAAA,SAAK9M,GACJrd,KAAKkqB,kCAAkCC,KAAK9M,wBAZ7CpV,EAAAA,sDAJQ2hB,MAmBTK,GAd4DG,ICJ5D,kBAMC,SAAAC,EAAuCC,EACxBC,GADwBvqB,KAAAsqB,6BAAAA,EACxBtqB,KAAAuqB,yBAAAA,EALPvqB,KAAAwqB,UAAwD,IAAIpc,IAE5DpO,KAAAyqB,mBAAsC,KAI7CzqB,KAAK0qB,2BAyCP,OApCCL,EAAAnqB,UAAAyqB,aAAA,WACC,OAAO3qB,KAAKwqB,WAGbH,EAAAnqB,UAAA0qB,QAAA,WACK5qB,KAAKyqB,qBACRzqB,KAAKyqB,mBAAmBG,UACxB5qB,KAAKyqB,mBAAqB,OAIpBJ,EAAAnqB,UAAAwqB,yBAAR,eAEOG,EAAmB7qB,KAAKuqB,yBAAyBO,wBAAwB9qB,KAAKsqB,8BAE9ES,EAAqBC,EAAAA,SAAS7qB,OAAO,CAAEuQ,UAAW,KAExD1Q,KAAKyqB,mBAAqBI,EAAiB1qB,OAAO4qB,GAElD/qB,KAAKirB,eAGEZ,EAAAnqB,UAAA+qB,YAAR,WAAA,IAAAllB,EAAA/F,KACCA,KAAKkrB,kBACHllB,SAAO,SAAE5B,GACT2B,EAAKolB,mBAAmB/mB,OAInBimB,EAAAnqB,UAAAirB,mBAAR,SAA2BC,OAEpB3a,EAAWzQ,KAAKyqB,mBAAmBY,SAASpG,YAAYmG,GAE9DprB,KAAKwqB,UAAU/b,IAAI2c,EAAI3a,IAGzB4Z,wBC7CC,SAAAiB,EAAYf,UACX1e,EAAAjL,KAAAZ,KACCglB,GACAuF,IACAvqB,KAOH,OAbyC8L,EAAAA,EAAAA,GASxCwf,EAAAprB,UAAAgrB,gBAAA,WACC,OAAO1rB,OAAO+rB,KAAK9kB,GACdO,KAAG,SAAC/F,GAAO,OAAAwF,EAASxF,2BAZ1BgH,EAAAA,sDAPQujB,EAAAA,4BAqBTF,GAbyCjB,ICRzCoB,GAAA,WAQC,SAAAA,EAAoBC,GAAA1rB,KAAA0rB,sBAAAA,EASrB,OANCD,EAAAvrB,UAAAyrB,aAAA,SAAarlB,GAGZ,OAFuBtG,KAAK0rB,sBAAsBf,eAE5B9b,IAAIvI,wBAT3B2B,EAAAA,sDAJQqjB,MAgBTG,EAjBA,sBCSC,SAAAG,EAAYrB,UACX1e,EAAAjL,KAAAZ,KACCuoB,GACAgC,IACAvqB,KAOH,OAbyC8L,EAAAA,EAAAA,GASxC8f,EAAA1rB,UAAAgrB,gBAAA,WACC,OAAO1rB,OAAO+rB,KAAK9mB,GACduC,KAAG,SAAC/F,GAAO,OAAAwD,EAASxD,2BAZ1BgH,EAAAA,sDANQujB,EAAAA,4BAoBTI,GAbyCvB,ICPzCwB,GAAA,WAQC,SAAAA,EAAoBC,GAAA9rB,KAAA8rB,oBAAAA,EASrB,OANCD,EAAA3rB,UAAAyrB,aAAA,SAAanD,GAGZ,OAFuBxoB,KAAK8rB,oBAAoBnB,eAE1B9b,IAAI2Z,wBAT3BvgB,EAAAA,sDAJQ2jB,MAgBTC,EAjBA,WCCCE,IAAA,EACAC,KAAA,EACAnoB,KAAA,0DCHD,IAAAooB,GAAA,WAQC,SAAAA,EAAYC,GAFKlsB,KAAAmsB,iBAAgB,SAA8BhqB,GAAe,OAAAA,GAInD,mBAAf+pB,GACVlsB,KAAKsG,KAAOG,EAASL,SACrBpG,KAAKmsB,iBAAmBD,GAExBlsB,KAAKsG,KAAO4lB,EAYf,OARCD,EAAA/rB,UAAAksB,YAAA,WACC,OAAOpsB,KAAKsG,MAGb2lB,EAAA/rB,UAAAmsB,oBAAA,WACC,OAAOrsB,KAAKmsB,kBAGdF,EA1BA,GCAA,IAAAK,GAAA,WA8BC,SAAAA,EAAYC,EACTC,EACArlB,EACAC,EACAd,EACAgB,GAlBHtH,KAAAysB,WAAaC,GAAW7oB,KAOhB7D,KAAA2F,SAAmB,EAInB3F,KAAAsG,KAAmB,IAAI2lB,GAAWxlB,EAASvD,MAQlDlD,KAAKusB,SAAWA,EAChBvsB,KAAKwsB,YAAcA,EACnBxsB,KAAKmH,aAAeA,EAEhBC,IACHpH,KAAKoH,OAASA,GAGXd,IACHtG,KAAKsG,KAAOA,GAGTgB,IACHtH,KAAKsH,MAAQA,GAqDhB,OAhDCglB,EAAApsB,UAAAysB,gBAAA,WACC,OAAO3sB,KAAKmH,cAGbmlB,EAAApsB,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGbD,EAAApsB,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGb2mB,EAAApsB,UAAA2sB,WAAA,SAAWlnB,GACV3F,KAAK2F,QAAUA,GAGhB2mB,EAAApsB,UAAA4sB,SAAA,WACC,OAAO9sB,KAAKwsB,aAGbF,EAAApsB,UAAA6sB,UAAA,WACC,OAAO/sB,KAAKoH,QAGbklB,EAAApsB,UAAA8sB,YAAA,WACC,OAAOhtB,KAAKwsB,YAAYQ,eAGzBV,EAAApsB,UAAAksB,YAAA,WACC,OAAOpsB,KAAKsG,KAAK8lB,eAGlBE,EAAApsB,UAAAmsB,oBAAA,WACC,OAAOrsB,KAAKsG,KAAK+lB,uBAGlBC,EAAApsB,UAAA+sB,cAAA,SAAcxG,GACbzmB,KAAKysB,WAAahG,GAGnB6F,EAAApsB,UAAAgtB,QAAA,SAAQ5mB,GACPtG,KAAKsG,KAAOA,GAGbgmB,EAAApsB,UAAAitB,QAAA,WACC,OAAOntB,KAAKsG,MAGdgmB,EAtGA,GCIA,IAAAc,GAAA,WAMC,SAAAA,EAAmBC,EACTC,EAEAC,EACAjmB,EACUkmB,EACAjB,EACAE,EACA9mB,GARD3F,KAAAqtB,aAAAA,EACTrtB,KAAAstB,aAAAA,EAEAttB,KAAAutB,QAAAA,EACAvtB,KAAAsH,MAAAA,EACUtH,KAAAwtB,QAAAA,EACAxtB,KAAAusB,SAAAA,EACAvsB,KAAAysB,WAAAA,EACAzsB,KAAA2F,QAAAA,EA8BrB,OA3BCynB,EAAAltB,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGba,EAAAltB,UAAAutB,WAAA,WACC,OAAOztB,KAAKwtB,SAGbJ,EAAAltB,UAAAwtB,cAAA,WACC,OAAO1tB,KAAKysB,YAGbW,EAAAltB,UAAAytB,UAAA,WACC,OAAO3tB,KAAKysB,aAAeC,GAAWX,KAGvCqB,EAAAltB,UAAA0tB,WAAA,WACC,OAAO5tB,KAAKysB,aAAeC,GAAWV,MAGvCoB,EAAAltB,UAAA2tB,SAAA,WACC,OAAO7tB,KAAKysB,aAAeC,GAAW7oB,MAGvCupB,EAAAltB,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAEdynB,EA5CA,GCJA,IAAAU,GAEC,SAAmBrE,GAAAzpB,KAAAypB,QAAAA,GCFpB,IAAAsE,GAAA,WAIC,SAAAA,EAAYla,GACX7T,KAAK6T,GAAKA,EAeZ,OAZCka,EAAA7tB,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAGbka,EAAA7tB,UAAAuT,SAAA,WACC,OAAOzT,KAAK6T,IAGbka,EAAA7tB,UAAA8W,OAAA,SAAOwW,GACN,OAAOA,EAAQha,UAAYxT,KAAK6T,IAGlCka,EApBA,GCIA,IAAAC,GAAA,WAOC,SAAAA,EAAmBvd,EACT6c,EACAW,EACAC,EACA5mB,EACA6mB,EACU/pB,EACAkC,GAPDtG,KAAAyQ,SAAAA,EACTzQ,KAAAstB,aAAAA,EACAttB,KAAAiuB,SAAAA,EACAjuB,KAAAkuB,SAAAA,EACAluB,KAAAsH,MAAAA,EACAtH,KAAAmuB,cAAAA,EACUnuB,KAAAoE,KAAAA,EACApE,KAAAsG,KAAAA,EAqErB,OAlEC0nB,EAAA9tB,UAAAkuB,SAAA,SAASxR,EAAoByR,OAEtBlsB,EAAQnC,KAAKkuB,SAAStR,GAE5B,GAAI5c,KAAKoE,OAASK,EAAS3B,OAC1B,OAAOX,EAGR,GAAInC,KAAKsG,MAAQtG,KAAKsG,KAAK8lB,gBAAkB3lB,EAASL,SACrD,OAAOjE,EAGR,GAAIksB,EAAc,CAUjB,QARIC,EAAc,GAAKtuB,KAAKkuB,SAAStR,GACpC2R,EAAyBD,EAAI5pB,oBAC7B8pB,EAAsBH,EAAa3pB,oBAEhC+pB,EAA2B,GAE3BzgB,EAAQ,EAELA,EAAQwgB,EAAoB7tB,QAAQ,KAEpC+tB,EAAQH,EAAeI,QAAQH,EAAqBxgB,GAEtD0gB,GAAS,GACZD,EAAUjsB,KAAKksB,GACf1gB,EAAQ0gB,EAAQL,EAAa1tB,QAG7BqN,EAAQwgB,EAAoB7tB,WAIxBiuB,EAAMN,EAAIO,MAAM,IAyBtB,OAvBAJ,EAAUzoB,SAAO,SAAE8oB,GAElB,IAAK,IAAItuB,EAAI,EAAGA,EAAI6tB,EAAa1tB,OAAQH,GAAK,EAAG,KAE5CuuB,OAAE,EAGLA,EADS,IAANvuB,EACE,oCAAoCouB,EAAIE,EAAMtuB,GAE9CouB,EAAIE,EAAMtuB,GAGZA,IAAM6tB,EAAa1tB,OAAS,IAC/BouB,GAAM,WAGPH,EAAIE,EAAMtuB,GAAKuuB,MAKjBT,EAAMM,EAAII,KAAK,IAIf,OAAOhvB,KAAKkuB,SAAStR,IAIxBoR,EAnFA,GCDA,IAAAiB,GAAA,WAiCC,SAAAA,EAAY5nB,EACTklB,EACA5mB,EACiBvB,EACAkC,EACjBc,EACA8nB,QAAA,IAAAA,IAAAA,EAAmBxC,GAAW7oB,MAHb7D,KAAAoE,KAAAA,EACApE,KAAAsG,KAAAA,EAGnBtG,KAAKqH,MAAQA,EACbrH,KAAKusB,SAAWA,EAChBvsB,KAAK2F,QAAUA,EACf3F,KAAKoH,OAASA,EACdpH,KAAKysB,WAAayC,EA4CpB,OAzCCD,EAAA/uB,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGbspB,EAAA/uB,UAAAivB,UAAA,SAAU/nB,GACTpH,KAAKoH,OAASA,GAGf6nB,EAAA/uB,UAAAkvB,SAAA,SAAS/nB,GACRrH,KAAKqH,MAAQA,GAGd4nB,EAAA/uB,UAAAmvB,iCAAA,SAAiCrhB,OAG5BshB,EADEloB,EAAcpH,KAAKoH,OAGH,iBAAXA,EACVkoB,EAAoB,IAAIxB,GAAY1mB,GACR,mBAAXA,IACjBkoB,EAAoB,IAAIxB,GAAY1mB,EAAO4G,SAGtCwf,EAAU,IAAIO,GAAQ/tB,KAAKqH,MAAMmM,QAAQA,SAE/C,OAAO,IAAI4Z,GAAwBptB,KAAKuvB,eAAgBvvB,KAAKstB,aAAcgC,EAAmBtvB,KAAKsH,MAAOkmB,EAASxtB,KAAKusB,SAAUvsB,KAAKysB,WAAYzsB,KAAK2F,UAGzJspB,EAAA/uB,UAAAsvB,mCAAA,WAAA,IAAAzpB,EAAA/F,KAMC,OAAO,IAAIguB,GAAyBhuB,KAAKyvB,aAAczvB,KAAKstB,cAAc,GAJ9D,SAAI1Q,GACf,OAAO7W,EAAKomB,iBAAiBpmB,EAAKsB,MAAMqoB,aAAX3pB,CAAyB6W,MAGmC5c,KAAKsH,MAAOtH,KAAKqH,MAAMmM,QAASxT,KAAKoE,KAAMpE,KAAKsG,OAG3I2oB,EAAA/uB,UAAAyvB,UAAA,aAIDV,EAxFA,GCHA,IAAAW,GAAA,WAcC,SAAAA,EAAoBC,EACTC,GADS9vB,KAAA6vB,uBAAAA,EACT7vB,KAAA8vB,uBAAAA,EA+EZ,OA1ECF,EAAA1vB,UAAAC,OAAA,SAAO4vB,GAEN,OAAIA,aAAkBzD,GACdtsB,KAAKgwB,uBAAuBD,GAE5B/vB,KAAKiwB,6BAA6BF,IAInCH,EAAA1vB,UAAA8vB,uBAAR,SAA+BD,OAE1BG,EAAY,IAAIjB,GACnBc,EAAOjD,WACPiD,EAAOnD,cACPmD,EAAO5jB,YACP4jB,EAAO/C,cACP+C,EAAO5C,UACP4C,EAAOhD,YACPgD,EAAOtD,YAYR,OATAyD,EAAUT,aAAezvB,KAAKmwB,iBAAiBJ,EAAO3D,eACtD8D,EAAUX,eAAiBvvB,KAAKmwB,iBAAiB1pB,EAASvD,MAE1DgtB,EAAU/D,iBAAmB4D,EAAO1D,sBAEpC6D,EAAU5C,aAAettB,KAAKowB,iBAAiBL,EAAO/C,eAEtDkD,EAAU5oB,OAASyoB,EAAOzoB,MAEnB4oB,GAGAN,EAAA1vB,UAAA+vB,6BAAR,SAAqCI,OAEhCH,EAAY,IAAIjB,GACnBoB,EAAavD,WACbuD,EAAazD,eACb,EACAyD,EAAarD,cACbqD,EAAalD,UACbkD,EAAatD,YACbsD,EAAa3C,iBAYd,OATAwC,EAAUT,aAAezvB,KAAKmwB,iBAAiBE,EAAajE,eAC5D8D,EAAUX,eAAiBvvB,KAAKmwB,iBAAiB1pB,EAASvD,MAE1DgtB,EAAU/D,iBAAmBkE,EAAahE,sBAE1C6D,EAAU5C,aAAettB,KAAKowB,iBAAiBC,EAAarD,eAE5DkD,EAAU5oB,OAAS+oB,EAAajS,WAEzB8R,GAGRN,EAAA1vB,UAAAowB,cAAA,SAAcpnB,GAAd,IAAAnD,EAAA/F,KACC,OAAOkJ,EAAQlC,KAAG,SAAE+oB,GAAyB,OAAAhqB,EAAK5F,OAAO4vB,OAGlDH,EAAA1vB,UAAAiwB,iBAAR,SAAyB7pB,GAExB,OAAIA,IAASG,EAASL,SACdpG,KAAK6vB,uBAAuBlE,aAAallB,EAASL,UAElDpG,KAAK6vB,uBAAuBlE,aAAarlB,IAI1CspB,EAAA1vB,UAAAkwB,iBAAR,SAAyB5H,GACxB,OAAOxoB,KAAK8vB,uBAAuBnE,aAAanD,wBAhFjDvgB,EAAAA,sDATQwjB,UACAI,MA2FT+D,EA9FA,GCOA,IAAAW,GAAA,SAAA1kB,GAEC,SAAA0kB,EAAYpQ,EACQqQ,EACAC,EACAC,EACAppB,EACAqpB,GALpB,IAAA5qB,EAMC8F,EAAAjL,KAAAZ,KAAMmgB,IAAIngB,YALS+F,EAAAyqB,MAAAA,EACAzqB,EAAA0qB,WAAAA,EACA1qB,EAAA2qB,cAAAA,EACA3qB,EAAAuB,MAAAA,EACAvB,EAAA4qB,YAAAA,IAqDrB,OA5DiC7kB,EAAAA,EAAAA,GAWhCykB,EAAArwB,UAAA0wB,iBAAA,WACC,OAAO5wB,KAAK0wB,eAGbH,EAAArwB,UAAA2wB,cAAA,WACC,OAAO7wB,KAAKywB,YAGbF,EAAArwB,UAAA4wB,uBAAA,WACC,OAAO9wB,KAAK4wB,mBACN5pB,KAAG,SAAE+oB,EAA0B/hB,GAAkB,OAAA+hB,EAAOV,iCAAiCrhB,OAGhGuiB,EAAArwB,UAAA6wB,iBAAA,WACC,OAAO/wB,KAAK6wB,gBACN7pB,KAAG,SAAE+oB,EAA0B/hB,GAAkB,OAAA+hB,EAAOV,iCAAiCrhB,OAGhGuiB,EAAArwB,UAAA8wB,mBAAA,WACC,OAAOhxB,KAAK4wB,mBACN5pB,KAAG,SAAE+oB,GAA6B,OAAAA,EAAOP,yCAGhDe,EAAArwB,UAAAke,SAAA,WACC,OAAOpe,KAAKsH,OAGbipB,EAAArwB,UAAA+wB,kBAAA,WACC,OAAQjxB,KAAKsH,MAAQ,GAGtBipB,EAAArwB,UAAAgxB,QAAA,WACC,OAAOlxB,KAAKwwB,OAGbD,EAAArwB,UAAAixB,qBAAA,WACC,OAAOnxB,KAAK2wB,aAGbJ,EAAArwB,UAAA8W,OAAA,SAAOoa,GACN,OAAOpxB,KAAKsH,QAAU8pB,EAAY9pB,OACjCtH,KAAK2wB,cAAgBS,EAAYT,aACjC3wB,KAAKqxB,gBAAgBD,EAAYX,aAGnCF,EAAArwB,UAAAmxB,gBAAA,SAAgBnoB,GACf,OAAOlJ,KAAKywB,WAAW9vB,SAAWuI,EAAQvI,QAG5C4vB,EA5DA,CAAiCxP,EAAAA,WCPjC,IAAAuQ,GAAA,WAaC,SAAAA,EAAoBC,GAAAvxB,KAAAuxB,wBAAAA,EA6CrB,OA1CCD,EAAApxB,UAAAqF,QAAA,SAAQ8X,OAEDmT,EAAQnT,EAAU6T,UACvBT,EAAkCpT,EAAUmU,aAC5Cd,EAA2CrT,EAAUuT,mBACrDa,EAAyCzxB,KAAK0xB,mBAAmBjB,GACjEkB,EAA4C3xB,KAAK4xB,gCAAgClB,GACjFppB,EAAQ+V,EAAUe,WAClBuS,EAActT,EAAUwU,kBACxBhe,EAAKwJ,EAAU7J,QAEhB,OAAO,IAAI+c,GAAY1c,EAAI2c,EAAOiB,EAAeE,EAAkBrqB,EAAOqpB,IAGnEW,EAAApxB,UAAAwxB,mBAAR,SAA2BxoB,GAA3B,IAAAnD,EAAA/F,KAEO8xB,EAAsC,GAS5C,OAPA5oB,EAAQlD,SAAO,SAAE+pB,OAEVG,EAAYnqB,EAAKwrB,wBAAwBpxB,OAAO4vB,GAEtD+B,EAAWtvB,KAAK0tB,MAGV4B,GAGAR,EAAApxB,UAAA0xB,gCAAR,SAAwClB,GAAxC,IAAA3qB,EAAA/F,KAEO8xB,EAAsC,GAS5C,OAPApB,EAAc1qB,SAAO,SAAE+pB,OAEhBG,EAAYnqB,EAAKwrB,wBAAwBpxB,OAAO4vB,GAEtD+B,EAAWtvB,KAAK0tB,MAGV4B,uBA7CR7pB,EAAAA,sDARQ2nB,MAwDT0B,EA1DA,sBCaC,SAAAS,EAAoBlI,EACTmI,GADX,IAAAjsB,EAEC8F,EAAAjL,KAAAZ,KAAM6pB,IAAyB7pB,YAFZ+F,EAAA8jB,yBAAAA,EACT9jB,EAAAisB,qBAAAA,IAQZ,OAXkDlmB,EAAAA,EAAAA,GAOjDimB,EAAA7xB,UAAA4iB,YAAA,SAAYzF,GACX,OAAOrd,KAAKgyB,qBAAqBzsB,QAAQ8X,wBAT1CpV,EAAAA,sDAJQ0hB,UACA2H,MAeTS,GAXkDhP,EAAAA,wBCLlD,OAAA,aCJA,IAAAkP,GAAA,SAAApmB,GAEC,SAAAomB,EAAY7V,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,2BAAyBpc,KAE9C,OAL4C8L,EAAAA,EAAAA,GAK5CmmB,EALA,CAA4C5V,EAAAA,aCA5C6V,GAAA,SAAArmB,GAEC,SAAAqmB,EAAY9V,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,mCAAiCpc,KAEtD,OALoD8L,EAAAA,EAAAA,GAKpDomB,EALA,CAAoD7V,EAAAA,aCApD8V,GAAA,SAAAtmB,GAEC,SAAAsmB,EAAY/V,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,+BAA6Bpc,KAElD,OALgD8L,EAAAA,EAAAA,GAKhDqmB,EALA,CAAgD9V,EAAAA,aCAhD+V,GAAA,SAAAvmB,GAEC,SAAAumB,EAAYhW,EACT9H,UACFzI,EAAAjL,KAAAZ,KAAMoc,EAAa,oCAAqC9H,IAAQtU,KAGlE,OAPuD8L,EAAAA,EAAAA,GAOvDsmB,EAPA,CAAuD/V,EAAAA,aCAvDgW,GAAA,SAAAxmB,GAEC,SAAAwmB,EAAYjW,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,6BAA2Bpc,KAEhD,OAL8C8L,EAAAA,EAAAA,GAK9CumB,EALA,CAA8ChW,EAAAA,aCI9CiW,GAAA,SAAAzmB,GAEC,SAAAymB,EAAYlW,EACQsU,GADpB,IAAA3qB,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,qCAAmCpc,YADnC+F,EAAA2qB,cAAAA,IAYrB,OAfsD5kB,EAAAA,EAAAA,GAOrDwmB,EAAApyB,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAKoc,aAGbkW,EAAApyB,UAAA0wB,iBAAA,WACC,OAAO5wB,KAAK0wB,eAGd4B,EAfA,CAAsDjW,EAAAA,aCJtD,IAAAmW,GAAA,SAAA3mB,GAEC,SAAA2mB,EAAYpW,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,qCAAmCpc,KAExD,OALsD8L,EAAAA,EAAAA,GAKtD0mB,EALA,CAAsDnW,EAAAA,aCAtDoW,GAAA,SAAA5mB,GAEC,SAAA4mB,EAAYrW,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,oCAAkCpc,KAEvD,OALqD8L,EAAAA,EAAAA,GAKrD2mB,EALA,CAAqDpW,EAAAA,aCArDqW,GAAA,SAAA7mB,GAEC,SAAA6mB,EAAYtW,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,qCAAmCpc,KAExD,OALsD8L,EAAAA,EAAAA,GAKtD4mB,EALA,CAAsDrW,EAAAA,4BC2BrD,SAAAsW,EAAoBzP,EACT0P,GADX,IAAA7sB,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFY+F,EAAAmd,eAAAA,EACTnd,EAAA6sB,8BAAAA,EAPM7sB,EAAA8sB,2BAA6B,IAAIzkB,IAEjCrI,EAAA+sB,aAAe,IAAI/c,EAAAA,cAAwC,GAE3DhQ,EAAA4M,aAAe,IAAIC,EAAAA,QAMnC7M,EAAKmd,eACHG,QACA4O,GACAC,GACAC,GACAC,GACAC,GACAG,GACAC,GACAC,GAAgC,IAGhCrf,KACAN,EAAAA,UAAUhN,EAAK4M,eAEfyF,WAAS,SAAEkL,OAELlH,EAAckH,EAAMlH,YAEpBgV,EAAcrrB,EAAK6sB,8BAA8BrP,QAAQnH,GAC9Dnb,EAAMmwB,EAAY5d,QAAQC,WAE3B1N,EAAK8sB,2BAA2BpkB,IAAIxN,EAAKmwB,GAEzCrrB,EAAK+sB,aAAa5wB,KAAK6D,EAAK8sB,iCAwBhC,OA5DmD/mB,EAAAA,EAAAA,GAwClD6mB,EAAAzyB,UAAA+P,YAAA,WACCjQ,KAAK2S,aAAazQ,OAClBlC,KAAK2S,aAAaG,YAGnB6f,EAAAzyB,UAAAiT,GAAA,SAAGiJ,GAEF,OAAOpc,KAAK8yB,aACN5c,eACA7C,KACAC,EAAAA,QAAM,SAAEuf,OAED5xB,EAAMmb,EAAY5I,QAExB,OAAOqf,EAA2BhP,IAAI5iB,MAEvC+F,EAAAA,KAAG,SAAE6rB,GAAyD,OAAAA,EAA2BhkB,IAAIuN,EAAY5I,kCAzDhHvL,EAAAA,sDAhBkC6b,EAAAA,sBAI1BiO,MAyETY,GA5DmDI,ICbnD,IAAaC,GAAsC,CAClDpJ,GACA,CACClc,QAAS0c,GACT6I,SAAUhJ,KAICiJ,GAAoC,CAChDnB,GACA,CACCrkB,QAASqlB,GACTE,SAAUN,KAICQ,GAA+B,CAC3CxJ,ICzBDyJ,GAAA,WAIC,SAAAA,EAAYvf,GACX7T,KAAK6T,GAAKA,EAWZ,OARCuf,EAAAlzB,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAGbuf,EAAAlzB,UAAA8W,OAAA,SAAOuV,GACN,OAAOvsB,KAAK6T,KAAO0Y,EAAS/Y,SAG9B4f,EAhBA,GCAA,IAAAC,GAAA,WAYA,SAAAA,KAsDA,OAjDCA,EAAAnzB,UAAAC,OAAA,SAAO8gB,GAEN,OAAIthB,MAAM2zB,QAAQrS,GACVjhB,KAAKswB,cAAcrP,GAEnBjhB,KAAKuzB,aAAatS,IAInBoS,EAAAnzB,UAAAqzB,aAAR,SAAqBC,OAEdrsB,EAA6BqsB,EAAO7D,YACzCtoB,EAAqBmsB,EAAO1G,WAEzB2G,EAAe,IAAInH,GACtB,IAAI8G,GAAShS,EAAAA,sBAAsBC,YACnCha,EACAF,GAeD,YAZ4BzB,IAAxByB,EAAaC,SAChBqsB,EAAarsB,OAASD,EAAaC,aAGV1B,IAAtByB,EAAab,MAChBmtB,EAAavG,QAAQ,IAAIjB,GAAW9kB,EAAab,YAGvBZ,IAAvByB,EAAaG,QAChBmsB,EAAansB,MAAQtH,KAAK0zB,aAAavsB,EAAaG,QAG9CmsB,GAGAJ,EAAAnzB,UAAAowB,cAAR,SAAsBpnB,GAAtB,IAAAnD,EAAA/F,KAEK2zB,EAAc,GAMlB,OAJAzqB,EAAQlD,SAAO,SAAE+pB,GAChB4D,EAAenxB,KAAKuD,EAAKwtB,aAAaxD,OAGhC4D,GAGAN,EAAAnzB,UAAAwzB,aAAR,SAAqBpsB,GACpB,OAAQA,uBApDTW,EAAAA,aAsDDorB,EAlEA,GCEAO,GAAA,WAEC,SAAAA,EAA6BC,GAAA7zB,KAAA6zB,iBAAAA,EA4B9B,OAzBCD,EAAA1zB,UAAA4zB,kBAAA,SAAkBC,GAEX,IAAAhN,EAAA/mB,KAAAg0B,iBAAAD,GAAEE,EAAAlN,EAAAkN,cAAeC,EAAAnN,EAAAmN,aAGnBC,EAAM,EAOV,OANAF,EAAcjuB,SAAO,SAAE7E,GACtBgzB,GAAOhzB,EAAEid,cAGV+V,GAAOD,EAAavzB,OAASX,KAAK6zB,kBAK3BD,EAAA1zB,UAAA8zB,iBAAR,SAAyB9qB,GAAzB,IAAAnD,EAAA/F,KAKC,MAAO,CACNi0B,cAJmB/qB,EAAQoK,QAAM,SAAE8gB,GAA6B,OAAAA,EAAYC,gBAAkBD,EAAYhW,WAAarY,EAAK8tB,oBAK5HK,aAJehrB,EAAQoK,QAAM,SAAE8gB,GAA6B,OAAAA,EAAYE,cAAgBF,EAAYG,oBAAuBH,EAAYC,gBAAkBD,EAAYhW,YAAcrY,EAAK8tB,sBAO3LD,EA9BA,GCAA,IAAAY,GAAA,SAAA3oB,GAEC,SAAA2oB,EAAYpY,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,sCAAoCpc,KAGzD,OANuD8L,EAAAA,EAAAA,GAMvD0oB,EANA,CAAuDC,EAAAA,gBCGvDC,GAAA,SAAA7oB,GAEC,SAAA6oB,EAAYC,EACOzpB,GADnB,IAAAnF,EAEC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,+CAA6C30B,YADhD+F,EAAAmF,eAAAA,IAGpB,OANgEY,EAAAA,EAAAA,GAMhE4oB,EANA,CAAgED,EAAAA,gBCDhE,IAAAG,GAAA,SAAA/oB,GAEC,SAAA+oB,EAAYD,UACX9oB,EAAAjL,KAAAZ,KAAM20B,EAAe,4CAA0C30B,KAEjE,OAL6D8L,EAAAA,EAAAA,GAK7D8oB,EALA,CAA6DH,EAAAA,gBCD7DI,GAAA,SAAAhpB,GAEC,SAAAgpB,EAAYzY,EACQsU,GADpB,IAAA3qB,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,8CAA4Cpc,YAD5C+F,EAAA2qB,cAAAA,IAQrB,OAX+D5kB,EAAAA,EAAAA,GAO9D+oB,EAAA30B,UAAA0wB,iBAAA,WACC,OAAO5wB,KAAK0wB,eAGdmE,EAXA,CAA+DJ,EAAAA,wBCF9DK,WAAA,EACAjyB,OAAA,EACAkyB,KAAA,4ECHD,IAAAC,GAAA,WAUC,SAAAA,EAAY1tB,GACXtH,KAAKi1B,UAAY3tB,EACjBtH,KAAKk1B,gBAAgB5tB,GAuEvB,OApEC0tB,EAAA90B,UAAAke,SAAA,WACC,OAAOpe,KAAKsH,OAGb0tB,EAAA90B,UAAAi1B,cAAA,WACC,OAAOn1B,KAAKyQ,UAGbukB,EAAA90B,UAAAq0B,iBAAA,WACC,OAAOv0B,KAAKyQ,WAAa2kB,GAAgBN,YAG1CE,EAAA90B,UAAAo0B,WAAA,WACC,OAAOt0B,KAAKyQ,WAAa2kB,GAAgBL,MAG1CC,EAAA90B,UAAAm0B,aAAA,WACC,OAAOr0B,KAAKyQ,WAAa2kB,GAAgBvyB,QAG1CmyB,EAAA90B,UAAAm1B,SAAA,SAAS/tB,GACRtH,KAAKsH,MAAQA,GAGd0tB,EAAA90B,UAAAg1B,gBAAA,SAAgB5tB,GAEXA,MAAAA,GAAmD,SAAVA,GAE5CtH,KAAKyQ,SAAW2kB,GAAgBL,KAChC/0B,KAAKq1B,SAAS,OAEJr1B,KAAKs1B,aAAahuB,IAE5BtH,KAAKyQ,SAAW2kB,GAAgBN,WAChC90B,KAAKq1B,SAASr1B,KAAKu1B,mBAAmB,GAAKjuB,MAEjCtH,KAAKw1B,eAAeluB,GAE9BtH,KAAKyQ,SAAW2kB,GAAgBvyB,OAChC7C,KAAKq1B,UAAU/tB,KAQjB0tB,EAAA90B,UAAAu1B,MAAA,WACC,OAAO,IAAIT,EAAYh1B,KAAKi1B,YAGrBD,EAAA90B,UAAAo1B,aAAR,SAAqBhuB,GACpB,MAAwB,iBAAVA,GAAkD,MAA5BA,EAAMA,EAAM3G,OAAS,IAOlDq0B,EAAA90B,UAAAq1B,mBAAR,SAA2BjuB,GAC1B,OAASA,EAAMuS,MAAM,GAAI,IAGlBmb,EAAA90B,UAAAs1B,eAAR,SAAuBluB,OAChBouB,GAAiBpuB,EAEvB,OAAOquB,OAAOC,MAAMF,IAEtBV,EAnFA,GCGA,IAAAa,GAAA,WAIC,SAAAA,EAAoB5sB,EACT3B,EACSusB,GAFA7zB,KAAAiJ,OAAAA,EACTjJ,KAAAsH,MAAAA,EACStH,KAAA6zB,iBAAAA,EACnB7zB,KAAKkJ,QAAUlJ,KAAKiJ,OAAOjC,KAAG,SAAE7F,GAAM,OAAAA,EAAEs0B,WAoG1C,OAjGCI,EAAA31B,UAAAqa,UAAA,eAEKjT,EAAQtH,KAAKsH,MAChB4B,EAAOxG,EAAO1C,KAAKkJ,SAGpBlJ,KAAK81B,mBAAmB5sB,OAGpB6sB,EAAiC,GAarC,GAXA7sB,EAAQlD,SAAO,SAAE+pB,EAAqB/hB,GACjC+hB,EAAOsE,eACV/sB,GAASyoB,EAAO3R,WAEhB2X,EAAWvzB,KAAKutB,MAOK,KAHvB7mB,EAAU6sB,GAGEp1B,OAAc,KAEnBq1B,EAAY1uB,EAAQ4B,EAAQvI,OAElCuI,EAAQlD,SAAO,SAAE+pB,EAAqB/hB,GACrC+hB,EAAOsF,SAASW,MAqBlB,OAAOh2B,KAAKkJ,SAGL2sB,EAAA31B,UAAA41B,mBAAR,SAA2B5sB,GAA3B,IAAAnD,EAAA/F,KACCkJ,EAAQlD,SAAO,SAAE+pB,GACZA,EAAOsE,gBACNtE,EAAO3R,WAAarY,EAAK8tB,kBAC5B9D,EAAOmF,gBAAgBnvB,EAAK8tB,sBAMxBgC,EAAA31B,UAAA+1B,sBAAR,mBAE2Bj2B,KAAKkJ,QAAQoK,QAAM,SAAE8gB,GAA6B,OAAAA,EAAYG,0BAExF,IAAmB,IAAA2B,EAAAC,EAAAn2B,KAAKkJ,SAAOktB,EAAAF,EAAAh0B,QAAAk0B,EAAAh0B,KAAAg0B,EAAAF,EAAAh0B,OAAE,CAA5B,IAAI6tB,EAAMqG,EAAAj0B,MACV4tB,EAAOoF,kBAAoBC,GAAgBN,YAC9C/E,EAAOsF,SAASr1B,KAAKsH,MAAQyoB,EAAO3R,WAAa,yGAK5CyX,EAAA31B,UAAAm2B,gBAAR,WAKC,YAHIC,EAAYt2B,KAAKsH,MACpBivB,EAAc,GAEN/1B,EAAI,EAAGA,EAAIR,KAAKkJ,QAAQvI,OAAQH,GAAK,EAAG,EAE5CuvB,EAAS/vB,KAAKkJ,QAAQ1I,IAEf20B,kBAAoBC,GAAgBL,KAC9CuB,GAAavG,EAAO3R,WAEpBmY,EAAY/zB,KAAKutB,GAInB,GAAIwG,EAAY51B,OAAS,EAAG,KACrB61B,EAAaF,EAAYC,EAAY51B,WAE3C,IAAmB,IAAA81B,EAAAN,EAAAI,GAAWG,EAAAD,EAAAv0B,QAAAw0B,EAAAt0B,KAAAs0B,EAAAD,EAAAv0B,OAAE,CAA3B,IAAI6tB,GAAAA,EAAM2G,EAAAv0B,OACPkzB,SAASmB,wGAKpBX,EA3GA,GCHA,IAAAc,GAAA,WAcC,SAAAA,EAA6B9C,EAC1B3qB,EACA5B,QADA,IAAA4B,IAAAA,EAAA,SACA,IAAA5B,IAAAA,EAAA,KAF0BtH,KAAA6zB,iBAAAA,EAG5B7zB,KAAK42B,iBAAmB1tB,EAAQlC,KAAG,SAAE+oB,GAAyB,OAAA,IAAIiF,GAAYjF,EAAOzoB,UACrFtH,KAAK+zB,aAAe7qB,EAAQlC,KAAG,SAAE+oB,GAAyB,OAAA,IAAIiF,GAAYjF,EAAOzoB,UAEjFtH,KAAK62B,kBAAkBvvB,GAEvBtH,KAAKua,YAyDP,OAtDCoc,EAAAz2B,UAAA42B,gBAAA,WACC,OAAO92B,KAAK42B,kBAGbD,EAAAz2B,UAAA62B,gBAAA,WACC,OAAO/2B,KAAKsH,OAGbqvB,EAAAz2B,UAAA82B,UAAA,WACC,OAAOh3B,KAAK+zB,aAAa/sB,KAAG,SAAC7F,GAAK,OAAAA,EAAEid,eAGrCuY,EAAAz2B,UAAA+2B,YAAA,WAGC,OAFmB,IAAIrD,GAAoC5zB,KAAK6zB,kBAE9CC,kBAAkB9zB,KAAK+zB,eAG1C4C,EAAAz2B,UAAAm1B,SAAA,SAAS/tB,GAERtH,KAAK62B,kBAAkBvvB,GACvBtH,KAAKua,aAGNoc,EAAAz2B,UAAAg3B,WAAA,SAAWC,GACVn3B,KAAK42B,iBAAmBO,EAAcnwB,KAAG,SAAE+oB,GAAyB,OAAA,IAAIiF,GAAYjF,EAAOzoB,UAC3FtH,KAAK+zB,aAAeoD,EAAcnwB,KAAG,SAAE+oB,GAAyB,OAAA,IAAIiF,GAAYjF,EAAOzoB,UAEvFtH,KAAKua,aAGNoc,EAAAz2B,UAAAk3B,kBAAA,WACC,OAAOp3B,KAAK6zB,kBAGL8C,EAAAz2B,UAAAqa,UAAR,WAEC,GAAIva,KAAK42B,kBAAoB52B,KAAKsH,MAAO,KAElC+vB,EAAa,IAAIxB,GAA2B71B,KAAK42B,iBAAkB52B,KAAKsH,MAAOtH,KAAK6zB,kBAE1F7zB,KAAK+zB,aAAesD,EAAW9c,cAIzBoc,EAAAz2B,UAAA22B,kBAAR,SAA0BvvB,GACrBtH,KAAKi3B,cAAgB3vB,EACxBtH,KAAKsH,MAAQtH,KAAKi3B,cAElBj3B,KAAKsH,MAAQA,EAGdtH,KAAKua,aAEPoc,EA/EA,GCEA,IAAAW,GAAA,SAAAzrB,GAEC,SAAAyrB,EAAYlb,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,8CAA4Cpc,KAGjE,OAN+D8L,EAAAA,EAAAA,GAM/DwrB,EANA,CAA+D7C,EAAAA,gBCU/D8C,GAAA,WAYC,SAAAA,EAAoB5C,EACjBzrB,EACAsuB,EACAL,QAFA,IAAAjuB,IAAAA,EAAA,IADiBlJ,KAAA20B,cAAAA,EAVH30B,KAAA6zB,iBAAmB,GAQ5B7zB,KAAAy3B,sBAA+C,IAAId,GAAsB32B,KAAK6zB,kBAMrF7zB,KAAKkJ,QAAUA,EAEXsuB,GAAaL,IAChBn3B,KAAKy3B,sBAAwB,IAAId,GAAsB32B,KAAK6zB,iBAAkBsD,EAAeK,IA8GhG,OA1GCD,EAAAr3B,UAAA42B,gBAAA,WACC,OAAO92B,KAAKy3B,sBAAsBX,mBAInCS,EAAAr3B,UAAAsxB,WAAA,WACC,OAAOxxB,KAAKkJ,SAGbquB,EAAAr3B,UAAAm1B,SAAA,SAAS/tB,GACRtH,KAAKy3B,sBAAsBpC,SAAS/tB,IAGrCiwB,EAAAr3B,UAAAw3B,UAAA,SAAU3H,EAA4B/hB,GACrChO,KAAKkJ,QAAQyuB,OAAO3pB,EAAO,EAAG+hB,IAG/BwH,EAAAr3B,UAAA03B,aAAA,SAAa5pB,GACZhO,KAAKkJ,QAAQyuB,OAAO3pB,EAAO,IAG5BupB,EAAAr3B,UAAAg3B,WAAA,SAAWhuB,EAAoCiuB,GAE9Cn3B,KAAKkJ,QAAUA,EAEflJ,KAAKy3B,sBAAsBP,WAAWC,OAEhCU,EAAgB73B,KAAKy3B,sBAAsBT,YAEjDh3B,KAAKkJ,QAAQlD,SAAO,SAAE+pB,EAA4B/hB,GACjD+hB,EAAOsF,SAASwC,EAAc7pB,QAOhCupB,EAAAr3B,UAAA43B,WAAA,SAAWC,WAEV/3B,KAAKkJ,QAAQlD,SAAO,SAAE+pB,GACrBA,EAAO9C,cAAcP,GAAW7oB,wBAGxBm0B,OAEFxK,EAAUwK,EAAMxK,QAErBf,EADYuL,EAAMC,UACOvL,GAAWX,IAAMW,GAAWV,KAEhD9iB,EAAUgvB,EAAKhvB,QAAQoK,QAAM,SAAEyc,GACpC,OAAOA,EAAOjD,WAAWtZ,QAAQA,UAAYga,EAAQha,WAGlDtK,EAAQvI,OAAS,GACpBuI,EAAQlD,SAAO,SAAE+pB,GAEhBA,EAAO9C,cAAcR,kBAbxB,IAAkB,IAAA0L,EAAAhC,EAAA4B,GAAUK,EAAAD,EAAAj2B,QAAAk2B,EAAAh2B,KAAAg2B,EAAAD,EAAAj2B,OAAA,GAAdk2B,EAAAj2B,yGAkBd,OAAO,IAAIm1B,GAA0Ct3B,KAAKuyB,qBAG3DgF,EAAAr3B,UAAAm4B,SAAA,SAAS9L,OAEFve,EAAQhO,KAAKs4B,gBAAgB/L,GAEnCvsB,KAAKu4B,KAAKvqB,EAAOA,EAAQ,IAG1BupB,EAAAr3B,UAAAs4B,UAAA,SAAUjM,OAEHve,EAAQhO,KAAKs4B,gBAAgB/L,GAEnCvsB,KAAKu4B,KAAKvqB,EAAOA,EAAQ,IAG1BupB,EAAAr3B,UAAAk3B,kBAAA,WACC,OAAOp3B,KAAK6zB,kBAGL0D,EAAAr3B,UAAAq4B,KAAR,SAAaE,EAAmBC,GAE/B,GAAK14B,KAAK24B,kBAAkBF,IAAez4B,KAAK24B,kBAAkBD,GAAlE,KAIM3I,EAAS/vB,KAAKkJ,QAAQuvB,GAE5Bz4B,KAAKkJ,QAAQuvB,GAAaz4B,KAAKkJ,QAAQwvB,GACvC14B,KAAKkJ,QAAQwvB,GAAW3I,IAGjBwH,EAAAr3B,UAAAy4B,kBAAR,SAA0B3qB,GACzB,OAAOA,GAAS,GAGTupB,EAAAr3B,UAAAqyB,iBAAR,WACC,OAAOvyB,KAAK20B,eAGL4C,EAAAr3B,UAAAo4B,gBAAR,SAAwB/L,GACvB,OAAOvsB,KAAKkJ,QAAQ0vB,WAAS,SAACz3B,GAAK,OAAAA,EAAEyrB,cAAc5V,OAAOuV,OAG5DgL,EAjIA,GCZA,IAAAsB,GAAA,WAyBC,SAAAA,EAAYtM,EACTC,EACAplB,EACAd,EACAS,GAdK/G,KAAAysB,WAAaC,GAAW7oB,KAMxB7D,KAAAsG,KAAmB,IAAI2lB,GAAWxlB,EAASvD,MASlDlD,KAAKusB,SAAWA,EAChBvsB,KAAKwsB,YAAcA,EAEnBxsB,KAAKoH,OAASA,EACdpH,KAAKsG,KAAOA,EAEZtG,KAAK+G,OAASA,EAkDhB,OA/CC8xB,EAAA34B,UAAA44B,UAAA,WACC,OAAO94B,KAAK+G,QAGb8xB,EAAA34B,UAAAwtB,cAAA,WACC,OAAO1tB,KAAKysB,YAGboM,EAAA34B,UAAA4sB,SAAA,WACC,OAAO9sB,KAAKwsB,aAGbqM,EAAA34B,UAAAke,SAAA,WACC,OAAOpe,KAAKsH,OAGbuxB,EAAA34B,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGbsM,EAAA34B,UAAA6sB,UAAA,WACC,OAAO/sB,KAAKoH,QAGbyxB,EAAA34B,UAAA8sB,YAAA,WACC,OAAOhtB,KAAKwsB,YAAYQ,eAGzB6L,EAAA34B,UAAAitB,QAAA,WACC,OAAOntB,KAAKsG,MAGbuyB,EAAA34B,UAAAksB,YAAA,WACC,OAAOpsB,KAAKsG,KAAK8lB,eAGlByM,EAAA34B,UAAAmsB,oBAAA,WACC,OAAOrsB,KAAKsG,KAAK+lB,uBAGlBwM,EAAA34B,UAAA+sB,cAAA,SAAcxG,GACbzmB,KAAKysB,WAAahG,GAGnBoS,EAAA34B,UAAAm1B,SAAA,SAAS/tB,GACRtH,KAAKsH,MAAQA,GAEfuxB,EAtFA,GCAA,IAAAE,GAAA,WAGA,SAAAA,KAkBA,OAhBCA,EAAA74B,UAAA84B,YAAA,SAAY9hB,GAAZ,IAAAnR,EAAA/F,KACC,OAAOkX,EAASlQ,KAAG,SAAC1E,GAAK,OAAAyD,EAAKR,QAAQjD,OAGvCy2B,EAAA74B,UAAAqF,QAAA,SAAQqX,GAEP,OAAO,IAAIic,GACVjc,EAAOgQ,cACPhQ,EAAOkQ,WACPlQ,EAAOmQ,YACPnQ,EAAOuQ,UACPvQ,EAAO+P,oBAKVoM,EArBA,GCGAE,GAAA,SAAAptB,GAEC,SAAAotB,EAAY7c,EACQsU,GADpB,IAAA3qB,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,6CAA2Cpc,YAD3C+F,EAAA2qB,cAAAA,IAQrB,OAX8D5kB,EAAAA,EAAAA,GAW9DmtB,EAXA,CAA8DxE,EAAAA,gBCA9D,IAAAyE,GAAA,SAAArtB,GAEC,SAAAqtB,EAAY9c,EACQsU,GADpB,IAAA3qB,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,8CAA4Cpc,YAD5C+F,EAAA2qB,cAAAA,IAQrB,OAX+D5kB,EAAAA,EAAAA,GAW/DotB,EAXA,CAA+DzE,EAAAA,gBCA/D,IAAA0E,GAAA,SAAAttB,GAEC,SAAAstB,EAAY/c,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,6BAA2Bpc,KAGhD,OAN8C8L,EAAAA,EAAAA,GAM9CqtB,EANA,CAA8C1E,EAAAA,+BC8C7C,SAAA2E,EAAYvlB,EACTwlB,EACA/xB,EACAqpB,QAFA,IAAA0I,IAAAA,EAAA,IADH,IAAAtzB,EAIC8F,EAAAjL,KAAAZ,KAAM6T,IAAG7T,KA7BF+F,EAAA0qB,WAAkC,GAclC1qB,EAAAuzB,oBAA8B,EAKrBvzB,EAAAwzB,cAAqC,IAAIlG,GAIzCttB,EAAAyzB,4BAA2D,IAAIT,OAQzE5B,EAAqCkC,EAAcryB,KAAG,SAAEgxB,GAAU,OAAAA,EAAMrI,eAE9E5pB,EAAK0zB,WAAaJ,EAClBtzB,EAAK2zB,YAAcvC,EACnBpxB,EAAKuB,MAAQA,EAEbvB,EAAK0qB,WAAa1qB,EAAKwzB,cAAcp5B,OAAOk5B,OAEtC3I,EAAgB3qB,EAAKyzB,4BAA4BR,YAAYjzB,EAAK4zB,4BAExE5zB,EAAK6zB,sBAAwB,IAAIrC,GAAsBxxB,EAAKyN,QAASkd,EAAeppB,EAAO6vB,GAEvFxG,MAAAA,IACH5qB,EAAKuzB,mBAAqB3I,KAgP7B,OA9R0C7kB,EAAAA,EAAAA,GAoDzCstB,EAAAl5B,UAAAsxB,WAAA,WACC,OAAOxxB,KAAKywB,YAIb2I,EAAAl5B,UAAA0wB,iBAAA,WACC,OAAO5wB,KAAK45B,sBAAsBpI,cAInC4H,EAAAl5B,UAAAke,SAAA,WAEC,OAAIpe,KAAKs5B,mBACDt5B,KAAK65B,oBAEL75B,KAAKsH,OAKd8xB,EAAAl5B,UAAA2xB,gBAAA,WACC,OAAO7xB,KAAKs5B,oBAIbF,EAAAl5B,UAAAgxB,QAAA,WACC,QAASlxB,KAAKoe,YAAcpe,KAAK4wB,mBAAmBjwB,OAAS,GAG9Dy4B,EAAAl5B,UAAAg3B,WAAA,SAAW1D,GAEVxzB,KAAKywB,WAAazwB,KAAKu5B,cAAcp5B,OAAOqzB,OAEtC2D,EAAqC3D,EAAOxsB,KAAG,SAAEgxB,GAAwB,OAAAA,EAAMrI,eAE/Ee,EAAgB1wB,KAAKw5B,4BAA4BR,YAAYh5B,KAAK25B,qBAExE35B,KAAK45B,sBAAsB1C,WAAWxG,EAAeyG,GAErDn3B,KAAK85B,SAAS,IAAIX,GAAyBn5B,KAAKwT,WAGjD4lB,EAAAl5B,UAAA22B,kBAAA,SAAkB3rB,GAEjBlL,KAAK+5B,2BAA2B7uB,GAEhClL,KAAKg6B,sBAGNZ,EAAAl5B,UAAAm1B,SAAA,SAAS/tB,GACRtH,KAAKi6B,kBAAkB3yB,GAEvBtH,KAAKk6B,yBAAwB,GAE7Bl6B,KAAKg6B,sBAGNZ,EAAAl5B,UAAAi6B,eAAA,SAAex0B,GACd3F,KAAKk6B,wBAAwBv0B,IAG9ByzB,EAAAl5B,UAAA43B,WAAA,SAAWC,GACV/3B,KAAK85B,SACJ95B,KAAK45B,sBAAsB9B,WAAWC,KAKxCqB,EAAAl5B,UAAAk6B,aAAA,SAAa7N,EAAoB5mB,OAE5B00B,GAAgB,EAepB,GAbAr6B,KAAKywB,WAAWzqB,SAAO,SAAE+pB,EAAsB/hB,GAC9C,GAAI+hB,EAAOnD,cAAcpZ,UAAY+Y,EAAS/Y,QAAS,KAEhD8mB,EAAYvK,EAAO5jB,YAEzB4jB,EAAOlD,WAAWlnB,GAEd20B,IAAc30B,IACjB00B,EAAersB,OAKdqsB,EAAe,EAElB,GAAI10B,EAAS,KAGN40B,EAAcv6B,KAAKw5B,4BAA4Bj0B,QAAQvF,KAAKywB,WAAW4J,IAE7Er6B,KAAK45B,sBAAsBlC,UAAU6C,EAAaF,QAElDr6B,KAAK45B,sBAAsBhC,aAAayC,GAI1Cr6B,KAAKg6B,qBAELh6B,KAAK85B,SACJ,IAAIjF,GAA0C70B,KAAKwT,QAASxT,KAAK4wB,sBAInEwI,EAAAl5B,UAAAm4B,SAAA,SAAS9L,GAOR,QAHIiO,EAFEC,EAAcz6B,KAAKs4B,gBAAgB/L,GAGxCmO,GAAiB,EAETl6B,EAAIi6B,EAAc,EAAGj6B,GAAK,EAAGA,GAAK,EAAG,KAEvCm6B,EAAa36B,KAAKywB,WAAWjwB,GAEnC,GAAIm6B,EAAWxuB,YAAa,CAE3BquB,EAAWG,EACXD,EAAgBl6B,EAChB,OAIF,GAAIg6B,GAAYE,GAAiB,GAAKD,GAAe,EAAG,KAEnD1K,EAAS/vB,KAAKywB,WAAWgK,GAE7Bz6B,KAAKywB,WAAWgK,GAAeD,EAC/Bx6B,KAAKywB,WAAWiK,GAAiB3K,EAGlC/vB,KAAK45B,sBAAsBvB,SAAS9L,GAEpCvsB,KAAK85B,SACJ,IAAIb,GAAyCj5B,KAAKwT,QAASxT,KAAK4wB,sBAIlEwI,EAAAl5B,UAAAs4B,UAAA,SAAUjM,GAOT,QAHIqO,EAFEH,EAAcz6B,KAAKs4B,gBAAgB/L,GAGxCsO,GAAkB,EAEVr6B,EAAIi6B,EAAc,EAAGj6B,EAAIR,KAAKywB,WAAW9vB,OAAQH,GAAK,EAAG,KAE3Ds6B,EAAc96B,KAAKywB,WAAWjwB,GAEpC,GAAIs6B,EAAY3uB,YAAa,CAE5ByuB,EAAYE,EACZD,EAAiBr6B,EACjB,OAIF,GAAIo6B,GAAaC,GAAkB,GAAKJ,GAAe,EAAG,KAErD1K,EAAS/vB,KAAKywB,WAAWgK,GAE7Bz6B,KAAKywB,WAAWgK,GAAeG,EAC/B56B,KAAKywB,WAAWoK,GAAkB9K,EAGnC/vB,KAAK45B,sBAAsBpB,UAAUjM,GAErCvsB,KAAK85B,SACJ,IAAIZ,GAA0Cl5B,KAAKwT,QAASxT,KAAK4wB,sBAI3DwI,EAAAl5B,UAAA85B,mBAAR,eAEOtJ,EAAgB1wB,KAAKw5B,4BAA4BR,YAAYh5B,KAAK25B,qBAExE35B,KAAK45B,sBAAsB1C,WAAWxG,EAAeA,EAAc1pB,KAAG,SAAC7F,GAAK,OAAAA,EAAE23B,iBAIvEM,EAAAl5B,UAAA+5B,kBAAR,SAA0B3yB,OAInByzB,EAFa,IAAInH,GAAoC5zB,KAAKo3B,qBAEpCtD,kBAAkB9zB,KAAK45B,sBAAsB9C,mBAGxE92B,KAAKsH,MADFyzB,EAAWzzB,EACDyzB,EAEAzzB,EAGdtH,KAAK45B,sBAAsBvE,SAASr1B,KAAKoe,YAEzCpe,KAAK85B,SAAS,IAAItF,GAAkCx0B,KAAKwT,WAIlD4lB,EAAAl5B,UAAA65B,2BAAR,SAAmC7uB,OAI5B6vB,EAFa,IAAInH,GAAoC5zB,KAAKo3B,qBAEpCtD,kBAAkB9zB,KAAK45B,sBAAsB9C,mBAGxE92B,KAAK65B,oBADFkB,EAAW7vB,EACa6vB,EAEA7vB,EAG5BlL,KAAK45B,sBAAsBvE,SAASr1B,KAAKoe,YAEzCpe,KAAK85B,SAAS,IAAIpF,GAA2C10B,KAAKwT,QAAStI,KAGpEkuB,EAAAl5B,UAAAg6B,wBAAR,SAAgCv0B,GAC/B3F,KAAKs5B,mBAAqB3zB,EAC1B3F,KAAK45B,sBAAsBvE,SAASr1B,KAAKoe,YACzCpe,KAAK85B,SAAS,IAAIlF,GAAwC50B,KAAKwT,WAIxD4lB,EAAAl5B,UAAAy5B,kBAAR,WACC,OAAO35B,KAAKywB,WAAWnd,QAAM,SAACnS,GAAK,OAAAA,EAAEgL,gBAG9BitB,EAAAl5B,UAAAo4B,gBAAR,SAAwB/L,GACvB,OAAOvsB,KAAKywB,WAAWmI,WAAS,SAAE7I,GAAyB,OAAAA,EAAOnD,cAAc5V,OAAOuV,OAGhF6M,EAAAl5B,UAAAk3B,kBAAR,WACC,OAAOp3B,KAAK45B,sBAAsBxC,8DAjQnBtjB,EAAAA,mBACEnU,sCA5BNy5B,EAAoBt4B,EAAA,CADhCk6B,EAAAA,qCA4BgBlnB,EAAAA,YACEnU,MAAKg2B,OAAAsF,WA5BX7B,IAA6B8B,EAAAA,WCtB1C,IAAAC,GAAA,WAMA,SAAAA,KAMA,OAHCA,EAAAj7B,UAAAC,OAAA,SAAO0T,GACN,OAAO,IAAIulB,GAAqBvlB,wBAJjC5L,EAAAA,aAMDkzB,EAZA,GCKAC,GAAA,SAAAvvB,GAEC,SAAAuvB,EAA4BzG,GAA5B,IAAA5uB,EACC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,2BAAyB30B,YADnB+F,EAAA4uB,cAAAA,IAI7B,OAN4C7oB,EAAAA,EAAAA,GAM5CsvB,EANA,CAA4C7mB,EAAAA,SCE5C,IAAA8mB,GAAA,SAAAxvB,GAEC,SAAAwvB,EAAqB1G,EACDzrB,GADpB,IAAAnD,EAEC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,sBAAoB30B,YAFrB+F,EAAA4uB,cAAAA,EACD5uB,EAAAmD,QAAAA,IAQrB,OAXuC4C,EAAAA,EAAAA,GAOtCuvB,EAAAn7B,UAAAo7B,UAAA,WACC,OAAOt7B,KAAKkJ,SAGdmyB,EAXA,CAAuC9mB,EAAAA,SCHvC,IAAAgnB,GAAA,SAAA1vB,GAEC,SAAA0vB,EAA4B/sB,EACTlH,GADnB,IAAAvB,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,+BAA6BxO,YAFrB+F,EAAAyI,YAAAA,EACTzI,EAAAuB,MAAAA,IAIpB,OAPgDwE,EAAAA,EAAAA,GAOhDyvB,EAPA,CAAgDhnB,EAAAA,SCAhD,IAAAinB,GAAA,SAAA3vB,GAEC,SAAA2vB,EAA4BhtB,EACTlH,GADnB,IAAAvB,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,wCAAsCxO,YAF9B+F,EAAAyI,YAAAA,EACTzI,EAAAuB,MAAAA,IAIpB,OAPyDwE,EAAAA,EAAAA,GAOzD0vB,EAPA,CAAyDjnB,EAAAA,SCDzD,IAAAknB,GAAA,SAAA5vB,GAEC,SAAA4vB,EAA4BjtB,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,qCAAmCxO,YAF3B+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPsDmG,EAAAA,EAAAA,GAOtD2vB,EAPA,CAAsDlnB,EAAAA,SCGtD,IAAAmnB,GAAA,SAAA7vB,GAEC,SAAA6vB,EAAqB/G,EACDoD,GADpB,IAAAhyB,EAEC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,uCAAqC30B,YAFtC+F,EAAA4uB,cAAAA,EACD5uB,EAAAgyB,WAAAA,IAYrB,OAfwDjsB,EAAAA,EAAAA,GAOvD4vB,EAAAx7B,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAK20B,eAGb+G,EAAAx7B,UAAAy7B,cAAA,WACC,OAAO37B,KAAK+3B,YAGd2D,EAfA,CAAwDnnB,EAAAA,SCDxD,IAAAqnB,GAAA,SAAA/vB,GAEC,SAAA+vB,EAAqBjH,EACDpI,EACA5mB,GAFpB,IAAAI,EAGC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,uCAAqC30B,YAHtC+F,EAAA4uB,cAAAA,EACD5uB,EAAAwmB,SAAAA,EACAxmB,EAAAJ,QAAAA,IAYrB,OAhBwDmG,EAAAA,EAAAA,GAQvD8vB,EAAA17B,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGbqP,EAAA17B,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGdi2B,EAhBA,CAAwDrnB,EAAAA,SCAxD,IAAAsnB,GAAA,SAAAhwB,GAEC,SAAAgwB,EAAqBlH,EACDpI,GADpB,IAAAxmB,EAEC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,qCAAmC30B,YAFpC+F,EAAA4uB,cAAAA,EACD5uB,EAAAwmB,SAAAA,IAQrB,OAXsDzgB,EAAAA,EAAAA,GAOrD+vB,EAAA37B,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGdsP,EAXA,CAAsDtnB,EAAAA,SCAtD,IAAAunB,GAAA,SAAAjwB,GAEC,SAAAiwB,EAAqBnH,EACDpI,GADpB,IAAAxmB,EAEC8F,EAAAjL,KAAAZ,KAAM20B,EAAe,sCAAoC30B,YAFrC+F,EAAA4uB,cAAAA,EACD5uB,EAAAwmB,SAAAA,IAQrB,OAXuDzgB,EAAAA,EAAAA,GAOtDgwB,EAAA57B,UAAA0sB,YAAA,WACC,OAAO5sB,KAAKusB,UAGduP,EAXA,CAAuDvnB,EAAAA,SCLvD,IAAAwnB,GAAA,WAsBC,SAAAA,EAAoBnnB,GAAA5U,KAAA4U,kBAAAA,EAuCrB,OApCCmnB,EAAA77B,UAAA87B,KAAA,SAAKrH,GACJ30B,KAAK4U,kBAAkBE,SAAS,IAAIsmB,GAAuBzG,KAG5DoH,EAAA77B,UAAAg3B,WAAA,SAAWvC,EAA8BnB,GACxCxzB,KAAK4U,kBAAkBE,SAAS,IAAIumB,GAAkB1G,EAAenB,KAGtEuI,EAAA77B,UAAAm1B,SAAA,SAASV,EAA8BrtB,GACtCtH,KAAK4U,kBAAkBE,SAAS,IAAIymB,GAA2B5G,EAAertB,KAG/Ey0B,EAAA77B,UAAA22B,kBAAA,SAAkBlC,EAA8BrtB,GAC/CtH,KAAK4U,kBAAkBE,SAAS,IAAI0mB,GAAoC7G,EAAertB,KAGxFy0B,EAAA77B,UAAAi6B,eAAA,SAAexF,EAA8BhvB,GAC5C3F,KAAK4U,kBAAkBE,SAAS,IAAI2mB,GAAiC9G,EAAehvB,KAGrFo2B,EAAA77B,UAAA43B,WAAA,SAAWnD,EAA8BnB,GACxCxzB,KAAK4U,kBAAkBE,SAAS,IAAI4mB,GAAmC/G,EAAenB,KAGvFuI,EAAA77B,UAAA+7B,iBAAA,SAAiBtH,EAA8BpI,EAAoB5mB,GAClE3F,KAAK4U,kBAAkBE,SAAS,IAAI8mB,GAAmCjH,EAAepI,EAAU5mB,KAGjGo2B,EAAA77B,UAAAm4B,SAAA,SAAS1D,EAA8BpI,GACtCvsB,KAAK4U,kBAAkBE,SAAS,IAAI+mB,GAAiClH,EAAepI,KAGrFwP,EAAA77B,UAAAs4B,UAAA,SAAU7D,EAA8BpI,GACvCvsB,KAAK4U,kBAAkBE,SAAS,IAAIgnB,GAAkCnH,EAAepI,yBAvCtFtkB,EAAAA,sDAjBQiN,EAAAA,qBA2DT6mB,EA7DA,sBCcC,SAAAG,EAA6BC,EACTC,EACjBC,GAFH,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMo7B,GACLnJ,GACAoK,IAAqBr8B,YALM+F,EAAAo2B,+BAAAA,EACTp2B,EAAAq2B,4BAAAA,IAgBrB,OAnBmDtwB,EAAAA,EAAAA,GAUlDowB,EAAAh8B,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ5H,cAEtB6H,EAAuBx8B,KAAKo8B,4BAA4Bj8B,OAAOic,GAErEpc,KAAKm8B,+BAA+BhS,KAAKqS,wBAjB1Cv0B,EAAAA,sDANQmiB,UACA+Q,UAHgBsB,EAAAA,wBA4BzBP,GAnBmDQ,EAAAA,gBCVnD,IAAaC,GAC6B,0CAD7BA,GAEc,2BAFdA,GAGgC,6CAHhCA,GAIuB,oCAJvBA,GAK+B,4CAL/BA,GAM8B,2CAN9BA,GAO+B,4CCT5CC,GAAA,WAeA,SAAAA,KA4DA,OAvDCA,EAAA18B,UAAAqF,QAAA,SAAQs3B,GAEP,OAAIl9B,MAAM2zB,QAAQuJ,GACV78B,KAAK88B,cAAcD,GAEnB78B,KAAK+8B,aAAaF,IAInBD,EAAA18B,UAAA48B,cAAR,SAAsBE,GAAtB,IAAAj3B,EAAA/F,KACC,OAAOg9B,EAAgBh2B,KAAG,SAAEsc,GAC3B,OAAOvd,EAAKg3B,aAAazZ,OAInBsZ,EAAA18B,UAAA68B,aAAR,SAAqBE,GAEpB,OAAQA,EAAeC,WACtB,KAAKP,GAEJ,OAAO,IAAIzK,GAA+B+K,EAAeE,kBAE1D,KAAKR,GAEJ,OAAO,IAAIxK,GAA2B8K,EAAeE,kBAEtD,KAAKR,OAEEroB,EAAU,EAA+DpJ,eAE/E,OAAO,IAAIknB,GAAkC6K,EAAeE,iBAAkB7oB,GAE/E,KAAKqoB,GAEJ,OAAO,IAAItK,GAAyB4K,EAAeE,kBAEpD,KAAKR,GAEJ,OAAO,IAAInK,GAAiCyK,EAAeE,kBAE5D,KAAKR,GAEJ,OAAO,IAAIlK,GAAgCwK,EAAeE,kBAE3D,KAAKR,GAEJ,OAAO,IAAIjK,GAAiCuK,EAAeE,wCAnD9Dl1B,EAAAA,aA4DD20B,EA3EA,kBCgBC,SAAAQ,EAA6BjB,EAChBE,EACFgB,GAFX,IAAAt3B,EAGC8F,EAAAjL,KAAAZ,KAAMq7B,KAAkBr7B,YAHI+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,EACFt2B,EAAAs3B,0BAAAA,IA0BZ,OA9B8CvxB,EAAAA,EAAAA,GAQ7CsxB,EAAAl9B,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQY,iBAC3BG,EAAwCf,EAAQjB,YAE3ClK,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAY8F,WAAWoG,GAEvBt9B,KAAKm8B,+BAA+BhS,KAAKiH,GAEzCpxB,KAAKu9B,cAAcnM,EAAamL,IAGzBa,EAAAl9B,UAAAq9B,cAAR,SAAsBnM,EAAmCmL,OAElDiB,EAASpM,EAAYqM,YAErBC,EAAe19B,KAAKq9B,0BAA0B93B,QAAQi4B,GAE5Dx9B,KAAKq8B,qBAAqBsB,QAAQD,wBA7BnCz1B,EAAAA,sDARQmiB,UAFyCqS,EAAAA,4BAGzCG,MAsCTQ,GA9B8CV,EAAAA,mCCA7C,SAAAkB,EAA6BzB,EACT0B,EACjBxB,GAFH,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMu7B,GACLlJ,GACAgK,IAAqBr8B,YALM+F,EAAAo2B,+BAAAA,EACTp2B,EAAA83B,gBAAAA,IAkBrB,OArBuD/xB,EAAAA,EAAAA,GAUtD8xB,EAAA19B,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ/tB,YAC3BlH,EAAQi1B,EAAQj1B,MAEX8pB,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAYiE,SAAS/tB,GAErBtH,KAAKm8B,+BAA+BhS,KAAKiH,wBApB1CnpB,EAAAA,sDANQmiB,UACAiJ,UAHgBoJ,EAAAA,wBA8BzBmB,GArBuDlB,EAAAA,mCCEtD,SAAAoB,EAA6B3B,EACT0B,EACjBxB,GAFH,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMy7B,GACLvJ,GACAmK,IAAqBr8B,YALM+F,EAAAo2B,+BAAAA,EACTp2B,EAAA83B,gBAAAA,IAkBrB,OArB6D/xB,EAAAA,EAAAA,GAU5DgyB,EAAA59B,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ/tB,YAC3B7I,EAAU42B,EAAQ52B,QAEbyrB,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAY+I,eAAex0B,GAE3B3F,KAAKm8B,+BAA+BhS,KAAKiH,wBApB1CnpB,EAAAA,sDANQmiB,UACAiJ,UAHgBoJ,EAAAA,wBA8BzBqB,GArB6DpB,EAAAA,mCCC5D,SAAAqB,EAA6B5B,EAChBE,EACFgB,GAFX,IAAAt3B,EAGC8F,EAAAjL,KAAAZ,KAAMw7B,KAAoCx7B,YAHd+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,EACFt2B,EAAAs3B,0BAAAA,IAyBZ,OA7BgEvxB,EAAAA,EAAAA,GAQ/DiyB,EAAA79B,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ/tB,YAC3BlH,EAAQi1B,EAAQj1B,MAEX8pB,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAYyF,kBAAkBvvB,GAE9BtH,KAAKm8B,+BAA+BhS,KAAKiH,GAEzCpxB,KAAKg+B,uBAAuB5M,EAAYqM,cAGjCM,EAAA79B,UAAA89B,uBAAR,SAA+BhB,OAExBU,EAAe19B,KAAKq9B,0BAA0B93B,QAAQy3B,GAE5Dh9B,KAAKq8B,qBAAqBsB,QAAQD,wBA3BnCz1B,EAAAA,sDALQmiB,UAFgCqS,EAAAA,4BAGhCG,MAkCTmB,GA7BgErB,EAAAA,mCCE/D,SAAAuB,EAA6B9B,EAChBE,GADb,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM07B,KAAmC17B,YAFb+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,IAoBd,OAvB+DvwB,EAAAA,EAAAA,GAO9DmyB,EAAA/9B,UAAAo8B,OAAA,SAAOC,OAEA5H,EAAgB4H,EAAQhK,mBAC7BwF,EAAawE,EAAQZ,gBAEhBvK,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQoR,GAEzCvD,EAAY0G,WAAWC,GAE9C/3B,KAAKm8B,+BAA+BhS,KAAKiH,OAEnCloB,EAAUkoB,EAAYR,mBAE5B5wB,KAAKq8B,qBAAqBsB,QAAQ,IAAIrL,GAAiCqC,EAAezrB,yBArBvFjB,EAAAA,sDALQmiB,UAFgBqS,EAAAA,wBA+BzBwB,GAvB+DvB,EAAAA,gBCJ/D,IAAAwB,GAAA,WAQC,SAAAA,EAAY1Q,EACTU,EACA1F,GACFxoB,KAAKwtB,QAAUA,EACfxtB,KAAKkuB,SAAWA,EAChBluB,KAAKwoB,SAAWA,EAmBlB,OAhBC0V,EAAAh+B,UAAAsT,MAAA,WACC,OAAOxT,KAAKwtB,SAGb0Q,EAAAh+B,UAAAkuB,SAAA,SAASxR,GACR,OAAO5c,KAAKkuB,SAAStR,IAGtBshB,EAAAh+B,UAAAwvB,YAAA,WACC,OAAO1vB,KAAKkuB,UAGbgQ,EAAAh+B,UAAA8sB,YAAA,WACC,OAAOhtB,KAAKwoB,UAGd0V,EAhCA,GCPA,IAAAC,GAAA,WASA,SAAAA,KAOA,OAJCA,EAAAj+B,UAAAC,OAAA,SAAOguB,EAA8BD,EAA+B1F,GACnE,OAAO,IAAI0V,GAAY/P,EAAeD,EAAU1F,wBAJjDvgB,EAAAA,aAODk2B,EAhBA,GCAAC,GAAA,WAcC,SAAAA,EAA6Blb,GAAAljB,KAAAkjB,eAAAA,EAsC9B,OAnCCkb,EAAAl+B,UAAAm+B,iBAAA,SAAiB1J,GAEhB,OAAO30B,KAAKkjB,eACNG,QACA8O,IAEA9e,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAekhB,EAAclhB,gBAIrF2qB,EAAAl+B,UAAAo+B,eAAA,SAAe3J,GACd,OAAO30B,KAAKkjB,eACNG,QACA8O,IAEA9e,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAekhB,EAAclhB,gBAIrF2qB,EAAAl+B,UAAAq+B,wBAAA,SAAwB5J,GACvB,OAAO30B,KAAKkjB,eACNG,QACA+O,IAEA/e,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAM6Z,iBAAiBnmB,OAAO2d,MAC7D3tB,EAAAA,KAAG,SAAEsc,GACJ,OAAOA,EAAMkb,gBAEdlrB,EAAAA,QAAM,SAAEhM,GAAkB,QAAEA,2BArCnCW,EAAAA,sDAPqB6b,EAAAA,kBAgDtBsa,EApDA,sBCIC,SAAAK,EAAY5qB,UACXhI,EAAAjL,KAAAZ,KAAM6T,IAAG7T,KAGX,OANmC8L,EAAAA,EAAAA,GAMnC2yB,GANmC3qB,EAAAA,aCAtB4qB,GAAsB,IAAID,GAAc,MCFrDE,GAAA,WAiBC,SAAAA,EAAoBC,GAAA5+B,KAAA4+B,sBAAAA,EA0ErB,OAvECD,EAAAz+B,UAAA2+B,QAAA,SAAQlK,GACP,YADO,IAAAA,IAAAA,EAAA+J,IACA1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYhT,gBAIrDugB,EAAAz+B,UAAA4+B,iBAAA,SAAiBnK,GAChB,YADgB,IAAAA,IAAAA,EAAA+J,IACT1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYH,yBAIrD0N,EAAAz+B,UAAA6+B,qBAAA,SAAqBpK,GACpB,YADoB,IAAAA,IAAAA,EAAA+J,IACb1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYP,gBAAgB7pB,KAAG,SAAC7F,GAAK,OAAAA,EAAEmG,cAIhFq3B,EAAAz+B,UAAA8+B,gBAAA,SAAgBrK,GACf,YADe,IAAAA,IAAAA,EAAA+J,IACR1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYN,8BAIrD6N,EAAAz+B,UAAA++B,aAAA,SAAatK,GACZ,YADY,IAAAA,IAAAA,EAAA+J,IACL1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYL,wBAIrD4N,EAAAz+B,UAAAg/B,YAAA,SAAY1R,EAAkBmH,GAC7B,YAD6B,IAAAA,IAAAA,EAAA+J,IACtB1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYN,4BAC9C9pB,EAAAA,KAAG,SAAEkC,GACJ,OAAOA,EAAQoK,QAAM,SAAEnS,GAAM,OAAAA,EAAEssB,aAAazW,OAAOwW,SAEpDla,EAAAA,QAAM,SAAEpK,GACP,OAAOA,EAAQvI,OAAS,KAEzBqG,EAAAA,KAAG,SAACkC,GAAW,OAAAA,EAAQ,GAAGwkB,qBAIjCiR,EAAAz+B,UAAAi/B,kBAAA,SAAkBxK,GACjB,YADiB,IAAAA,IAAAA,EAAA+J,IACV1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYJ,0BAIrD2N,EAAAz+B,UAAAk/B,cAAA,SAAczK,GACb,YADa,IAAAA,IAAAA,EAAA+J,IACN1+B,KAAK4+B,sBACNzrB,GAAGwhB,GACHthB,KACArM,EAAAA,KAAG,SAAEoqB,GAA6B,OAAAA,EAAYD,gDAzErDlpB,EAAAA,sDAVQ8qB,MAuFT4L,EA3FA,GCAA,IAAAU,GAAA,WAYC,SAAAA,EAAoBC,GAAAt/B,KAAAs/B,sBAAAA,EAuCrB,OApCCD,EAAAn/B,UAAA87B,KAAA,SAAKrH,QAAA,IAAAA,IAAAA,EAAA+J,IACJ1+B,KAAKs/B,sBAAsBtD,KAAKrH,IAGjC0K,EAAAn/B,UAAAg3B,WAAA,SAAW1D,EAA6BmB,QAAA,IAAAA,IAAAA,EAAA+J,IACvC1+B,KAAKs/B,sBAAsBpI,WAAWvC,EAAenB,IAGtD6L,EAAAn/B,UAAAm1B,SAAA,SAAS/tB,EAAeqtB,QAAA,IAAAA,IAAAA,EAAA+J,IACvB1+B,KAAKs/B,sBAAsBjK,SAASV,EAAertB,IAGpD+3B,EAAAn/B,UAAA22B,kBAAA,SAAkBvvB,EAAeqtB,QAAA,IAAAA,IAAAA,EAAA+J,IAChC1+B,KAAKs/B,sBAAsBzI,kBAAkBlC,EAAertB,IAG7D+3B,EAAAn/B,UAAAi6B,eAAA,SAAex0B,EAAkBgvB,QAAA,IAAAA,IAAAA,EAAA+J,IAChC1+B,KAAKs/B,sBAAsBnF,eAAexF,EAAehvB,IAG1D05B,EAAAn/B,UAAAk6B,aAAA,SAAa7N,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAChC1+B,KAAKs/B,sBAAsBrD,iBAAiBtH,EAAepI,GAAU,IAGtE8S,EAAAn/B,UAAAq/B,cAAA,SAAchT,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IACjC1+B,KAAKs/B,sBAAsBrD,iBAAiBtH,EAAepI,GAAU,IAGtE8S,EAAAn/B,UAAAm4B,SAAA,SAAS9L,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAC5B1+B,KAAKs/B,sBAAsBjH,SAAS1D,EAAepI,IAGpD8S,EAAAn/B,UAAAs4B,UAAA,SAAUjM,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAC7B1+B,KAAKs/B,sBAAsB9G,UAAU7D,EAAepI,wBAvCrDtkB,EAAAA,sDAPQ8zB,MAiDTsD,EAnDA,GCKA,IAAAG,GAAA,SAAA3zB,GAEC,SAAA2zB,EAAYpjB,EACQuY,EACA8K,GAFpB,IAAA15B,EAGC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,oBAAkBpc,YAFlB+F,EAAA4uB,cAAAA,EACA5uB,EAAA05B,WAAAA,IAWrB,OAfsC3zB,EAAAA,EAAAA,GAQrC0zB,EAAAt/B,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAK20B,eAGb6K,EAAAt/B,UAAAw/B,cAAA,WACC,OAAO1/B,KAAKy/B,YAEdD,EAfA,CAAsCnjB,EAAAA,aCLtC,IAAAsjB,GAAA,WAIC,SAAAA,EAAY9rB,GACX7T,KAAK6T,GAAKA,EAOZ,OAJC8rB,EAAAz/B,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAGd8rB,EAZA,GCEA,IAAAC,GAEC,SAA4BpS,EACTyK,GADSj4B,KAAAwtB,QAAAA,EACTxtB,KAAAi4B,UAAAA,GCDpB,IAAA4H,GAAA,SAAAh0B,GAEC,SAAAg0B,EAAYzjB,EACQuY,EACA8K,GAFpB,IAAA15B,EAGC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,sBAAoBpc,YAFpB+F,EAAA4uB,cAAAA,EACA5uB,EAAA05B,WAAAA,IAWrB,OAfuC3zB,EAAAA,EAAAA,GAQtC+zB,EAAA3/B,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAK20B,eAGbkL,EAAA3/B,UAAAw/B,cAAA,WACC,OAAO1/B,KAAKy/B,YAEdI,EAfA,CAAuCxjB,EAAAA,gCCWtC,SAAAyjB,EAAoBR,GAApB,IAAAv5B,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAAu5B,sBAAAA,IAoCrB,OAtC6DxzB,EAAAA,EAAAA,GAM5Dg0B,EAAA5/B,UAAAo8B,OAAA,SAAOhZ,GAEN,GAAIA,aAAiBkc,GAAkB,KAEhC7K,EAAgBrR,EAAMiP,mBAGxBiB,EAFIlQ,EAAMoc,gBAEI14B,KAAG,SAAE+4B,OAEhB5R,EAAgB,IAAIwR,GAAcI,EAAIvS,QAAQha,SAEpD,OAAO,IAAIosB,GAAiBzR,EAAe4R,EAAI9H,cAGhDj4B,KAAKs/B,sBAAsBxH,WAAWnD,EAAenB,GAGtD,GAAIlQ,aAAiBuc,GAAmB,CAEjClL,EAAgBrR,EAAMiP,mBAGxBiB,EAFIlQ,EAAMoc,gBAEI14B,KAAG,SAAE+4B,OAEhB5R,EAAgB,IAAIwR,GAAcI,EAAIvS,QAAQha,SAEpD,OAAO,IAAIosB,GAAiBzR,EAAe4R,EAAI9H,cAGhDj4B,KAAKs/B,sBAAsBxH,WAAWnD,EAAenB,yBApCvDvrB,EAAAA,sDANQ8zB,MA6CT+D,GAtC6DE,EAAAA,oBCN7D,IAAAC,GAAA,SAAAp0B,GAEC,SAAAo0B,EAAY7jB,EACOuY,EACAzrB,EACCg3B,GAHpB,IAAAn6B,EAIC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,sBAAoBpc,YAHrB+F,EAAA4uB,cAAAA,EACA5uB,EAAAmD,QAAAA,EACCnD,EAAAm6B,OAAAA,IAOrB,OAZuCp0B,EAAAA,EAAAA,GAStCm0B,EAAA//B,UAAAigC,UAAA,WACC,OAAOngC,KAAKkgC,QAEdD,EAZA,CAAuC5jB,EAAAA,aCJvC,IAAA+jB,GAAA,WAEC,SAAAA,EAA6BrQ,EACT1oB,GADSrH,KAAA+vB,OAAAA,EACT/vB,KAAAqH,MAAAA,EAWrB,OARC+4B,EAAAlgC,UAAAyvB,UAAA,WACC,OAAO3vB,KAAK+vB,QAGbqQ,EAAAlgC,UAAA4sB,SAAA,WACC,OAAO9sB,KAAKqH,OAGd+4B,EAdA,sBCcC,SAAAC,EAAoBf,EACAgB,GADpB,IAAAv6B,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFY+F,EAAAu5B,sBAAAA,EACAv5B,EAAAu6B,mBAAAA,IAqErB,OAxEyDx0B,EAAAA,EAAAA,GAOxDu0B,EAAAngC,UAAAo8B,OAAA,SAAOhZ,GAEN,GAAIA,aAAiB2c,GAAmB,KAGjCC,EAAS5c,EAAM6c,YACpBI,EAAiBvgC,KAAKwgC,sBAAsBN,GAC5Ch3B,EAAUoa,EAAMpa,QAChBsqB,EAASxzB,KAAKygC,eAAev3B,EAASg3B,EAAQK,GAE/CvgC,KAAKs/B,sBAAsBpI,WAAW5T,EAAMqR,cAAenB,KAIrD6M,EAAAngC,UAAAsgC,sBAAR,SAA8BN,GAE7B,OAAKA,EAIEA,EAAOl5B,KAAG,SAAEK,GAAiB,OAAA,IAAIs4B,GAAct4B,EAAMmM,QAAQA,YAH5D,IAMD6sB,EAAAngC,UAAAugC,eAAR,SAAuBv3B,EAA8Bg3B,EAAsBK,GAA3E,IAAAx6B,EAAA/F,KAEC,OAAKkJ,EAIEA,EAAQlC,KAAG,SAAE+oB,EAAsB/hB,OAEnCmgB,EAAgBoS,EAAevyB,GACpC3G,EAAQ64B,EAAOlyB,GAEVwe,EAAczmB,EAAKu6B,mBAAmBngC,OAAOguB,EAAe9mB,EAAMq5B,oBAAqBr5B,EAAM2lB,eAEnG,OAAO,IAAIoT,GAAarQ,EAAQvD,MAVzB,wBAlCTvkB,EAAAA,sDAPQ8zB,UACAoC,MA+ETkC,GAxEyDL,EAAAA,uCCDxD,SAAAW,EAA6BxE,EAChBE,EACFgB,GAFX,IAAAt3B,EAGC8F,EAAAjL,KAAAZ,KAAM47B,KAAmC57B,YAHb+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,EACFt2B,EAAAs3B,0BAAAA,IA6BZ,OAjC+DvxB,EAAAA,EAAAA,GAQ9D60B,EAAAzgC,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQY,iBAC3B5Q,EAAWgQ,EAAQ3P,cACnBjnB,EAAU42B,EAAQpwB,YAEbilB,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAYgJ,aAAa7N,EAAU5mB,GAEnC3F,KAAKm8B,+BAA+BhS,KAAKiH,GAEzCpxB,KAAKu9B,cAAcnM,EAAamL,IAGzBoE,EAAAzgC,UAAAq9B,cAAR,SAAsBnM,EAAmCmL,OAElDiB,EAASpM,EAAYqM,YAErBC,EAAe19B,KAAKq9B,0BAA0B93B,QAAQi4B,GAExDE,GAAgBA,EAAa/8B,OAAS,GACzCX,KAAKq8B,qBAAqBsB,QAAQD,wBA/BpCz1B,EAAAA,sDANQmiB,UAFyCqS,EAAAA,4BAGzCG,MAuCT+D,GAjC+DjE,EAAAA,mCCC9D,SAAAkE,EAA6BzE,EAChBE,EACFgB,GAFX,IAAAt3B,EAGC8F,EAAAjL,KAAAZ,KAAM67B,KAAiC77B,YAHX+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,EACFt2B,EAAAs3B,0BAAAA,IA4BZ,OAhC6DvxB,EAAAA,EAAAA,GAQ5D80B,EAAA1gC,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQY,iBAC3B5Q,EAAWgQ,EAAQ3P,cAEdwE,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAYiH,SAAS9L,GAErBvsB,KAAKm8B,+BAA+BhS,KAAKiH,GAEzCpxB,KAAKu9B,cAAcnM,EAAamL,IAGzBqE,EAAA1gC,UAAAq9B,cAAR,SAAsBnM,EAAmCmL,OAElDiB,EAASpM,EAAYqM,YAErBC,EAAe19B,KAAKq9B,0BAA0B93B,QAAQi4B,GAExDE,GAAgBA,EAAa/8B,OAAS,GACzCX,KAAKq8B,qBAAqBsB,QAAQD,wBA9BpCz1B,EAAAA,sDALQmiB,UAFyCqS,EAAAA,4BAGzCG,MAqCTgE,GAhC6DlE,EAAAA,mCCE5D,SAAAmE,EAA6B1E,EAChBE,EACFgB,GAFX,IAAAt3B,EAGC8F,EAAAjL,KAAAZ,KAAM87B,KAAkC97B,YAHZ+F,EAAAo2B,+BAAAA,EAChBp2B,EAAAs2B,qBAAAA,EACFt2B,EAAAs3B,0BAAAA,IA4BZ,OAhC8DvxB,EAAAA,EAAAA,GAQ7D+0B,EAAA3gC,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQY,iBAC3B5Q,EAAWgQ,EAAQ3P,cAEdwE,EAAcpxB,KAAKm8B,+BAA+B5Y,QAAQnH,GAEhEgV,EAAYoH,UAAUjM,GAEtBvsB,KAAKm8B,+BAA+BhS,KAAKiH,GAEzCpxB,KAAKu9B,cAAcnM,EAAamL,IAGzBsE,EAAA3gC,UAAAq9B,cAAR,SAAsBnM,EAAmCmL,OAElDiB,EAASpM,EAAYqM,YAErBC,EAAe19B,KAAKq9B,0BAA0B93B,QAAQi4B,GAExDE,GAAgBA,EAAa/8B,OAAS,GACzCX,KAAKq8B,qBAAqBsB,QAAQD,wBA9BpCz1B,EAAAA,sDALQmiB,UAFyCqS,EAAAA,4BAGzCG,MAqCTiE,GAhC8DnE,EAAAA,oBCsBxDoE,GAAgBp+B,EAClBswB,GAAmC,CACtC+I,GACAZ,GACA,CACCztB,QAASqzB,EAAAA,iBACT9N,SAAUiJ,GACV8E,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUmK,GACV4D,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU2K,GACVoD,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU6K,GACVkD,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU8K,GACViD,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU0N,GACVK,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUgL,GACV+C,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU2N,GACVI,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU4N,GACVG,OAAO,GAER3N,GACAuJ,GACAuB,KAGK8C,GAAav+B,EACfwwB,GAAiC,CACpC,CACCxlB,QAASwzB,EAAAA,sBACTjO,SAAUoN,GACVW,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAU6M,GACVkB,OAAO,GAERpR,GACAnE,GACAH,GACAM,GACAC,KAGYsV,GAAoBz+B,EAC7BywB,GACA2N,GACAG,GAAa,CAEhB3P,GAEA+N,GACAV,GACAP,KC3GDgD,GAAA,WAQC,SAAAA,EAAsB9X,GAAAtpB,KAAAspB,UAAAA,EAYvB,OAVC8X,EAAAlhC,UAAA0b,UAAA,SAAUzZ,EAAYiC,GACrB,OAAQA,GACP,IAAK,OAAQ,OAAOpE,KAAKspB,UAAUE,wBAAwBrnB,GAC3D,IAAK,QAAS,OAAOnC,KAAKspB,UAAU+X,yBAAyBl/B,GAC7D,IAAK,SAAU,OAAOnC,KAAKspB,UAAUgY,0BAA0Bn/B,GAC/D,IAAK,MAAO,OAAOnC,KAAKspB,UAAUiY,uBAAuBp/B,GACzD,IAAK,cAAe,OAAOnC,KAAKspB,UAAUkY,+BAA+Br/B,GACzE,QAAS,MAAM,IAAIgmB,MAAM,gCAAgC/jB,yBAd3D2X,EAAAA,KAAIxL,KAAA,CAAC,CACLyL,KAAM,uDAHE0N,EAAAA,gBAmBT0X,EApBA,GCAA,IAAAK,GAAA,WAKA,SAAAA,KAYA,2BAZCpmB,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,cAEDE,aAAc,CACb2lB,IAED1lB,QAAS,CACR0lB,QAIFK,EAjBA,GCyBMC,GAAa,CAClB1c,GACAuD,GACAH,GACAP,GACAgB,GACAM,GACAE,IAGKsY,GAAqB,CAC1B3c,GACAuD,GACAY,GAEAtX,EAAAA,iBACAD,EAAAA,qBACAF,EAAAA,mBACAa,EAAAA,kBACA8W,IAGDuY,GAAA,WAAA,SAAAA,KA8BA,2BA9BCvmB,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACAsmB,EAAAA,oBAEAJ,GAEA5vB,EAAAA,iBACAD,EAAAA,qBACAF,EAAAA,mBACAa,EAAAA,mBAED7B,UAAShO,EACLy+B,IAEJ1lB,aAAc,CACbimB,IAEDhmB,QAASimB,GACT5c,gBAAiB,CAChBC,GACAuD,GACAuZ,EAAAA,oBACAC,EAAAA,wBACAC,EAAAA,sBACAC,EAAAA,0BAKFL,EA9BA,GC/CAM,GAAA,WAAA,SAAAA,IAESliC,KAAAmiC,UAAY,EAOrB,OALCD,EAAAhiC,UAAA6N,WAAA,WAEC,OADA/N,KAAKmiC,YACEniC,KAAKmiC,WAGdD,EATA,GCAA,OAAA,aCIA,IAAAE,GAAA,SAAAv2B,GAEC,SAAAu2B,EAAY5zB,UACX3C,EAAAjL,KAAAZ,KAAMwO,EAAa,8BAA4BxO,KAGjD,OAN+C8L,EAAAA,EAAAA,GAM/Cs2B,EANA,CAA+C3N,EAAAA,gBCD/C4N,GAAA,SAAAx2B,GAEC,SAAAw2B,EAAY7zB,UACX3C,EAAAjL,KAAAZ,KAAMwO,EAAa,kCAAgCxO,KAGrD,OANmD8L,EAAAA,EAAAA,GAMnDu2B,EANA,CAAmD5N,EAAAA,8BC4BlD,SAAA6N,EAA4B38B,EACf0C,EACAC,EACAC,EACAC,EACAC,EACA8P,EACRgqB,GAPuBviC,KAAA2F,QAAAA,EACf3F,KAAAqI,KAAAA,EACArI,KAAAsI,SAAAA,EACAtI,KAAAuI,UAAAA,EACAvI,KAAAwI,SAAAA,EACAxI,KAAAyI,YAAAA,EACAzI,KAAAuY,WAAAA,EAxBIvY,KAAAw9B,OAAgC,GA0BhDx9B,KAAKuiC,OAASA,EAyNhB,OAhPQD,EAAAE,QAAP,SAAeD,GACd,OAAO,IAAID,GACV,EACA,EACA,GACA,CAAC,GAAI,GAAI,GAAI,MACb,GACA,EACA,EACAC,IAkBKD,EAAAG,WAAP,SAAkB/3B,EAA4B63B,OAEvCG,EAA0BJ,EAAgBE,QAAQD,GAQxD,OAAO,IAAID,EAPA53B,EAAO/E,SAAW+8B,EAAwBv2B,YAC7CzB,EAAOrC,MAAQq6B,EAAwB1pB,UACnCtO,EAAOpC,UAAYo6B,EAAwBzpB,cAC1CvO,EAAOnC,WAAam6B,EAAwBxpB,eAC7CxO,EAAOlC,UAAYk6B,EAAwBvpB,aACxCzO,EAAOjC,aAAei6B,EAAwBtpB,gBAS5D,EACAmpB,IAIFD,EAAApiC,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SAGb28B,EAAApiC,UAAAyiC,WAAA,WACC,OAAQ3iC,KAAK2F,SAGd28B,EAAApiC,UAAA8Y,QAAA,WACC,OAAOhZ,KAAKqI,MAGbi6B,EAAApiC,UAAA+Y,YAAA,WACC,OAAOjZ,KAAKsI,UAGbg6B,EAAApiC,UAAAgZ,aAAA,WACC,OAAOlZ,KAAKuI,WAGb+5B,EAAApiC,UAAAiZ,WAAA,WACC,OAAInZ,KAAK2iC,cAIF3iC,KAAKwI,UAGb85B,EAAApiC,UAAAkZ,cAAA,WACC,OAAIpZ,KAAK2iC,cAIF3iC,KAAKyI,aAGb65B,EAAApiC,UAAAuZ,cAAA,WACC,OAAOzZ,KAAKuY,YAGb+pB,EAAApiC,UAAA0iC,OAAA,SAAOx6B,QAEuB1C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,QAAUyC,EAAazC,cAGHD,IAAtB0C,EAAaC,OAChBrI,KAAKqI,KAAOD,EAAaC,UAEI3C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,SAAU,SAIaD,IAA1B0C,EAAaE,WAChBtI,KAAKsI,SAAWF,EAAaE,cAEA5C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,SAAU,SAIcD,IAA3B0C,EAAaG,YAChBvI,KAAKuI,UAAYH,EAAaG,eAED7C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,SAAU,SAIaD,IAA1B0C,EAAaI,WAChBxI,KAAKwI,SAAWJ,EAAaI,cAEA9C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,SAAU,SAIgBD,IAA7B0C,EAAaK,cAChBzI,KAAKyI,YAAcL,EAAaK,iBAEH/C,IAAzB0C,EAAazC,UAChB3F,KAAK2F,SAAU,KAII,IAAjB3F,KAAK2F,UACkB,IAA1ByC,EAAaI,WACgB,IAA7BJ,EAAaK,cACbzI,KAAKyI,aAAc,EAEnBzI,KAAKuiC,OAAOM,KAAK,uDAKnBP,EAAApiC,UAAA4iC,cAAA,SAAcxqB,GACbtY,KAAKuY,WAAaD,GAGnBgqB,EAAApiC,UAAA8U,SAAA,eACKA,EAAWhV,KAAKqI,KAEfrI,KAAKqZ,uBACTrE,GAAY,GAGbhV,KAAKqI,KAAO2M,GAGbstB,EAAApiC,UAAA+U,SAAA,eACKA,EAAWjV,KAAKqI,KAEfrI,KAAKsZ,uBACTrE,GAAY,GAGbjV,KAAKqI,KAAO4M,GAGbqtB,EAAApiC,UAAA6U,eAAA,SAAezM,GAQd,OANItI,KAAKuI,UAAUsU,MAAI,SAAEkmB,GAAe,OAAAA,IAAOz6B,OAE9CtI,KAAKgjC,QAAQ,GACbhjC,KAAKijC,YAAY36B,IAGXtI,KAAKw9B,QAGb8E,EAAApiC,UAAAmZ,mBAAA,WAEC,OAAwB,IAApBrZ,KAAKuY,YAIFvY,KAAKqI,OAAS0S,KAAKC,KAAKhb,KAAKuY,WAAavY,KAAKsI,WAGvDg6B,EAAApiC,UAAAoZ,mBAAA,WACC,OAAqB,IAAdtZ,KAAKqI,MAGbi6B,EAAApiC,UAAAif,eAAA,eAEO+jB,EAAY,GAAMljC,KAAKqI,KAAO,GAAKrI,KAAKsI,SAE9C,OAAItI,KAAKuY,WAAa2qB,EACd,EAGDA,GAGRZ,EAAApiC,UAAAkf,aAAA,eAEO+jB,EAAWnjC,KAAKqI,KAAOrI,KAAKsI,SAElC,OAAItI,KAAKuY,WAAa4qB,EACdnjC,KAAKuY,WAGN4qB,GAGRb,EAAApiC,UAAA0Z,OAAA,SAAO3Q,GAEN,GAAIjJ,KAAK2iC,aACR,OAAO15B,MAGJ6P,EAAQ9Y,KAAKmf,iBAMjB,OAJc,IAAVrG,IACHA,GAAS,GAGH7P,EAAO4Q,MAAMf,EAAO9Y,KAAKof,iBAGzBkjB,EAAApiC,UAAA8iC,QAAR,SAAgB36B,GACfrI,KAAKqI,KAAOA,EACZrI,KAAKw9B,OAAOh7B,KAAK,IAAI4/B,GAA0B,IAAIxuB,GAAY,8BAGxD0uB,EAAApiC,UAAA+iC,YAAR,SAAoB36B,GACnBtI,KAAKsI,SAAWA,EAChBtI,KAAKw9B,OAAOh7B,KAAK,IAAI6/B,GAA8B,IAAIzuB,GAAY,8BAGrE0uB,KChQA,IAAAc,GAAA,WAWC,SAAAA,EAAoBb,GAAAviC,KAAAuiC,OAAAA,EAWrB,OARCa,EAAAljC,UAAAmjC,cAAA,WACC,OAAOf,GAAgBE,QAAQxiC,KAAKuiC,SAGrCa,EAAAljC,UAAAojC,iBAAA,SAAiBv8B,GAChB,OAAOu7B,GAAgBG,WAAW17B,EAAQ/G,KAAKuiC,6BAXhDt6B,EAAAA,sDANQs7B,MAoBTH,EAtBA,sBCcC,SAAAI,EAAoBh1B,EACTi1B,EACRruB,GAFH,IAAArP,EAGC8F,EAAAjL,KAAAZ,KAAMoV,IAAiBpV,YAHJ+F,EAAAyI,YAAAA,EACTzI,EAAA09B,iBAAAA,IAoCZ,OAvC+C33B,EAAAA,EAAAA,GAQ9C03B,EAAAtjC,UAAAwjC,iBAAA,eAEOC,EAA0B3jC,KAAKyjC,iBAAiBJ,gBAEtDx3B,EAAA3L,UAAM2U,UAASjU,KAAAZ,KAAC,CACfqI,KAAMs7B,EAAwB3qB,UAC9B1Q,SAAUq7B,EAAwB1qB,cAClC1Q,UAAWo7B,EAAwBzqB,gBACjClZ,KAAKwO,cAITg1B,EAAAtjC,UAAA2U,UAAA,SAAUnK,GACTmB,EAAA3L,UAAM2U,UAASjU,KAAAZ,KAAC0K,EAAQ1K,KAAKwO,cAI9Bg1B,EAAAtjC,UAAA6U,eAAA,SAAezM,GACduD,EAAA3L,UAAM6U,eAAcnU,KAAAZ,KAACsI,EAAUtI,KAAKwO,cAIrCg1B,EAAAtjC,UAAA8U,SAAA,WACCnJ,EAAA3L,UAAM8U,SAAQpU,KAAAZ,KAACA,KAAKwO,cAIrBg1B,EAAAtjC,UAAA+U,SAAA,WACCpJ,EAAA3L,UAAM+U,SAAQrU,KAAAZ,KAACA,KAAKwO,kCArCrBvG,EAAAA,sDANQ2L,UACAwvB,UACAzuB,MAyBR2T,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,mHAMDM,EAAAA,CADCN,mHAKFwb,GAvC+CruB,uBCC9C,SAAAyuB,EAAoBp1B,EACjByF,GADH,IAAAlO,EAEC8F,EAAAjL,KAAAZ,KAAMiU,IAAiBjU,YAFJ+F,EAAAyI,YAAAA,IAkBrB,OApBiD1C,EAAAA,EAAAA,GAQhD83B,EAAA1jC,UAAAgU,SAAA,WACC,OAAOrI,EAAA3L,UAAMgU,SAAQtT,KAAAZ,KAACA,KAAKwO,cAI5Bo1B,EAAA1jC,UAAAiU,eAAA,WACC,OAAOtI,EAAA3L,UAAMgU,SAAQtT,KAAAZ,KAACA,KAAKwO,aACvB6E,KACAe,EAAAA,KAAK,yBAjBVnM,EAAAA,sDANQ2L,UACAX,MAcRqV,EAAAA,CADCN,6EACW6b,EAAAA,0CAKZvb,EAAAA,CADCN,6EACiB6b,EAAAA,gDAOnBD,GApBiD5vB,ICPjD,IAAA8vB,GAAA,SAAAj4B,GAEC,SAAAi4B,EAA4Bt1B,EACToP,GADnB,IAAA7X,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,qBAAmBxO,YAFX+F,EAAAyI,YAAAA,EACTzI,EAAA6X,OAAAA,IAIpB,OAPsC9R,EAAAA,EAAAA,GAOtCg4B,EAPA,CAAsCvvB,EAAAA,SCAtC,IAAAwvB,GAAA,SAAAl4B,GAEC,SAAAk4B,EAA4Bv1B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,iCAA+BxO,YAFvB+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPkDmG,EAAAA,EAAAA,GAOlDi4B,EAPA,CAAkDxvB,EAAAA,SCAlD,IAAAyvB,GAAA,SAAAn4B,GAEC,SAAAm4B,EAA4Bx1B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,mCAAiCxO,YAFzB+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPoDmG,EAAAA,EAAAA,GAOpDk4B,EAPA,CAAoDzvB,EAAAA,SCApD,IAAA0vB,GAAA,SAAAp4B,GAEC,SAAAo4B,EAA4Bz1B,EACT/G,GADnB,IAAA1B,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,0BAAwBxO,YAFhB+F,EAAAyI,YAAAA,EACTzI,EAAA0B,MAAAA,IAIpB,OAP2CqE,EAAAA,EAAAA,GAO3Cm4B,EAPA,CAA2C1vB,EAAAA,SCC3C,IAAA2vB,GAAA,SAAAr4B,GAEC,SAAAq4B,EAA4B11B,EACT21B,GADnB,IAAAp+B,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,0BAAwBxO,YAFhB+F,EAAAyI,YAAAA,EACTzI,EAAAo+B,SAAAA,IAIpB,OAP2Cr4B,EAAAA,EAAAA,GAO3Co4B,EAPA,CAA2C3vB,EAAAA,SCF3C,IAAA6vB,GAAA,SAAAv4B,GAEC,SAAAu4B,EAA4B51B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,iCAA+BxO,YAFvB+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPkDmG,EAAAA,EAAAA,GAOlDs4B,EAPA,CAAkD7vB,EAAAA,SCClD,IAAA8vB,GAAA,SAAAx4B,GAEC,SAAAw4B,EAA4B71B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oCAAkCxO,YAF1B+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPqDmG,EAAAA,EAAAA,GAOrDu4B,EAPA,CAAqD9vB,EAAAA,SCJrD,IAAA+vB,GAAA,WAoBC,SAAAA,EAAoB1vB,GAAA5U,KAAA4U,kBAAAA,EA+BrB,OA5BC0vB,EAAApkC,UAAAqkC,UAAA,SAAU/1B,EAA0BoP,GACnC5d,KAAK4U,kBAAkBE,SAAS,IAAIgvB,GAAiBt1B,EAAaoP,KAGnE0mB,EAAApkC,UAAAskC,mBAAA,SAAmBh2B,EAA0B7I,GAC5C3F,KAAK4U,kBAAkBE,SAAS,IAAIivB,GAA6Bv1B,EAAa7I,KAG/E2+B,EAAApkC,UAAAukC,qBAAA,SAAqBj2B,EAA0B7I,GAC9C3F,KAAK4U,kBAAkBE,SAAS,IAAIkvB,GAA+Bx1B,EAAa7I,KAGjF2+B,EAAApkC,UAAAwkC,SAAA,SAASl2B,EAA0B/G,GAClCzH,KAAK4U,kBAAkBE,SAAS,IAAImvB,GAAsBz1B,EAAa/G,KAGxE68B,EAAApkC,UAAAykC,eAAA,SAAen2B,EAA8C21B,QAA9C,IAAA31B,IAAAA,EAAAuF,IACd/T,KAAK4U,kBAAkBE,SAAS,IAAIovB,GAAsB11B,EAAa21B,KAGxEG,EAAApkC,UAAA0kC,gBAAA,SAAgBp2B,EAA0B7I,GACzC3F,KAAK4U,kBAAkBE,SAAS,IAAIsvB,GAA6B51B,EAAa7I,KAG/E2+B,EAAApkC,UAAA2kC,mBAAA,SAAmBr2B,EAA0B7I,GAC5C3F,KAAK4U,kBAAkBE,SAAS,IAAIuvB,GAAgC71B,EAAa7I,yBA/BlFsC,EAAAA,sDAfQiN,EAAAA,qBAiDTovB,EAnDA,GCAA,IAAAQ,GAAA,WAYC,SAAAA,EAAoB5xB,GAAAlT,KAAAkT,oBAAAA,EAarB,OAVC4xB,EAAA5kC,UAAAiT,GAAA,SAAG3E,GAEF,OAAOxO,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACAC,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAejF,EAAYiF,cAC9EzM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAUgN,qCAZ/CtY,EAAAA,sDANQ0L,MAsBTmxB,EAzBA,GCAA,IAAAC,GAAA,WAeC,SAAAA,EAAoBC,GAAAhlC,KAAAglC,iBAAAA,EAwDrB,OArDCD,EAAA7kC,UAAA+kC,SAAA,SAASz2B,GACR,YADQ,IAAAA,IAAAA,EAAAuF,IACD/T,KAAKglC,iBAAiB7xB,GAAG3E,IAGjCu2B,EAAA7kC,UAAAglC,eAAA,SAAe12B,GACd,YADc,IAAAA,IAAAA,EAAAuF,IACP/T,KAAKilC,SAASz2B,GACf6E,KACAe,EAAAA,KAAK,KAIZ2wB,EAAA7kC,UAAAilC,SAAA,SAAS32B,GACR,YADQ,IAAAA,IAAAA,EAAAuF,IACD/T,KAAKglC,iBACN7xB,GAAG3E,GACH6E,KACArM,EAAAA,KAAG,SAAEqZ,GACJ,OAAOA,EAAOnC,eAEf5K,EAAAA,QAAM,SAAEsK,GAAmB,YAAWlY,IAAXkY,OAIlCmnB,EAAA7kC,UAAAklC,kBAAA,SAAkB52B,GACjB,YADiB,IAAAA,IAAAA,EAAAuF,IACV/T,KAAKglC,iBACN7xB,GAAG3E,GACH6E,KACArM,EAAAA,KAAG,SAAEqZ,GACJ,OAAOA,EAAOlC,wBAEf7K,EAAAA,QAAM,SAAEsK,GAAmB,YAAWlY,IAAXkY,OAIlCmnB,EAAA7kC,UAAAmlC,aAAA,SAAa72B,GACZ,YADY,IAAAA,IAAAA,EAAAuF,IACL/T,KAAKglC,iBACN7xB,GAAG3E,GACH6E,KACArM,EAAAA,KAAG,SAAEqZ,GACJ,OAAOA,EAAO7B,qBAKtBumB,EAAA7kC,UAAAolC,eAAA,SAAe92B,GACd,YADc,IAAAA,IAAAA,EAAAuF,IACP/T,KAAKglC,iBACN7xB,GAAG3E,GACH6E,KACArM,EAAAA,KAAG,SAAEqZ,GACJ,OAAOA,EAAO9B,2CAtDtBtW,EAAAA,sDARQ68B,MAmETC,EAvEA,GCAA,IAAAQ,GAAA,WAmBC,SAAAA,EAAoBC,EACTC,GADSzlC,KAAAwlC,iBAAAA,EACTxlC,KAAAylC,mBAAAA,EAHHzlC,KAAA2S,aAAe,IAAIC,EAAAA,QAiG5B,OA3FC2yB,EAAArlC,UAAA+P,YAAA,WACCjQ,KAAK2S,aAAazQ,OAClBlC,KAAK2S,aAAaG,YAGnByyB,EAAArlC,UAAAqkC,UAAA,SAAU3mB,EAAgBpP,QAAA,IAAAA,IAAAA,EAAAuF,IACzB/T,KAAKwlC,iBAAiBjB,UAAU/1B,EAAaoP,IAG9C2nB,EAAArlC,UAAAwlC,UAAA,SAAU9nB,EAAgBpP,QAAA,IAAAA,IAAAA,EAAAuF,IACzB/T,KAAKwlC,iBAAiBjB,UAAU/1B,EAAaoP,IAG9C2nB,EAAArlC,UAAAskC,mBAAA,SAAmB7+B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACpC/T,KAAKwlC,iBAAiBhB,mBAAmBh2B,EAAa7I,IAGvD4/B,EAAArlC,UAAAukC,qBAAA,SAAqB9+B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACtC/T,KAAKwlC,iBAAiBf,qBAAqBj2B,EAAa7I,IAGzD4/B,EAAArlC,UAAAwkC,SAAA,SAASj9B,EAAoB+G,QAAA,IAAAA,IAAAA,EAAAuF,IAC5B/T,KAAKwlC,iBAAiBd,SAASl2B,EAAa/G,IAG7C89B,EAAArlC,UAAAykC,eAAA,SAAeR,EAA6B31B,QAAA,IAAAA,IAAAA,EAAAuF,IAC3C/T,KAAKwlC,iBAAiBb,eAAen2B,EAAa21B,IAGnDoB,EAAArlC,UAAA0kC,gBAAA,SAAgBj/B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACjC/T,KAAKwlC,iBAAiBZ,gBAAgBp2B,EAAa7I,IAGpD4/B,EAAArlC,UAAA2kC,mBAAA,SAAmBl/B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACpC/T,KAAKwlC,iBAAiBX,mBAAmBr2B,EAAa7I,IAGvD4/B,EAAArlC,UAAAylC,mBAAA,SAAmBn3B,GAAnB,IAAAzI,EAAA/F,UAAmB,IAAAwO,IAAAA,EAAAuF,IAClB/T,KAAKylC,mBACHJ,aAAa72B,GACb6E,KACArM,EAAAA,KAAG,SAAE4+B,GAAwB,OAAAA,EAAIpoB,gBACjClK,EAAAA,QAAM,SAAEuyB,GAAkB,YAASngC,IAATmgC,KAC1BzxB,EAAAA,KAAK,GACLrB,EAAAA,UAAU/S,KAAK2S,eAEfyF,WAAS,SAAEytB,GACX9/B,EAAKy+B,oBAAoBqB,EAAMr3B,OAIlC+2B,EAAArlC,UAAA4lC,qBAAA,SAAqBt3B,GAArB,IAAAzI,EAAA/F,UAAqB,IAAAwO,IAAAA,EAAAuF,IACpB/T,KAAKylC,mBACHJ,aAAa72B,GACb6E,KACArM,EAAAA,KAAG,SAAE4+B,GAAwB,OAAAA,EAAInoB,kBACjCnK,EAAAA,QAAM,SAAEuyB,GAAkB,YAASngC,IAATmgC,KAC1BzxB,EAAAA,KAAK,GACLrB,EAAAA,UAAU/S,KAAK2S,eAEfyF,WAAS,SAAEytB,GACX9/B,EAAK0+B,sBAAsBoB,EAAMr3B,OAIpC+2B,EAAArlC,UAAA6lC,gBAAA,SAAgBv3B,GAAhB,IAAAzI,EAAA/F,UAAgB,IAAAwO,IAAAA,EAAAuF,IACf/T,KAAKylC,mBACHH,eAAe92B,GACf6E,KACArM,EAAAA,KAAG,SAAEgX,GAAqC,OAAAA,EAAaY,wBACvDxK,EAAAA,KAAK,GACLrB,EAAAA,UAAU/S,KAAK2S,eAEfyF,WAAS,SAAEzS,GACXI,EAAK6+B,iBAAiBj/B,EAAS6I,OAIlC+2B,EAAArlC,UAAA8lC,mBAAA,SAAmBx3B,GAAnB,IAAAzI,EAAA/F,UAAmB,IAAAwO,IAAAA,EAAAuF,IAClB/T,KAAKylC,mBACHH,eAAe92B,GACf6E,KACArM,EAAAA,KAAG,SAAEgX,GAAqC,OAAAA,EAAaa,2BACvDzK,EAAAA,KAAK,GACLrB,EAAAA,UAAU/S,KAAK2S,eAEfyF,WAAS,SAAEzS,GACXI,EAAK8+B,oBAAoBl/B,EAAS6I,2BAhGrCvG,EAAAA,sDAVQq8B,UACAS,MA6GTQ,EAlHA,WCCC1hC,KAAA,EACAC,KAAA,EACAC,IAAA,6ECWA,SAAAkiC,EAAoBz3B,EACjBi3B,EACAD,GAFH,IAAAz/B,EAGC8F,EAAAjL,KAAAZ,KAAMwlC,EAAkBC,IAAmBzlC,YAHxB+F,EAAAyI,YAAAA,IAsErB,OAxE+C1C,EAAAA,EAAAA,GAQ9Cm6B,EAAA/lC,UAAAgmC,iBAAA,WACCr6B,EAAA3L,UAAMqkC,UAAS3jC,KAAAZ,KAAC21B,OAAOwQ,iBAAkBnmC,KAAKwO,cAI/Cy3B,EAAA/lC,UAAAqkC,UAAA,SAAU3mB,EAAgBpP,QAAA,IAAAA,IAAAA,EAAAuF,IACzBlI,EAAA3L,UAAMqkC,UAAS3jC,KAAAZ,KAAC4d,EAAQ5d,KAAKwO,cAI9By3B,EAAA/lC,UAAAwlC,UAAA,SAAU9nB,GACT/R,EAAA3L,UAAMwlC,UAAS9kC,KAAAZ,KAAC4d,EAAQ5d,KAAKwO,cAI9By3B,EAAA/lC,UAAAskC,mBAAA,SAAmB7+B,GAClBkG,EAAA3L,UAAMskC,mBAAkB5jC,KAAAZ,KAAC2F,EAAS3F,KAAKwO,cAIxCy3B,EAAA/lC,UAAAukC,qBAAA,SAAqB9+B,GACpBkG,EAAA3L,UAAMukC,qBAAoB7jC,KAAAZ,KAAC2F,EAAS3F,KAAKwO,cAI1Cy3B,EAAA/lC,UAAAwkC,SAAA,SAASj9B,GACRoE,EAAA3L,UAAMwkC,SAAQ9jC,KAAAZ,KAACyH,EAAOzH,KAAKwO,cAI5By3B,EAAA/lC,UAAAykC,eAAA,SAAeR,EAA6B31B,QAAA,IAAAA,IAAAA,EAAAuF,IAC3ClI,EAAA3L,UAAMykC,eAAc/jC,KAAAZ,KAACmkC,EAAUnkC,KAAKwO,cAIrCy3B,EAAA/lC,UAAA0kC,gBAAA,SAAgBj/B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACjClI,EAAA3L,UAAM0kC,gBAAehkC,KAAAZ,KAAC2F,EAAS3F,KAAKwO,cAIrCy3B,EAAA/lC,UAAA2kC,mBAAA,SAAmBl/B,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IACpClI,EAAA3L,UAAM2kC,mBAAkBjkC,KAAAZ,KAAC2F,EAAS3F,KAAKwO,cAIxCy3B,EAAA/lC,UAAAylC,mBAAA,WACC95B,EAAA3L,UAAMylC,mBAAkB/kC,KAAAZ,KAACA,KAAKwO,cAI/By3B,EAAA/lC,UAAA4lC,qBAAA,WACCj6B,EAAA3L,UAAM4lC,qBAAoBllC,KAAAZ,KAACA,KAAKwO,cAIjCy3B,EAAA/lC,UAAA6lC,gBAAA,WACCl6B,EAAA3L,UAAM6lC,gBAAenlC,KAAAZ,KAACA,KAAKwO,cAI5By3B,EAAA/lC,UAAA8lC,mBAAA,WACCn6B,EAAA3L,UAAM8lC,mBAAkBplC,KAAAZ,KAACA,KAAKwO,kCAtE/BvG,EAAAA,sDATQ2L,UACAmxB,UACAT,MAqBRhc,EAAAA,CADCN,2DACsCpU,kEAKvC0U,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,oIAMDM,EAAAA,CADCN,sIAMDM,EAAAA,CADCN,yHAMDM,EAAAA,CADCN,2DACwDpU,uEAKzD0U,EAAAA,CADCN,4DAC8CpU,wEAK/C0U,EAAAA,CADCN,4DACiDpU,2EAKlD0U,EAAAA,CADCN,6HAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,0HAMDM,EAAAA,CADCN,6HAKFie,GAxE+CV,uBCG9C,SAAAa,EAAoB53B,EACjBw2B,GADH,IAAAj/B,EAEC8F,EAAAjL,KAAAZ,KAAMglC,IAAiBhlC,YAFJ+F,EAAAyI,YAAAA,IAmCrB,OArCiD1C,EAAAA,EAAAA,GAQhDs6B,EAAAlmC,UAAA+kC,SAAA,WACC,OAAOp5B,EAAA3L,UAAM+kC,SAAQrkC,KAAAZ,KAACA,KAAKwO,cAI5B43B,EAAAlmC,UAAAglC,eAAA,WACC,OAAOr5B,EAAA3L,UAAMglC,eAActkC,KAAAZ,KAACA,KAAKwO,cAIlC43B,EAAAlmC,UAAAilC,SAAA,WACC,OAAOt5B,EAAA3L,UAAMilC,SAAQvkC,KAAAZ,KAACA,KAAKwO,cAI5B43B,EAAAlmC,UAAAklC,kBAAA,WACC,OAAOv5B,EAAA3L,UAAMklC,kBAAiBxkC,KAAAZ,KAACA,KAAKwO,cAIrC43B,EAAAlmC,UAAAmlC,aAAA,WACC,OAAOx5B,EAAA3L,UAAMmlC,aAAYzkC,KAAAZ,KAACA,KAAKwO,cAIhC43B,EAAAlmC,UAAAolC,eAAA,SAAe92B,GACd,YADc,IAAAA,IAAAA,EAAAuF,IACPlI,EAAA3L,UAAMolC,eAAc1kC,KAAAZ,KAACA,KAAKwO,kCAnClCvG,EAAAA,sDATQ2L,UACAkxB,MAiBRxc,EAAAA,CADCN,6EACW6b,EAAAA,0CAKZvb,EAAAA,CADCN,6EACiB6b,EAAAA,gDAKlBvb,EAAAA,CADCN,6EACW6b,EAAAA,0CAKZvb,EAAAA,CADCN,6EACoB6b,EAAAA,mDAKrBvb,EAAAA,CADCN,6EACe6b,EAAAA,8CAKhBvb,EAAAA,CADCN,oDAC2BpU,2BAAkCiwB,EAAAA,gDAI/DuC,GArCiDrB,ICTjD,IAAAsB,GAAA,SAAAx6B,GAEC,SAAAw6B,EAA4B73B,EACT8F,GADnB,IAAAvO,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,wBAAsBxO,YAFd+F,EAAAyI,YAAAA,EACTzI,EAAAuO,QAAAA,IAIpB,OAPyCxI,EAAAA,EAAAA,GAOzCu6B,EAPA,CAAyC9xB,EAAAA,SCAzC,IAAA+xB,GAAA,SAAAz6B,GAEC,SAAAy6B,EAA4B93B,EACT+3B,GADnB,IAAAxgC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,6BAA2BxO,YAFnB+F,EAAAyI,YAAAA,EACTzI,EAAAwgC,YAAAA,IAIpB,OAP8Cz6B,EAAAA,EAAAA,GAO9Cw6B,EAPA,CAA8C/xB,EAAAA,SCJ9C,IAAAiyB,GAAA,WAWC,SAAAA,EAAoB5xB,GAAA5U,KAAA4U,kBAAAA,EAWrB,OARC4xB,EAAAtmC,UAAAumC,WAAA,SAAWj4B,GACVxO,KAAK4U,kBAAkBE,SAAS,IAAIuxB,GAAoB73B,KAGzDg4B,EAAAtmC,UAAAwmC,kBAAA,SAAkBl4B,EAA0B+3B,GAC3CvmC,KAAK4U,kBAAkBE,SAAS,IAAIwxB,GAAyB93B,EAAa+3B,yBAX3Et+B,EAAAA,sDALQiN,EAAAA,qBAmBTsxB,EAtBA,GCAA,IAAAG,GAAA,WAUC,SAAAA,EAAoBC,GAAA5mC,KAAA4mC,oBAAAA,EAWrB,OARCD,EAAAzmC,UAAA2mC,oBAAA,SAAoBr4B,QAAA,IAAAA,IAAAA,EAAAuF,IACnB/T,KAAK4mC,oBAAoBH,WAAWj4B,IAGrCm4B,EAAAzmC,UAAAwmC,kBAAA,SAAkBH,EAAqB/3B,QAAA,IAAAA,IAAAA,EAAAuF,IACtC/T,KAAK4mC,oBAAoBF,kBAAkBl4B,EAAa+3B,wBAXzDt+B,EAAAA,sDALQu+B,MAmBTG,EArBA,sBCYC,SAAAG,EAAoBt4B,EACjBo4B,GADH,IAAA7gC,EAEC8F,EAAAjL,KAAAZ,KAAM4mC,IAAoB5mC,YAFP+F,EAAAyI,YAAAA,IAcrB,OAhBkD1C,EAAAA,EAAAA,GAOjDg7B,EAAA5mC,UAAAumC,WAAA,WACC56B,EAAA3L,UAAM2mC,oBAAmBjmC,KAAAZ,KAACA,KAAKwO,cAIhCs4B,EAAA5mC,UAAAwmC,kBAAA,SAAkBH,GACjB16B,EAAA3L,UAAMwmC,kBAAiB9lC,KAAAZ,KAACumC,EAAavmC,KAAKwO,kCAd3CvG,EAAAA,sDAJQ2L,UACA4yB,MAgBRle,EAAAA,CADCN,kIAKF8e,GAhBkDH,ICVlD,IAAAI,GAAA,WAaC,SAAAA,EAAoB7zB,GAAAlT,KAAAkT,oBAAAA,EAarB,OAVC6zB,EAAA7mC,UAAA8mC,YAAA,SAAYx4B,GAEX,OAAOxO,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACAC,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAejF,EAAYiF,cAC9EzM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAU+M,wCAZ/CrY,EAAAA,sDANQ0L,MAsBTozB,EA1BA,GCAA,IAAAE,GAAA,WAcC,SAAAA,EAAoBC,GAAAlnC,KAAAknC,oBAAAA,EAWrB,OARCD,EAAA/mC,UAAAinC,eAAA,SAAe34B,GACd,YADc,IAAAA,IAAAA,EAAAuF,IACP/T,KAAKknC,oBACNF,YAAYx4B,GACZ6E,KACArM,EAAAA,KAAG,SAAEoZ,GAAyB,OAAAA,EAAUjD,2CAV/ClV,EAAAA,sDAPQ8+B,MAqBTE,EAzBA,sBCcC,SAAAG,EAAoB54B,EACjB04B,GADH,IAAAnhC,EAEC8F,EAAAjL,KAAAZ,KAAMknC,IAAoBlnC,YAFP+F,EAAAyI,YAAAA,IASrB,OAXoD1C,EAAAA,EAAAA,GAQnDs7B,EAAAlnC,UAAAinC,eAAA,WACC,OAAOt7B,EAAA3L,UAAMinC,eAAcvmC,KAAAZ,KAACA,KAAKwO,kCAVlCvG,EAAAA,sDANQ2L,UAEAmzB,MAaRze,EAAAA,CADCN,6EACiB6b,EAAAA,gDAGnBuD,GAXoDH,ICPpD,IAAAI,GAAA,SAAAx7B,GAEC,SAAAw7B,EAA4B74B,EACR84B,GADpB,IAAAvhC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oCAAkCxO,YAF1B+F,EAAAyI,YAAAA,EACRzI,EAAAuhC,aAAAA,IAQrB,OAXqDx7B,EAAAA,EAAAA,GAOpDu7B,EAAAnnC,UAAA44B,UAAA,WACC,OAAO94B,KAAKsnC,cAGdD,EAXA,CAAqD9yB,EAAAA,SCCrD,IAAAgzB,GAAA,SAAA17B,GAEC,SAAA07B,EAA4B/4B,EACTgf,EACAga,EACAC,GAHnB,IAAA1hC,EAIC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,iCAA+BxO,YAJvB+F,EAAAyI,YAAAA,EACTzI,EAAAynB,QAAAA,EACAznB,EAAAyhC,iBAAAA,EACAzhC,EAAA0hC,YAAAA,IAIpB,OATkD37B,EAAAA,EAAAA,GASlDy7B,EATA,CAAkDhzB,EAAAA,SCNlD,IAAAmzB,GAAA,WAcC,SAAAA,EAAoB9yB,GAAA5U,KAAA4U,kBAAAA,EAWrB,OARC8yB,EAAAxnC,UAAAynC,oBAAA,SAAoB5gC,EAAsByH,GACzCxO,KAAK4U,kBAAkBE,SAAS,IAAIuyB,GAAgC74B,EAAazH,KAGlF2gC,EAAAxnC,UAAA0nC,UAAA,SAAUpa,EAAkBqa,EAAyBJ,EAAqBj5B,GACzExO,KAAK4U,kBAAkBE,SAAS,IAAIyyB,GAA6B/4B,EAAagf,EAASqa,EAAiBJ,yBAXzGx/B,EAAAA,sDATQiN,EAAAA,qBAuBTwyB,EAzBA,GCIA,IAAAI,GAAA,SAAAj8B,GAEC,SAAAi8B,EAA4Bt5B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,4BAA0BxO,YAFlB+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAP6CmG,EAAAA,EAAAA,GAO7Cg8B,EAPA,CAA6CvzB,EAAAA,SCD7C,IAAAwzB,GAAA,SAAAl8B,GAEC,SAAAk8B,EAA4Bv5B,EACTw5B,QAAA,IAAAA,IAAAA,EAAA,IADnB,IAAAjiC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,qBAAmBxO,YAFX+F,EAAAyI,YAAAA,EACTzI,EAAAiiC,MAAAA,IAIpB,OAPsCl8B,EAAAA,EAAAA,GAOtCi8B,EAPA,CAAsCxzB,EAAAA,SCEtC,IAAA0zB,GAAA,SAAAp8B,GAEC,SAAAo8B,EAA6Bz5B,EACTglB,GADpB,IAAAztB,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,mCAAiCxO,YAFxB+F,EAAAyI,YAAAA,EACTzI,EAAAytB,OAAAA,IAQrB,OAXoD1nB,EAAAA,EAAAA,GAOnDm8B,EAAA/nC,UAAAo7B,UAAA,WACC,OAAOt7B,KAAKwzB,QAGdyU,EAXA,CAAoD1zB,EAAAA,SCLpD,IAAA2zB,GAAA,WAcC,SAAAA,EAAoBtzB,GAAA5U,KAAA4U,kBAAAA,EAerB,OAZCszB,EAAAhoC,UAAAioC,WAAA,SAAW35B,EAA0B7I,GACpC3F,KAAK4U,kBAAkBE,SAAS,IAAIgzB,GAAwBt5B,EAAa7I,KAG1EuiC,EAAAhoC,UAAA8V,UAAA,SAAUxH,EAA0Bw5B,GACnChoC,KAAK4U,kBAAkBE,SAAS,IAAIizB,GAAiBv5B,EAAaw5B,KAGnEE,EAAAhoC,UAAAkoC,SAAA,SAAS55B,EAA0BglB,GAClCxzB,KAAK4U,kBAAkBE,SAAS,IAAImzB,GAA+Bz5B,EAAaglB,yBAfjFvrB,EAAAA,sDATQiN,EAAAA,qBA2BTgzB,EA7BA,GCIA,IAAAG,GAAA,SAAAx8B,GAEC,SAAAw8B,EAA4B75B,GAA5B,IAAAzI,EACC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,yBAAuBxO,YADf+F,EAAAyI,YAAAA,IAI7B,OAN0C1C,EAAAA,EAAAA,GAM1Cu8B,EANA,CAA0C9zB,EAAAA,SCD1C,IAAA+zB,GAAA,SAAAz8B,GAEC,SAAAy8B,EAA4B95B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oCAAkCxO,YAF1B+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAPqDmG,EAAAA,EAAAA,GAOrDw8B,EAPA,CAAqD/zB,EAAAA,SCCrD,IAAAg0B,GAAA,SAAA18B,GAEC,SAAA08B,EAA4B/5B,EACT0S,GADnB,IAAAnb,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,6BAA2BxO,YAFnB+F,EAAAyI,YAAAA,EACTzI,EAAAmb,SAAAA,IAIpB,OAP8CpV,EAAAA,EAAAA,GAO9Cy8B,EAPA,CAA8Ch0B,EAAAA,SCE9C,IAAAi0B,GAAA,SAAA38B,GAEC,SAAA28B,EAA4Bh6B,EACRi6B,GADpB,IAAA1iC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,sBAAoBxO,YAFZ+F,EAAAyI,YAAAA,EACRzI,EAAA0iC,cAAAA,IAQrB,OAXuC38B,EAAAA,EAAAA,GAOtC08B,EAAAtoC,UAAAwoC,iBAAA,WACC,OAAO1oC,KAAKyoC,eAGdD,EAXA,CAAuCj0B,EAAAA,SCAvC,IAAAo0B,GAAA,SAAA98B,GAEC,SAAA88B,EAA4Bn6B,EACRmmB,EACAnH,GAFpB,IAAAznB,EAGC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,sBAAoBxO,YAHZ+F,EAAAyI,YAAAA,EACRzI,EAAA4uB,cAAAA,EACA5uB,EAAAynB,QAAAA,IAYrB,OAhBuC1hB,EAAAA,EAAAA,GAQtC68B,EAAAzoC,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAK20B,eAGbgU,EAAAzoC,UAAAutB,WAAA,WACC,OAAOztB,KAAKwtB,SAGdmb,EAhBA,CAAuCp0B,EAAAA,SCAvC,IAAAq0B,GAAA,SAAA/8B,GAEC,SAAA+8B,EAA4Bp6B,EACRq6B,GADpB,IAAA9iC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,yCAAuCxO,YAF/B+F,EAAAyI,YAAAA,EACRzI,EAAA8iC,mBAAAA,IAQrB,OAX0D/8B,EAAAA,EAAAA,GAOzD88B,EAAA1oC,UAAA44B,UAAA,WACC,OAAO94B,KAAK6oC,oBAGdD,EAXA,CAA0Dr0B,EAAAA,SCA1D,IAAAu0B,GAAA,SAAAj9B,GAEC,SAAAi9B,EAA4Bt6B,EACRu6B,GADpB,IAAAhjC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,uCAAqCxO,YAF7B+F,EAAAyI,YAAAA,EACRzI,EAAAgjC,aAAAA,IAQrB,OAXwDj9B,EAAAA,EAAAA,GAOvDg9B,EAAA5oC,UAAA44B,UAAA,WACC,OAAO94B,KAAK+oC,cAGdD,EAXA,CAAwDv0B,EAAAA,SCCxD,IAAAy0B,GAAA,SAAAn9B,GAEC,SAAAm9B,EAA4Bx6B,EACTmmB,EACAzrB,GAFnB,IAAAnD,EAGC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,sBAAoBxO,YAHZ+F,EAAAyI,YAAAA,EACTzI,EAAA4uB,cAAAA,EACA5uB,EAAAmD,QAAAA,IAIpB,OARuC4C,EAAAA,EAAAA,GAQvCk9B,EARA,CAAuCz0B,EAAAA,SCHvC,IAAA00B,GAAA,SAAAp9B,GAEC,SAAAo9B,EAA4Bz6B,EACT06B,GADnB,IAAAnjC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,oCAAkCxO,YAF1B+F,EAAAyI,YAAAA,EACTzI,EAAAmjC,OAAAA,IAIpB,OAPqDp9B,EAAAA,EAAAA,GAOrDm9B,EAPA,CAAqD10B,EAAAA,SCIrD,IAAA40B,GAAA,SAAAt9B,GAEC,SAAAs9B,EAAY36B,EACQmmB,EACAnH,EACA4b,GAHpB,IAAArjC,EAIC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,wBAAsBxO,YAHtB+F,EAAA4uB,cAAAA,EACA5uB,EAAAynB,QAAAA,EACAznB,EAAAqjC,UAAAA,IAerB,OApByCt9B,EAAAA,EAAAA,GASxCq9B,EAAAjpC,UAAAqyB,iBAAA,WACC,OAAOvyB,KAAK20B,eAGbwU,EAAAjpC,UAAAutB,WAAA,WACC,OAAOztB,KAAKwtB,SAGb2b,EAAAjpC,UAAAmpC,aAAA,WACC,OAAOrpC,KAAKopC,WAEdD,EApBA,CAAyC50B,EAAAA,SCLzC,IAAA+0B,GAAA,SAAAz9B,GAEC,SAAAy9B,EAA4B96B,EACTmR,GADnB,IAAA5Z,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,wBAAsBxO,YAFd+F,EAAAyI,YAAAA,EACTzI,EAAA4Z,UAAAA,IAIpB,OAPyC7T,EAAAA,EAAAA,GAOzCw9B,EAPA,CAAyC/0B,EAAAA,SCHzC,IAAAg1B,GAAA,WAgCC,SAAAA,EAA6B30B,EACT40B,EACAC,GAFSzpC,KAAA4U,kBAAAA,EACT5U,KAAAwpC,8BAAAA,EACAxpC,KAAAypC,iBAAAA,EA2DrB,OAxDCF,EAAArpC,UAAA87B,KAAA,SAAKxtB,QAAA,IAAAA,IAAAA,EAAAuF,IACJ/T,KAAK4U,kBAAkBE,SAAS,IAAIuzB,GAAqB75B,KAG1D+6B,EAAArpC,UAAAwpC,qBAAA,SAAqBl7B,QAAA,IAAAA,IAAAA,EAAAuF,IACpB/T,KAAK4U,kBAAkBE,SAAS,IAAIwzB,GAAgC95B,GAAa,KAGlF+6B,EAAArpC,UAAAypC,sBAAA,SAAsBn7B,QAAA,IAAAA,IAAAA,EAAAuF,IACrB/T,KAAK4U,kBAAkBE,SAAS,IAAIwzB,GAAgC95B,GAAa,KAGlF+6B,EAAArpC,UAAA0pC,kBAAA,SAAkB1oB,EAAkB1S,QAAA,IAAAA,IAAAA,EAAAuF,IACnC/T,KAAK4U,kBAAkBE,SAAS,IAAIyzB,GAAyB/5B,EAAa0S,KAG3EqoB,EAAArpC,UAAA8V,UAAA,SAAUgyB,EAAmBx5B,QAAA,IAAAA,IAAAA,EAAAuF,IAC5B/T,KAAKypC,iBAAiBzzB,UAAUxH,EAAaw5B,IAG9CuB,EAAArpC,UAAA2pC,iBAAA,SAAiB9iC,EAAuByH,QAAA,IAAAA,IAAAA,EAAAuF,IACvC/T,KAAK4U,kBAAkBE,SAAS,IAAI0zB,GAAkBh6B,EAAazH,KAGpEwiC,EAAArpC,UAAA4pC,WAAA,SAAWtc,EAAkBmH,EAA+BnmB,QAAA,IAAAA,IAAAA,EAAAuF,IAC3D/T,KAAK4U,kBAAkBE,SAAS,IAAI6zB,GAAkBn6B,EAAammB,EAAenH,KAGnF+b,EAAArpC,UAAA6pC,aAAA,SAAavc,EAAkB4b,EAAuBzU,EAA+BnmB,QAAA,IAAAA,IAAAA,EAAAuF,IACpF/T,KAAK4U,kBAAkBE,SAAS,IAAIq0B,GAAoB36B,EAAammB,EAAenH,EAAS4b,KAG9FG,EAAArpC,UAAA8pC,gBAAA,SAAgBjjC,EAAsByH,QAAA,IAAAA,IAAAA,EAAAuF,IACrC/T,KAAKwpC,8BAA8B7B,oBAAoB5gC,EAAQyH,IAGhE+6B,EAAArpC,UAAA+pC,sBAAA,SAAsBljC,EAA4ByH,QAAA,IAAAA,IAAAA,EAAAuF,IACjD/T,KAAK4U,kBAAkBE,SAAS,IAAI8zB,GAAqCp6B,EAAazH,KAGvFwiC,EAAArpC,UAAAgqC,WAAA,SAAWhhC,EAA8ByrB,EAA8BnmB,QAAA,IAAAA,IAAAA,EAAAuF,IACtE/T,KAAK4U,kBAAkBE,SAAS,IAAIk0B,GAAkBx6B,EAAammB,EAAezrB,KAGnFqgC,EAAArpC,UAAAiqC,mBAAA,SAAmBpjC,EAAsByH,QAAA,IAAAA,IAAAA,EAAAuF,IACxC/T,KAAK4U,kBAAkBE,SAAS,IAAIg0B,GAAmCt6B,EAAazH,KAGrFwiC,EAAArpC,UAAAkqC,OAAA,SAAOlB,EAAgB16B,QAAA,IAAAA,IAAAA,EAAAuF,IACtB/T,KAAK4U,kBAAkBE,SAAS,IAAIm0B,GAAgCz6B,EAAa06B,KAGlFK,EAAArpC,UAAAmqC,aAAA,SAAa1qB,EAAmBnR,QAAA,IAAAA,IAAAA,EAAAuF,IAC/B/T,KAAK4U,kBAAkBE,SAAS,IAAIw0B,GAAoB96B,EAAamR,yBA7DtE1X,EAAAA,sDA3BQiN,EAAAA,yBAEAwyB,UACAQ,MAwFTqB,EA7FA,sBCuBC,SAAAe,EAA6B97B,EACTmmB,EACjB/f,EACA40B,EACAC,GAJH,IAAA1jC,EAKC8F,EAAAjL,KAAAZ,KAAM4U,EAAmB40B,EAA+BC,IAAiBzpC,YAL7C+F,EAAAyI,YAAAA,EACTzI,EAAA4uB,cAAAA,IA6ErB,OAhFkD7oB,EAAAA,EAAAA,GAWjDw+B,EAAApqC,UAAA87B,KAAA,WACCnwB,EAAA3L,UAAM87B,KAAIp7B,KAAAZ,KAACA,KAAKwO,cAIjB87B,EAAApqC,UAAAwpC,qBAAA,WACC79B,EAAA3L,UAAMwpC,qBAAoB9oC,KAAAZ,KAACA,KAAKwO,cAIjC87B,EAAApqC,UAAAypC,sBAAA,WACC99B,EAAA3L,UAAMypC,sBAAqB/oC,KAAAZ,KAACA,KAAKwO,cAIlC87B,EAAApqC,UAAA0pC,kBAAA,SAAkB1oB,GACjBrV,EAAA3L,UAAM0pC,kBAAiBhpC,KAAAZ,KAACkhB,EAAUlhB,KAAKwO,cAIxC87B,EAAApqC,UAAA8V,UAAA,SAAUgyB,GACTn8B,EAAA3L,UAAM8V,UAASpV,KAAAZ,KAACgoC,EAAOhoC,KAAKwO,cAI7B87B,EAAApqC,UAAA2pC,iBAAA,SAAiB9iC,EAAuByH,QAAA,IAAAA,IAAAA,EAAAuF,IACvClI,EAAA3L,UAAM2pC,iBAAgBjpC,KAAAZ,KAAC+G,EAAQ/G,KAAKwO,cAIrC87B,EAAApqC,UAAA4pC,WAAA,SAAWtc,GACV3hB,EAAA3L,UAAM4pC,WAAUlpC,KAAAZ,KAACwtB,EAASxtB,KAAK20B,cAAe30B,KAAKwO,cAIpD87B,EAAApqC,UAAA6pC,aAAA,SAAavc,EAAkB4b,GAC9Bv9B,EAAA3L,UAAM6pC,aAAYnpC,KAAAZ,KAACwtB,EAAS4b,EAAWppC,KAAK20B,cAAe30B,KAAKwO,cAIjE87B,EAAApqC,UAAA8pC,gBAAA,SAAgBjjC,EAAsByH,QAAA,IAAAA,IAAAA,EAAAuF,IACrClI,EAAA3L,UAAM8pC,gBAAeppC,KAAAZ,KAAC+G,EAAQ/G,KAAKwO,cAIpC87B,EAAApqC,UAAA+pC,sBAAA,SAAsBljC,EAA4ByH,QAAA,IAAAA,IAAAA,EAAAuF,IACjDlI,EAAA3L,UAAM+pC,sBAAqBrpC,KAAAZ,KAAC+G,EAAQ/G,KAAKwO,cAI1C87B,EAAApqC,UAAAgqC,WAAA,SAAWhhC,GACV2C,EAAA3L,UAAMgqC,WAAUtpC,KAAAZ,KAACkJ,EAASlJ,KAAK20B,cAAe30B,KAAKwO,cAIpD87B,EAAApqC,UAAAiqC,mBAAA,SAAmBpjC,EAAsByH,QAAA,IAAAA,IAAAA,EAAAuF,IACxClI,EAAA3L,UAAMiqC,mBAAkBvpC,KAAAZ,KAAC+G,EAAQ/G,KAAKwO,cAIvC87B,EAAApqC,UAAAkqC,OAAA,SAAOlB,GACNr9B,EAAA3L,UAAMkqC,OAAMxpC,KAAAZ,KAACkpC,EAAQlpC,KAAKwO,cAI3B87B,EAAApqC,UAAAmqC,aAAA,SAAa1qB,GACZ9T,EAAA3L,UAAMmqC,aAAYzpC,KAAAZ,KAAC2f,EAAW3f,KAAKwO,kCA9EpCvG,EAAAA,sDAfQ2L,UACA6qB,UAJAvpB,EAAAA,yBAKAwyB,UACAQ,MAwBR5f,EAAAA,CADCN,+GAMDM,EAAAA,CADCN,+HAMDM,EAAAA,CADCN,gIAMDM,EAAAA,CADCN,kIAMDM,EAAAA,CADCN,oDACgBroB,qEAKjB2oB,EAAAA,CADCN,2DACoDpU,yEAKrD0U,EAAAA,CADCN,oDACmB+F,mEAKpBzF,EAAAA,CADCN,oDACqB+F,GAAO4H,yEAK7BrN,EAAAA,CADCN,2DACkDpU,wEAKnD0U,EAAAA,CADCN,2DAC8DpU,8EAK/D0U,EAAAA,CADCN,oDACmBroB,sEAKpB2oB,EAAAA,CADCN,2DACqDpU,2EAKtD0U,EAAAA,CADCN,uHAMDM,EAAAA,CADCN,6HAKFsiB,GAhFkDf,uBCNjD,SAAAgB,EAAoB/7B,EACjB0E,EACA8Q,GAFH,IAAAje,EAGC8F,EAAAjL,KAAAZ,KAAMkT,EAAqB8Q,IAA4BhkB,YAHpC+F,EAAAyI,YAAAA,IAqBrB,OAvBoD1C,EAAAA,EAAAA,GASnDy+B,EAAArqC,UAAAkT,YAAA,WACC,OAAOvH,EAAA3L,UAAMkT,YAAWxS,KAAAZ,KAACA,KAAKwO,cAI/B+7B,EAAArqC,UAAAsjB,wBAAA,WACC,OAAO3X,EAAA3L,UAAMsjB,wBAAuB5iB,KAAAZ,KAACA,KAAKwO,cAI3C+7B,EAAArqC,UAAAyjB,YAAA,WACC,OAAO9X,EAAA3L,UAAMyjB,YAAW/iB,KAAAZ,KAACA,KAAKwO,kCArB/BvG,EAAAA,sDANQ2L,UACAD,UAEAsP,MAaRqF,EAAAA,CADCN,6EACc6b,EAAAA,6CAKfvb,EAAAA,CADCN,6EAC0B6b,EAAAA,yDAK3Bvb,EAAAA,CADCN,6EACc6b,EAAAA,6CAIhB0G,GAvBoDxmB,uBCJnD,SAAAymB,WACC3+B,EAAAjL,KAAAZ,OAAOA,KAGT,OAN6C8L,EAAAA,EAAAA,uBAD5C7D,EAAAA,mDAODuiC,GAN6CC,EAAAA,kBCP7CC,GAAA,WAWC,SAAAA,EAAoBC,GAAA3qC,KAAA2qC,wBAAAA,EAOrB,OAJCD,EAAAxqC,UAAA0qC,SAAA,SAASp8B,GACR,OAAOxO,KAAK2qC,wBAAwBE,KAAKr8B,wBAP1CvG,EAAAA,sDALQuiC,MAeTE,EAlBA,GCEA,IAAAI,GAAA,WAEC,SAAAA,EAA6BC,EACT5c,EACAhsB,GAFSnC,KAAA+qC,OAAAA,EACT/qC,KAAAmuB,cAAAA,EACAnuB,KAAAmC,MAAAA,EAerB,OAZC2oC,EAAA5qC,UAAA8qC,UAAA,WACC,OAAOhrC,KAAK+qC,QAGbD,EAAA5qC,UAAA+qC,iBAAA,WACC,OAAOjrC,KAAKmuB,eAGb2c,EAAA5qC,UAAAkuB,SAAA,WACC,OAAOpuB,KAAKmC,OAGd2oC,EAnBA,sBCgBC,SAAAI,EAAoBzB,EACT0B,EACAlzB,GAFX,IAAAlS,EAGC8F,EAAAjL,KAAAZ,OAAOA,YAHY+F,EAAA0jC,iBAAAA,EACT1jC,EAAAolC,2BAAAA,EACAplC,EAAAkS,mBAAAA,IA8CZ,OAlD0CnM,EAAAA,EAAAA,GAQzCo/B,EAAAhrC,UAAA8V,UAAA,SAAUgyB,EAAmBx5B,QAAA,IAAAA,IAAAA,EAAAuF,IAC5B/T,KAAKypC,iBAAiBzzB,UAAUxH,EAAaw5B,IAG9CkD,EAAAhrC,UAAAioC,WAAA,SAAWxiC,EAAkB6I,QAAA,IAAAA,IAAAA,EAAAuF,IAC5B/T,KAAKypC,iBAAiBtB,WAAW35B,EAAa7I,IAG/CulC,EAAAhrC,UAAAkoC,SAAA,SAAS5U,EAAuChlB,QAAA,IAAAA,IAAAA,EAAAuF,IAC/C/T,KAAKypC,iBAAiBrB,SAAS55B,EAAaglB,IAG7C0X,EAAAhrC,UAAAkrC,gBAAA,SAAgBC,EAAmBC,EAAoBnpC,EAAYqM,GAAnE,IAAAzI,EAAA/F,UAAmE,IAAAwO,IAAAA,EAAAuF,QAE5Dw3B,EAAUvrC,KAAKiY,mBACfd,mBACA9D,KACArM,EAAAA,KAAG,SAAEkQ,GACJ,OAAOA,EAASm0B,GAAW73B,YAI5Bg4B,EAAWxrC,KAAKmrC,2BACfP,SAASp8B,GAEhBi9B,EAAAA,IAAIF,EAASC,GACXn4B,KACAe,EAAAA,KAAK,GACLpU,KAAK+S,aAELqF,WAAS,SAAEszB,OAELX,EAASW,EAAM,GACpBxL,EAASwL,EAAM,GAEhB3lC,EAAKqiC,SACJ,IAAI0C,GAA8BC,EAAQ7K,EAAOoL,GAAanpC,GAC9DqM,2BA9CJvG,EAAAA,sDATQigC,UACAwC,UACAn0B,MA0DT20B,GAlD0Cx4B,uBCDzC,SAAAi5B,EAA6Bn9B,EAC1Bi7B,EACA0B,EACAlzB,GAHH,IAAAlS,EAIC8F,EAAAjL,KAAAZ,KAAMypC,EAAkB0B,EAA4BlzB,IAAmBjY,YAJ3C+F,EAAAyI,YAAAA,IA2B9B,OA7B+C1C,EAAAA,EAAAA,GAU9C6/B,EAAAzrC,UAAA8V,UAAA,SAAUgyB,GACTn8B,EAAA3L,UAAM8V,UAASpV,KAAAZ,KAACgoC,EAAOhoC,KAAKwO,cAI7Bm9B,EAAAzrC,UAAAioC,WAAA,SAAWxiC,GACVkG,EAAA3L,UAAMioC,WAAUvnC,KAAAZ,KAAC2F,EAAS3F,KAAKwO,cAIhCm9B,EAAAzrC,UAAAkoC,SAAA,SAAS5U,GACR3nB,EAAA3L,UAAMkoC,SAAQxnC,KAAAZ,KAACwzB,EAAQxzB,KAAKwO,cAI7Bm9B,EAAAzrC,UAAAkrC,gBAAA,SAAgBC,EAAmBC,EAAoBnpC,GACtD0J,EAAA3L,UAAMkrC,gBAAexqC,KAAAZ,KAACqrC,EAAWC,EAAYnpC,EAAOnC,KAAKwO,kCA3B1DvG,EAAAA,sDAPQ2L,UACAs0B,UACAwC,UACAn0B,MAeR+R,EAAAA,CADCN,oDACgBroB,qEAKjB2oB,EAAAA,CADCN,4HAMDM,EAAAA,CADCN,oDACgB8iB,iEAKjBxiB,EAAAA,CADCN,8IAKF2jB,GA7B+CT,uBCG9C,SAAAU,EAAoBp9B,EACjB0E,EACAsD,EACAC,GAHH,IAAA1Q,EAIC8F,EAAAjL,KAAAZ,KAAMkT,EAAqBsD,EAAkCC,IAAgCzW,YAJ1E+F,EAAAyI,YAAAA,IAqCrB,OAvCiD1C,EAAAA,EAAAA,GAUhD8/B,EAAA1rC,UAAAwW,WAAA,WACC,OAAO7K,EAAA3L,UAAMwW,WAAU9V,KAAAZ,KAACA,KAAKwO,cAI9Bo9B,EAAA1rC,UAAA+W,eAAA,WACC,OAAOpL,EAAA3L,UAAM+W,eAAcrW,KAAAZ,KAACA,KAAKwO,cAIlCo9B,EAAA1rC,UAAAiX,iBAAA,WACC,OAAOtL,EAAA3L,UAAMiX,iBAAgBvW,KAAAZ,KAACA,KAAKwO,cAIpCo9B,EAAA1rC,UAAAkX,aAAA,WACC,OAAOvL,EAAA3L,UAAMkX,aAAYxW,KAAAZ,KAACA,KAAKwO,cAIhCo9B,EAAA1rC,UAAAmX,UAAA,WACC,OAAOxL,EAAA3L,UAAMmX,UAASzW,KAAAZ,KAACA,KAAKwO,cAI7Bo9B,EAAA1rC,UAAAsX,mBAAA,WACC,OAAO3L,EAAA3L,UAAMsX,mBAAkB5W,KAAAZ,KAACA,KAAKwO,kCArCtCvG,EAAAA,sDAPQ2L,UACAD,UAGAyC,UAFAR,MAgBR0S,EAAAA,CADCN,6EACa6b,EAAAA,4CAKdvb,EAAAA,CADCN,6EACiB6b,EAAAA,gDAKlBvb,EAAAA,CADCN,6EACmB6b,EAAAA,kDAKpBvb,EAAAA,CADCN,6EACe6b,EAAAA,8CAKhBvb,EAAAA,CADCN,6EACY6b,EAAAA,2CAKbvb,EAAAA,CADCN,6EACqB6b,EAAAA,oDAIvB+H,GAvCiDr1B,uBCChD,SAAAs1B,EAA6BlX,EAC1B2K,GADH,IAAAv5B,EAEC8F,EAAAjL,KAAAZ,KAAMs/B,IAAsBt/B,YAFA+F,EAAA4uB,cAAAA,IAkD9B,OApDoD7oB,EAAAA,EAAAA,GAQnD+/B,EAAA3rC,UAAA87B,KAAA,SAAKrH,QAAA,IAAAA,IAAAA,EAAA+J,IACJ7yB,EAAA3L,UAAM87B,KAAIp7B,KAAAZ,KAACA,KAAK20B,gBAIjBkX,EAAA3rC,UAAAg3B,WAAA,SAAW1D,GACV3nB,EAAA3L,UAAMg3B,WAAUt2B,KAAAZ,KAACwzB,EAAQxzB,KAAK20B,gBAI/BkX,EAAA3rC,UAAAm1B,SAAA,SAAS/tB,EAAeqtB,QAAA,IAAAA,IAAAA,EAAA+J,IACvB7yB,EAAA3L,UAAMm1B,SAAQz0B,KAAAZ,KAACsH,EAAOtH,KAAK20B,gBAI5BkX,EAAA3rC,UAAA22B,kBAAA,SAAkBvvB,EAAeqtB,QAAA,IAAAA,IAAAA,EAAA+J,IAChC7yB,EAAA3L,UAAM22B,kBAAiBj2B,KAAAZ,KAACsH,EAAOtH,KAAK20B,gBAIrCkX,EAAA3rC,UAAAi6B,eAAA,SAAex0B,EAAkBgvB,QAAA,IAAAA,IAAAA,EAAA+J,IAChC7yB,EAAA3L,UAAMi6B,eAAcv5B,KAAAZ,KAAC2F,EAAS3F,KAAK20B,gBAIpCkX,EAAA3rC,UAAAk6B,aAAA,SAAa7N,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAChC7yB,EAAA3L,UAAMk6B,aAAYx5B,KAAAZ,KAACusB,EAAUvsB,KAAK20B,gBAInCkX,EAAA3rC,UAAAq/B,cAAA,SAAchT,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IACjC7yB,EAAA3L,UAAMq/B,cAAa3+B,KAAAZ,KAACusB,EAAUvsB,KAAK20B,gBAIpCkX,EAAA3rC,UAAAm4B,SAAA,SAAS9L,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAC5B7yB,EAAA3L,UAAMm4B,SAAQz3B,KAAAZ,KAACusB,EAAUvsB,KAAK20B,gBAI/BkX,EAAA3rC,UAAAs4B,UAAA,SAAUjM,EAAoBoI,QAAA,IAAAA,IAAAA,EAAA+J,IAC7B7yB,EAAA3L,UAAMs4B,UAAS53B,KAAAZ,KAACusB,EAAUvsB,KAAK20B,oCAlDhC1sB,EAAAA,sDAPQw2B,UACA1C,MAeRzT,EAAAA,CADCN,oDACmByW,6DAKpBnW,EAAAA,CADCN,oDACkBroB,sEAKnB2oB,EAAAA,CADCN,2DACsCyW,iEAKvCnW,EAAAA,CADCN,2DAC+CyW,0EAKhDnW,EAAAA,CADCN,4DAC+CyW,uEAKhDnW,EAAAA,CADCN,oDACsBoL,GAAyBqL,qEAKhDnW,EAAAA,CADCN,oDACuBoL,GAAyBqL,sEAKjDnW,EAAAA,CADCN,oDACkBoL,GAAyBqL,iEAK5CnW,EAAAA,CADCN,oDACmBoL,GAAyBqL,kEAI9CoN,GApDoDxM,uBCKnD,SAAAyM,EAA6BnX,EAC1BiK,GADH,IAAA74B,EAEC8F,EAAAjL,KAAAZ,KAAM4+B,IAAsB5+B,YAFA+F,EAAA4uB,cAAAA,IA6C9B,OA/CsD7oB,EAAAA,EAAAA,GAQrDggC,EAAA5rC,UAAA2+B,QAAA,WACC,OAAOhzB,EAAA3L,UAAM2+B,QAAOj+B,KAAAZ,KAACA,KAAK20B,gBAI3BmX,EAAA5rC,UAAA4+B,iBAAA,SAAiBnK,GAChB,YADgB,IAAAA,IAAAA,EAAA+J,IACT7yB,EAAA3L,UAAM4+B,iBAAgBl+B,KAAAZ,KAACA,KAAK20B,gBAIpCmX,EAAA5rC,UAAA6+B,qBAAA,WACC,OAAOlzB,EAAA3L,UAAM6+B,qBAAoBn+B,KAAAZ,KAACA,KAAK20B,gBAIxCmX,EAAA5rC,UAAA8+B,gBAAA,WACC,OAAOnzB,EAAA3L,UAAM8+B,gBAAep+B,KAAAZ,KAACA,KAAK20B,gBAInCmX,EAAA5rC,UAAA++B,aAAA,SAAatK,GACZ,YADY,IAAAA,IAAAA,EAAA+J,IACL7yB,EAAA3L,UAAM++B,aAAYr+B,KAAAZ,KAACA,KAAK20B,gBAIhCmX,EAAA5rC,UAAAg/B,YAAA,SAAY1R,GACX,OAAO3hB,EAAA3L,UAAMg/B,YAAWt+B,KAAAZ,KAACwtB,EAASxtB,KAAK20B,gBAIxCmX,EAAA5rC,UAAAi/B,kBAAA,WACC,OAAOtzB,EAAA3L,UAAMi/B,kBAAiBv+B,KAAAZ,KAACA,KAAK20B,gBAIrCmX,EAAA5rC,UAAAk/B,cAAA,WACC,OAAOvzB,EAAA3L,UAAMk/B,cAAax+B,KAAAZ,KAACA,KAAK20B,oCA7CjC1sB,EAAAA,sDATQw2B,UACA1L,MAiBRzK,EAAAA,CADCN,6EACU6b,EAAAA,yCAKXvb,EAAAA,CADCN,oDAC+ByW,2BAAsCoF,EAAAA,kDAKtEvb,EAAAA,CADCN,6EACuB6b,EAAAA,sDAKxBvb,EAAAA,CADCN,6EACkB6b,EAAAA,iDAKnBvb,EAAAA,CADCN,oDAC2ByW,2BAAsCoF,EAAAA,8CAKlEvb,EAAAA,CADCN,oDACoB+F,2BAAU8V,EAAAA,6CAK/Bvb,EAAAA,CADCN,6EACoB6b,EAAAA,mDAKrBvb,EAAAA,CADCN,6EACgB6b,EAAAA,+CAIlBiI,GA/CsDnN,ICStD,IAAaoN,GAAiB,CAC7B,CAAEr+B,QAASyH,GAAsB8d,SAAUuQ,IAC3C,CAAE91B,QAASsG,GAAwBif,SAAU2Q,IAC7C,CAAEl2B,QAAS63B,GAAsBtS,SAAUgT,IAC3C,CAAEv4B,QAASq3B,GAAwB9R,SAAUmT,IAC7C,CAAE14B,QAASi5B,GAAyB1T,SAAU6T,IAC9C,CAAEp5B,QAASu5B,GAA2BhU,SAAUmU,IAChD,CAAE15B,QAAS67B,GAAyBtW,SAAUqX,IAC9C,CAAE58B,QAASqW,GAA2BkP,SAAUsX,IAChD,CAAE78B,QAASw9B,GAAsBjY,SAAU0Y,IAC3C,CAAEj+B,QAAS6I,GAAwB0c,SAAU2Y,IAE7C,CAAEl+B,QAAS2xB,GAA2BpM,SAAU4Y,IAChD,CAAEn+B,QAASixB,GAA6B1L,SAAU6Y,KCtCnDE,GAAA,WAsCC,SAAAA,EAAoBC,EACTxG,GADSzlC,KAAAisC,iBAAAA,EACTjsC,KAAAylC,mBAAAA,EAzBMzlC,KAAAksC,yBAA2B,oBAE3BlsC,KAAAmsC,2BAA6B,sBAE7BnsC,KAAAosC,wBAA0B,aAE1BpsC,KAAAqsC,0BAA4B,eAE5BrsC,KAAAssC,uBAAyB,YAEzBtsC,KAAAusC,sBAAwB,WAExBvsC,KAAAwsC,iBAAmB,eAEnBxsC,KAAAysC,kBAAoB,gBAI7BzsC,KAAA0sC,SAA2B,KAI3B1sC,KAAA2S,aAAe,IAAIC,EAAAA,QAI1B5S,KAAKkkB,SAAWlkB,KAAKisC,iBAAiBU,eAAe,KAAM,MAgJ7D,OA7ICX,EAAA9rC,UAAA+P,YAAA,WACCjQ,KAAK2S,aAAazQ,OAClBlC,KAAK2S,aAAaG,YAGnBk5B,EAAA9rC,UAAA87B,KAAA,SAAK3sB,EAAwBb,GAA7B,IAAAzI,EAAA/F,KAECA,KAAK4sC,WAAav9B,EAElBrP,KAAKylC,mBACHJ,aAAa72B,GACb6E,KAAKN,EAAAA,UAAU/S,KAAK2S,eACpByF,WAAS,SAAEy0B,OAELC,EAAO/mC,EAAKgnC,YAAYF,GAE9B9mC,EAAKinC,iBAAiBF,OAIjBd,EAAA9rC,UAAA6sC,YAAR,SAAoBnH,GAApB,IAAA7/B,EAAA/F,KAEC,GAAKA,KAAK0sC,SAGH,KAEFO,EAAO,GAWX,OATAztC,OAAO+rB,KAAKvrB,KAAK0sC,UACb1mC,SAAO,SAAE/E,GACL2kC,EAAI3kC,KAAS8E,EAAK2mC,SAASzrC,KAC9BgsC,EAAKhsC,GAAO2kC,EAAI3kC,OAIrBjB,KAAK0sC,SAAW9G,EAETqH,EAdP,OADAjtC,KAAK0sC,SAAW9G,EACT5lC,KAAK0sC,UAkBNV,EAAA9rC,UAAA8sC,iBAAR,SAAyBF,GAEpBA,EAAKjtC,eAAe,iBACvBG,KAAKktC,eAAeJ,EAAKtvB,aAAcxd,KAAKksC,0BAGzCY,EAAKjtC,eAAe,mBACvBG,KAAKktC,eAAeJ,EAAKrvB,eAAgBzd,KAAKmsC,4BAG3CW,EAAKjtC,eAAe,WACvBG,KAAKmtC,wBACLntC,KAAKotC,SAASptC,KAAKqtC,sBAAsBP,EAAKrlC,SAG3CqlC,EAAKjtC,eAAe,iBACvBG,KAAKstC,2BACLttC,KAAKotC,SAASptC,KAAKutC,4BAA4BT,EAAKjlC,gBAI9CmkC,EAAA9rC,UAAAgtC,eAAR,SAAuBjkB,EAAiBukB,GACnCvkB,EACHjpB,KAAKotC,SAASI,GAEdxtC,KAAKytC,YAAYD,IAIXxB,EAAA9rC,UAAAitC,sBAAR,WAAA,IAAApnC,EAAA/F,KACCR,OAAO+rB,KAAK7jB,GACRV,KAAG,SAAE/F,GAAgB,OAAAyG,EAAYzG,MACjC+F,KAAG,SAAES,GAAuB,OAAA1B,EAAKsnC,sBAAsB5lC,MACvD6L,QAAM,SAAEo6B,GAAsB,QAAEA,KAChC1nC,SAAO,SAAE0nC,GACT3nC,EAAK0nC,YAAYC,OAId1B,EAAA9rC,UAAAmtC,sBAAR,SAA8B5lC,GAC7B,OAAQA,GACP,KAAKC,EAAYjE,OACjB,KAAKiE,EAAYA,EAAYjE,QAC5B,OAAOzD,KAAKosC,wBAEb,KAAK1kC,EAAYhE,SACjB,KAAKgE,EAAYA,EAAYhE,UAC5B,OAAO1D,KAAKqsC,0BAEb,KAAK3kC,EAAY/D,MACjB,KAAK+D,EAAYA,EAAY/D,OAC5B,OAAO3D,KAAKssC,uBAEb,KAAK5kC,EAAY9D,KACjB,KAAK8D,EAAYA,EAAY9D,MAC5B,OAAO5D,KAAKusC,sBAEb,QACC,OAAOvsC,KAAKosC,0BAIPJ,EAAA9rC,UAAAqtC,4BAAR,SAAoCpJ,GACnC,OAAQA,GACP,KAAKwJ,GAAkB5pC,IACvB,KAAK4pC,GAAkBA,GAAkB5pC,KACxC,OAAO/D,KAAKwsC,iBAEb,KAAKmB,GAAkB7pC,KACvB,KAAK6pC,GAAkBA,GAAkB7pC,MACxC,OAAO9D,KAAKysC,kBAEb,QACC,OAAO,OAIFT,EAAA9rC,UAAAotC,yBAAR,WAAA,IAAAvnC,EAAA/F,KACCR,OAAO+rB,KAAKoiB,IACR3mC,KAAG,SAAE/F,GAAgB,OAAA0sC,GAAkB1sC,MACvC+F,KAAG,SAAEm9B,GAAgC,OAAAp+B,EAAKwnC,4BAA4BpJ,MACtE7wB,QAAM,SAAEo6B,GAAsB,QAAEA,KAChC1nC,SAAO,SAAE0nC,GACT3nC,EAAK0nC,YAAYC,OAId1B,EAAA9rC,UAAAktC,SAAR,SAAiBI,GACZA,GACHxtC,KAAKkkB,SAASkpB,SAASptC,KAAK4sC,WAAWx8B,cAAeo9B,IAIhDxB,EAAA9rC,UAAAutC,YAAR,SAAoBD,GACfA,GACHxtC,KAAKkkB,SAASupB,YAAYztC,KAAK4sC,WAAWx8B,cAAeo9B,wBAzK3DvlC,EAAAA,sDAXsD2lC,EAAAA,wBAK9C7I,MAmLTiH,EAxLA,sBCQC,SAAA6B,WACChiC,EAAAjL,KAAAZ,OAAOA,KAET,OAL8C8L,EAAAA,EAAAA,uBAD7C7D,EAAAA,mDAMD4lC,GAL8Cp2B,mBCI7C,SAAAq2B,WACCjiC,EAAAjL,KAAAZ,OAAOA,KAGT,OAN4C8L,EAAAA,EAAAA,uBAD3C7D,EAAAA,mDAOD6lC,GAN4Cr2B,mBCD3C,SAAAs2B,WACCliC,EAAAjL,KAAAZ,OAAOA,KAET,OAL8C8L,EAAAA,EAAAA,uBAD7C7D,EAAAA,mDAMD8lC,GAL8Ct2B,mBCG7C,SAAAu2B,WACCniC,EAAAjL,KAAAZ,MAAM,IAAMA,KAEd,OALsD8L,EAAAA,EAAAA,uBADrD7D,EAAAA,mDAMD+lC,GALsDv2B,ICNtDw2B,GAAA,WAMC,SAAAA,EAAYvvB,EACTC,GALc3e,KAAA0e,KAAe,EAEf1e,KAAA2e,QAAkB,EAK9BD,MAAAA,IACH1e,KAAK0e,IAAMA,GAGRC,MAAAA,IACH3e,KAAK2e,OAASA,GAajB,OARCsvB,EAAA/tC,UAAAguC,aAAA,WACC,OAAOluC,KAAK0e,KAGbuvB,EAAA/tC,UAAAiuC,gBAAA,WACC,OAAOnuC,KAAK2e,QAGdsvB,EA3BA,sBCUC,SAAAG,WACCviC,EAAAjL,KAAAZ,KAAM,IAAIiuC,KAAkCjuC,KAG9C,OANiD8L,EAAAA,EAAAA,uBADhD7D,EAAAA,mDAODmmC,GANiD32B,ICRjD42B,GAAA,WAOA,SAAAA,KAWA,OARCA,EAAAnuC,UAAAqF,QAAA,SAAQwB,GAEP,OAAIA,EAAOpB,QACH,IAAIsoC,GAAgClnC,EAAO2X,IAAK3X,EAAO4X,QAEvD,IAAIsvB,IAAgC,GAAO,wBARpDhmC,EAAAA,aAWDomC,EAlBA,GCIAC,GAAA,SAAAziC,GAEC,SAAAyiC,EAA4B9/B,EACT7I,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,0CAAwCxO,YAFhC+F,EAAAyI,YAAAA,EACTzI,EAAAJ,QAAAA,IAIpB,OAP2DmG,EAAAA,EAAAA,GAO3DwiC,EAPA,CAA2D/5B,EAAAA,SCJ3D,IAAAg6B,GAAA,WAUC,SAAAA,EAAoB35B,GAAA5U,KAAA4U,kBAAAA,EAOrB,OAJC25B,EAAAruC,UAAAsuC,sBAAA,SAAsB7oC,EAAkB6I,GACvCxO,KAAK4U,kBAAkBE,SAAS,IAAIw5B,GAAsC9/B,EAAa7I,yBAPxFsC,EAAAA,sDALQiN,EAAAA,qBAeTq5B,EAjBA,GCAA,IAAAE,GAAA,WAaC,SAAAA,EAAoBC,EACTC,EACAC,EACApgC,GAHSxO,KAAA0uC,yCAAAA,EACT1uC,KAAA2uC,4BAAAA,EACA3uC,KAAA4uC,mCAAAA,EACA5uC,KAAAwO,YAAAA,EAYZ,OATCigC,EAAAvuC,UAAAuO,IAAA,SAAI1H,OAEG8nC,EAAyB7uC,KAAK0uC,yCAAyCnpC,QAAQwB,GAErF/G,KAAK2uC,4BAA4BzsC,KAAK2sC,GAEtC7uC,KAAK4uC,mCAAmCJ,sBAAsBznC,EAAOpB,QAAS3F,KAAKwO,kCAfpFvG,EAAAA,sDARQomC,UACAD,UAEAG,UACA36B,MAsBT66B,EA5BA,GCIA,IAAaK,GAA0B,IAAIjhC,EAAAA,eAAmC,+BCH7EkhC,MAAA,EACAhpB,OAAA,EACAE,OAAA,sECmCD,IAAA+oB,GAAA,SAAAnjC,GAkHC,SAAAmjC,EACQxgC,EACGmmB,EACAsa,EACAj3B,EACAk3B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA53B,EACA63B,GAnBX,IAAAhqC,EAqBC8F,EAAAjL,KAAAZ,OAAOA,YApBA+F,EAAAyI,YAAAA,EACGzI,EAAA4uB,cAAAA,EACA5uB,EAAAkpC,wBAAAA,EACAlpC,EAAAiS,qBAAAA,EACAjS,EAAAmpC,mBAAAA,EACAnpC,EAAAopC,qBAAAA,EACAppC,EAAAqpC,mBAAAA,EACArpC,EAAAspC,qBAAAA,EACAtpC,EAAAupC,0BAAAA,EACAvpC,EAAAwpC,wBAAAA,EACAxpC,EAAAypC,sBAAAA,EACAzpC,EAAA0pC,yBAAAA,EACA1pC,EAAA2pC,yBAAAA,EACA3pC,EAAA4pC,iCAAAA,EACA5pC,EAAA6pC,kCAAAA,EACA7pC,EAAA8pC,uBAAAA,EACA9pC,EAAA+pC,iCAAAA,EACA/pC,EAAAmS,kCAAAA,EACAnS,EAAAgqC,iCAAAA,EA5GXhqC,EAAAkD,OAAqB,GAGrBlD,EAAAmD,QAA+B,GA2D/BnD,EAAAoD,YAAoC,IAAIC,EAAAA,aAGxCrD,EAAAsD,gBAAwC,IAAID,EAAAA,aAG5CrD,EAAAuD,cAAmC,IAAIF,EAAAA,aAGvCrD,EAAAwD,eAAqC,IAAIH,EAAAA,aAGzCrD,EAAAyD,sBAA8C,IAAIJ,EAAAA,aAGlDrD,EAAA0D,aAA+C,IAAIL,EAAAA,aAGnDrD,EAAA2D,gBAAsC,IAAIN,EAAAA,aAG1CrD,EAAA4D,iBAAuC,IAAIP,EAAAA,aAG3CrD,EAAA6D,kBAAwC,IAAIR,EAAAA,eAsR7C,OArY+C0C,EAAAA,EAAAA,GA0I9CkjC,EAAA9uC,UAAAgK,YAAA,SAAY8lC,GAkDX,QAhDiCtqC,IAA7BsqC,EAAcxlC,iBAAsE9E,IAA1CsqC,EAAcxlC,WAAWJ,cACtEpK,KAAK8vC,iCAAiCG,WAAWjwC,KAAKwK,iBAGpB9E,IAA/BsqC,EAAcE,mBAA0ExqC,IAA5CsqC,EAAcE,aAAa9lC,cAC1EpK,KAAK+vC,iCAAiC7tC,KAAKlC,KAAKkwC,mBAGjBxqC,IAA5BsqC,EAAc3rB,gBAAoE3e,IAAzCsqC,EAAc3rB,UAAUja,cACpEpK,KAAK2vC,iCAAiCztC,KAAKlC,KAAKqkB,gBAGf3e,IAA9BsqC,EAAczoC,kBAAwE7B,IAA3CsqC,EAAczoC,YAAY6C,cACxEpK,KAAK4vC,kCAAkCnhC,IAAIzO,KAAKuH,kBAGlB7B,IAA3BsqC,EAAcG,eAAkEzqC,IAAxCsqC,EAAcG,SAAS/lC,cAClEpK,KAAKyvC,yBAAyBvtC,KAAKlC,KAAKmwC,eAGPzqC,IAA9BsqC,EAAcI,kBAAwE1qC,IAA3CsqC,EAAcI,YAAYhmC,cACxEpK,KAAK0vC,yBAAyBxtC,KAAKlC,KAAKowC,kBAGb1qC,IAAxBsqC,EAAc1oC,YAA4D5B,IAArCsqC,EAAc1oC,MAAM8C,cAC5DpK,KAAKsvC,0BAA0Bja,SAASr1B,KAAKsH,YAGd5B,IAA5BsqC,EAAcrwB,gBAAoEja,IAAzCsqC,EAAcrwB,UAAUvV,cACpEpK,KAAKivC,wBAAwB5E,aAAarqC,KAAK2f,gBAGVja,IAAlCsqC,EAAcK,sBAAgF3qC,IAA/CsqC,EAAcK,gBAAgBjmC,cAChFpK,KAAKsvC,0BAA0BnV,eAAen6B,KAAKqwC,sBAGd3qC,IAAlCsqC,EAAc/gC,sBAAgFvJ,IAA/CsqC,EAAc/gC,gBAAgB7E,cAChFpK,KAAKqvC,qBAAqBzK,gBAAgB5kC,KAAKiP,sBAGPvJ,IAArCsqC,EAAcM,yBAAsF5qC,IAAlDsqC,EAAcM,mBAAmBlmC,cACtFpK,KAAKqvC,qBAAqBxK,mBAAmB7kC,KAAKswC,yBAGrB5qC,IAA1BsqC,EAAc1wB,cAAgE5Z,IAAvCsqC,EAAc1wB,QAAQlV,cAChEpK,KAAKmvC,qBAAqBhH,WAAWnoC,KAAKsf,cAGd5Z,IAAzBsqC,EAActlC,aAA8DhF,IAAtCsqC,EAActlC,OAAON,aAA4B,KAEtFhC,OAAY,EAEW,kBAAhBpI,KAAK0K,OACftC,EAAe,CACdzC,QAAS3F,KAAK0K,SAGftC,EAAepI,KAAK0K,YAEYhF,IAA5B1F,KAAK0K,OAAO/B,aACf3I,KAAKkY,kCAAkChW,KAAKlC,KAAK0K,OAAO/B,cAI1D3I,KAAKgY,qBAAqBnD,UAAUzM,GAoCrC,GAjCI4nC,EAAc9mC,SACjBlJ,KAAKivC,wBAAwB/E,WAAWlqC,KAAKkJ,QAASlJ,KAAK20B,cAAe30B,KAAKwO,kBAI7C9I,IAA/BsqC,EAAcxyB,mBAA0E9X,IAA5CsqC,EAAcxyB,aAAapT,cAC1EpK,KAAKqvC,qBAAqB7K,mBAAmBxkC,KAAKwd,mBAGd9X,IAAjCsqC,EAAcvyB,qBAA8E/X,IAA9CsqC,EAAcvyB,eAAerT,cAC9EpK,KAAKqvC,qBAAqB5K,qBAAqBzkC,KAAKyd,qBAGzB/X,IAAxBsqC,EAAcvoC,YAA4D/B,IAArCsqC,EAAcvoC,MAAM2C,cAC5DpK,KAAKqvC,qBAAqB3K,SAAS1kC,KAAKyH,YAGP/B,IAA9BsqC,EAAcnoC,kBAAwEnC,IAA3CsqC,EAAcnoC,YAAYuC,cACxEpK,KAAKqvC,qBAAqB1K,eAAe3kC,KAAK6H,aAG3CmoC,EAAcO,WAAavwC,KAAKuwC,WACnCvwC,KAAKqvC,qBAAqB3J,UAAU1lC,KAAKuwC,gBAGN7qC,IAAhCsqC,EAAcQ,oBAA4E9qC,IAA7CsqC,EAAcQ,cAAcpmC,eACxEpK,KAAKwwC,cACRxwC,KAAKivC,wBAAwBvF,uBAE7B1pC,KAAKivC,wBAAwBtF,8BAIDjkC,IAA1BsqC,EAAcS,cAAgE/qC,IAAvCsqC,EAAcS,QAAQrmC,aAA4B,KAExFqmC,OAAO,EAGVA,EAD2B,kBAAjBzwC,KAAKywC,QACL,CACT9qC,QAAS3F,KAAKywC,SAGLzwC,KAAKywC,QAGhBzwC,KAAKivC,wBAAwBpF,iBAAiB4G,GAG/C,QAAgC/qC,IAA5BsqC,EAAcU,gBAAoEhrC,IAAzCsqC,EAAcU,UAAUtmC,aAA4B,KAE5FsmC,OAAS,EAGZA,EAD6B,kBAAnB1wC,KAAK0wC,UACH,CACX/qC,QAAS3F,KAAK0wC,WAGH1wC,KAAK0wC,UAGlB1wC,KAAKivC,wBAAwBjF,gBAAgB0G,GAG9C,QAAmChrC,IAA/BsqC,EAAcW,mBAA0EjrC,IAA5CsqC,EAAcW,aAAavmC,aAA4B,KAElGumC,OAAY,EAGfA,EADgC,kBAAtB3wC,KAAK2wC,aACA,CACdhrC,QAAS3F,KAAK2wC,cAGA3wC,KAAK2wC,aAGrB3wC,KAAKivC,wBAAwBhF,sBAAsB0G,GAGpD,QAAgCjrC,IAA5BsqC,EAAcY,gBAAoElrC,IAAzCsqC,EAAcY,UAAUxmC,aAA4B,KAE5FwmC,OAAS,EAGZA,EAD6B,kBAAnB5wC,KAAK4wC,UACH,CACXjrC,QAAS3F,KAAK4wC,WAGH5wC,KAAK4wC,UAGlB5wC,KAAKivC,wBAAwB9E,mBAAmByG,GAM7CZ,EAAc/mC,QACjBjJ,KAAKmvC,qBAAqBn5B,UAAUhW,KAAKiJ,SAI3C+lC,EAAA9uC,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAKkvC,mBACHvkC,aAAa3K,KAAKwO,aAClB6E,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE5C,GACXzP,EAAKoD,YAAYyB,KAAK4K,MAGxBxV,KAAKkvC,mBACHrkC,iBAAiB7K,KAAKwO,aACtB6E,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE9P,GACXvC,EAAKsD,gBAAgBuB,KAAKtC,MAG5BtI,KAAKwvC,sBACHqB,eAAe7wC,KAAKwO,aACpB6E,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE4vB,GACXjiC,EAAKuD,cAAcsB,KAAKo9B,MAG1BhoC,KAAKuvC,wBACHlR,iBAAiBr+B,KAAK20B,eACtBthB,KACAy9B,EAAAA,KAAK,GACL9wC,KAAK+S,aACLqF,WAAS,WACTrS,EAAKwD,eAAeqB,UAItB5K,KAAKuvC,wBACHhR,wBAAwBv+B,KAAK20B,eAC7BthB,KAEArT,KAAK+S,aAELqF,WAAS,SAAElN,GACXnF,EAAKyD,sBAAsBoB,KAAKM,MAGlClL,KAAKovC,mBACH2B,eAAe/wC,KAAKwO,aACpB6E,OAGA+E,WAAS,SAAE44B,GACXjrC,EAAK0D,aAAamB,KAAKomC,MAGzBhxC,KAAK6vC,uBACHj4B,UACAvE,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE64B,GAEX,OAAQA,GAEP,KAAKC,GAAuBnC,MAC3BhpC,EAAK2D,gBAAgBkB,OACrB,MAED,KAAKsmC,GAAuBnrB,OAC3BhgB,EAAK6D,kBAAkBgB,OACvB,MAED,KAAKsmC,GAAuBjrB,OAC3BlgB,EAAK4D,iBAAiBiB,YAS3BokC,EAAA9uC,UAAAyK,aAAA,SAAatC,GACZrI,KAAKmJ,YAAYyB,KAAKvC,6CA5XtBkD,EAAAA,kCAGAA,EAAAA,yBAGAA,EAAAA,qBAGAA,EAAAA,yBAGAA,EAAAA,+BAGAA,EAAAA,sBAGAA,EAAAA,uBAGAA,EAAAA,sBAGAA,EAAAA,4BAGAA,EAAAA,8BAGAA,EAAAA,qBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,uBAGAA,EAAAA,6BAGAA,EAAAA,uBAGAA,EAAAA,yBAGAA,EAAAA,4BAGAA,EAAAA,yBAGAA,EAAAA,wBAGAA,EAAAA,2BAGAA,EAAAA,yBAGAA,EAAAA,2BAGAA,EAAAA,0BAGAA,EAAAA,2BAQAC,EAAAA,gCAGAA,EAAAA,8BAGAA,EAAAA,+BAGAA,EAAAA,sCAGAA,EAAAA,6BAGAA,EAAAA,gCAGAA,EAAAA,iCAGAA,EAAAA,kCAGAA,EAAAA,UAuRFwjC,EArYA,CAA+Ch8B,ICpC/C,IAAAm+B,GAAA,SAAAtlC,GAEC,SAAAslC,EAAY/0B,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,kBAAgBpc,KAErC,OALmC8L,EAAAA,EAAAA,GAKnCqlC,EALA,CAAmC90B,EAAAA,aCAnC+0B,GAAA,SAAAvlC,GAEC,SAAAulC,EAAYh1B,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,kBAAgBpc,KAErC,OALmC8L,EAAAA,EAAAA,GAKnCslC,EALA,CAAmC/0B,EAAAA,aCAnCg1B,GAAA,SAAAxlC,GAEC,SAAAwlC,EAAYj1B,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,qBAAmBpc,KAExC,OALsC8L,EAAAA,EAAAA,GAKtCulC,EALA,CAAsCh1B,EAAAA,aCAtCi1B,GAAA,SAAAzlC,GAEC,SAAAylC,EAAYl1B,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,yBAAuBpc,KAE5C,OAL0C8L,EAAAA,EAAAA,GAK1CwlC,EALA,CAA0Cj1B,EAAAA,aCF1Ck1B,GAAA,WAkBC,SAAAA,EAA6BruB,EACTnL,GADS/X,KAAAkjB,eAAAA,EACTljB,KAAA+X,mBAAAA,EA6CrB,OA1CCw5B,EAAArxC,UAAAyK,aAAA,SAAa6D,GAAb,IAAAzI,EAAA/F,KAEC,OAAOA,KAAKkjB,eACNG,QACA8tB,GACAC,GACAC,IAEAh+B,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAejF,EAAYiF,cAC5E+9B,EAAAA,WAAS,SAAEluB,GAEV,OAAOvd,EAAKgS,mBACT7D,SAAS1F,GACT6E,KACArM,EAAAA,KAAG,SAAE0D,GAAmB,OAAAA,EAAOsO,aAC/B5E,EAAAA,KAAK,SAMhBm9B,EAAArxC,UAAA2K,iBAAA,SAAiB2D,GAAjB,IAAAzI,EAAA/F,KAEC,OAAOA,KAAKkjB,eACNG,QACAiuB,IAEAj+B,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAejF,EAAYiF,cAC5E+9B,EAAAA,WAAS,SAAEluB,GAEV,OAAOvd,EAAKgS,mBACT7D,SAAS1F,GACT6E,KACArM,EAAAA,KAAG,SAAE0D,GAAmB,OAAAA,EAAOuO,iBAC/B7E,EAAAA,KAAK,6BA3ChBnM,EAAAA,sDAXqB6b,EAAAA,sBAEb9P,MA0DTu9B,EAhEA,GCAA,IAAAE,GAEC,SAA4BC,EACTC,GADS3xC,KAAA0xC,MAAAA,EACT1xC,KAAA2xC,OAAAA,GCEpB,IAAAC,GAAA,SAAA/lC,GAEC,SAAA+lC,EAAYx1B,EACQy1B,EACAC,GAFpB,IAAA/rC,EAGC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,mCAAiCpc,YAFjC+F,EAAA8rC,WAAAA,EACA9rC,EAAA+rC,UAAAA,IAYrB,OAhBoDhmC,EAAAA,EAAAA,GAQnD8lC,EAAA1xC,UAAA6xC,cAAA,WACC,OAAO/xC,KAAK6xC,YAGbD,EAAA1xC,UAAA8xC,aAAA,WACC,OAAOhyC,KAAK8xC,WAGdF,EAhBA,CAAoDv1B,EAAAA,aCLpD,IAAA41B,GAAA,WAcC,SAAAA,EAA6B/uB,GAAAljB,KAAAkjB,eAAAA,EAoB9B,OAjBC+uB,EAAA/xC,UAAA6wC,eAAA,SAAeviC,GAEd,OAAOxO,KAAKkjB,eACNG,QAAO,IAGPhQ,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAejF,EAAYiF,cAC5EzM,EAAAA,KAAG,SAAEsc,OAEEwuB,EAAYxuB,EAAM0uB,eAAe1wB,UACtCuwB,EAAavuB,EAAMyuB,gBAAgBzwB,UAEpC,OAAO,IAAImwB,GAAiBK,EAAWD,4BAnB/C5pC,EAAAA,sDAPqB6b,EAAAA,kBA8BtBmuB,EAlCA,GCEA,IAAAC,GAAA,SAAArmC,GAEC,SAAAqmC,EAAY91B,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,4BAA0Bpc,KAG/C,OAN6C8L,EAAAA,EAAAA,GAM7ComC,EANA,CAA6C71B,EAAAA,aCF7C81B,GAAA,WAgBC,SAAAA,EAA6BjvB,EACTkvB,GADSpyC,KAAAkjB,eAAAA,EACTljB,KAAAoyC,sBAAAA,EAwBrB,OArBCD,EAAAjyC,UAAA2wC,eAAA,SAAeriC,GAAf,IAAAzI,EAAA/F,KAEC,OAAOA,KAAKkjB,eACNG,QACA6uB,IAEA7+B,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAejF,EAAYiF,cAC5E+9B,EAAAA,WAAS,SAAEluB,GAEV,OAAOvd,EAAKqsC,sBACTh/B,YAAY5E,GACZ6E,KACAe,EAAAA,KAAK,GACLpN,EAAAA,KAAG,SAAEqrC,GAAmB,OAAAA,EAAI5xB,yBAC5BzZ,EAAAA,KAAG,SAAEkQ,GAAgC,OAAAA,EAASlQ,KAAG,SAAC+P,GAAO,OAAAA,EAAIuK,0CAtBxErZ,EAAAA,sDATqB6b,EAAAA,sBAEbC,MAmCTouB,EAzCA,GCEA,IAAAG,GAAA,WAqBC,SAAAA,EAAoB3sC,EACTupB,EACA5b,EACAi/B,QAHS,IAAA5sC,IAAAA,GAAA,QACT,IAAAupB,IAAAA,GAAA,QACA,IAAA5b,IAAAA,GAAA,QACA,IAAAi/B,IAAAA,GAAA,GAHSvyC,KAAA2F,QAAAA,EACT3F,KAAAkvB,KAAAA,EACAlvB,KAAAsT,OAAAA,EACAtT,KAAAuyC,eAAAA,EA2DZ,OAjFQD,EAAA9P,QAAP,WACC,OAAO,IAAI8P,GAGLA,EAAA7P,WAAP,SAAkB17B,GACjB,OAAO,IAAIurC,EACVvrC,EAAOpB,QACPoB,EAAOmoB,KACPnoB,EAAOuM,OACPvM,EAAOwrC,iBAgBTD,EAAApyC,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,UACV3F,KAAKkvB,MAAQlvB,KAAKsT,QAAUtT,KAAKuyC,iBAGpCD,EAAApyC,UAAAsyC,cAAA,WACC,OAAOxyC,KAAKkvB,MAGbojB,EAAApyC,UAAAuyC,iBAAA,WACC,OAAOzyC,KAAKkvB,MAGbojB,EAAApyC,UAAAwyC,mBAAA,WACC,OAAO1yC,KAAKsT,QAGbg/B,EAAApyC,UAAAyyC,uBAAA,WACC,OAAO3yC,KAAKuyC,gBAGbD,EAAApyC,UAAA0yC,SAAA,eAEOC,EAAQ,GAcd,OAZI7yC,KAAKwyC,iBACRK,EAAMrwC,KAAKxC,KAAK8yC,eAGb9yC,KAAK0yC,sBACRG,EAAMrwC,KAAKxC,KAAK+yC,iBAGb/yC,KAAK2yC,0BACRE,EAAMrwC,KAAKxC,KAAKgzC,iBAGVH,GAGRP,EAAApyC,UAAA+yC,cAAA,WACC,OAAOjzC,KAAK4yC,WAAW,IAGxBN,EAAApyC,UAAA4yC,YAAA,WACC,OAAOR,EAA0BY,MAGlCZ,EAAApyC,UAAA6yC,cAAA,WACC,OAAOT,EAA0Ba,QAGlCb,EAAApyC,UAAA8yC,cAAA,WACC,OAAOV,EAA0Bc,SAjEVd,EAAAY,KAAO,OAEPZ,EAAAa,OAAS,SAETb,EAAAc,QAAU,UAgEnCd,EAnFA,sBCQC,SAAAe,WACCxnC,EAAAjL,KAAAZ,KAAMsyC,GAA0B9P,YAAUxiC,KAU5C,OAbsD8L,EAAAA,EAAAA,GAMrDunC,EAAAnzC,UAAA+vC,WAAA,SAAWlpC,OAEJusC,EAAahB,GAA0B7P,WAAW17B,GAExD/G,KAAKkC,KAAKoxC,wBAXXrrC,EAAAA,mDAcDorC,GAbsD57B,mBCErD,SAAA87B,WACC1nC,EAAAjL,KAAAZ,KAAMuzC,EAAiCC,qBAAmBxzC,KAE5D,OAPsD8L,EAAAA,EAAAA,GAErCynC,EAAAC,oBAAqB,sBAHrCvrC,EAAAA,mDAQDsrC,GAPsD97B,IC0CtD,SAAgBg8B,GAAmBC,GAClC,OAAO,IAAI9/B,GAAY,OAAS8/B,EAAU3lC,cAI3C,SAAgB4lC,GAAqBD,GACpC,OAAO,IAAIjV,GAAc,OAASiV,EAAU3lC,cAI7C,IAAa6lC,GAA+BlxC,EAAA,CAC3C,CACCgL,QAASkG,GACTigC,WAAYJ,GACZK,KAAM,CACL5R,KAGF,CACCx0B,QAAS+wB,GACToV,WAAYF,GACZG,KAAM,CACL5R,MAGC6J,GAAc,CAEjBC,GACA6B,GACAC,GACAC,GACAC,GACAI,GACAK,GACA4E,GACAx7B,GACA07B,KAIDQ,GAAA,SAAAloC,GA4CC,SAAAkoC,EAAYvlC,EACTmmB,EACA3c,EACAk3B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAC,EACAC,EACAC,EACAC,EACA53B,EACA63B,EACQ1gC,EACAC,EACA4U,EACA8vB,EACA5B,EACA6B,EACAC,EACAC,GA1BX,IAAApuC,EA4BC8F,EAAAjL,KAAAZ,KACCwO,EACAmmB,EACAsa,EACAj3B,EACAk3B,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA53B,EACA63B,IACA/vC,YA7BS+F,EAAAsJ,WAAAA,EACAtJ,EAAAuJ,kBAAAA,EACAvJ,EAAAme,SAAAA,EACAne,EAAAiuC,oBAAAA,EACAjuC,EAAAqsC,sBAAAA,EACArsC,EAAAkuC,wBAAAA,EACAluC,EAAAmuC,uBAAAA,EACAnuC,EAAAouC,oBAAAA,EAtCXpuC,EAAAquC,eAAyB,EAEzBruC,EAAAsuC,qBAA+B,EAE/BtuC,EAAAuuC,wBAAkC,EA0DjCvuC,EAAKkpC,wBAAwBjT,OAC7BsT,EAA0BtT,SAqF5B,OAtJwClwB,EAAAA,EAAAA,GAoEvCioC,EAAA7zC,UAAAgK,YAAA,SAAYC,GACX0B,EAAA3L,UAAMgK,YAAWtJ,KAAAZ,KAACmK,IAGnB4pC,EAAA7zC,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACC6L,EAAA3L,UAAMuP,SAAQ7O,KAAAZ,MAEdA,KAAKk0C,uBACH/O,WACA9xB,KAAKrT,KAAK+S,aACVqF,WAAS,SAAEwF,GACX7X,EAAKwuC,gBAAkB32B,KAGzB5d,KAAKk0C,uBACH5O,iBACAjyB,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE4F,GACXjY,EAAKiY,aAAeA,KAGtBhe,KAAKoyC,sBACHh/B,cACAC,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE7E,GACXxN,EAAKwN,UAAYA,EAEjBxN,EAAKquC,cAAgB7gC,EAAU+D,YAAYC,YAE3CxR,EAAKsuC,oBAAsB9gC,EAAUqN,kBAEjC7a,EAAKquC,gBAAkBruC,EAAKuuC,yBAC/BvuC,EAAKuuC,wBAAyB,OAKlCP,EAAA7zC,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KACKsH,EAAQtH,KAAKqP,WAAWe,cAAcokC,YAEtCltC,EAAQ,EACXtH,KAAKsvC,0BAA0BzY,kBAAkBvvB,GAMjDmtC,EAAAA,MAAM,GACJphC,KACArT,KAAK+S,aAELqF,WAAS,YAET9Q,EAAQvB,EAAKsJ,WAAWe,cAAcokC,aAE1B,GACXzuC,EAAKupC,0BAA0BzY,kBAAkBvvB,MAKrDtH,KAAKm0C,oBACHnY,KAAKh8B,KAAKqP,WAAYrP,KAAKwO,aAE7BxO,KAAKi0C,wBACHpV,UACAxrB,KACArT,KAAK+S,aAELqF,WAAS,SAAE9Q,GACXvB,EAAKme,SAASO,SAAS1e,EAAKsJ,WAAWe,cAAe,QAAS9I,EAAQ,UAI1EysC,EAAA7zC,UAAAmN,gBAAA,WACC,OAAOrN,KAAKg0C,oBAAoB3mC,mBAGjC0mC,EAAA7zC,UAAA2P,eAAA,WACC,OAAO7P,KAAKwO,iCAjLb8B,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,gBACVC,SAAA,mXAYA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACLC,UAAW,kBAEX6jC,+BAAgC,oBAChCC,OAAQ,0BAETjkC,UAAShO,EACLkxC,GAA+B,CAClC,CACClmC,QAASohC,GACTn+B,YAAaojC,2j/EAjGPngC,UACA6qB,UAaAtpB,UACAo8B,UACArG,UACA+G,UACA1M,UACAlG,UACAjB,UACA+T,UACA5I,UAhBAwE,UAFAF,UAGAG,UAEAS,UAJAX,UAqBAuF,UACAx7B,UACA07B,UAxCRniC,EAAAA,kBAFAC,EAAAA,yBAKAuT,EAAAA,iBAOQjY,SAyBAoX,UACA4a,UACAoG,UAtBAiH,MAwPT+H,EApLA,CA8BwC/E,uBClDvC,SAAA4F,EAAoBtlC,EACT2/B,EACA4F,EACA/E,EACiB/f,GAJ5B,IAAAhqB,EAKC8F,EAAAjL,KAAAZ,OAAOA,YALY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAkpC,wBAAAA,EACAlpC,EAAA8uC,4BAAAA,EACA9uC,EAAA+pC,iCAAAA,EACiB/pC,EAAAgqB,OAAAA,IAoB7B,OA/BoDjkB,EAAAA,EAAAA,GAenD8oC,EAAA10C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAK8vC,iCACHl4B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAErR,GACXhB,EAAKgB,OAASA,EACdhB,EAAKuJ,kBAAkBJ,oBAI1B0lC,EAAA10C,UAAAiM,UAAA,WACC,OAAOnM,KAAK+G,QAAU/G,KAAK+G,OAAOoF,iCA/EnCmE,EAAAA,UAASC,KAAA,CAAC,CACVE,SAAU,s3CAZFY,EAAAA,yBAEAk4B,UAGA5K,UAEA0U,UAJAjmB,GAAuBrsB,WAAA,CAAA,CAAAqD,KAqE3B8M,EAAAA,OAAMX,KAAA,CAAC,uDATVe,EAAAA,UAASf,KAAA,CAAC,iBAAkB,CAAEgB,QAAQ,OA6BxCqjC,GA/BoD5hC,IC7DpD,IAAA8hC,GAAA,WAUC,SAAAA,EAAoB/pB,EACTgqB,GADS/0C,KAAA+qB,SAAAA,EACT/qB,KAAA+0C,oBAAAA,EAoBZ,OAjBCD,EAAA50C,UAAAykB,KAAA,SAAKtV,EAAwB0gB,OAEtBhF,EAAWC,EAAAA,SAAS7qB,OAAO,CAChCuQ,UAAW,CAAC,CACXhD,QAAS,SACTC,SAAUoiB,IAEXilB,OAAQh1C,KAAK+qB,WAGd/qB,KAAK+0C,oBAAoBpwB,KAAKtV,EAAYulC,GAAgC7pB,EAAUkqB,EAAAA,sBAAsBC,KAAM,IAGjHJ,EAAA50C,UAAAi1C,MAAA,WACCn1C,KAAK+0C,oBAAoBI,6BArB1BltC,EAAAA,sDAPgC+iB,EAAAA,gBAExBoqB,EAAAA,6BA6BTN,EA/BA,GCAA,IAAAO,GAAA,WAsBC,SAAAA,EAAoBhmC,EACT0b,EACAkkB,GAFSjvC,KAAAqP,WAAAA,EACTrP,KAAA+qB,SAAAA,EACA/qB,KAAAivC,wBAAAA,EAeZ,OAZCoG,EAAAn1C,UAAA4pC,WAAA,SAAW/Z,GACV/vB,KAAKivC,wBAAwBnF,WAAW/Z,EAAOtC,eAGhD4nB,EAAAn1C,UAAAo1C,UAAA,SAAUvlB,GACT,OAAOA,EAAOrC,kBAAoBhB,GAAWX,KAG9CspB,EAAAn1C,UAAAq1C,WAAA,SAAWxlB,GACV,OAAOA,EAAOrC,kBAAoBhB,GAAWV,0BA5B9C1b,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,+BACVC,SAAA,8mBACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,KACjCP,UAAW,CACVokC,iDAd2C1jC,EAAAA,kBAAY4Z,EAAAA,gBAGhDue,uCAgBPh+B,EAAAA,SAoBF8pC,EAvCA,GCAA,IAAAG,GAAA,WAcC,SAAAA,IAJQx1C,KAAA2F,QAAU,IAAIyI,IAEdpO,KAAAy1C,SAAW,IAAI1/B,EAAAA,cAuBxB,OAlBCy/B,EAAAt1C,UAAA2sB,WAAA,SAAWlnB,EAAkB6I,GAC5BxO,KAAK2F,QAAQ8I,IAAID,EAAYiF,WAAY9N,GACzC3F,KAAKy1C,SAASvzC,KAAKlC,KAAK2F,UAGzB6vC,EAAAt1C,UAAAw1C,oBAAA,SAAoBlnC,GAEnB,OAAOxO,KAAKy1C,SACNv/B,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CAvBPlO,EAAAA,mDA4BDutC,EAnCA,GCAA,IAAAG,GAAA,WAaC,SAAAA,IAJQ31C,KAAA2F,QAAU,IAAIyI,IAEdpO,KAAAy1C,SAAW,IAAI1/B,EAAAA,cAsBxB,OAjBC4/B,EAAAz1C,UAAA2sB,WAAA,SAAWlnB,EAAkB6I,GAC5BxO,KAAK2F,QAAQ8I,IAAID,EAAYiF,WAAY9N,GACzC3F,KAAKy1C,SAASvzC,KAAKlC,KAAK2F,UAGzBgwC,EAAAz1C,UAAA01C,yBAAA,SAAyBpnC,GAExB,OAAOxO,KAAKy1C,SACNv/B,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CAvBPlO,EAAAA,mDA2BD0tC,EAjCA,GCAA,IAAAE,GAAA,WAWC,SAAAA,EAAoBC,EACTC,GADS/1C,KAAA81C,0BAAAA,EACT91C,KAAA+1C,+BAAAA,EAWZ,OARCF,EAAA31C,UAAA81C,mBAAA,SAAmBxnC,GAClB,OAAOxO,KAAK81C,0BAA0BJ,oBAAoBlnC,IAG3DqnC,EAAA31C,UAAA+1C,sBAAA,SAAsBznC,GACrB,OAAOxO,KAAK+1C,+BAA+BH,yBAAyBpnC,wBAZrEvG,EAAAA,sDALQutC,UACAG,MAmBTE,EAvBA,GCAA,IAAAK,GAAA,WA4DC,SAAAA,EAAoB1M,EACT7iB,EACAwvB,EACA3nC,SAHSxO,KAAAwpC,8BAAAA,EACTxpC,KAAA2mB,YAAAA,EACA3mB,KAAAm2C,GAAAA,EACAn2C,KAAAwO,YAAAA,EAXXxO,KAAAo2C,OAAS,IAAIhtC,EAAAA,aAEJpJ,KAAA4mB,gBAAkB,SAI3B5mB,KAAAq2C,YAAsB,EAMrBr2C,KAAK6mB,WAAa7mB,KAAK2mB,YAAYG,QAAKC,EAAA,IACtC/mB,KAAK4mB,iBAAkB,CAAC,QAuC5B,OAlCCsvB,EAAAh2C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAK6mB,WACHe,aAIAxP,WAAS,SAAEk+B,GACXvwC,EAAKuN,OAAOgjC,EAAEvwC,EAAK6gB,sBAItBsvB,EAAAh2C,UAAAoT,OAAA,SAAO41B,GAEFA,MAAAA,IACHA,EAAS,IAGVlpC,KAAKwpC,8BAA8B5B,UAAU5nC,KAAKkJ,QAAQ,GAAGukB,aAAc,IAAKyb,EAAQlpC,KAAKwO,cAG9F0nC,EAAAh2C,UAAAq2C,aAAA,WACCv2C,KAAK6mB,WAAW2vB,SAGjBN,EAAAh2C,UAAAu2C,iBAAA,WACCz2C,KAAKq2C,YAAa,EAClBr2C,KAAKm2C,GAAGjnC,iBAGTgnC,EAAAh2C,UAAAw2C,kBAAA,WACC12C,KAAKq2C,YAAa,EAClBr2C,KAAKm2C,GAAGjnC,qCA7FToB,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,+BACVC,SAAU,+4BAiCV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAzCzBy2B,UAFA3f,EAAAA,mBADyB1W,EAAAA,yBAIzBuC,uCA4CPrI,EAAAA,sBAGAC,EAAAA,UAqDF0qC,EAxGA,sBC2CC,SAAAS,EAA6BrnC,EACT4U,EACA0yB,EACApoC,EACAqoC,EACAzyB,EACA6vB,GANpB,IAAAluC,EAOC8F,EAAAjL,KAAAZ,OAAOA,YAPqB+F,EAAAuJ,kBAAAA,EACTvJ,EAAAme,SAAAA,EACAne,EAAA6wC,SAAAA,EACA7wC,EAAAyI,YAAAA,EACAzI,EAAA8wC,mCAAAA,EACA9wC,EAAAqe,0BAAAA,EACAre,EAAAkuC,wBAAAA,EAVpBluC,EAAA+wC,cAAgD,GAEhD/wC,EAAAgxC,kBAA4B,IAiE7B,OA3E8CjrC,EAAAA,EAAAA,GAsB7C6qC,EAAAz2C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAKi0C,wBACHjV,kBACA3rB,KACArT,KAAK+S,aAELqF,WAAS,SAAElP,GACXnD,EAAK+wC,cAAgB5tC,EACrBnD,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKi0C,wBACHnV,mBACAzrB,KACArT,KAAK+S,aAELqF,WAAS,SAAE9Q,GACXvB,EAAKme,SAASO,SAAS1e,EAAKixC,aAAa5mC,cAAe,QAAS9I,EAAQ,SAG3EtH,KAAK62C,mCACHb,mBAAmBh2C,KAAKwO,aACxB6E,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GAEXI,EAAKgxC,iBAAmBpxC,EACxBI,EAAKuJ,kBAAkBJ,oBAI1BynC,EAAAz2C,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KACCA,KAAKokB,0BACHT,cACAtQ,KACArT,KAAK+S,aAELqF,WAAS,SAAEuH,OAELs3B,GAAe,EAAe,EAEhClxC,EAAKixC,cACRjxC,EAAKme,SAASO,SAAS1e,EAAKixC,aAAa5mC,cAAe,SAAU6mC,EAAe,MAG9ElxC,EAAKmxC,YACRnxC,EAAKme,SAASO,SAAS1e,EAAKmxC,WAAW9mC,cAAe,SAAU6mC,EAAe,8BA5EnF3mC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,uBACVC,SAAA,yQACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDA1BjCI,EAAAA,yBAIAuT,EAAAA,iBAKQd,EAAAA,sBAMAlQ,UACAiiC,UAGA9xB,UAFA4a,4CAaPrtB,EAAAA,UAASf,KAAA,CAAC8kC,GAAiC,CAAE1vB,KAAMvU,EAAAA,WAAYG,QAAQ,wBAGvED,EAAAA,UAASf,KAAA,CAAC2lC,GAAiC,CAAEvwB,KAAMvU,EAAAA,WAAYG,QAAQ,OAsEzEolC,GA3E8C3jC,uBCE7C,SAAAmkC,EAAoB3N,EACTh7B,GADX,IAAAzI,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFY+F,EAAAyjC,8BAAAA,EACTzjC,EAAAyI,YAAAA,EALXzI,EAAAqxC,IAAM,IAAIvxB,GAQT9f,EAAKsxC,YAAc,CAClBltC,QAASpE,EAAKqxC,OAcjB,OA5BoDtrC,EAAAA,EAAAA,GAkBnDqrC,EAAAj3C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAKo3C,IACHjkC,KACAiF,WAAS,SAAE8wB,GAAmB,OAAAnjC,EAAKuN,OAAO41B,OAG7CiO,EAAAj3C,UAAAoT,OAAA,SAAO41B,GACNlpC,KAAKwpC,8BAA8B5B,UAAU5nC,KAAK+vB,OAAOtC,aAAc,IAAKyb,EAAQlpC,KAAKwO,kCAvC1F8B,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAU,0OASV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAhBzBy2B,UACA9zB,sCAmBPrI,EAAAA,SA0BF4rC,GA5BoDnkC,uBCTnD,SAAAskC,IAAA,IAAAvxC,EACC8F,EAAAjL,KAAAZ,OAAOA,YALA+F,EAAAmjC,OAAS,IAAI96B,IAEbrI,EAAAwxC,QAAU,IAAIxhC,EAAAA,gBAuBvB,OA3BqDjK,EAAAA,EAAAA,GAUpDwrC,EAAAp3C,UAAAs3C,UAAA,SAAUtO,EAAgB16B,GACzBxO,KAAKkpC,OAAOz6B,IAAID,EAAYiF,WAAYy1B,GACxClpC,KAAKu3C,QAAQr1C,KAAKlC,KAAKkpC,SAGxBoO,EAAAp3C,UAAAu3C,SAAA,SAASjpC,GAER,OAAOxO,KAAKu3C,QACNrhC,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CAxBPlO,EAAAA,mDA4BDqvC,GA3BqD5kC,uBC6CpD,SAAAglC,EAAyCtoC,EAC9B8U,EACA7U,EACAC,EACAqoC,EACAjI,EACAD,EACAmI,EACAxzB,EACA2rB,EACA/rB,EACAxV,EACAqpC,GAZX,IAAA9xC,EAaC8F,EAAAjL,KAAAZ,OAAOA,YAbiC+F,EAAAqJ,WAAAA,EAC9BrJ,EAAAme,SAAAA,EACAne,EAAAsJ,WAAAA,EACAtJ,EAAAuJ,kBAAAA,EACAvJ,EAAA4xC,wBAAAA,EACA5xC,EAAA2pC,yBAAAA,EACA3pC,EAAA0pC,yBAAAA,EACA1pC,EAAA6xC,sBAAAA,EACA7xC,EAAAqe,0BAAAA,EACAre,EAAAgqC,iCAAAA,EACAhqC,EAAAie,4BAAAA,EACAje,EAAAyI,YAAAA,EACAzI,EAAA8xC,gCAAAA,EAtBX9xC,EAAAoqC,UAAW,EAEXpqC,EAAAqqC,aAAc,EAMdrqC,EAAAmqC,aAAeqD,GAAiCC,qBAoHjD,OApI+C1nC,EAAAA,EAAAA,GAkC9C4rC,EAAAx3C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAK43C,sBACHzQ,iBACA9zB,KACArT,KAAK+S,aAELqF,WAAS,SAAE0/B,GAEX/xC,EAAKgyC,oBAELD,EAAS/6B,SAAS/W,SAAO,SAAE6N,OAEpBmkC,EAAa,MAAQnkC,EAAGiI,QAAQ,KAAM,IAC3Cm8B,EAAgBlyC,EAAKsJ,WAAWe,cAAc2Y,cAAc,IAAIivB,GAE7DC,GACHlyC,EAAKme,SAASkpB,SAAS6K,EAAe,kBAK1Cj4C,KAAKyvC,yBACH73B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACXI,EAAKoqC,SAAWxqC,EAChBI,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK0vC,yBACH93B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACXI,EAAKqqC,YAAczqC,EACnBI,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKokB,0BACHT,cACAtQ,KACArT,KAAK+S,aAELqF,WAAS,SAAEuH,GACX5Z,EAAK4Z,UAAYA,EACjB5Z,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK+vC,iCACHn4B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAE83B,GACXnqC,EAAKmqC,aAAeA,KAGtBlwC,KAAK63C,gCACHJ,SAASz3C,KAAKwO,aACd6E,KACArT,KAAK+S,aAELqF,WAAS,SAAEiW,GACXtoB,EAAKsoB,aAAeA,EACpBtoB,EAAKuJ,kBAAkBJ,oBAK1BwoC,EAAAx3C,UAAAg4C,UAAA,WACC,OAAO,GAGRR,EAAAx3C,UAAAi4C,WAAA,SAAWnqC,GACV,MAAO,cAAcA,EAAQhO,KAAK2f,UAAS,OAG5C+3B,EAAAx3C,UAAAwmC,kBAAA,SAAkB9pB,GACb5c,KAAKkwC,cACRlwC,KAAK23C,wBAAwBjR,kBAAkB,EAAgB7yB,KAIzD6jC,EAAAx3C,UAAA63C,kBAAR,WAAA,IAAAhyC,EAAA/F,KACOo4C,EAAmBp4C,KAAKqP,WAAWe,cAAcioC,iBAAiB,aAEpEvoC,EAAAA,kBAAkB9P,KAAKoP,aAC1BgpC,EAAiBpyC,SAAO,SAAEsyC,GACzBvyC,EAAKme,SAASupB,YAAY6K,EAAI,oCApIjChoC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,wBACVC,SAAA,woBACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,2EAoBpBC,EAAAA,OAAMX,KAAA,CAACY,EAAAA,sBA7CpByT,EAAAA,iBALAxT,EAAAA,kBAFAC,EAAAA,yBAeQs1B,UACAkH,UACAE,UACA9G,UAIAljB,UACAwvB,UAFAtwB,UAGArP,UACA0jC,sCAWP/rC,EAAAA,uBAGAA,EAAAA,SA+HFmsC,GApI+C1kC,ICpC/C,IAAAulC,GAAA,WAMA,SAAAA,KA2BA,OAJCA,EAAAr4C,UAAAg4C,UAAA,WACC,OAAO,uBAxBR5nC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oBACVC,SAAA,0VACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,yCAIhC1F,EAAAA,uBAGAA,EAAAA,wBAGAA,EAAAA,2BAGAA,EAAAA,4BAGAA,EAAAA,SAOFgtC,EAjCA,sBCmEC,SAAAC,EAAoBlpC,EACTogC,EACAG,EACAV,EACAt7B,EACAgkC,GALX,IAAA9xC,EAMC8F,EAAAjL,KAAAZ,OAAOA,YANY+F,EAAAuJ,kBAAAA,EACTvJ,EAAA2pC,yBAAAA,EACA3pC,EAAA8pC,uBAAAA,EACA9pC,EAAAopC,qBAAAA,EACAppC,EAAA8N,GAAAA,EACA9N,EAAA8xC,gCAAAA,EAfX9xC,EAAA0yC,YAAsB,IAwIvB,OAzJ4C3sC,EAAAA,EAAAA,GAoC3C0sC,EAAAt4C,UAAAgK,YAAA,SAAYC,QAEczE,IAArByE,EAAQgmC,WACPnwC,KAAKmwC,UACRnwC,KAAK04C,oBAAqB,EAC1B14C,KAAK24C,eAAc,IACR34C,KAAKmwC,UAChBnwC,KAAK44C,gBAIF54C,KAAKmwC,UACTnwC,KAAK44C,gBAIPJ,EAAAt4C,UAAAy4C,cAAA,SAAcE,QAAA,IAAAA,IAAAA,GAAA,GAER74C,KAAK04C,qBAIV14C,KAAKy4C,YAAa,EAElBz4C,KAAK84C,cAAgB,IAAIjzB,GACzB7lB,KAAK+4C,QAAU,IAAIlzB,GAEnB7lB,KAAKq3C,YAAc,CAClB5wB,OAAQzmB,KAAK+4C,QACbnxB,aAAc5nB,KAAK84C,cACnB32C,MAAOnC,KAAKg5C,KAAK5qB,SAASpuB,KAAK4c,QAC/B8K,MAAOmxB,GAGR74C,KAAKi5C,qBACLj5C,KAAKk5C,sBAELl5C,KAAKm5C,mBAEAN,EAGJ74C,KAAKsP,kBAAkBJ,gBAFvBlP,KAAKsP,kBAAkB8pC,iBAOzBZ,EAAAt4C,UAAA04C,aAAA,WACC54C,KAAKy4C,YAAa,EAClBz4C,KAAKsP,kBAAkBJ,iBAGxBspC,EAAAt4C,UAAAm5C,qBAAA,eAEOtO,EAAS/qC,KAAK4c,OAAOpJ,QAC1B8lC,EAAet5C,KAAKu5C,YACpB/rB,EAAUxtB,KAAKg5C,KAAK7qB,cAErBnuB,KAAKmvC,qBAAqB/G,SAAS,IAAI0C,GAA8BC,EAAQvd,EAAS8rB,IAEtFt5C,KAAK44C,gBAGEJ,EAAAt4C,UAAA+4C,mBAAR,WAAA,IAAAlzC,EAAA/F,KAECA,KAAK+4C,QACH5lC,KACAE,KACArT,KAAK+S,aAELqF,WAAS,SAAEqO,GAEX,OAAQA,GACP,KAAKF,GAAcR,OAClBhgB,EAAKszC,uBACLtzC,EAAKyzC,oBACL,MAED,KAAKjzB,GAAcN,OAClBlgB,EAAK6yC,eACL7yC,EAAK0zC,yBASFjB,EAAAt4C,UAAAg5C,oBAAR,WAAA,IAAAnzC,EAAA/F,KAECA,KAAK84C,cACH3lC,KACAE,KACArT,KAAK+S,aAELqF,WAAS,SAAEjW,GACX4D,EAAKwzC,YAAcp3C,MAIdq2C,EAAAt4C,UAAAw5C,iBAAR,SAAyBzI,GACxBjxC,KAAK6vC,uBAAuB3tC,KAAK+uC,IAG1BuH,EAAAt4C,UAAAi5C,iBAAR,WACCn5C,KAAK05C,iBAAiBxI,GAAuBnC,QAGtCyJ,EAAAt4C,UAAAu5C,kBAAR,WACCz5C,KAAK05C,iBAAiBxI,GAAuBjrB,SAGtCuyB,EAAAt4C,UAAAs5C,kBAAR,WACCx5C,KAAK05C,iBAAiBxI,GAAuBnrB,6BA7K9CzV,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,qBACVC,SAAU,mcAkBV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAtCAI,EAAAA,yBAKzBw8B,UACAC,UACA5C,UAOAt3B,UADA0jC,sCA6BP/rC,EAAAA,oBAGAA,EAAAA,wBAGAA,EAAAA,kCAGAA,EAAAA,4BAGAA,EAAAA,SA2IFitC,GAzJ4CxlC,uBCmB3C,SAAA2mC,EAAoBtqC,EACT6U,EACA5U,EACAsqC,EACAprC,EACAygC,EACAmD,EACAn6B,EACAwtB,EACA6J,EACA2E,EACA2D,EACAiC,EAC8CC,GAbzD,IAAA/zC,EAcC8F,EAAAjL,KAAAZ,OAAOA,YAdY+F,EAAAsJ,WAAAA,EACTtJ,EAAAme,SAAAA,EACAne,EAAAuJ,kBAAAA,EACAvJ,EAAA6zC,OAAAA,EACA7zC,EAAAyI,YAAAA,EACAzI,EAAAkpC,wBAAAA,EACAlpC,EAAAqsC,sBAAAA,EACArsC,EAAAkS,mBAAAA,EACAlS,EAAA0/B,mBAAAA,EACA1/B,EAAAupC,0BAAAA,EACAvpC,EAAAkuC,wBAAAA,EACAluC,EAAA6xC,sBAAAA,EACA7xC,EAAA8zC,eAAAA,EAC8C9zC,EAAA+zC,gBAAAA,EAzBzD/zC,EAAAmD,QAA2C,GAE3CnD,EAAAkD,OAA4B,GAMpBlD,EAAAg0C,wBAAkC,EAElCh0C,EAAAi0C,mBAAqB,IAAIpnC,EAAAA,UAoLlC,OAnMiD9G,EAAAA,EAAAA,GAkChD6tC,EAAAz5C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAOCi6C,EAAAA,cACCj6C,KAAKiY,mBAAmBvB,aACxB1W,KAAKoyC,sBAAsBzuB,eAE1BtQ,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE8hC,OAELjxC,EAA4BixC,EAAQ,GACzCv6B,EAAYu6B,EAAQ,GAErBn0C,EAAKkD,OAASA,EACdlD,EAAK2/B,UAAUz8B,EAAOtI,OAASgf,GAC/B5Z,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKi0C,wBACH9U,oBACA9rB,KAAKrT,KAAK+S,aACVqF,WAAS,SAAElP,GACXnD,EAAKmD,QAAUA,EAEfnD,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKi0C,wBACH7U,gBACA/rB,KAAKrT,KAAK+S,aACVqF,WAAS,SAAEzS,GACXI,EAAKg0C,uBAAyBp0C,KAGhCs0C,EAAAA,cACCj6C,KAAKiY,mBAAmBvB,aACxB1W,KAAKylC,mBAAmBL,oBACxBplC,KAAKoyC,sBAAsBzuB,eAE1BtQ,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE8hC,OAELjxC,EAA4BixC,EAAQ,GACzCt8B,EAAiBs8B,EAAQ,GACzBv6B,EAAYu6B,EAAQ,GAEfC,EAAmBlxC,EAAOtI,OAASgf,EAErCw6B,EAAmBv8B,EACtB7X,EAAK2/B,UAAU9nB,GAEf7X,EAAK2/B,UAAUyU,GAGhBp0C,EAAKuJ,kBAAkBJ,oBAI1ByqC,EAAAz5C,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KAGKA,KAAK85C,iBACR95C,KAAK65C,eACHO,QAAQp6C,KAAK85C,gBAAgB5pC,gBAAgBE,eAC7CiD,KACAC,EAAAA,QAAM,WAAO,OAAAvN,EAAKg0C,0BAClB/yC,EAAAA,KAAG,SAAEyiB,GAAyB,OAAAA,EAAQ+qB,eACtCr+B,EAAAA,uBACAnW,KAAK+S,aAELqF,WAAS,SAAE9Q,GACXvB,EAAKs0C,qBAAqB/yC,MAI7BtH,KAAKi0C,wBACHnV,mBACAzrB,KACArT,KAAK+S,aAELqF,WAAS,SAAE9Q,GACXvB,EAAKme,SAASO,SAAS1e,EAAKixC,aAAa5mC,cAAe,QAAS9I,EAAQ,SAG3EtH,KAAKoyC,sBACH5uB,0BACAnQ,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACPA,EACHI,EAAKu0C,0BAELv0C,EAAKw0C,8BAMRv6C,KAAKoyC,sBACHh/B,cACAC,KACAC,EAAAA,QAAM,SAAE++B,GACP,OAAOA,EAAIvxB,6BAEZ9gB,KAAK+S,aAELqF,WAAS,SAAE7E,OAELsK,EAAkBtK,EAAU4K,qBACjCsB,EAAYlM,EAAUqM,eAEvB7Z,EAAKme,SAASO,SAAS1e,EAAKixC,aAAa5mC,cAAe,cAAeqP,EAAY,MACnF1Z,EAAKme,SAASO,SAAS1e,EAAKixC,aAAa5mC,cAAe,SAAUyN,EAAkB,UAIvF87B,EAAAz5C,UAAA+P,YAAA,WACCpE,EAAA3L,UAAM+P,YAAWrP,KAAAZ,MACjBA,KAAK65C,eAAejvB,QAAQ5qB,KAAKqP,WAAWe,gBAG7CupC,EAAAz5C,UAAAwlC,UAAA,SAAU9nB,GACT5d,KAAK4d,OAASA,EACd5d,KAAKkkB,SAASO,SAASzkB,KAAKqP,WAAWe,cAAe,SAAUpQ,KAAK4d,OAAS,OAGvE+7B,EAAAz5C,UAAAm6C,qBAAR,SAA6B/yC,GACxBtH,KAAK+5C,wBACR/5C,KAAKsvC,0BAA0BzY,kBAAkBvvB,IAI3CqyC,EAAAz5C,UAAAo6C,wBAAR,WAAA,IAAAv0C,EAAA/F,KACCA,KAAK45C,OACHY,mBAAiB,WAEjBjzB,EAAAA,UAAUxhB,EAAKsJ,WAAWe,cAAe,UACvCiD,KAEAN,EAAAA,UAAUhN,EAAKi0C,oBACfj0C,EAAKgN,aAELqF,WAAS,SAAEkL,OAELm3B,EAAYn3B,EAAMtiB,OAAOy5C,UAE/B10C,EAAKkpC,wBAAwBrF,kBAAkB6Q,UAK5Cd,EAAAz5C,UAAAq6C,yBAAR,WACCv6C,KAAKg6C,mBAAmB93C,OACxBlC,KAAKg6C,mBAAmBlnC,gCAtMzBxC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAA,kLACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAnCjCG,EAAAA,kBAMAwT,EAAAA,iBARAvT,EAAAA,yBAIAqpC,EAAAA,cAgBQ9mC,UACA21B,UACAxlB,UACAxN,UACAwuB,UACA1F,UACAV,UACAsI,UAZA0T,EAAAA,+CAsDJC,EAAAA,UAAQ,CAAAx2C,KAAI8M,EAAAA,OAAMX,KAAA,CAAC3C,8CA5BtB0D,EAAAA,UAASf,KAAA,CAAC,YAAa,CAAEgB,QAAQ,OAiMnCooC,GAnMiD3mC,IC1CjD,IAAA6nC,GAAA,WAEA,SAAAA,KASA,2BATCvqC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,8BACVC,SAAU,uCAOXoqC,EAXA,kBCcC,SAAAC,IAAA,IAAA/0C,EACC8F,EAAAjL,KAAAZ,OAAOA,YALA+F,EAAAJ,QAAU,IAAIyI,IAEdrI,EAAA0vC,SAAW,IAAI1/B,EAAAA,gBAuBxB,OA3BkDjK,EAAAA,EAAAA,GAUjDgvC,EAAA56C,UAAA2sB,WAAA,SAAWlnB,EAAkB6I,GAC5BxO,KAAK2F,QAAQ8I,IAAID,EAAYiF,WAAY9N,GACzC3F,KAAKy1C,SAASvzC,KAAKlC,KAAK2F,UAGzBm1C,EAAA56C,UAAA66C,mBAAA,SAAmBvsC,GAElB,OAAOxO,KAAKy1C,SACNv/B,eACA7C,KACArM,EAAAA,KAAG,SAAEA,GACJ,OAAOA,EAAI6H,IAAIL,EAAYiF,eAE5B0C,EAAAA,6CAxBPlO,EAAAA,mDA4BD6yC,GA3BkDpoC,ICRlD,IAAAsoC,GAAA,WAUC,SAAAA,EAAoBC,GAAAj7C,KAAAi7C,6BAAAA,EAOrB,OAJCD,EAAA96C,UAAAg7C,gBAAA,SAAgB1sC,GACf,OAAOxO,KAAKi7C,6BAA6BF,mBAAmBvsC,wBAP7DvG,EAAAA,sDAJQ6yC,MAcTE,EAjBA,OCIaG,GAA2B,IAAIttC,EAAAA,eAA0ButC,8CCuCrE,SAAAC,EAAoB/rC,EACT0kC,EACAxlC,EACA4jC,EACAr6B,EACA43B,EACAhB,EACAkI,EACAyE,EACkC5N,GAT7C,IAAA3nC,EAUC8F,EAAAjL,KAAAZ,OAAOA,YAVY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAiuC,oBAAAA,EACAjuC,EAAAyI,YAAAA,EACAzI,EAAAqsC,sBAAAA,EACArsC,EAAAgS,mBAAAA,EACAhS,EAAA4pC,iCAAAA,EACA5pC,EAAA4oC,4BAAAA,EACA5oC,EAAA8wC,mCAAAA,EACA9wC,EAAAu1C,mCAAAA,EACkCv1C,EAAA2nC,UAAAA,EAzB7C3nC,EAAAw1C,eAAyB,EAEzBx1C,EAAAy1C,4BAAsC,EAEtCz1C,EAAA01C,+BAAyC,EAEzC11C,EAAA21C,qBAA+B,EAE/B31C,EAAA41C,kBAA4B,EAoB3B51C,EAAK61C,eAAiB,OAAO71C,EAAK2nC,UAAS,UAC3C3nC,EAAK81C,gBAAkB,OAAO91C,EAAK2nC,UAAS,aA2F9C,OA5HiD5hC,EAAAA,EAAAA,GAoChDuvC,EAAAn7C,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAKoyC,sBACHh/B,cACAC,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE7E,GACXxN,EAAKwN,UAAYA,EACjBxN,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK+X,mBACH7D,WACAb,KAAKrT,KAAK+S,aACVqF,WAAS,SAAE1N,GACX3E,EAAK+1C,gBAAkBpxC,EACvB3E,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKs7C,mCACHJ,gBAAgBl7C,KAAKwO,aACrB6E,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACXI,EAAKw1C,cAAgB51C,EACrBI,EAAKuJ,kBAAkBJ,mBAIzBlP,KAAK62C,mCACHZ,sBAAsBj2C,KAAKwO,aAC3B6E,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACXI,EAAK21C,oBAAsB/1C,EAC3BI,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK2uC,4BACH/2B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAErR,GACXhB,EAAKy1C,2BAA6Bz0C,EAAOmnC,eACzCnoC,EAAK01C,8BAAgC10C,EAAOonC,kBAC5CpoC,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAK2vC,iCACH/3B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAEzS,GACXI,EAAK41C,iBAAmBh2C,EACxBI,EAAKuJ,kBAAkBJ,oBAI1BmsC,EAAAn7C,UAAA67C,oBAAA,WACC,OAAO/7C,KAAK47C,eAAiB,mBAG9BP,EAAAn7C,UAAA87C,uBAAA,WACC,OAAOh8C,KAAK47C,eAAiB,sBAG9BP,EAAAn7C,UAAA+7C,yBAAA,WACC,OAAOj8C,KAAKg0C,oBAAoB5mC,mBAAqBpN,KAAKuT,WAAavT,KAAKuT,UAAUqL,sBAGvFy8B,EAAAn7C,UAAAg8C,4BAAA,WACC,OAAOl8C,KAAKg0C,oBAAoB5mC,mBAAqBpN,KAAKuT,WAAavT,KAAKuT,UAAUsL,yBAGvFw8B,EAAAn7C,UAAAi8C,mBAAA,WACC,OAAOn8C,KAAKg0C,oBAAoBzmC,eAAepB,aAAenM,KAAK87C,iBAAmB97C,KAAK87C,gBAAgB3iC,cAG5GkiC,EAAAn7C,UAAAk8C,sBAAA,WACC,OAAOp8C,KAAKg0C,oBAAoB1mC,kBAAkBnB,aAAenM,KAAK87C,iBAAmB97C,KAAK87C,gBAAgB1iC,iBAG/GiiC,EAAAn7C,UAAAm8C,cAAA,WACC,OAAOr8C,KAAKuT,WAAqD,IAAxCvT,KAAKuT,UAAUoD,cAAchW,4BA/HvD2P,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAA,i5CACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDArBAI,EAAAA,yBAKzB1E,SACAiH,UACAmQ,UACA/P,UACAg6B,UACAI,UACAyH,UACAmF,mCAwCJ9pC,EAAAA,OAAMX,KAAA,CAAC4qC,SA+FZE,GA5HiDroC,uBCZhD,SAAAspC,EAAYC,EACTzyB,UACFje,EAAAjL,KAAAZ,KAAMu8C,EAAwBzyB,IAAuB9pB,KAEvD,OANqD8L,EAAAA,EAAAA,uBADpD7D,EAAAA,sDAHQsU,UAHAwN,EAAAA,0BAaTuyB,GANqDtyB,EAAAA,2BCLrD,gCCSC,SAAAwyB,EAAoBC,GAApB,IAAA12C,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAA02C,gCAAAA,IAYrB,OAd0D3wC,EAAAA,EAAAA,GAMzD0wC,EAAAt8C,UAAAqjB,QAAA,SAAQnH,GACP,OAAOpc,KAAKy8C,gCAAgCl5B,QAAQnH,IAGrDogC,EAAAt8C,UAAAiqB,KAAA,SAAK9M,GACJrd,KAAKy8C,gCAAgCtyB,KAAK9M,wBAZ3CpV,EAAAA,sDAHQq0C,MAkBTE,GAd0DE,ICT1D,IAAAC,GAAA,SAAA9wC,GAEC,SAAA8wC,EAAYvgC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,0BAAwBpc,KAE7C,OAL2C8L,EAAAA,EAAAA,GAK3C6wC,EALA,CAA2CtgC,EAAAA,aCA3CugC,GAAA,SAAA/wC,GAEC,SAAA+wC,EAAYxgC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,mBAAiBpc,KAEtC,OALoC8L,EAAAA,EAAAA,GAKpC8wC,EALA,CAAoCvgC,EAAAA,aCApCwgC,GAAA,SAAAhxC,GAEC,SAAAgxC,EAAYzgC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,wBAAsBpc,KAE3C,OALyC8L,EAAAA,EAAAA,GAKzC+wC,EALA,CAAyCxgC,EAAAA,aCAzCygC,GAAA,SAAAjxC,GAEC,SAAAixC,EAAY1gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,iCAA+Bpc,KAEpD,OALkD8L,EAAAA,EAAAA,GAKlDgxC,EALA,CAAkDzgC,EAAAA,aCAlD0gC,GAAA,SAAAlxC,GAEC,SAAAkxC,EAAY3gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,+BAA6Bpc,KAElD,OALgD8L,EAAAA,EAAAA,GAKhDixC,EALA,CAAgD1gC,EAAAA,aCAhD2gC,GAAA,SAAAnxC,GAEC,SAAAmxC,EAAY5gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,gCAA8Bpc,KAEnD,OALiD8L,EAAAA,EAAAA,GAKjDkxC,EALA,CAAiD3gC,EAAAA,aCAjD4gC,GAAA,SAAApxC,GAEC,SAAAoxC,EAAY7gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,mCAAiCpc,KAEtD,OALoD8L,EAAAA,EAAAA,GAKpDmxC,EALA,CAAoD5gC,EAAAA,aCApD6gC,GAAA,SAAArxC,GAEC,SAAAqxC,EAAY9gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,wBAAsBpc,KAE3C,OALyC8L,EAAAA,EAAAA,GAKzCoxC,EALA,CAAyC7gC,EAAAA,aCAzC8gC,GAAA,SAAAtxC,GAEC,SAAAsxC,EAAY/gC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,mBAAiBpc,KAEtC,OALoC8L,EAAAA,EAAAA,GAKpCqxC,EALA,CAAoC9gC,EAAAA,aCApC+gC,GAAA,SAAAvxC,GAEC,SAAAuxC,EAAYhhC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,sBAAoBpc,KAGzC,OANuC8L,EAAAA,EAAAA,GAMvCsxC,EANA,CAAuC/gC,EAAAA,aCAvCghC,GAAA,SAAAxxC,GAEC,SAAAwxC,EAAYjhC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,2BAAyBpc,KAE9C,OAL4C8L,EAAAA,EAAAA,GAK5CuxC,EALA,CAA4ChhC,EAAAA,aCG5CihC,GAAA,SAAAzxC,GAEC,SAAAyxC,EAAYlhC,EACQvG,GADpB,IAAA9P,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,mBAAiBpc,YADjB+F,EAAA8P,OAAAA,IAOrB,OAVoC/J,EAAAA,EAAAA,GAOnCwxC,EAAAp9C,UAAAq9C,UAAA,WACC,OAAOv9C,KAAK6V,QAEdynC,EAVA,CAAoCjhC,EAAAA,aCHpC,IAAAmhC,GAAA,SAAA3xC,GAEC,SAAA2xC,EAAYphC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,gCAA8Bpc,KAGnD,OANiD8L,EAAAA,EAAAA,GAMjD0xC,EANA,CAAiDnhC,EAAAA,aCAjDohC,GAAA,SAAA5xC,GAEC,SAAA4xC,EAAYrhC,EACQ8sB,GADpB,IAAAnjC,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,wCAAsCpc,YADtC+F,EAAAmjC,OAAAA,IAQrB,OAXyDp9B,EAAAA,EAAAA,GAOxD2xC,EAAAv9C,UAAAw9C,UAAA,WACC,OAAO19C,KAAKkpC,QAGduU,EAXA,CAAyDphC,EAAAA,gCCyCxD,SAAAshC,EAAoBz6B,EACTC,GADX,IAAApd,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFY+F,EAAAmd,eAAAA,EACTnd,EAAAod,4BAAAA,EAPMpd,EAAA63C,uBAAyB,IAAIxvC,IAE7BrI,EAAA83C,WAAa,IAAI9nC,EAAAA,cAAsC,GAEvDhQ,EAAA4M,aAAe,IAAIC,EAAAA,QAMnC7M,EAAKmd,eACHG,QACAlH,GACAwgC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA/L,GACAD,GACAG,GACA8L,GACAlL,GACA51B,GACA+gC,GAAsB,GAEtBG,GACAC,GAAmC,GAClB,GAEjBz6B,IAEA3P,KAAKN,EAAAA,UAAUhN,EAAK4M,eACpByF,WAAS,SAAEkL,OAELlH,EAAckH,EAAMlH,YAEpB7I,EAAYxN,EAAKod,4BAA4BI,QAAQnH,GAC1Dnb,EAAMsS,EAAUC,QAAQC,WAEzB1N,EAAK63C,uBAAuBnvC,IAAIxN,EAAKsS,GAErCxN,EAAK83C,WAAW37C,KAAK6D,EAAK63C,6BAwB9B,OAxEiD9xC,EAAAA,EAAAA,GAoDhD6xC,EAAAz9C,UAAA+P,YAAA,WACCjQ,KAAK2S,aAAazQ,OAClBlC,KAAK2S,aAAaG,YAGnB6qC,EAAAz9C,UAAAkT,YAAA,SAAYgJ,GAEX,OAAOpc,KAAK69C,WACN3nC,eACA7C,KACAC,EAAAA,QAAM,SAAEsqC,OAED38C,EAAMmb,EAAY5I,QAExB,OAAOoqC,EAAuB/5B,IAAI5iB,MAEnC+F,EAAAA,KAAG,SAAE42C,GAAmD,OAAAA,EAAuB/uC,IAAIuN,EAAY5I,kCArEtGvL,EAAAA,sDA9BkC6b,EAAAA,sBAI1BnB,MAmGTg7B,GAxEiDhqC,IC1BjD,IAAamqC,GAAoC,CAChDxB,GACA,CACC5uC,QAASgvC,GACTzpB,SAAUupB,KAICuB,GAAiC,CAC7Cp7B,GACA,CACCjV,QAASiG,GACTsf,SAAU0qB,KAICK,GAA6B,CACzCzhC,IC1BD0hC,GAAA,WAUC,SAAAA,EAAYpqC,EACT6O,EACAxB,EACAC,QAAA,IAAAA,IAAAA,EAAA,GACFnhB,KAAK6T,GAAKA,EACV7T,KAAK0iB,QAAUA,EACf1iB,KAAKkhB,SAAWA,EAChBlhB,KAAKmhB,QAAUA,EA8BjB,OA3BC88B,EAAA/9C,UAAAohB,QAAA,WACC,OAAOthB,KAAK0iB,SAGbu7B,EAAA/9C,UAAAshB,WAAA,WACC,OAAOxhB,KAAKmhB,SAGb88B,EAAA/9C,UAAAuhB,YAAA,WACC,OAAOzhB,KAAKkhB,UAGb+8B,EAAA/9C,UAAAg+C,YAAA,WACCl+C,KAAKmhB,SAAW,GAGjB88B,EAAA/9C,UAAAi+C,YAAA,SAAYj9B,GACXlhB,KAAKkhB,SAAWA,GAGjB+8B,EAAA/9C,UAAAu1B,MAAA,eAEO/S,EAAOtiB,EAAA,GAAQJ,KAAK0iB,SAE1B,OAAO,IAAIu7B,EAAiBj+C,KAAK6T,GAAI6O,EAAS1iB,KAAKmhB,UAGrD88B,EA/CA,GCIA,IAAAG,GAAA,SAAAvyC,GAEC,SAAAuyC,EAAYhiC,EACQy1B,EACAC,GAFpB,IAAA/rC,EAGC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,4CAA0Cpc,YAF1C+F,EAAA8rC,WAAAA,EACA9rC,EAAA+rC,UAAAA,IAWrB,OAf6DhmC,EAAAA,EAAAA,GAQ5DsyC,EAAAl+C,UAAA6xC,cAAA,WACC,OAAO/xC,KAAK6xC,YAGbuM,EAAAl+C,UAAA8xC,aAAA,WACC,OAAOhyC,KAAK8xC,WAEdsM,EAfA,CAA6D3pB,EAAAA,gBCA7D,IAAA4pB,GAAA,SAAAxyC,GAEC,SAAAwyC,EAAYjiC,EACQvG,GADpB,IAAA9P,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,yCAAuCpc,YADvC+F,EAAA8P,OAAAA,IAOrB,OAV0D/J,EAAAA,EAAAA,GAOzDuyC,EAAAn+C,UAAAq9C,UAAA,WACC,OAAOv9C,KAAK6V,QAEdwoC,EAVA,CAA0D5pB,EAAAA,gBCK1D,IAAA6pB,GAAA,WAAA,SAAAA,IAESt+C,KAAAsf,SAAmB,EAEnBtf,KAAAu+C,SAAmB,EAInBv+C,KAAAkX,SAAoC,GAGpClX,KAAAw+C,iBAA4C,GAE5Cx+C,KAAAy+C,eAA0C,GAqHnD,OAnHCH,EAAAp+C,UAAAqX,UAAA,WACC,OAAOvX,KAAKsf,SAGbg/B,EAAAp+C,UAAAw+C,UAAA,WACC,OAAO1+C,KAAKu+C,SAGbD,EAAAp+C,UAAAioC,WAAA,SAAWxiC,GACV3F,KAAKsf,QAAU3Z,GAGhB24C,EAAAp+C,UAAAy+C,YAAA,SAAY5nC,GACX/W,KAAKkX,SAAWH,EAChB/W,KAAK4+C,wBAGNN,EAAAp+C,UAAAyW,YAAA,WACC,OAAO3W,KAAKkX,UAGbonC,EAAAp+C,UAAA2+C,oBAAA,WACC7+C,KAAKw+C,iBAAgB97C,EAAO1C,KAAKkX,WAGlConC,EAAAp+C,UAAA4+C,oBAAA,WACC,OAAO9+C,KAAKw+C,kBAGbF,EAAAp+C,UAAA6+C,kBAAA,SAAkBhoC,GACjB/W,KAAKy+C,eAAiB1nC,GAGvBunC,EAAAp+C,UAAA8+C,kBAAA,WACC,OAAOh/C,KAAKy+C,gBAGbH,EAAAp+C,UAAA8V,UAAA,SAAUgyB,EAAwBx5B,GAGjC,YAHS,IAAAw5B,IAAAA,EAAA,IACThoC,KAAK6V,OAAS7V,KAAKi/C,aAAajX,GAEzBhoC,KAAKk/C,yBAAyB1wC,IAGtC8vC,EAAAp+C,UAAAi/C,mBAAA,SAAmBnX,EAAwBx5B,GAG1C,YAHkB,IAAAw5B,IAAAA,EAAA,IAClBhoC,KAAK6V,OAASmyB,EAEPhoC,KAAKk/C,yBAAyB1wC,IAGtC8vC,EAAAp+C,UAAAq9C,UAAA,WACC,OAAOv9C,KAAK6V,QAGbyoC,EAAAp+C,UAAAk/C,cAAA,WACC,OAAOp/C,KAAK6V,OAAOlV,QAOpB29C,EAAAp+C,UAAAm/C,eAAA,SAAetU,EAAgB5oC,EAAYkF,EAAcmH,OAElDzD,EAAyB/K,KAAKs/C,eAAevU,GAClDwU,EAAmBx0C,EAAK0qB,QAOzB,OALI1qB,IACHA,EAAK2X,QAAQrb,EAAMqoB,eAAiBvtB,EACpC4I,EAAKmzC,eAGC,CACN,IAAIE,GAAwC5vC,EAAa+wC,EAAkBx0C,EAAK0qB,SAChFz1B,KAAKk/C,yBAAyB1wC,KAIhC8vC,EAAAp+C,UAAAs/C,iBAAA,SAAiBzU,EAAgBv8B,OAE1BR,EAAQhO,KAAKy/C,oBAAoB1U,GAEvC,OAAI/8B,GAAS,GAEZhO,KAAK6V,OAAO8hB,OAAO3pB,EAAO,GAEnB,CAAChO,KAAKk/C,yBAAyB1wC,KAGhC,IAGA8vC,EAAAp+C,UAAA++C,aAAR,SAAqBjX,GACpB,OAAOA,EAAMhhC,KAAG,SAAE+D,EAAWiD,GAC5B,OAAO,IAAIiwC,GAAiB78B,EAAAA,sBAAsBC,WAAYtW,EAAMiD,OAI9DswC,EAAAp+C,UAAAg/C,yBAAR,SAAiC1wC,GAChC,OAAO,IAAI6vC,GAAqC7vC,EAAaxO,KAAK6V,SAG3DyoC,EAAAp+C,UAAAo/C,eAAR,SAAuBvU,GACtB,OAAO/qC,KAAK6V,OAAOgH,MAAI,SAAE9R,GAA2B,OAAAA,EAAK8I,KAAOk3B,MAGzDuT,EAAAp+C,UAAAu/C,oBAAR,SAA4B1U,GAC3B,OAAO/qC,KAAK6V,OAAO+iB,WAAS,SAAE7tB,GAA2B,OAAAA,EAAK8I,KAAOk3B,MAG9DuT,EAAAp+C,UAAA0+C,qBAAR,WACC5+C,KAAKkX,SAASlR,SAAO,SAAE+Q,EAAuB/I,GAC7C+I,EAAIonC,YAAYnwC,OAInBswC,EAlIA,GCTA,IAAAoB,GAAA,WAIA,SAAAA,KAWA,OARCA,EAAAx/C,UAAAmjC,cAAA,WACC,OAAO,IAAIib,IAGZoB,EAAAx/C,UAAAC,OAAA,WACC,OAAO,IAAIm+C,wBARZr2C,EAAAA,aAWDy3C,EAfA,GCAAC,GAAA,WAEC,SAAAA,EAA6B7mC,EACTC,GADS/Y,KAAA8Y,MAAAA,EACT9Y,KAAA+Y,IAAAA,EAWrB,OARC4mC,EAAAz/C,UAAAqZ,SAAA,WACC,OAAOvZ,KAAK8Y,OAGb6mC,EAAAz/C,UAAAsZ,OAAA,WACC,OAAOxZ,KAAK+Y,KAGd4mC,EAdA,GCAA,IAAAC,GAAA,WAqBC,SAAAA,EAAoBj6C,EACjB+Z,EACAnH,EACAsnC,EACAlgC,EACAmgC,EACAC,QANiB,IAAAp6C,IAAAA,GAAA,QACjB,IAAA+Z,IAAAA,EAAA,QACA,IAAAnH,IAAAA,EAAA,QACA,IAAAsnC,IAAAA,EAAA,GAHiB7/C,KAAA2F,QAAAA,EAhBZ3F,KAAA2f,UAAoB,GAEpB3f,KAAA8/C,eAAiB,EAEjB9/C,KAAA+/C,kBAAoB,EAmB3B//C,KAAK0f,eAAiBA,EACtB1f,KAAKuY,WAAaA,EAClBvY,KAAK6/C,eAAiBA,EAElBlqB,OAAOqqB,UAAUrgC,KACpB3f,KAAK2f,UAAYA,GAGdgW,OAAOqqB,UAAUF,KACpB9/C,KAAK8/C,eAAiBA,GAGnBnqB,OAAOqqB,UAAUD,KACpB//C,KAAK+/C,kBAAoBA,GAG1B//C,KAAKigD,iBA2GP,OAvGCL,EAAA1/C,UAAAiM,UAAA,WACC,OAAOnM,KAAK2F,SACX3F,KAAK0f,eAAiB,GACtB1f,KAAKuY,WAAa,GAGpBqnC,EAAA1/C,UAAA4f,aAAA,WACC,OAAO9f,KAAK2f,WAGbigC,EAAA1/C,UAAAggD,SAAA,WACC,OAAOlgD,KAAKmgD,OAGbP,EAAA1/C,UAAA0f,aAAA,WACC,OAAO5f,KAAKmgD,MAAM5mC,WAAavZ,KAAK2f,WAGrCigC,EAAA1/C,UAAA+/C,eAAA,WAEC,KAAIjgD,KAAKigB,kBAAoBjgB,KAAK0f,gBAAlC,KAKM0gC,EAAkBrlC,KAAKslC,MAAMrgD,KAAK0f,eAAiB1f,KAAK2f,WAExD2gC,EAAiBvlC,KAAKslC,MAAMrgD,KAAK6/C,eAAiB7/C,KAAK2f,WAEvDF,EAAY1E,KAAKwlC,IAAID,EAAiBtgD,KAAK8/C,gBAAkB9/C,KAAK2f,UAEpE7G,EAASwnC,EAAiBtgD,KAAK8/C,eAI/B/mC,EAAMD,EAFeiC,KAAKC,KAAKhb,KAAK0f,eAAiB1f,KAAK2f,WAEzB3f,KAAK+/C,kBAS1C,OAPIhnC,EAAM/Y,KAAKuY,aAEdO,GADAC,EAAM/Y,KAAKuY,YACG6nC,GAGfpgD,KAAKmgD,MAAQ,IAAIR,GAAc7mC,EAAOC,GAE/B,CACND,MAAKA,EACLC,IAAGA,EACH0G,UAASA,GA1BTzf,KAAKmgD,MAAQ,IAAIR,GAAc,EAAG3/C,KAAKuY,aA8BzCqnC,EAAA1/C,UAAA2sB,WAAA,SAAWlnB,GACV3F,KAAK2F,QAAUA,EAGX3F,KAAK2F,SAAmC,IAAxB3F,KAAK0f,gBACxB1f,KAAKuiC,OAAOM,KAAK,qEAGlB7iC,KAAKigD,kBAGNL,EAAA1/C,UAAA4iC,cAAA,SAAcvqB,QAAA,IAAAA,IAAAA,EAAA,GACbvY,KAAKuY,WAAaA,EAClBvY,KAAKigD,kBAGNL,EAAA1/C,UAAAsgD,uBAAA,SAAuBC,GACtBzgD,KAAK8/C,eAAiBW,EACtBzgD,KAAKigD,kBAGNL,EAAA1/C,UAAAwgD,0BAAA,SAA0BD,GACzBzgD,KAAK+/C,kBAAoBU,EACzBzgD,KAAKigD,kBAGNL,EAAA1/C,UAAA0pC,kBAAA,SAAkBiW,GACjB7/C,KAAK6/C,eAAiBA,EACtB7/C,KAAKigD,kBAGNL,EAAA1/C,UAAAygD,kBAAA,SAAkB/iC,GACjB5d,KAAK0f,eAAiB9B,EACtB5d,KAAKigD,kBAGNL,EAAA1/C,UAAAmqC,aAAA,SAAazsB,GACZ5d,KAAK2f,UAAY/B,EACjB5d,KAAKigD,kBAGNL,EAAA1/C,UAAA0gD,UAAA,SAAUre,GACTviC,KAAKuiC,OAASA,GAGfqd,EAAA1/C,UAAA+f,eAAA,WACC,OAAOjgB,KAAKuY,WAAavY,KAAK2f,WAG/BigC,EAAA1/C,UAAA2f,kBAAA,WACC,OAAO7f,KAAK0f,gBAEdkgC,EAvJA,GCAA,IAAAiB,GAAA,WAQC,SAAAA,EAAoBte,GAAAviC,KAAAuiC,OAAAA,EA0BrB,OAvBCse,EAAA3gD,UAAAC,OAAA,SAAOwF,EACH+Z,EACAnH,EACAsnC,EACAlgC,EACAmgC,EACAC,QANG,IAAAp6C,IAAAA,GAAA,QACH,IAAA+Z,IAAAA,EAAA,QACA,IAAAnH,IAAAA,EAAA,QACA,IAAAsnC,IAAAA,EAAA,OAKGiB,EAAK,IAAIlB,GACdj6C,EACA+Z,EACAnH,EACAsnC,EACAlgC,EACAmgC,EACAC,GAKD,OAFAe,EAAGF,UAAU5gD,KAAKuiC,QAEXue,uBA1BR74C,EAAAA,sDAJQs7B,MAiCTsd,EAlCA,GCAA,IAAaE,GAA0B,gCCIvCC,GAAA,SAAAn1C,GAEC,SAAAm1C,EAAY5kC,EACQ6kC,GADpB,IAAAl7C,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,+CAA6Cpc,YAD7C+F,EAAAk7C,iBAAAA,IAOrB,OAVgEn1C,EAAAA,EAAAA,GAO/Dk1C,EAAA9gD,UAAAghD,gBAAA,WACC,OAAOlhD,KAAKihD,kBAEdD,EAVA,CAAgEvsB,EAAAA,gBCGhE,IAAA0sB,GAAA,WAWC,SAAAA,EAAY3yC,EACQ4yC,GAAAphD,KAAAohD,YAAAA,EALZphD,KAAA2F,SAAmB,EAEV3F,KAAAgxC,OAAS,IAAI5iC,IAI7BpO,KAAKwO,YAAcA,EA8CrB,OA3CC2yC,EAAAjhD,UAAAqa,UAAA,SAAU2lB,EAAsBhpB,GAE/B,IAAKlX,KAAK2F,QACT,MAAO,OAGF07C,EAAe,IAAIjzC,IAczB,OAZApO,KAAKohD,YAAYp7C,SAAO,SAAEs7C,OAEnBL,EAAmBK,EAAK/mC,UAAU2lB,EAAQhpB,GAE5C+pC,GACHthD,MAAM4hD,KAAKN,EAAiB11B,QACzBvlB,SAAO,SAAE/E,GACTogD,EAAa5yC,IAAIxN,EAAKggD,EAAiBpyC,IAAI5N,UAK5CogD,EAAa/oC,KAAO,EAChB,CACN,IAAI0oC,GAA2ChhD,KAAKwO,YAAa6yC,IAG3D,IAKTF,EAAAjhD,UAAA2sB,WAAA,SAAWlnB,GACV3F,KAAK2F,QAAUA,GAGhBw7C,EAAAjhD,UAAAshD,IAAA,aAGAL,EAAAjhD,UAAAuhD,OAAA,aAGAN,EAAAjhD,UAAAwhD,OAAA,aAGDP,EA3DA,GCPA,IAAAQ,GAAA,WAWC,SAAAA,EAAqDP,GAAAphD,KAAAohD,YAAAA,EAOtD,OAJCO,EAAAzhD,UAAAC,OAAA,SAAOqO,GACN,OAAO,IAAI2yC,GAAmB3yC,EAAaxO,KAAKohD,kCAPjDn5C,EAAAA,sDAGkEtI,MAAKoB,WAAA,CAAA,CAAAqD,KAA1D8M,EAAAA,OAAMX,KAAA,CAACwwC,SAOrBY,EAlBA,GCIA,IAAAC,GAAA,WAUC,SAAAA,EAAY/tC,EACTxM,EACAogC,GACFznC,KAAK6hD,SAAWhuC,EAChB7T,KAAKqH,MAAQA,EACbrH,KAAKynC,YAAcA,EA2DrB,OAxDCma,EAAA1hD,UAAAutB,WAAA,WACC,OAAOztB,KAAKqH,MAAMmM,SAGnBouC,EAAA1hD,UAAA4hD,eAAA,WACC,OAAO9hD,KAAKynC,aAGbma,EAAA1hD,UAAA6hD,eAAA,SAAeta,GACdznC,KAAKynC,YAAcA,GAIpBma,EAAA1hD,UAAAoT,OAAA,SAAO4D,GAAP,IAAAnR,EAAA/F,KAEC,OAAwB,IAApBkX,EAASvW,OACLuW,EAGDA,EAAS5D,QAAM,SAAEvI,GAEvB,OAAIhF,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS3B,OAClCiD,EAAKi8C,aAAaj3C,GACfhF,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS5B,OACzCkD,EAAKk8C,aAAal3C,GACfhF,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS1B,SACzCgD,EAAKm8C,cAAcn3C,OAQrB62C,EAAA1hD,UAAA8hD,aAAR,SAAqBj3C,OACd5I,EAAQnC,KAAKqH,MAAM+mB,SAASrjB,GAElC,MAAqB,iBAAV5I,GACHA,EAAMggD,cAAcxzB,QAAQ3uB,KAAKynC,YAAY0a,gBAAkB,GAMhEP,EAAA1hD,UAAA+hD,aAAR,SAAqBl3C,GAGpB,OAFoB/K,KAAKqH,MAAM+mB,SAASrjB,GAEnB/K,KAAKynC,aAGnBma,EAAA1hD,UAAAgiD,cAAR,SAAsBn3C,GAGrB,OAFqB/K,KAAKqH,MAAM+mB,SAASrjB,KAEjB/K,KAAKynC,aAG/Bma,EA1EA,GCFA,IAAAQ,GAAA,WAIC,SAAAA,EAAY/6C,EACTw6C,OAEIr0B,EAAUnmB,EAAMmM,QAAQC,WAE9BzT,KAAK6T,GAAK2Z,EAAU,IAAMq0B,EAM5B,OAHCO,EAAAliD,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAEduuC,EAfA,GCEA,IAAAC,GAAA,WAQC,SAAAA,EAAYC,EACT/G,EACAG,QAFS,IAAA4G,IAAAA,GAAA,QACT,IAAA/G,IAAAA,GAAA,QACA,IAAAG,IAAAA,GAAA,GARK17C,KAAAsiD,kBAA4B,EAE5BtiD,KAAAu7C,eAAyB,EAEzBv7C,KAAA07C,qBAA+B,EAKtC17C,KAAKsiD,iBAAmBA,EACxBtiD,KAAKu7C,cAAgBA,EACrBv7C,KAAK07C,oBAAsBA,EAiC7B,OA9BC2G,EAAAniD,UAAAwyC,mBAAA,WACC,OAAO1yC,KAAKsiD,kBAGbD,EAAAniD,UAAAqiD,wBAAA,WACC,OAAOviD,KAAK07C,qBAGb2G,EAAAniD,UAAAsiD,mBAAA,WACC,OAAOxiD,KAAKu7C,eAGb8G,EAAAniD,UAAA8pC,gBAAA,SAAgBjjC,GACXA,QAA6BrB,IAAnBqB,EAAOpB,SAA4C,OAAnBoB,EAAOpB,UACpD3F,KAAKsiD,iBAAmBv7C,EAAOpB,UAIjC08C,EAAAniD,UAAAiqC,mBAAA,SAAmBpjC,GACdA,QAA6BrB,IAAnBqB,EAAOpB,SAA4C,OAAnBoB,EAAOpB,UACpD3F,KAAKu7C,cAAgBx0C,EAAOpB,UAI9B08C,EAAAniD,UAAA+pC,sBAAA,SAAsBljC,GACjBA,QAA6BrB,IAAnBqB,EAAOpB,SAA4C,OAAnBoB,EAAOpB,UACpD3F,KAAK07C,oBAAsB30C,EAAOpB,UAIrC08C,EA9CA,GCGA,IAAAI,GAAA,WAAA,SAAAA,IAEkBziD,KAAA0iD,eAAiB,IAAIL,GAErBriD,KAAA2iD,QAAU,IAAIv0C,IAmChC,OAjCCq0C,EAAAviD,UAAA0iD,OAAA,WACC,OAAOjjD,MAAM4hD,KAAKvhD,KAAK2iD,SACnB37C,KAAG,SAAE67C,GAAQ,OAAAA,EAAI,OAGtBJ,EAAAviD,UAAA4iD,YAAA,WACC,OAAO9iD,KAAK0iD,gBAGbD,EAAAviD,UAAA0nC,UAAA,SAAUvgC,EAAcmgC,EAA0BC,OAE3Coa,EAAW,IAAIO,GAAS/6C,EAAOmgC,GACpCl0B,EAAS,IAAIsuC,GAAgBC,EAAUx6C,EAAOogC,GAE3B,KAAhBA,EACHznC,KAAK2iD,QAAQh0C,OAAOkzC,EAASruC,SAE7BxT,KAAK2iD,QAAQl0C,IAAIozC,EAASruC,QAASF,IAIrCmvC,EAAAviD,UAAAoT,OAAA,SAAO4D,WACAyrC,EAAU3iD,KAAK4iD,SAEjBG,EAAgBrgD,EAAOwU,OAE3B,IAAmB,IAAA8rC,EAAA7sB,EAAAwsB,GAAOM,EAAAD,EAAA9gD,QAAA+gD,EAAA7gD,KAAA6gD,EAAAD,EAAA9gD,OAAE,CAC3B6gD,EADcE,EAAA9gD,MACYmR,OAAOyvC,qGAGlC,OAAOA,GAGTN,EAvCA,GCPA,IAAAS,GAAA,WAKA,SAAAA,KAMA,OAHCA,EAAAhjD,UAAAC,OAAA,SAAOwF,GACN,YADM,IAAAA,IAAAA,GAAA,GACC,IAAI88C,wBAJZx6C,EAAAA,aAMDi7C,EAXA,GCAAC,GAAA,WAIA,SAAAA,KAQA,OANCA,EAAAjjD,UAAA6N,WAAA,eAEO8F,EAAKuN,EAAAA,sBAAsBC,WACjC,OAAO,IAAI0M,GAAQla,IAGrBsvC,EAZA,iBCuBC,SAAAC,EAAsBvvC,EACfqa,EACA1F,EACAhjB,GATCxF,KAAAqjD,oBAA8B,EAUrCrjD,KAAK6T,GAAKA,EACV7T,KAAKkuB,SAAWA,EAChBluB,KAAKwoB,SAAWA,EAEQ,iBAAb0F,EACVluB,KAAKsjD,eAAc,SAAI1mC,GAA6B,OAAAA,EAAO0E,UAAU4M,IACvC,mBAAbA,IACjBluB,KAAKsjD,eAAc,SAAI1mC,GAA6B,OAAAsR,EAAStR,EAAO0E,aAGrEthB,KAAKujD,qBAAuBvjD,KAAKwjD,6BAEjCxjD,KAAKyjD,mBAAmBj+C,GAuE1B,OAhEC49C,EAAAljD,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,IAGbuvC,EAAAljD,UAAAwjD,OAAA,WACC,OAAO1jD,KAAKwT,QAAQA,SAGrB4vC,EAAAljD,UAAA8sB,YAAA,WACC,OAAOhtB,KAAKwoB,UAGb46B,EAAAljD,UAAAwvB,YAAA,WACC,OAAO1vB,KAAKkuB,UAGbk1B,EAAAljD,UAAAwgC,kBAAA,WACC,OAAO1gC,KAAKsjD,gBAGbF,EAAAljD,UAAAkuB,SAAA,SAASxR,GACR,OAAO5c,KAAKsjD,eAAe1mC,IAG5BwmC,EAAAljD,UAAAyjD,cAAA,SAAcv/C,GAEb,QAAKpE,KAAK4jD,2BAIA5jD,KAAK6jD,aAAez/C,IAG/Bg/C,EAAAljD,UAAA0jD,qBAAA,WACC,OAAO5jD,KAAKqjD,oBAGbD,EAAAljD,UAAAsuC,sBAAA,SAAsB7oC,GACrB3F,KAAKqjD,mBAAqB19C,GAGnBy9C,EAAAljD,UAAAujD,mBAAR,SAA2Bj+C,GAA3B,IAAAO,EAAA/F,KAEOwF,GAA+D,IAA1ChG,OAAO+rB,KAAK/lB,GAAmB7E,QAErD6E,EAAkBG,UACrB3F,KAAKqjD,qBAAuB79C,EAAkBG,SAG3CH,EAAkBI,kBAErB5F,KAAK6jD,aAAe,EAEpBr+C,EAAkBI,iBAAiBI,SAAO,SAAE1F,GAC3CyF,EAAK89C,cAAgBvjD,MAGtBN,KAAK6jD,aAAe7jD,KAAK8jD,6BAG1B9jD,KAAK6jD,aAAe7jD,KAAK8jD,6BAI5BV,KCvGA,IAAAW,GAAA,SAAAl4C,GAEC,SAAAk4C,EAAYlwC,EACTqa,EACA1oB,UACFqG,EAAAjL,KAAAZ,KAAM6T,EACLqa,EACAzpB,EAAS7B,QACT4C,IAAkBxF,KAcrB,OAtBkC8L,EAAAA,EAAAA,GAWjCi4C,EAAA7jD,UAAA4jD,0BAAA,WACC,OAAO,GAKRC,EAAA7jD,UAAAsjD,2BAAA,WACC,OAAOr9C,EAAgBxB,MACtBwB,EAAgBvB,UAGnBm/C,EAtBA,CAAkCX,ICAlCY,GAAA,SAAAn4C,GAEC,SAAAm4C,EAAYnwC,EACTqa,EACA1oB,UACFqG,EAAAjL,KAAAZ,KAAM6T,EACLqa,EACAzpB,EAAS5B,OACT2C,IAAkBxF,KAwBrB,OAhCiC8L,EAAAA,EAAAA,GAWhCk4C,EAAA9jD,UAAA4jD,0BAAA,WACC,OAAO,GAURE,EAAA9jD,UAAAsjD,2BAAA,WACC,OAAOr9C,EAAgBxB,MACtBwB,EAAgBvB,SAChBuB,EAAgBtB,IAChBsB,EAAgBpB,IAChBoB,EAAgBnB,IAChBmB,EAAgBrB,QAChBqB,EAAgBlB,QAGnB++C,EAhCA,CAAiCZ,ICAjCa,GAAA,SAAAp4C,GAEC,SAAAo4C,EAAYpwC,EACTqa,EACA1oB,UACFqG,EAAAjL,KAAAZ,KAAM6T,EACLqa,EACAzpB,EAAS3B,OACT0C,IAAkBxF,KAcrB,OAtBiC8L,EAAAA,EAAAA,GAWhCm4C,EAAA/jD,UAAA4jD,0BAAA,WACC,OAAO,GAKRG,EAAA/jD,UAAAsjD,2BAAA,WACC,OAAOr9C,EAAgBxB,MACtBwB,EAAgBvB,UAGnBq/C,EAtBA,CAAiCb,ICAjCc,GAAA,SAAAr4C,GAEC,SAAAq4C,EAAYrwC,EACTqa,EACA1oB,UACFqG,EAAAjL,KAAAZ,KAAM6T,EACLqa,EACAzpB,EAAS1B,QACTyC,IAAkBxF,KAkBrB,OA1BkC8L,EAAAA,EAAAA,GAWjCo4C,EAAAhkD,UAAA4jD,0BAAA,WACC,OAAO,GAORI,EAAAhkD,UAAAsjD,2BAAA,WACC,OAAOr9C,EAAgBxB,MACtBwB,EAAgBvB,SAChBuB,EAAgBjB,OAChBiB,EAAgBhB,OAGnB++C,EA1BA,CAAkCd,ICAlCe,GAAA,SAAAt4C,GAEC,SAAAs4C,EAAYtwC,EACTqa,EACA1oB,UACFqG,EAAAjL,KAAAZ,KAAM6T,EACLqa,EACAzpB,EAASzB,KACTwC,IAAkBxF,KAcrB,OAtB+B8L,EAAAA,EAAAA,GAW9Bq4C,EAAAjkD,UAAA4jD,0BAAA,WACC,OAAO,GAKRK,EAAAjkD,UAAAsjD,2BAAA,WACC,OAAOr9C,EAAgBxB,MACtBwB,EAAgBvB,UAGnBu/C,EAtBA,CAA+Bf,ICP/BgB,GAAA,WAgBC,SAAAA,EAA6BC,GAAArkD,KAAAqkD,iBAAAA,EAkC9B,OA/BCD,EAAAlkD,UAAAC,OAAA,SAAO4vB,OAEFu0B,EAAav0B,EAAO3rB,KAMxB,YAJmBsB,IAAf4+C,IACHA,EAAa7/C,EAAS3B,QAGnBwhD,IAAe7/C,EAAS7B,QACpB,IAAImhD,GAAa/jD,KAAKqkD,iBAAiBt2C,aAAcgiB,EAAY,MAAYA,EAAOxoB,aAGxF+8C,IAAe7/C,EAAS5B,OACpB,IAAImhD,GAAYhkD,KAAKqkD,iBAAiBt2C,aAAcgiB,EAAY,MAAYA,EAAOxoB,aAGvF+8C,IAAe7/C,EAAS3B,OACpB,IAAImhD,GAAYjkD,KAAKqkD,iBAAiBt2C,aAAcgiB,EAAY,OAGpEu0B,IAAe7/C,EAAS1B,QACpB,IAAImhD,GAAalkD,KAAKqkD,iBAAiBt2C,aAAcgiB,EAAY,OAGrEu0B,IAAe7/C,EAASzB,KACpB,IAAImhD,GAAUnkD,KAAKqkD,iBAAiBt2C,aAAcgiB,EAAY,YADtE,uBA9BD9nB,EAAAA,sDAXQk7C,MAgDTiB,EAlDA,GCMA,IAAAG,GAAA,WAIC,SAAAA,EAA6BC,GAAAxkD,KAAAwkD,aAAAA,EAFZxkD,KAAAkgC,OAAS,IAAI9xB,IA6C/B,OAxCCm2C,EAAArkD,UAAA4sB,SAAA,SAASU,GAER,OAAgB,OAAZA,EACIxtB,KAAKykD,eAAe,GAGrBzkD,KAAKkgC,OAAOrxB,IAAI2e,EAAQha,UAGhC+wC,EAAArkD,UAAAwkD,eAAA,WACC,OAAO/kD,MAAM4hD,KAAKvhD,KAAKkgC,OAAO3U,SAG/Bg5B,EAAArkD,UAAAukD,aAAA,WACC,OAAO9kD,MAAM4hD,KAAKvhD,KAAKkgC,OAAO8Q,WAG/BuT,EAAArkD,UAAAgqC,WAAA,SAAWhhC,GAAX,IAAAnD,EAAA/F,KAEMkJ,GAILA,EAAQlD,SAAO,SAAE+pB,OAEV1oB,EAAQtB,EAAKy+C,aAAarkD,OAAO4vB,GAEvChqB,EAAK4+C,SAASt9C,OAIhBk9C,EAAArkD,UAAA0kD,UAAA,SAAU1kB,eACT,IAAkB,IAAA2kB,EAAA1uB,EAAA+J,GAAM4kB,EAAAD,EAAA3iD,QAAA4iD,EAAA1iD,KAAA0iD,EAAAD,EAAA3iD,OAAE,CAArB,IAAImF,EAAKy9C,EAAA3iD,MACbnC,KAAK2kD,SAASt9C,uGAIRk9C,EAAArkD,UAAAykD,SAAR,SAAiBt9C,GAChBrH,KAAKkgC,OAAOzxB,IAAIpH,EAAMmM,QAAQC,WAAYpM,IAE5Ck9C,EA/CA,GCNA,IAAAQ,GAAA,WAQC,SAAAA,EAAoBP,GAAAxkD,KAAAwkD,aAAAA,EAOrB,OAJCO,EAAA7kD,UAAAC,OAAA,WACC,OAAO,IAAIokD,GAAgBvkD,KAAKwkD,mCAPjCv8C,EAAAA,sDAJQm8C,MAcTW,EAfA,GCGA,IAAAC,GAAA,WAcC,SAAAA,EAAYnxC,EACTxM,EACA4wB,QAAA,IAAAA,IAAAA,GAAA,GANKj4B,KAAAilD,KAAe,EAOtBjlD,KAAKklD,SAAWrxC,EAChB7T,KAAKqH,MAAQA,EACbrH,KAAKi4B,UAAYA,EA8EnB,OA3EC+sB,EAAA9kD,UAAAsT,MAAA,WACC,OAAOxT,KAAKklD,UAGbF,EAAA9kD,UAAAilD,QAAA,WACC,OAAOnlD,KAAKilD,MAGbD,EAAA9kD,UAAA4sB,SAAA,WACC,OAAO9sB,KAAKqH,OAGb29C,EAAA9kD,UAAAklD,aAAA,WACC,OAAOplD,KAAKi4B,WAGb+sB,EAAA9kD,UAAAmlD,gBAAA,WACCrlD,KAAKi4B,WAAaj4B,KAAKi4B,WAGxB+sB,EAAA9kD,UAAAolD,aAAA,SAAartB,GACZj4B,KAAKi4B,UAAYA,GAGlB+sB,EAAA9kD,UAAAgvB,KAAA,SAAKhY,GAAL,IAAAnR,EAAA/F,KAEC,OAAwB,IAApBkX,EAASvW,OACLuW,EAGDA,EAASgY,MAAI,SAAEq2B,EAA6BC,OAE9CC,EAAW1/C,EAAKkyB,UAAYlyB,EAAKsB,MAAM+mB,SAASm3B,GAAax/C,EAAKsB,MAAM+mB,SAASo3B,GACpFE,EAAW3/C,EAAKkyB,UAAYlyB,EAAKsB,MAAM+mB,SAASo3B,GAAaz/C,EAAKsB,MAAM+mB,SAASm3B,GAElF,OAAIx/C,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS5B,OAClCkD,EAAK4/C,WAAWF,EAAUC,GACvB3/C,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS1B,QACzCgD,EAAK6/C,YAAYH,EAAUC,GACxB3/C,EAAKsB,MAAM2lB,gBAAkBvoB,EAAS3B,OACzCiD,EAAK8/C,WAAWJ,EAAUC,GAE1B3/C,EAAK+/C,YAAYL,EAAUC,OAK7BV,EAAA9kD,UAAA2lD,WAAR,SAAmBE,EAAgBC,GAKlC,OAHmB,GAAKD,GAGNE,cAFJ,GAAKD,IAKZhB,EAAA9kD,UAAAylD,WAAR,SAAmBO,EAAgBC,GAKlC,OAHoBD,GACLC,GAKRnB,EAAA9kD,UAAA0lD,YAAR,SAAoBQ,EAAqBC,OAGvCC,IAAgBD,EAEjB,QAHsBD,IAGEE,EAAe,EAAIA,GAAe,EAAI,GAGvDtB,EAAA9kD,UAAA4lD,YAAR,SAAoBS,EAAQhnD,GAC3B,OAAO,GAGTylD,EAjGA,GCHA,IAAAwB,GAAA,WAIC,SAAAA,EAAY3yC,GACX7T,KAAKklD,SAAWrxC,EAMlB,OAHC2yC,EAAAtmD,UAAAsT,MAAA,WACC,OAAOxT,KAAKklD,UAEdsB,EAXA,GCWA,IAAAC,GAAA,WAQC,SAAAA,EAAY9gD,EACTq7B,QADS,IAAAr7B,IAAAA,GAAA,QACT,IAAAq7B,IAAAA,GAAA,GAHchhC,KAAA0mD,QAAU,IAAIt4C,IAI9BpO,KAAK2F,QAAUA,EACf3F,KAAKghC,MAAQA,EAgGf,OA7FCylB,EAAAvmD,UAAAymD,UAAA,SAAU5/C,GAELA,QAA6BrB,IAAnBqB,EAAOpB,SAA4C,OAAnBoB,EAAOpB,UACpD3F,KAAK2F,QAAUoB,EAAOpB,SAGnBoB,QAAkCrB,IAAxBqB,EAAO6/C,cAAsD,OAAxB7/C,EAAO6/C,eACzD5mD,KAAKghC,MAAQj6B,EAAO6/C,aACpB5mD,KAAK0mD,QAAQG,UAKfJ,EAAAvmD,UAAA+oB,OAAA,SAAO5hB,OAEAmmB,EAAUnmB,EAAMmM,QACrBszC,EAAS9mD,KAAK0mD,QAAQ73C,IAAI2e,EAAQha,SAE/BszC,EACCA,EAAO1B,eACV0B,EAAOzB,kBAEPrlD,KAAK2O,OAAO6e,GAGbxtB,KAAKwhD,IAAIn6C,IAKXo/C,EAAAvmD,UAAA6pC,aAAA,SAAa1iC,EAAc+hC,OAEpB5b,EAAUnmB,EAAMmM,QACZxT,KAAK0mD,QAAQ73C,IAAI2e,EAAQha,SAEnC,GAAI41B,IAAc1c,GAAW7oB,KAC5B7D,KAAK2O,OAAO6e,QACN,GAAI4b,IAAc1c,GAAWX,KAAOqd,IAAc1c,GAAWV,KAAM,CAEzEhsB,KAAK2O,OAAO6e,OAENyK,EAAYmR,IAAc1c,GAAWX,IAE3C/rB,KAAKwhD,IAAIn6C,EAAO4wB,KAIlBwuB,EAAAvmD,UAAAshD,IAAA,SAAIn6C,EAAc4wB,QAAA,IAAAA,IAAAA,GAAA,GACjBj4B,KAAK+mD,UAAU1/C,EAAMmM,QAAS,IAAIwxC,GAAgB,IAAIwB,GAASplC,EAAAA,sBAAsBC,YAAaha,EAAO4wB,KAG1GwuB,EAAAvmD,UAAA6mD,UAAA,SAAUv5B,EAAkBs5B,GAEtB9mD,KAAKghC,OACThhC,KAAK0mD,QAAQG,QAGd7mD,KAAK0mD,QAAQj4C,IAAI+e,EAAQha,QAASszC,IAGnCL,EAAAvmD,UAAAyO,OAAA,SAAO6e,GACNxtB,KAAK0mD,QAAQ/3C,OAAO6e,EAAQha,UAG7BizC,EAAAvmD,UAAAwhD,OAAA,aAIA+E,EAAAvmD,UAAAgvB,KAAA,SAAKhY,WACEwvC,EAAU1mD,KAAK4iD,SAEjBoE,EAActkD,EAAOwU,OAEzB,IAAmB,IAAA+vC,EAAA9wB,EAAAuwB,GAAOQ,EAAAD,EAAA/kD,QAAAglD,EAAA9kD,KAAA8kD,EAAAD,EAAA/kD,OAAE,CAC3B8kD,EADcE,EAAA/kD,MACU+sB,KAAK83B,qGAG9B,OAAOA,GAGRP,EAAAvmD,UAAA0iD,OAAA,WAEC,OAAK5iD,KAAK2F,QAIHhG,MAAM4hD,KAAKvhD,KAAK0mD,SACnB1/C,KAAG,SAAE67C,GAAQ,OAAAA,EAAI,MACjB3zB,MAAI,SAAEi4B,EAA4BC,GAClC,OAAOD,EAAUhC,UAAYiC,EAAUjC,aAEvCkC,UARI,IAUVZ,EA3GA,GCXA,IAAAa,GAAA,WASC,SAAAA,EAAoBrqC,GAAAjd,KAAAid,aAAAA,EAmBrB,OAhBCqqC,EAAApnD,UAAAid,gBAAA,WACC,OAAOnd,KAAKid,cAGbqqC,EAAApnD,UAAAqnD,UAAA,SAAUhhB,GAELvmC,KAAKid,aAAatc,OAAS,GAE1BX,KAAKid,aAAa,KAAOspB,EAC5BvmC,KAAKid,aAAe,GAKtBjd,KAAKid,aAAe,CAACspB,IAEvB+gB,EA5BA,GCAA,IAAAE,GAAA,WAEC,SAAAA,EAAoB9oC,EACTC,GADS3e,KAAA0e,IAAAA,EACT1e,KAAA2e,OAAAA,EAmBZ,OAhBC6oC,EAAAtnD,UAAAunD,aAAA,SAAa9hD,GACZ3F,KAAK0e,IAAM/Y,GAGZ6hD,EAAAtnD,UAAAwnD,gBAAA,SAAgB/hD,GACf3F,KAAK2e,OAAShZ,GAGf6hD,EAAAtnD,UAAA8e,cAAA,WACC,OAAOhf,KAAK0e,KAGb8oC,EAAAtnD,UAAA+e,iBAAA,WACC,OAAOjf,KAAK2e,QAGd6oC,EAtBA,GCAA,IAAAG,GAAA,WAwBC,SAAAA,EAAoBrgD,EACTsW,GADS5d,KAAAsH,MAAAA,EACTtH,KAAA4d,OAAAA,EAnBH5d,KAAAi3C,aAAe,GAEfj3C,KAAA4nD,YAAc,GAId5nD,KAAA6nD,QAAkB,EAElB7nD,KAAAyd,gBAA0B,EAE1Bzd,KAAAwd,cAAwB,EAExBxd,KAAAge,aAAmC,IAAIwpC,IAAmB,GAAM,GAEhExnD,KAAAyH,MAAqBC,EAAYjE,OAEjCzD,KAAA6H,YAAiC8lC,GAAkB5pC,IAI1D/D,KAAK8nD,2BAsFP,OAnFCH,EAAAznD,UAAAwd,eAAA,WACC,OAAO1d,KAAK6H,aAGb8/C,EAAAznD,UAAAwlC,UAAA,SAAU9nB,GACT5d,KAAK4d,OAASA,EAEd5d,KAAK8nD,4BAGNH,EAAAznD,UAAAwkC,SAAA,SAASj9B,GACRzH,KAAKyH,MAAQA,GAGdkgD,EAAAznD,UAAAykC,eAAA,SAAeR,GACdnkC,KAAK6H,YAAcs8B,GAGpBwjB,EAAAznD,UAAA+d,SAAA,WACC,OAAOje,KAAKyH,OAGbkgD,EAAAznD,UAAAke,SAAA,WACC,OAAOpe,KAAKsH,OAGbqgD,EAAAznD,UAAAge,UAAA,WACC,OAAOle,KAAK4d,QAGb+pC,EAAAznD,UAAAie,mBAAA,WACC,OAAOne,KAAK4d,QAIb+pC,EAAAznD,UAAAqe,gBAAA,WACC,OAAOve,KAAKge,cAGb2pC,EAAAznD,UAAAunD,aAAA,SAAa9hD,GACZ3F,KAAKue,kBAAkBkpC,aAAa9hD,IAGrCgiD,EAAAznD,UAAAwnD,gBAAA,SAAgB/hD,GACf3F,KAAKue,kBAAkBmpC,gBAAgB/hD,IAGxCgiD,EAAAznD,UAAA6nD,gBAAA,SAAgBpiD,GACf3F,KAAKwd,aAAe7X,GAGrBgiD,EAAAznD,UAAA8nD,kBAAA,SAAkBriD,GACjB3F,KAAKyd,eAAiB9X,GAGvBgiD,EAAAznD,UAAAme,sBAAA,WACC,OAAOre,KAAKwd,cAGbmqC,EAAAznD,UAAAoe,wBAAA,WACC,OAAOte,KAAKyd,gBAGLkqC,EAAAznD,UAAA+nD,gBAAR,WACC,OAAOjoD,KAAKi3C,cAGL0Q,EAAAznD,UAAAgoD,eAAR,WACC,OAAOloD,KAAK4nD,aAGLD,EAAAznD,UAAA4nD,yBAAR,WAEM9nD,KAAK4d,QAIT5d,KAAK6nD,QAAS,EAGf7nD,KAAK6d,gBAAkB7d,KAAK4d,OAAS5d,KAAKioD,kBAAoBjoD,KAAKkoD,kBANlEloD,KAAK6nD,QAAS,GASjBF,EAhHA,GCKA,IAAAQ,GAAA,WAAA,SAAAA,IAESnoD,KAAAooD,aAA6B,GAwEtC,OApECD,EAAAjoD,UAAAmoD,gBAAA,SAAgBnoB,EAAsB7R,GAErC,GAAKA,EAAL,KAKIi6B,EACHpoB,EAAO5sB,QAAM,SAAEjM,GACd,OAAOA,EAAM2lB,gBAAkBvoB,EAAS3B,UAGV,IAA5BwlD,EAAiB3nD,SAIrBX,KAAKooD,aAAeE,EAEpBtoD,KAAKquB,aAAeA,QAfnBruB,KAAKooD,aAAe,IAkBtBD,EAAAjoD,UAAAqoD,oBAAA,WACCvoD,KAAKooD,aAAe,IAGrBD,EAAAjoD,UAAAkqC,OAAA,SAAOlzB,WAEN,GAAwB,IAApBA,EAASvW,QAA6C,IAA7BX,KAAKooD,aAAaznD,OAC9C,OAAOuW,EAKR,QAFIsxC,EAAgB,IAAIC,IAEfjoD,EAAI,EAAGA,EAAI0W,EAASvW,OAAQH,GAAK,MAEzC,IAAkB,IAAA01B,GAAAwyB,OAAA,EAAAvyB,EAAAn2B,KAAKooD,eAAYhyB,EAAAF,EAAAh0B,QAAAk0B,EAAAh0B,KAAAg0B,EAAAF,EAAAh0B,OAAE,CAAhC,IAAImF,EAAK+uB,EAAAj0B,MAETnC,KAAKgiD,aAAa9qC,EAAS1W,GAAI6G,IAClCmhD,EAAchH,IAAItqC,EAAS1W,sGAK9B,OAAOb,MAAM4hD,KAAKiH,IAGXL,EAAAjoD,UAAA8hD,aAAR,SAAqBj3C,EAAwB1D,OACtClF,EAAQkF,EAAM+mB,SAASrjB,GAE7B,MAAqB,iBAAV5I,GACHA,EAAMggD,cAAcxzB,QAAQ3uB,KAAKquB,aAAa8zB,gBAAkB,GAMjEgG,EAAAjoD,UAAA+hD,aAAR,SAAqBl3C,EAAwB1D,GAG5C,OAFoBA,EAAM+mB,SAASrjB,GAEd/K,KAAKquB,cAGnB85B,EAAAjoD,UAAAgiD,cAAR,SAAsBn3C,EAAwB1D,GAG7C,OAFqBA,EAAM+mB,SAASrjB,KAEZ/K,KAAKquB,cAG/B85B,EA1EA,GCAA,IAAAQ,GAAA,SAAA98C,GAEC,SAAA88C,EAAYvsC,EACQmI,GADpB,IAAAxe,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,+CAA6Cpc,YAD7C+F,EAAAwe,cAAAA,IAQrB,OAXgEzY,EAAAA,EAAAA,GAO/D68C,EAAAzoD,UAAA0oD,iBAAA,WACC,OAAO5oD,KAAKukB,eAGdokC,EAXA,CAAgEl0B,EAAAA,mCC6C/D,SAAAo0B,EAAYr6C,EACT6T,EACAF,EACA2mC,EACA9oC,EACA+oC,EACAC,EACAC,EACAC,EACAC,EACA9oC,GAVH,IAAAta,EAWC8F,EAAAjL,KAAAZ,KAAMwO,IAAYxO,YAClB+F,EAAKsc,gBAAkBA,EACvBtc,EAAKoc,mBAAqBA,EAC1Bpc,EAAK+iD,cAAgBA,EACrB/iD,EAAKia,kBAAoBA,EACzBja,EAAKgjD,mBAAqBA,EAC1BhjD,EAAKijD,iBAAmBA,EACxBjjD,EAAKqjD,cAAgBH,EACrBljD,EAAKmjD,cAAgBA,EACrBnjD,EAAKojD,gBAAkBA,EACvBpjD,EAAKsa,OAASA,IAyQhB,OApTwCvU,EAAAA,EAAAA,GA8CvC+8C,EAAA3oD,UAAAsgB,qBAAA,WACC,OAAOxgB,KAAKggB,mBAGb6oC,EAAA3oD,UAAAsuC,sBAAA,SAAsB7oC,GAMrB,OAJA3F,KAAK+oD,mBAAmBl8B,WAAWlnB,GAEnC3F,KAAKqpD,kBAEErpD,KAAKy9B,aAGborB,EAAA3oD,UAAA8V,UAAA,SAAUgyB,GAQT,OANAhoC,KAAK85B,SACJ95B,KAAK8oD,cAAc9yC,UAAUgyB,EAAOhoC,KAAKwT,UAG1CxT,KAAKqpD,kBAEErpD,KAAKy9B,aAGborB,EAAA3oD,UAAAkoC,SAAA,SAASkhB,GAAT,IAAAvjD,EAAA/F,KAEO+qC,EAASue,EAAWte,YACzBxd,EAAU87B,EAAWre,mBACrB5jC,EAAQrH,KAAKmpD,gBAAgBr8B,SAAQ,GACrC3qB,EAAQmnD,EAAWl7B,WAQpB,OANuBpuB,KAAK8oD,cAAczJ,eAAetU,EAAQ5oC,EAAOkF,EAAOrH,KAAKwT,SAErExN,SAAO,SAAE1D,GAAM,OAAAyD,EAAK+zB,SAASx3B,MAE5CtC,KAAKqpD,kBAEErpD,KAAKy9B,aAGborB,EAAA3oD,UAAAwlC,UAAA,SAAU9nB,GACT5d,KAAKugB,YAAYmlB,UAAU9nB,OAErB8B,EAAiB1f,KAAKugB,YAAYpC,qBAExCne,KAAKggB,kBAAkB2gC,kBAAkBjhC,GAEzC1f,KAAKupD,uCAGNV,EAAA3oD,UAAAspD,aAAA,SAAappC,GACZpgB,KAAKmiB,mBAAqB/B,GAG3ByoC,EAAA3oD,UAAA0pC,kBAAA,SAAkB1oB,GACjBlhB,KAAKggB,kBAAkB4pB,kBAAkB1oB,GACzClhB,KAAKupD,uCAGNV,EAAA3oD,UAAAogB,aAAA,WACC,OAAOtgB,KAAKmiB,oBAGb0mC,EAAA3oD,UAAAqkC,UAAA,SAAUlkB,GACTrgB,KAAKqgB,OAASA,GAGfwoC,EAAA3oD,UAAAqgB,UAAA,WACC,OAAOvgB,KAAKqgB,QAGbwoC,EAAA3oD,UAAAwT,UAAA,WACC,OAAO1T,KAAKqiB,iBAGbwmC,EAAA3oD,UAAAupD,aAAA,SAAa1iD,GACZ/G,KAAKqiB,gBAAgBugB,OAAO77B,GAC5B/G,KAAKqpD,mBAGNR,EAAA3oD,UAAA2U,UAAA,SAAUnK,GACT1K,KAAKqiB,gBAAkB3X,EACvB1K,KAAKqpD,mBAGNR,EAAA3oD,UAAA8U,SAAA,WAEChV,KAAKqiB,gBAAgBrN,WAErBhV,KAAKqpD,mBAGNR,EAAA3oD,UAAA+U,SAAA,WACCjV,KAAKqiB,gBAAgBpN,WACrBjV,KAAKqpD,mBAGNR,EAAA3oD,UAAA6U,eAAA,SAAezM,GAAf,IAAAvC,EAAA/F,KAWC,OATqBA,KAAKqiB,gBAAgBtN,eAAezM,GAG5CtC,SAAO,SAAEsd,GACrBvd,EAAK+zB,SAASxW,MAGftjB,KAAKqpD,kBAEErpD,KAAKy9B,aAGborB,EAAA3oD,UAAAyW,YAAA,WACC,OAAO3W,KAAK8oD,cAAc9J,qBAG3B6J,EAAA3oD,UAAAoX,UAAA,WACC,OAAOtX,KAAK8oD,eAGbD,EAAA3oD,UAAAwpD,aAAA,SAAaxgD,GAIZ,OAHAlJ,KAAKmpD,gBAAgBjf,WAAWhhC,GAGzBlJ,KAAKmpD,gBAAgB1E,gBAG7BoE,EAAA3oD,UAAA2pC,iBAAA,SAAiB9iC,GAChB/G,KAAKgpD,iBAAiBrC,UAAU5/C,IAGjC8hD,EAAA3oD,UAAA4pC,WAAA,SAAWtc,OAEJnmB,EAAQrH,KAAKmpD,gBAAgBr8B,SAASU,GAM5C,OAJAxtB,KAAKgpD,iBAAiB//B,OAAO5hB,GAE7BrH,KAAKqpD,kBAEErpD,KAAKgpD,iBAAiBpG,UAG9BiG,EAAA3oD,UAAA6pC,aAAA,SAAavc,EAAkB4b,OAExB/hC,EAAQrH,KAAKmpD,gBAAgBr8B,SAASU,GAM5C,OAJAxtB,KAAKgpD,iBAAiBjf,aAAa1iC,EAAO+hC,GAE1CppC,KAAKqpD,kBAEErpD,KAAKgpD,iBAAiBpG,UAG9BiG,EAAA3oD,UAAA8pC,gBAAA,SAAgBjjC,GACf/G,KAAKopD,cAActG,cAAc9Y,gBAAgBjjC,IAGlD8hD,EAAA3oD,UAAAiqC,mBAAA,SAAmBpjC,GAClB/G,KAAKopD,cAActG,cAAc3Y,mBAAmBpjC,IAGrD8hD,EAAA3oD,UAAA+pC,sBAAA,SAAsBljC,GACrB/G,KAAKopD,cAActG,cAAc7Y,sBAAsBljC,IAGxD8hD,EAAA3oD,UAAAypD,aAAA,SAAan8B,EAAkBga,EAA0BC,OAElDpgC,EAAQrH,KAAKmpD,gBAAgBr8B,SAASU,GAI5C,YAAc9nB,IAAV2B,EACI,IAGRrH,KAAKopD,cAAcxhB,UAAUvgC,EAAOmgC,EAAkBC,GAEtDznC,KAAKqpD,kBAEE,KAGRR,EAAA3oD,UAAAmoD,gBAAA,SAAgBnf,OAEThJ,EAASlgC,KAAKmpD,gBAAgB1E,eAMpC,OAJAzkD,KAAKkpD,cAAcb,gBAAgBnoB,EAAQgJ,GAE3ClpC,KAAKqpD,kBAEE,IAGRR,EAAA3oD,UAAA0pD,mBAAA,WAMC,OAJA5pD,KAAKkpD,cAAcX,sBAEnBvoD,KAAKqpD,kBAEE,IAGAR,EAAA3oD,UAAAmpD,gBAAR,WAAA,IAAAtjD,EAAA/F,KAEC,GAAKA,KAAK8oD,cAAcvL,aAAgBv9C,KAAKqiB,gBAA7C,CAKAriB,KAAK8oD,cAAcnK,YAAY3+C,KAAK8oD,cAAcvL,aAGlDv9C,KAAK8oD,cAAcnK,YAAY3+C,KAAKopD,cAAc91C,OAAOtT,KAAK8oD,cAAcnyC,oBAGtEkzC,EAAmB7pD,KAAKkpD,cAAc9e,OAAOpqC,KAAK8oD,cAAcnyC,eACtE3W,KAAK8oD,cAAcnK,YAAYkL,OAGzBC,EAAO9pD,KAAKgpD,iBAAiB95B,KAAKlvB,KAAK8oD,cAAcnyC,eAC3D3W,KAAK8oD,cAAcnK,YAAYmL,GAG/B9pD,KAAK8oD,cAAcjK,sBAEnB7+C,KAAKqiB,gBAAgBygB,cAAc9iC,KAAK8oD,cAAchK,sBAAsBn+C,QAE5EX,KAAK85B,SAAS,IAAI6uB,GAA2C3oD,KAAKwT,QAASs2C,IAGjD9pD,KAAK+oD,mBAAmBxuC,UACjDva,KAAKmpD,gBAAgB1E,eACrBzkD,KAAK8oD,cAAcnyC,eAGF3Q,SAAO,SAAE+jD,GAC1BhkD,EAAK+zB,SAASiwB,MAIf/pD,KAAK8oD,cAAcnK,YAAY3+C,KAAKqiB,gBAAgBzI,OAAO5Z,KAAK8oD,cAAcnyC,gBAE9E3W,KAAKggB,kBAAkB8iB,cAAc9iC,KAAK8oD,cAAcnyC,cAAchW,QAEtEX,KAAKupD,wCAGEV,EAAA3oD,UAAAqpD,oCAAR,WAEC,GAAIvpD,KAAKggB,kBAAkB7T,YAAa,KAEjCg0C,EAAQngD,KAAKggB,kBAAkBkgC,WAErClgD,KAAK8oD,cAAc/J,kBAClB/+C,KAAK8oD,cAAcnyC,cAAckD,MAAMsmC,EAAM5mC,WAAY4mC,EAAM3mC,gBAGhExZ,KAAK8oD,cAAc/J,kBAClB/+C,KAAK8oD,cAAcnyC,yDAzRG/C,UACL0uB,UACGglB,UACLhJ,UACIsB,UACCuB,UACFsF,UACAhE,UACH0F,UACE5D,UACToD,MAhCCkB,EAAkB/nD,EAAA,CAD9Bk6B,EAAAA,qCAuByBpnB,GACL0uB,GACGglB,GACLhJ,GACIsB,GACCuB,GACFsF,GACAhE,GACH0F,GACE5D,GACToD,MAhCCkB,IAA2B3tB,EAAAA,WC5BxC,IAAA8uB,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAA9pD,UAAAC,OAAA,WACC,OAAO,IAAIwnD,wBAJZ1/C,EAAAA,aAOD+hD,EAZA,GCAAC,GAAA,WAKA,SAAAA,KAOA,OAJCA,EAAA/pD,UAAAC,OAAA,WACC,OAAO,IAAImnD,GAAmB,yBAJ/Br/C,EAAAA,aAODgiD,EAZA,GCAAC,GAAA,WAIA,SAAAA,KAOA,OAJCA,EAAAhqD,UAAAC,OAAA,WACC,OAAO,IAAIgoD,wBAJZlgD,EAAAA,aAODiiD,EAXA,GCAAC,GAAA,WAmBC,SAAAA,EAA6BC,EACTC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GARS5qD,KAAAoqD,uBAAAA,EACTpqD,KAAAqqD,qBAAAA,EACArqD,KAAAsqD,0BAAAA,EACAtqD,KAAAuqD,yBAAAA,EACAvqD,KAAAwqD,0BAAAA,EACAxqD,KAAAyqD,qBAAAA,EACAzqD,KAAA0qD,qBAAAA,EACA1qD,KAAA2qD,uBAAAA,EACA3qD,KAAA4qD,uBAAAA,EA+BrB,OA5BCT,EAAAjqD,UAAAC,OAAA,SAAOqO,OAEA9D,EAAS1K,KAAKoqD,uBAAuB/mB,gBAC1Cp6B,EAASjJ,KAAKqqD,qBAAqBhnB,gBACnCrjB,EAAoBhgB,KAAKuqD,yBAAyBpqD,SAClDgiB,EAAqBniB,KAAKsqD,0BAA0BnqD,SAE/C0qD,EAAoC,IAAIpE,GAC7CqE,EAAkB9qD,KAAKyqD,qBAAqBtqD,QAAO,GACnD4qD,EAAiB/qD,KAAK2qD,uBAAuBxqD,SAC7C4oD,EAAqB/oD,KAAKwqD,0BAA0BrqD,OAAOqO,GAC3D6R,EAASrgB,KAAK4qD,uBAAuBzqD,SACrC+oD,EAAgBlpD,KAAK0qD,qBAAqBvqD,SAE3C,OAAO,IAAI0oD,GAAmBr6C,EAC7B9D,EACAyX,EACAlZ,EACA+W,EACA+oC,EACA8B,EACAC,EACA5B,EACA6B,EACA1qC,wBAtCFpY,EAAAA,sDAdQm7B,UACAsc,UASAuK,UARApJ,UACAc,UACAuB,UAOAgH,UANAnF,UAIAiF,MA+CTG,EA1DA,sBCcC,SAAAa,EAA6BC,EACTC,EACjB7uB,GAFH,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMqoC,GACLlsB,GACAkgB,IAAqBr8B,YALM+F,EAAAklD,6BAAAA,EACTllD,EAAAmlD,0BAAAA,IAgBrB,OAnBiDp/C,EAAAA,EAAAA,GAUhDk/C,EAAA9qD,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ/tB,YAEtB+E,EAAYvT,KAAKkrD,0BAA0B/qD,OAAOic,GAExDpc,KAAKirD,6BAA6B9gC,KAAK5W,wBAjBxCtL,EAAAA,sDANQy0C,UACAyN,UAHgB1tB,EAAAA,wBA4BzBuuB,GAnBiDtuB,EAAAA,mCCAhD,SAAAyuB,EAA6BF,EAChB5uB,GADb,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMsoC,KAAgCtoC,YAFV+F,EAAAklD,6BAAAA,EAChBllD,EAAAs2B,qBAAAA,IAoBd,OAvB4DvwB,EAAAA,EAAAA,GAO3Dq/C,EAAAjrD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3B7I,EAAU42B,EAAQ52B,QAEb4N,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE1C+E,EAAUiN,uBAElBqM,WAAWlnB,GAErB3F,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAIrhB,GAA8B9N,yBArBrEvG,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA8BzB0uB,GAvB4DzuB,EAAAA,mCCE3D,SAAA0uB,EAA6BH,EAChB5uB,GADb,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMuoC,KAAyBvoC,YAFH+F,EAAAklD,6BAAAA,EAChBllD,EAAAs2B,qBAAAA,IAkBd,OArBqDvwB,EAAAA,EAAAA,GAOpDs/C,EAAAlrD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3B0S,EAAWqb,EAAQrb,SAEd3N,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUq2B,kBAAkB1oB,GAE5BlhB,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI0f,GAAuB7uC,yBAnB9DvG,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA4BzB2uB,GArBqD1uB,EAAAA,mCCIpD,SAAA2uB,EAA6BJ,EACTC,EACT7uB,GAFX,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMgpC,KAAkBhpC,YAHI+F,EAAAklD,6BAAAA,EACTllD,EAAAmlD,0BAAAA,EACTnlD,EAAAs2B,qBAAAA,IAmBZ,OAvB8CvwB,EAAAA,EAAAA,GAQ7Cu/C,EAAAnrD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3BmmB,EAAgB4H,EAAQ5H,cACxBzrB,EAAUqzB,EAAQrzB,QAEbqK,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEtD0xB,EAAS3sB,EAAUm2C,aAAaxgD,GAEtClJ,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAIsC,GAAkBzxB,EAAammB,EAAezrB,EAASg3B,yBArB9Fj4B,EAAAA,sDANQy0C,UACAyN,UAHgB1tB,EAAAA,wBAgCzB4uB,GAvB8C3uB,EAAAA,mCCG7C,SAAA4uB,EAA6BL,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM2oC,KAAkB3oC,YAFI+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IA+BZ,OAlC8CvwB,EAAAA,EAAAA,GAO7Cw/C,EAAAprD,UAAAo8B,OAAA,SAAOC,OAEAngB,EAAcmgB,EAAQ/tB,YAC3BmmB,EAAgB4H,EAAQhK,mBACxB/E,EAAU+O,EAAQ9O,aAEbla,EAAYvT,KAAKirD,6BAA6B1nC,QAAQnH,GAEtDsqC,EAAUnzC,EAAUu2B,WAAWtc,GAErCxtB,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKurD,iBAAiBnvC,EAAauY,EAAenH,EAASk5B,IAG5D4E,EAAAprD,UAAAqrD,iBAAA,SAAiBnvC,EAA0BuY,EAA8BnH,EAAkBk5B,OAEpFjnB,EAAainB,EAAQ1/C,KAAG,SAAE8/C,GAC/B,MAAO,CACN7uB,UAAW6uB,EAAO1B,eAClB53B,QAASs5B,EAAOh6B,WAAWtZ,YAI7BxT,KAAKq8B,qBAAqBsB,QAAQ,IAAI6B,GAAiBpjB,EAAauY,EAAe8K,yBAhCpFx3B,EAAAA,sDARQy0C,UAD6BjgB,EAAAA,wBA4CtC6uB,GAlC8C5uB,EAAAA,gBCX9C,IAAA8uB,GAAA,SAAA3/C,GAEC,SAAA2/C,EAAYpvC,UACXvQ,EAAAjL,KAAAZ,KAAMoc,EAAa,oBAAkBpc,KAGvC,OANqC8L,EAAAA,EAAAA,GAMrC0/C,EANA,CAAqCnvC,EAAAA,4BCUpC,SAAAovC,EAA6BR,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMwoC,KAAkBxoC,YAFI+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAkBZ,OArB8CvwB,EAAAA,EAAAA,GAO7C2/C,EAAAvrD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3Bi6B,EAAgBlM,EAAQmM,mBAEnBn1B,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUs2B,iBAAiBpB,GAE3BzoC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI6tB,GAAgBh9C,yBAnBvDvG,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA4BzBgvB,GArB8C/uB,EAAAA,gBCR9C,IAAAgvB,GAAA,SAAA7/C,GAEC,SAAA6/C,EAAYtvC,EACQzW,GADpB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,kCAAgCpc,YADhC+F,EAAAJ,QAAAA,IAQrB,OAXmDmG,EAAAA,EAAAA,GAOlD4/C,EAAAxrD,UAAAyrD,WAAA,WACC,OAAO3rD,KAAK2F,SAGd+lD,EAXA,CAAmDrvC,EAAAA,gCCWlD,SAAAuvC,EAA6BX,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMqnC,KAAgCrnC,YAFV+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAkBZ,OArB4DvwB,EAAAA,EAAAA,GAO3D8/C,EAAA1rD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3B84B,EAAe/K,EAAQzD,YAElBvlB,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUy2B,gBAAgB1C,GAE1BtnC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI+tB,GAA8Bl9C,EAAa84B,EAAa3hC,+BAnB/FsC,EAAAA,sDALQy0C,UAFgBjgB,EAAAA,wBA6BzBmvB,GArB4DlvB,EAAAA,gBCT5D,IAAAmvB,GAAA,SAAAhgD,GAEC,SAAAggD,EAAYzvC,EACQzW,GADpB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,qCAAmCpc,YADnC+F,EAAAJ,QAAAA,IAQrB,OAXsDmG,EAAAA,EAAAA,GAOrD+/C,EAAA3rD,UAAAyrD,WAAA,WACC,OAAO3rD,KAAK2F,SAGdkmD,EAXA,CAAsDxvC,EAAAA,gCCUrD,SAAAyvC,EAA6Bb,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM8oC,KAAmC9oC,YAFb+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAkBZ,OArB+DvwB,EAAAA,EAAAA,GAO9DggD,EAAA5rD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3Bu9C,EAAkBxvB,EAAQzD,YAErBvlB,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAU42B,mBAAmB4hB,GAE7B/rD,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAIkuB,GAAiCr9C,EAAau9C,EAAgBpmD,+BAnBrGsC,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA4BzBqvB,GArB+DpvB,EAAAA,gBCP/D,IAAAsvB,GAAA,SAAAngD,GAEC,SAAAmgD,EAAY5vC,EACQzW,GADpB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,uCAAqCpc,YADrC+F,EAAAJ,QAAAA,IAQrB,OAXwDmG,EAAAA,EAAAA,GAOvDkgD,EAAA9rD,UAAAyrD,WAAA,WACC,OAAO3rD,KAAK2F,SAGdqmD,EAXA,CAAwD3vC,EAAAA,gCCUvD,SAAA4vC,EAA6BhB,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM4oC,KAAqC5oC,YAFf+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAkBZ,OArBiEvwB,EAAAA,EAAAA,GAOhEmgD,EAAA/rD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3Bq6B,EAAqBtM,EAAQzD,YAExBvlB,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAU02B,sBAAsBpB,GAEhC7oC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAIquB,GAAmCx9C,EAAaq6B,EAAmBljC,+BAnB1GsC,EAAAA,sDALQy0C,UAFgBjgB,EAAAA,wBA6BzBwvB,GArBiEvvB,EAAAA,mCCGhE,SAAAwvB,EAA6BjB,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMunC,KAA6BvnC,YAFP+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAoBZ,OAvByDvwB,EAAAA,EAAAA,GAOxDogD,EAAAhsD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3Bgf,EAAmB+O,EAAQ/O,QAC3Bqa,EAA0BtL,EAAQiL,iBAClCC,EAAclL,EAAQkL,YAEjBl0B,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUo2C,aAAan8B,EAASqa,EAAiBJ,GAEjDznC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI6f,GAA4BhvC,yBArBnEvG,EAAAA,sDANQy0C,UAFgBjgB,EAAAA,wBAgCzByvB,GAvByDxvB,EAAAA,gBCNzD,IAAAyvB,GAAA,SAAAtgD,GAEC,SAAAsgD,EAAY39C,EACQwiC,GADpB,IAAAjrC,EAEC8F,EAAAjL,KAAAZ,KAAMwO,EAAa,sCAAoCxO,YADpC+F,EAAAirC,OAAAA,IAQrB,OAXuDllC,EAAAA,EAAAA,GAOtDqgD,EAAAjsD,UAAAghD,gBAAA,WACC,OAAOlhD,KAAKgxC,QAGdmb,EAXA,CAAuD9vC,EAAAA,aCFvD,IAAA+vC,GAAA,SAAAvgD,GAEC,SAAAugD,EAAYhwC,EACQmI,GADpB,IAAAxe,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,sCAAoCpc,YADpC+F,EAAAwe,cAAAA,IAOrB,OAVuDzY,EAAAA,EAAAA,GAOtDsgD,EAAAlsD,UAAA0oD,iBAAA,WACC,OAAO5oD,KAAKukB,eAEd6nC,EAVA,CAAuD/vC,EAAAA,aCJvD,IAAAgwC,GAAA,WAiBC,SAAAA,EAAoBhwB,GAAAr8B,KAAAq8B,qBAAAA,EAsDrB,OAnDCgwB,EAAAnsD,UAAAy9B,QAAA,SAAQH,GAAR,IAAAz3B,EAAA/F,KAECw9B,EAAOx3B,SAAO,SAAEsd,GACfvd,EAAKumD,aAAahpC,OAIZ+oC,EAAAnsD,UAAAosD,aAAR,SAAqBhpC,GAEpB,GAAwB,yCAApBA,EAAM4Z,UAAsD,KAEzDqvB,EAAoC,EAEpCC,EAAc,IAAIlP,GAAeiP,EAAqCpvB,iBAAkBovB,EAAqChP,aAEnIv9C,KAAKq8B,qBAAqBsB,QAAQ6uB,GAGnC,GAAwB,4CAApBlpC,EAAM4Z,UAAyD,KAE5DuvB,EAAuC,EAEvCD,EAAc,IAAI5a,GACvB6a,EAAwCtvB,iBACxCsvB,EAAwC1a,gBACxC0a,EAAwCza,gBAGzChyC,KAAKq8B,qBAAqBsB,QAAQ6uB,GAGnC,GAAwB,+CAApBlpC,EAAM4Z,UAA4D,KAE/DwvB,EAA0C,EAE1CF,EAAc,IAAIL,GAAkCO,EAA2CvvB,iBAAkBuvB,EAA2CxL,mBAElKlhD,KAAKq8B,qBAAqBsB,QAAQ6uB,GAInC,GAAwB,+CAApBlpC,EAAM4Z,UAA4D,KAE/DyvB,EAA0C,EAE1CH,EAAc,IAAIJ,GAAkCO,EAA2CxvB,iBAAkBwvB,EAA2C/D,oBAElK5oD,KAAKq8B,qBAAqBsB,QAAQ6uB,yBArDpCvkD,EAAAA,sDAZwBw0B,EAAAA,wBAqEzB4vB,EAvEA,GCKA,IAAAO,GAAA,SAAA/gD,GAEC,SAAA+gD,EAAYxwC,EACOzW,GADnB,IAAAI,EAEC8F,EAAAjL,KAAAZ,KAAMoc,EAAa,wCAAsCpc,YADvC+F,EAAAJ,QAAAA,IAIpB,OAPyDmG,EAAAA,EAAAA,GAOzD8gD,EAPA,CAAyDvwC,EAAAA,gCCSxD,SAAAwwC,EAA6B5B,EACTC,EACA4B,EACTzwB,GAHX,IAAAt2B,EAIC8F,EAAAjL,KAAAZ,KAAMsuC,KAAsCtuC,YAJhB+F,EAAAklD,6BAAAA,EACTllD,EAAAmlD,0BAAAA,EACAnlD,EAAA+mD,oCAAAA,EACT/mD,EAAAs2B,qBAAAA,IAmBZ,OAxBkEvwB,EAAAA,EAAAA,GASjE+gD,EAAA3sD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3B7I,EAAU42B,EAAQ52B,QAEb4N,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEtDwuB,EAAkBzpB,EAAUi7B,sBAAsB7oC,GAExD3F,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAIivB,GAAoCp+C,EAAa7I,IACvF3F,KAAK8sD,oCAAoCnvB,QAAQX,wBAtBlD/0B,EAAAA,sDAPQy0C,UACAyN,UACAkC,UAHgB5vB,EAAAA,wBAiCzBowB,GAxBkEnwB,EAAAA,gBCLlE,kBAAA,SAAAqwB,KAuFA,OA3ECA,EAAA7sD,UAAAqa,UAAA,SAAU2lB,EAAsB8H,GAAhC,IAAAjiC,EAAA/F,KAEOgtD,EAAiB9sB,EAAO5sB,QAAM,SAAEjM,GAAiB,OAAAtB,EAAKknD,YAAY5lD,EAAM2lB,kBAE9E,IAAKggC,GAA4C,IAA1BA,EAAersD,QAAiC,IAAjBqnC,EAAMrnC,OAC3D,OAAO,SAGJ8/C,EAAQ,IAAIryC,IACf8+C,EAAW,IAAI9+C,IAGhB4+C,EAAehnD,SAAO,SAAEqB,OAEjBpG,EAAMoG,EAAMq8C,SAElBjD,EAAMhyC,IAAIxN,EAAK,GACfisD,EAASz+C,IAAIxN,EAAK,IAAIwnD,KAEtB1iD,EAAKonD,QAAQ9lD,MAId2gC,EAAMhiC,SAAO,SAAE+E,GAEdiiD,EAAehnD,SAAO,SAAEqB,OAEjBpG,EAAMoG,EAAMq8C,SACjBvhD,EAAQkF,EAAM+mB,SAASrjB,GAExB,GAAc,OAAV5I,QAA4BuD,IAAVvD,GAAiC,KAAVA,EAAc,CAE1D,GAAIkF,EAAMs8C,cAAcx9C,EAAgBxB,OAAQ,KACzCyoD,EAAgB3M,EAAM5xC,IAAI5N,GAChCw/C,EAAMhyC,IAAIxN,EAAKmsD,EAAgB,GAGhC,GAAI/lD,EAAMs8C,cAAcx9C,EAAgBvB,UACnBsoD,EAASr+C,IAAI5N,GACrBugD,IAAIr/C,GAIlB4D,EAAKsX,UAAUhW,EAAOlF,SAIxB6qD,EAAehnD,SAAO,SAAEqB,GAEvBtB,EAAKsnD,cAAchmD,EAAO2gC,UAIvB6b,EAAe,IAAIz1C,IAmBvB,OAjBA4+C,EAAehnD,SAAO,SAAEqB,OAEjBpG,EAAMoG,EAAMmM,QAAQA,QAEtBytC,EAAmBl7C,EAAKunD,yBAAyBjmD,GAEjDA,EAAMs8C,cAAcx9C,EAAgBxB,QACvCs8C,EAAiBsM,SAAS9M,EAAM5xC,IAAI5N,IAGjCoG,EAAMs8C,cAAcx9C,EAAgBvB,WACvCq8C,EAAiBuM,YAAaN,EAASr+C,IAAI5N,GAAMqX,MAGlDurC,EAAap1C,IAAIxN,EAAKggD,MAGhB4C,GAGTkJ,KC9FA,kBAAA,SAAAU,KAaA,OARCA,EAAAvtD,UAAAqtD,SAAA,SAASprD,GACRnC,KAAKygD,MAAQt+C,GAGdsrD,EAAAvtD,UAAAstD,YAAA,SAAYrrD,GACXnC,KAAKktD,SAAW/qD,GAGlBsrD,KCXA,IAAAC,GAAA,SAAA7hD,GAMC,SAAA6hD,EAAYC,EACTC,GADH,IAAA7nD,EAEC8F,EAAAjL,KAAAZ,OAAOA,YACP+F,EAAK4nD,OAASA,EACd5nD,EAAK6nD,MAAQA,IAGf,OAb6C9hD,EAAAA,EAAAA,GAa7C4hD,EAbA,CAA6CD,uBCc5C,SAAAI,IAAA,IAAA9nD,EACC8F,EAAAjL,KAAAZ,OAAOA,YAJS+F,EAAA4nD,OAAS,IAAIv/C,IACbrI,EAAA6nD,MAAQ,IAAIx/C,MAuD9B,OA1DkDtC,EAAAA,EAAAA,GASjD+hD,EAAA3tD,UAAA+sD,YAAA,SAAYzkC,GACX,OAAOA,IAAa/jB,EAAS1B,SAG9B8qD,EAAA3tD,UAAAitD,QAAA,SAAQ9lD,OAEDpG,EAAMoG,EAAMq8C,SAEdr8C,EAAMs8C,cAAcx9C,EAAgBjB,SACvClF,KAAK2tD,OAAOl/C,IAAIxN,EAAK,GAGlBoG,EAAMs8C,cAAcx9C,EAAgBhB,QACvCnF,KAAK4tD,MAAMn/C,IAAIxN,EAAK,IAItB4sD,EAAA3tD,UAAAmtD,cAAA,SAAchmD,EAAc2gC,KAG5B6lB,EAAA3tD,UAAAmd,UAAA,SAAUhW,EAAclF,OAEjB2rD,EAAe3rD,EACpBlB,EAAMoG,EAAMq8C,SACZqK,EAAiB/tD,KAAK2tD,OAAO9+C,IAAI5N,GACjC+sD,EAAgBhuD,KAAK4tD,MAAM/+C,IAAI5N,GAE5B6sD,EACCzmD,EAAMs8C,cAAcx9C,EAAgBjB,SACvClF,KAAK2tD,OAAOl/C,IAAIxN,EAAK8sD,EAAiB,GAGnC1mD,EAAMs8C,cAAcx9C,EAAgBhB,QACvCnF,KAAK4tD,MAAMn/C,IAAIxN,EAAK+sD,EAAgB,IAMvCH,EAAA3tD,UAAAotD,yBAAA,SAAyBjmD,OAElBpG,EAAMoG,EAAMq8C,SAElB,OAAO,IAAIgK,GACV1tD,KAAK2tD,OAAO9+C,IAAI5N,GAChBjB,KAAK4tD,MAAM/+C,IAAI5N,yBAvDjBgH,EAAAA,mDA2DD4lD,GA1DkDd,ICTlD,IAAAkB,GAAA,SAAApiD,GAEC,SAAAoiD,WACCpiD,EAAAjL,KAAAZ,OAAOA,KAGT,OAN0C8L,EAAAA,EAAAA,GAM1CmiD,EANA,CAA0CR,mBCSzC,SAAAS,WACCriD,EAAAjL,KAAAZ,OAAOA,KAoBT,OAvB+C8L,EAAAA,EAAAA,GAM9CoiD,EAAAhuD,UAAA+sD,YAAA,SAAYzkC,GACX,OAAOA,IAAa/jB,EAASzB,MAG9BkrD,EAAAhuD,UAAAitD,QAAA,SAAQ9lD,KAGR6mD,EAAAhuD,UAAAmtD,cAAA,SAAchmD,EAAc2gC,KAG5BkmB,EAAAhuD,UAAAmd,UAAA,SAAUhW,EAAclF,KAGxB+rD,EAAAhuD,UAAAotD,yBAAA,SAAyBjmD,GACxB,OAAO,IAAI4mD,wBArBZhmD,EAAAA,mDAwBDimD,GAvB+CnB,ICP/CoB,GAAA,SAAAtiD,GAQC,SAAAsiD,EAAYh6B,EACTi6B,EACAC,EACAC,EACAC,GAJH,IAAAxoD,EAKC8F,EAAAjL,KAAAZ,OAAOA,YACP+F,EAAKouB,IAAMpuB,EAAKyoD,sBAAsBr6B,GACtCpuB,EAAKqoD,IAAMroD,EAAKyoD,sBAAsBJ,GACtCroD,EAAKsoD,IAAMtoD,EAAKyoD,sBAAsBH,GACtCtoD,EAAKuoD,QAAUvoD,EAAKyoD,sBAAsBF,GAC1CvoD,EAAKwoD,OAASxoD,EAAKyoD,sBAAsBD,KAe3C,OAjC4CziD,EAAAA,EAAAA,GAqBnCqiD,EAAAjuD,UAAAsuD,sBAAR,SAA8BrsD,GAC7B,OAAKA,GAAmB,IAAVA,EAIA,IAAVA,EACI,GAGC,EAAQssD,QAAQ,GAPjB,MAUVN,EAjCA,CAA4CV,uBCgB3C,SAAAiB,IAAA,IAAA3oD,EACC8F,EAAAjL,KAAAZ,OAAOA,YAPS+F,EAAAouB,IAAM,IAAI/lB,IACVrI,EAAAqoD,IAAM,IAAIhgD,IACVrI,EAAAsoD,IAAM,IAAIjgD,IACVrI,EAAAuoD,QAAU,IAAIlgD,IACdrI,EAAAwoD,OAAS,IAAIngD,MA4E/B,OAlFiDtC,EAAAA,EAAAA,GAYhD4iD,EAAAxuD,UAAA+sD,YAAA,SAAYzkC,GACX,OAAOA,IAAa/jB,EAAS5B,QAG9B6rD,EAAAxuD,UAAAitD,QAAA,SAAQ9lD,OAEDpG,EAAMoG,EAAMq8C,SAElB1jD,KAAKm0B,IAAI1lB,IAAIxN,EAAK,GAClBjB,KAAKouD,IAAI3/C,IAAIxN,EAAK00B,OAAOwQ,kBACzBnmC,KAAKquD,IAAI5/C,IAAIxN,EAAK,IAGnBytD,EAAAxuD,UAAAmtD,cAAA,SAAchmD,EAAc2gC,OAErB/mC,EAAMoG,EAAMq8C,SAEdr8C,EAAMs8C,cAAcx9C,EAAgBrB,UACvC9E,KAAKsuD,QAAQ7/C,IAAIxN,EAAKjB,KAAKm0B,IAAItlB,IAAI5N,GAAO+mC,EAAMrnC,QAG7C0G,EAAMs8C,cAAcx9C,EAAgBlB,SACvCjF,KAAKuuD,OAAO9/C,IAAIxN,EAAKoG,EAAM+mB,SAAS4Z,EAAMjtB,KAAKslC,MAAMrY,EAAMrnC,OAAS,OAItE+tD,EAAAxuD,UAAAmd,UAAA,SAAUhW,EAAclF,OAEjBwsD,GAAexsD,EACpBlB,EAAMoG,EAAMq8C,SACZkL,EAAc5uD,KAAKm0B,IAAItlB,IAAI5N,GAC3B4tD,EAAc7uD,KAAKouD,IAAIv/C,IAAI5N,GAC3B6tD,EAAc9uD,KAAKquD,IAAIx/C,IAAI5N,IAExBoG,EAAMs8C,cAAcx9C,EAAgBtB,MAAQwC,EAAMs8C,cAAcx9C,EAAgBrB,WACnF9E,KAAKm0B,IAAI1lB,IAAIxN,EAAK2tD,EAAcD,GAG7BtnD,EAAMs8C,cAAcx9C,EAAgBpB,MACnC8pD,EAAcF,GACjB3uD,KAAKouD,IAAI3/C,IAAIxN,EAAK0tD,GAIhBtnD,EAAMs8C,cAAcx9C,EAAgBnB,MACnC8pD,EAAcH,GACjB3uD,KAAKquD,IAAI5/C,IAAIxN,EAAK0tD,IAMrBD,EAAAxuD,UAAAotD,yBAAA,SAAyBjmD,OAElBpG,EAAMoG,EAAMq8C,SACjBvvB,EAAM9sB,EAAMs8C,cAAcx9C,EAAgBtB,KAAO7E,KAAKm0B,IAAItlB,IAAI5N,QAAOyE,EACrE0oD,EAAM/mD,EAAMs8C,cAAcx9C,EAAgBpB,KAAO/E,KAAKouD,IAAIv/C,IAAI5N,QAAOyE,EACrE2oD,EAAMhnD,EAAMs8C,cAAcx9C,EAAgBnB,KAAOhF,KAAKquD,IAAIx/C,IAAI5N,QAAOyE,EACrE4oD,EAAUjnD,EAAMs8C,cAAcx9C,EAAgBrB,SAAW9E,KAAKsuD,QAAQz/C,IAAI5N,QAAOyE,EACjF6oD,EAASlnD,EAAMs8C,cAAcx9C,EAAgBlB,QAAUjF,KAAKuuD,OAAO1/C,IAAI5N,QAAOyE,EAE/E,OAAO,IAAIyoD,GACVh6B,EACAi6B,EACAC,EACAC,EACAC,wBA/EFtmD,EAAAA,mDAmFDymD,GAlFiD3B,ICRjD,IAAAgC,GAAA,SAAAljD,GAEC,SAAAkjD,WACCljD,EAAAjL,KAAAZ,OAAOA,KAGT,OAN4C8L,EAAAA,EAAAA,GAM5CijD,EANA,CAA4CtB,mBCS3C,SAAAuB,WACCnjD,EAAAjL,KAAAZ,OAAOA,KAoBT,OAvBiD8L,EAAAA,EAAAA,GAMhDkjD,EAAA9uD,UAAA+sD,YAAA,SAAYzkC,GACX,OAAOA,IAAa/jB,EAAS3B,QAG9BksD,EAAA9uD,UAAAitD,QAAA,SAAQ9lD,KAGR2nD,EAAA9uD,UAAAmtD,cAAA,SAAchmD,EAAc2gC,KAG5BgnB,EAAA9uD,UAAAmd,UAAA,SAAUhW,EAAclF,KAGxB6sD,EAAA9uD,UAAAotD,yBAAA,SAAyBjmD,GACxB,OAAO,IAAI0nD,wBArBZ9mD,EAAAA,mDAwBD+mD,GAvBiDjC,ICPjDkC,GAAA,SAAApjD,GAEC,SAAAojD,WACCpjD,EAAAjL,KAAAZ,OAAOA,KAGT,OAN6C8L,EAAAA,EAAAA,GAM7CmjD,EANA,CAA6CxB,mBCS5C,SAAAyB,WACCrjD,EAAAjL,KAAAZ,OAAOA,KAoBT,OAvBkD8L,EAAAA,EAAAA,GAMjDojD,EAAAhvD,UAAA+sD,YAAA,SAAYzkC,GACX,OAAOA,IAAa/jB,EAAS7B,SAG9BssD,EAAAhvD,UAAAitD,QAAA,SAAQ9lD,KAGR6nD,EAAAhvD,UAAAmtD,cAAA,SAAchmD,EAAc2gC,KAG5BknB,EAAAhvD,UAAAmd,UAAA,SAAUhW,EAAclF,KAGxB+sD,EAAAhvD,UAAAotD,yBAAA,SAAyBjmD,GACxB,OAAO,IAAI4nD,wBArBZhnD,EAAAA,mDAwBDinD,GAvBkDnC,ICClD,SAAgBoC,GAA6BC,GAC5C,MAAO,CACN1hD,QAASqzC,GACT9tB,SAAUm8B,EACVpuB,OAAO,GAIT,IAAaquB,GAAuB,CACnCF,GAA6BtB,IAC7BsB,GAA6BjB,IAC7BiB,GAA6BT,IAC7BS,GAA6BH,IAC7BG,GAA6BD,IAE7BvN,mBCfA,SAAA2N,EAAoBxZ,GAApB,IAAA/vC,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAA+vC,0BAAAA,IAYrB,OAd0DhqC,EAAAA,EAAAA,GAMzDwjD,EAAApvD,UAAAo8B,OAAA,SAAOhZ,GAEFA,aAAiBooC,IACpB1rD,KAAK81C,0BAA0BjpB,WAAWvJ,EAAMqoC,aAAcroC,EAAM6Z,uCAVtEl1B,EAAAA,sDAJQutC,MAmBT8Z,GAd0DtvB,EAAAA,uCCIzD,SAAAuvB,EAAoBtU,GAApB,IAAAl1C,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAAk1C,6BAAAA,IAYrB,OAd6DnvC,EAAAA,EAAAA,GAM5DyjD,EAAArvD,UAAAo8B,OAAA,SAAOhZ,GAEFA,aAAiBuoC,IACpB7rD,KAAKi7C,6BAA6BpuB,WAAWvJ,EAAMqoC,aAAcroC,EAAM6Z,uCAVzEl1B,EAAAA,sDALQ6yC,MAoBTyU,GAd6DvvB,EAAAA,uCCC5D,SAAAwvB,EAAoBzZ,GAApB,IAAAhwC,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAAgwC,+BAAAA,IAYrB,OAd+DjqC,EAAAA,EAAAA,GAM9D0jD,EAAAtvD,UAAAo8B,OAAA,SAAOhZ,GAEFA,aAAiB0oC,IACpBhsD,KAAK+1C,+BAA+BlpB,WAAWvJ,EAAMqoC,aAAcroC,EAAM6Z,uCAV3El1B,EAAAA,sDAJQ0tC,MAmBT6Z,GAd+DxvB,EAAAA,oBCL/D,IAAAyvB,GAAA,WAEC,SAAAA,EAA6B57C,EACT2U,GADSxoB,KAAA6T,GAAAA,EACT7T,KAAAwoB,SAAAA,EAWrB,OARCinC,EAAAvvD,UAAAsT,MAAA,WACC,OAAOxT,KAAK6T,GAAGL,SAGhBi8C,EAAAvvD,UAAA8sB,YAAA,WACC,OAAOhtB,KAAKwoB,UAGdinC,EAdA,GCJA,IAAAC,GAAA,WAMA,SAAAA,KAaA,OAVCA,EAAAxvD,UAAAqF,QAAA,SAAQ26B,GAAR,IAAAn6B,EAAA/F,KACC,OAAOkgC,EAAOl5B,KAAG,SAAEK,GAClB,OAAOtB,EAAK4pD,WAAWtoD,OAIjBqoD,EAAAxvD,UAAAyvD,WAAR,SAAmBtoD,GAElB,OAAO,IAAIooD,GAAsBpoD,EAAMmM,QAASnM,EAAM2lB,oCAXvD/kB,EAAAA,aAaDynD,EAnBA,kBCYC,SAAAE,EAAoBC,EACTC,GADX,IAAA/pD,EAEC8F,EAAAjL,KAAAZ,OAAOA,YAFY+F,EAAA8pD,0BAAAA,EACT9pD,EAAA+pD,0BAAAA,IAeZ,OAlBuDhkD,EAAAA,EAAAA,GAOtD8jD,EAAA1vD,UAAAo8B,OAAA,SAAOhZ,GAEN,GAAIA,aAAiB2c,GAAmB,KAEjCC,EAASlgC,KAAK8vD,0BAA0BvqD,QAAQ+d,EAAM6c,aAE5DngC,KAAK6vD,0BAA0B3tD,KAAKohB,EAAM6Z,iBAAkB+C,yBAd9Dj4B,EAAAA,sDALQuiC,UACAklB,MAuBTE,GAlBuD5vB,EAAAA,oBCVvD,IAAA+vB,GAAA,WAaC,SAAAA,EAA6B7sC,GAAAljB,KAAAkjB,eAAAA,EAW9B,OARC6sC,EAAA7vD,UAAA8vD,sBAAA,SAAsBxhD,GAErB,OAAOxO,KAAKkjB,eACN7P,KACAC,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,aAAiB6oC,MAChD74C,EAAAA,QAAM,SAAEgQ,GAAuB,OAAAA,EAAMlH,YAAY3I,aAAejF,EAAYiF,oCAXnFxL,EAAAA,sDANqB6b,EAAAA,kBAoBtBisC,EAxBA,sBCeC,SAAAE,EAAoBhF,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMqU,GACL8oC,GACA9gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAmBrB,OArB6Cn/C,EAAAA,EAAAA,GAS5CmkD,EAAA/vD,UAAAo8B,OAAA,SAAOC,OAEAn0B,EAAem0B,EAAe,QACnC/tB,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUk2C,aAAarhD,GAEvBpI,KAAKirD,6BAA6B9gC,KAAK5W,wBAnBxCtL,EAAAA,sDAPQy0C,UAFgBjgB,EAAAA,wBA+BzBwzB,GArB6CvzB,EAAAA,mCCD5C,SAAAwzB,EAAoBjF,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMyU,GACL08B,GACA9U,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAkBrB,OApB4Cn/C,EAAAA,EAAAA,GAS3CokD,EAAAhwD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAEtB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUyB,WAEVhV,KAAKirD,6BAA6B9gC,KAAK5W,wBAlBxCtL,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA2BzByzB,GApB4CxzB,EAAAA,mCCI3C,SAAAyzB,EAAoBlF,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM0U,GACL08B,GACA/U,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAkBrB,OApB4Cn/C,EAAAA,EAAAA,GAS3CqkD,EAAAjwD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAEtB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAU0B,WAEVjV,KAAKirD,6BAA6B9gC,KAAK5W,wBAlBxCtL,EAAAA,sDANQy0C,UAFgBjgB,EAAAA,wBA6BzB0zB,GApB4CzzB,EAAAA,mCCC3C,SAAA0zB,EAAoBnF,EACP5uB,GADb,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMwU,KAAsBxU,YAFT+F,EAAAklD,6BAAAA,EACPllD,EAAAs2B,qBAAAA,IA8Dd,OAjEkDvwB,EAAAA,EAAAA,GAOjDskD,EAAAlwD,UAAAo8B,OAAA,SAAOC,OAEA8zB,EAAc9zB,EAAgB,SACnC/tB,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEtDwuB,EAAkBzpB,EAAUwB,eAAes7C,GAWjDrwD,KAAKirD,6BAA6B9gC,KAAK5W,GAGvC,EAAyBvN,SAAO,SAAEsd,GACjC,EAAelH,YAAc5N,KAG9BxO,KAAKg+B,uBAAuBhB,EAAiBT,IAGtC6zB,EAAAlwD,UAAA89B,uBAAR,SAA+BR,EAAuCjB,eAErE,IAAkB,IAAA+zB,EAAAn6B,EAAAqH,GAAM+yB,EAAAD,EAAApuD,QAAAquD,EAAAnuD,KAAAmuD,EAAAD,EAAApuD,OAAE,CAArB,IAAIsuD,EAAKD,EAAApuD,MACbnC,KAAKywD,sBAAsBD,EAAOj0B,uGAI5B6zB,EAAAlwD,UAAAuwD,sBAAR,SAA8BntC,EAAuBiZ,GAEpD,OAAQjZ,EAAM4Z,WACb,IAAK,gCAEEwzB,EAAmB,IAAIrf,GAAiB9U,EAAQY,kBAEtDn9B,KAAKq8B,qBAAqBsB,QAAQ+yB,GAElC,MAED,IAAK,oCAEEC,EAAuB,IAAIrf,GAAqB/U,EAAQY,kBAE9Dn9B,KAAKq8B,qBAAqBsB,QAAQgzB,yBA1DrC1oD,EAAAA,sDANQy0C,UADgCjgB,EAAAA,wBAyEzC2zB,GAjEkD1zB,EAAAA,oBCgCrCk0B,GAAeluD,EA5BH,CACxBiS,GACA,CACCjH,QAASqzB,EAAAA,iBACT9N,SAAUg9B,GACVjvB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUi9B,GACVlvB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUk9B,GACVnvB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUm9B,GACVpvB,OAAO,IAIa,CACrB/tB,IAKgB,CAEhBmwB,GACAlkB,GAEA/J,GACAnB,GACAu9B,oBCtCA,SAAAsf,EAAoB5F,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM+jC,GACLgZ,GACA1gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtByDn/C,EAAAA,EAAAA,GASxD+kD,EAAA3wD,UAAAo8B,OAAA,SAAOC,OAEA52B,EAAU42B,EAAQ52B,QACvB6I,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbwnC,gBAAgBpiD,GAEvB3F,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDANQy0C,UAFgBjgB,EAAAA,wBA+BzBo0B,GAtByDn0B,EAAAA,mCCCxD,SAAAo0B,EAAoB7F,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMgkC,GACL8Y,GACAzgB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtB2Dn/C,EAAAA,EAAAA,GAS1DglD,EAAA5wD,UAAAo8B,OAAA,SAAOC,OAEA52B,EAAU42B,EAAQ52B,QACvB6I,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbynC,kBAAkBriD,GAEzB3F,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDALQy0C,UAFgBjgB,EAAAA,wBA8BzBq0B,GAtB2Dp0B,EAAAA,mCCA1D,SAAAq0B,EAAoB9F,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMikC,GACL4Y,GACAxgB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtBkDn/C,EAAAA,EAAAA,GASjDilD,EAAA7wD,UAAAo8B,OAAA,SAAOC,OAEA90B,EAAQ80B,EAAQ90B,MACrB+G,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbmkB,SAASj9B,GAEhBzH,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDAJQy0C,UADgBjgB,EAAAA,wBA4BzBs0B,GAtBkDr0B,EAAAA,mCCGjD,SAAAs0B,EAAoB/F,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMqkC,GACL4Y,GACA5gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtB4Dn/C,EAAAA,EAAAA,GAS3DklD,EAAA9wD,UAAAo8B,OAAA,SAAOC,OAEA52B,EAAU42B,EAAQ52B,QACvB6I,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbmnC,gBAAgB/hD,GAEvB3F,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA6BzBu0B,GAtB4Dt0B,EAAAA,mCCG3D,SAAAu0B,EAAoBhG,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMokC,GACL4Y,GACA3gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtByDn/C,EAAAA,EAAAA,GASxDmlD,EAAA/wD,UAAAo8B,OAAA,SAAOC,OAEA52B,EAAU42B,EAAQ52B,QACvB6I,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbknC,aAAa9hD,GAEpB3F,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA6BzBw0B,GAtByDv0B,EAAAA,mCCGxD,SAAAw0B,EAAoBjG,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMkkC,GACLgZ,GACA7gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtBkDn/C,EAAAA,EAAAA,GASjDolD,EAAAhxD,UAAAo8B,OAAA,SAAOC,OAEA4H,EAAW5H,EAAQ4H,SACxB31B,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAUgN,YAEbokB,eAAeR,GAEtBnkC,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDANQy0C,UAFgBjgB,EAAAA,wBA+BzBy0B,GAtBkDx0B,EAAAA,mCCAjD,SAAAy0B,EAAoBlG,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM8jC,GACL8Y,GACAvgB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAmBrB,OArB6Cn/C,EAAAA,EAAAA,GAS5CqlD,EAAAjxD,UAAAo8B,OAAA,SAAOC,OAEA3e,EAAS2e,EAAQ3e,OACtBpP,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D+E,EAAUmyB,UAAU9nB,GAEpB5d,KAAKirD,6BAA6B9gC,KAAK5W,wBAnBxCtL,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBA4BzB00B,GArB6Cz0B,EAAAA,oBCmDhC00B,GAAe1uD,EA5CH,CACxB4hC,GACA,CACC52B,QAASqzB,EAAAA,iBACT9N,SAAUk+B,GACVnwB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAU49B,GACV7vB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAU69B,GACV9vB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAU89B,GACV/vB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAU+9B,GACVhwB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUg+B,GACVjwB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUi+B,GACVlwB,OAAO,GAERgpB,IAGqB,CACrBllB,IAKgB,CAEhBhmB,GAEAymB,GACAR,oBCtDA,SAAAssB,EAAoBpG,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMqmC,GACL+W,GACA/gB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAmBrB,OArBgDn/C,EAAAA,EAAAA,GAS/CulD,EAAAnxD,UAAAo8B,OAAA,SAAOC,GAEeA,EAAe,YACnC/tB,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAI5DxO,KAAKirD,6BAA6B9gC,KAAK5W,wBAnBxCtL,EAAAA,sDANQy0C,UAFgBjgB,EAAAA,wBA8BzB40B,GArBgD30B,EAAAA,mCCA/C,SAAA40B,EAAoBrG,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMsmC,GACL4L,GACA7V,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IA0BrB,OA5BqDn/C,EAAAA,EAAAA,GASpDwlD,EAAApxD,UAAAo8B,OAAA,SAAOC,OAEAgK,EAAchK,EAAQgK,YAC3B/3B,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEvD+E,GAKaA,EAAU+M,eAElBinC,UAAUhhB,GAEpBvmC,KAAKirD,6BAA6B9gC,KAAK5W,IARtCg+C,QAAQ9uD,MAAM,sDAAsD+L,wBAlBtEvG,EAAAA,sDALQy0C,UADgBjgB,EAAAA,wBAmCzB60B,GA5BqD50B,EAAAA,oBCqBxC80B,GAAkB9uD,EAnBN,CACxB8jC,GACA,CACC94B,QAASqzB,EAAAA,iBACT9N,SAAUo+B,GACVrwB,OAAO,GAER,CACCtzB,QAASqzB,EAAAA,iBACT9N,SAAUq+B,GACVtwB,OAAO,GAERipB,IAGqB,CACrBljB,IAKgB,CAEhBoL,GAEA/0B,GAEAupB,GACAM,oBC3BA,SAAAwqB,EAAoBxG,EACT6B,GADX,IAAA/mD,EAEC8F,EAAAjL,KAAAZ,KAAM+nC,KAAiB/nC,YAFJ+F,EAAAklD,6BAAAA,EACTllD,EAAA+mD,oCAAAA,IAuBZ,OA1B6ChhD,EAAAA,EAAAA,GAO5C2lD,EAAAvxD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3Bw5B,EAAQzL,EAAa,MAEhBhpB,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE5D,GAAK+E,EAAL,KAKMypB,EAAkBzpB,EAAUyC,UAAUgyB,GAE5ChoC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAK8sD,oCAAoCnvB,QAAQX,QARhDu0B,QAAQ9uD,MAAM,sDAAsD+L,wBAhBtEvG,EAAAA,sDALQy0C,UACA2P,MA+BToF,GA1B6C/0B,EAAAA,mCCE5C,SAAAg1B,EAAoBzG,EACT5uB,EACAywB,GAFX,IAAA/mD,EAGC8F,EAAAjL,KAAAZ,KAAMioC,KAA+BjoC,YAHlB+F,EAAAklD,6BAAAA,EACTllD,EAAAs2B,qBAAAA,EACAt2B,EAAA+mD,oCAAAA,IAkBZ,OAtB2DhhD,EAAAA,EAAAA,GAQ1D4lD,EAAAxxD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQY,iBAC3B3J,EAAS+I,EAAQjB,YAEZ/nB,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEtDwuB,EAAkBzpB,EAAU60B,SAAS5U,GAE3CxzB,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAK8sD,oCAAoCnvB,QAAQX,wBApBlD/0B,EAAAA,sDAJQy0C,UAHgBjgB,EAAAA,4BAIhB4vB,MA0BTqF,GAtB2Dh1B,EAAAA,mCCD1D,SAAAi1B,EAAoBl7C,GAApB,IAAA1Q,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAA0Q,gCAAAA,IAarB,OAfwD3K,EAAAA,EAAAA,GAMvD6lD,EAAAzxD,UAAAo8B,OAAA,SAAOhZ,GAEN,GAAIA,aAAiBg6B,GAAgB,KAC9BsU,EAAStuC,EAAMi6B,YAErBv9C,KAAKyW,gCAAgCT,UAAU47C,EAAQtuC,EAAM6Z,wCAZ/Dl1B,EAAAA,sDAJQ2N,MAoBT+7C,GAfwD3xB,EAAAA,oBCRxD,IAAA6xB,GAAA,WAaC,SAAAA,EAAoB3+C,GAAAlT,KAAAkT,oBAAAA,EAarB,OAVC2+C,EAAA3xD,UAAA4xD,OAAA,SAAOtjD,GAEN,OAAOxO,KAAKkT,oBACNE,YAAY5E,GACZ6E,KACAC,EAAAA,QAAM,SAAEC,GAAyB,OAAAA,EAAUC,QAAQC,aAAejF,EAAYiF,cAC9EzM,EAAAA,KAAG,SAAEuM,GAAyB,OAAAA,EAAUgN,qCAZ/CtY,EAAAA,sDANQ0L,MAsBTk+C,EA1BA,sBCaC,SAAAE,EAAoB9G,EACjB5uB,GADH,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAM8nC,GACL6U,GACAtgB,IAAqBr8B,YAJH+F,EAAAklD,6BAAAA,IAoBrB,OAtBoDn/C,EAAAA,EAAAA,GASnDimD,EAAA7xD,UAAAo8B,OAAA,SAAOC,OAEA52B,EAAU42B,EAAQ52B,QACvB6I,EAAc+tB,EAAQ/tB,YAEjB+E,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAClD+E,EAAU+D,YAEb6wB,WAAWxiC,GAElB3F,KAAKirD,6BAA6B9gC,KAAK5W,wBApBxCtL,EAAAA,sDALQy0C,UAFgBjgB,EAAAA,wBA8BzBs1B,GAtBoDr1B,EAAAA,mCCDnD,SAAAs1B,EAAoBx7C,GAApB,IAAAzQ,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAAyQ,iCAAAA,IAarB,OAfwD1K,EAAAA,EAAAA,GAMvDkmD,EAAA9xD,UAAAo8B,OAAA,SAAOhZ,GAEN,GAAIA,aAAiB8oC,GAAmC,KACjD7nC,EAAgBjB,EAAMslC,mBAE5B5oD,KAAKwW,iCAAiCH,SAASkO,EAAejB,EAAM6Z,wCAZtEl1B,EAAAA,sDAHQmO,MAmBT47C,GAfwDhyB,EAAAA,wBC4C3CiyB,GAAevvD,EAlCH,CACxBwlC,GACAwX,GACA,CACChyC,QAASqzB,EAAAA,iBACT9N,SAAU8+B,GACV/wB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUw+B,GACVzwB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUy+B,GACV1wB,OAAO,GAERqrB,IAGqB,CACrBwF,GACA,CACCnkD,QAASwzB,EAAAA,sBACTjO,SAAU0+B,GACV3wB,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAU++B,GACVhxB,OAAO,GAERprB,GACAQ,IAKgB,CAEhBmJ,GAEA2rB,GACA30B,GACA07B,oBC/CA,SAAAigB,EAA6BjH,EAClB6B,EACAzwB,GAFX,IAAAt2B,EAGC8F,EAAAjL,KAAAZ,KAAMipC,KAAgCjpC,YAHV+F,EAAAklD,6BAAAA,EAClBllD,EAAA+mD,oCAAAA,EACA/mD,EAAAs2B,qBAAAA,IAiBZ,OArB4DvwB,EAAAA,EAAAA,GAQ3DomD,EAAAhyD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3B06B,EAAS3M,EAAQ2M,OACjB31B,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEvD+E,EAAU80C,gBAAgBnf,GAE1BlpC,KAAKirD,6BAA6B9gC,KAAK5W,GACvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI8f,GAAoCjvC,EAAa06B,IACvFlpC,KAAK8sD,oCAAoCnvB,QAAQpqB,EAAUkqB,kCAnB5Dx1B,EAAAA,sDANQy0C,UAGA2P,UALgB5vB,EAAAA,wBA8BzBy1B,GArB4Dx1B,EAAAA,mCCK3D,SAAAy1B,EAA6BlH,EAClB5uB,GADX,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMmpC,KAAoBnpC,YAFE+F,EAAAklD,6BAAAA,EAClBllD,EAAAs2B,qBAAAA,IAiCZ,OApCgDvwB,EAAAA,EAAAA,GAO/CqmD,EAAAjyD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQY,iBAC3BxI,EAAgB4H,EAAQhK,mBACxB/E,EAAU+O,EAAQ9O,aAClB2b,EAAY7M,EAAQ8M,eAEf91B,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAEtDk4C,EAAUnzC,EAAUw2B,aAAavc,EAAS4b,GAEhDppC,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKurD,iBAAiB/8C,EAAammB,EAAenH,EAASk5B,IAG5DyL,EAAAjyD,UAAAqrD,iBAAA,SAAiBnvC,EAA0BuY,EAA8BnH,EAAkBk5B,OAEpFjnB,EAAainB,EAAQ1/C,KAAG,SAAE8/C,GAC/B,MAAO,CACN7uB,UAAW6uB,EAAO1B,eAClB53B,QAASs5B,EAAOh6B,WAAWtZ,YAI7BxT,KAAKq8B,qBAAqBsB,QAAQ,IAAIkC,GAAkBzjB,EAAauY,EAAe8K,yBAjCrFx3B,EAAAA,sDARQy0C,UAF6BjgB,EAAAA,wBA+CtC01B,GApCgDz1B,EAAAA,mCCD/C,SAAA01B,EAA6BnH,EAChB5uB,GADb,IAAAt2B,EAEC8F,EAAAjL,KAAAZ,KAAMspC,KAAoBtpC,YAFE+F,EAAAklD,6BAAAA,EAChBllD,EAAAs2B,qBAAAA,IAoBd,OAvBgDvwB,EAAAA,EAAAA,GAO/CsmD,EAAAlyD,UAAAo8B,OAAA,SAAOC,OAEA/tB,EAAc+tB,EAAQ/tB,YAC3BmR,EAAY4c,EAAQ5c,UAEfpM,EAAYvT,KAAKirD,6BAA6B1nC,QAAQ/U,GAE1C+E,EAAUiN,uBAElB6pB,aAAa1qB,GAEvB3f,KAAKirD,6BAA6B9gC,KAAK5W,GAEvCvT,KAAKq8B,qBAAqBsB,QAAQ,IAAI3a,GAAkBxU,yBArBzDvG,EAAAA,sDALQy0C,UAFgBjgB,EAAAA,wBA+BzB21B,GAvBgD11B,EAAAA,mCCC/C,SAAA21B,EAAoBxa,GAApB,IAAA9xC,EACC8F,EAAAjL,KAAAZ,OAAOA,YADY+F,EAAA8xC,gCAAAA,IAYrB,OAd0D/rC,EAAAA,EAAAA,GAMzDumD,EAAAnyD,UAAAo8B,OAAA,SAAOhZ,GAEFA,aAAiBm6B,IACpBz9C,KAAK63C,gCAAgCL,UAAUl0B,EAAMo6B,YAAap6B,EAAM6Z,uCAV1El1B,EAAAA,sDALQqvC,MAoBT+a,GAd0DryB,EAAAA,wBC8CpDc,GAAgBp+B,EAClBo7C,GAAiC,CACpC,CACCpwC,QAASqzB,EAAAA,iBACT9N,SAAU+3B,GACVhqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUk4B,GACVnqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUm4B,GACVpqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUo4B,GACVrqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUq4B,GACVtqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUw4B,GACVzqB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU24B,GACV5qB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU64B,GACV9qB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUg5B,GACVjrB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUi5B,GACVlrB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAU45B,GACV7rB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUi/B,GACVlxB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUk/B,GACVnxB,OAAO,GACL,CACFtzB,QAASqzB,EAAAA,iBACT9N,SAAUm/B,GACVpxB,OAAO,GAER6f,GACAkE,GACA7B,GACAgH,GACA/G,GACAzb,GACA0c,IAEGiL,IAGEpuB,GAAav+B,EAAA,CAClB,CACCgL,QAASwzB,EAAAA,sBACTjO,SAAUq8B,GACVtuB,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAUs8B,GACVvuB,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAUu8B,GACVxuB,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAU28B,GACV5uB,OAAO,GACL,CACFtzB,QAASwzB,EAAAA,sBACTjO,SAAUo/B,GACVrxB,OAAO,IAEL+c,GAA8B,CACjCh+B,GACAkD,GACA4yB,GACAL,GACAG,GACAmF,GACAE,GACAxQ,GACAklB,GACAhlB,GACA4M,KAGYgb,GAAkB5vD,EAC3Bs7C,GAEAld,GACAG,GAAa,CAEhBsN,GACAwhB,GAEA5F,GACAtoC,GAEAkC,GACAwlB,IAEGqnB,GACAQ,GACAI,GACAS,mBClLJ,SAAAM,mDAUA,OAVmCzmD,EAAAA,EAAAA,GAElCymD,EAAAryD,UAAA2iC,KAAA,SAAK2vB,GACJjB,QAAQ1uB,KAAK2vB,IAGdD,EAAAryD,UAAAuC,MAAA,SAAM+vD,GACLjB,QAAQ9uD,MAAM+vD,IAGhBD,GAVmChvB,ICFnCkvB,GAAA,WAKA,SAAAA,KAOA,2BAPCp3C,EAAAA,SAAQ9K,KAAA,CAAC,CACTG,UAAW,CAAC,CACXhD,QAAS61B,GACTtQ,SAAUs/B,SAIZE,EAZA,GCAAC,GAAA,WAKA,SAAAA,KA0BA,OArBCA,EAAAxyD,UAAAC,OAAA,SAAO8gB,GAEN,OAAIthB,MAAM2zB,QAAQrS,GACVjhB,KAAK2yD,eAAe1xC,GAEpBjhB,KAAK4yD,aAAa3xC,IAI3ByxC,EAAAxyD,UAAAyyD,eAAA,SAAe1xC,GAAf,IAAAlb,EAAA/F,KACC,OAAOihB,EAAKja,KAAG,SAAEia,GAAc,OAAAlb,EAAK6sD,aAAa3xC,OAG1CyxC,EAAAxyD,UAAA0yD,aAAR,SAAqB7nD,GAEpB,OAAIA,aAAgBkzC,GACZ,IAAIj9B,GAAWjW,EAAK2X,QAAS3X,EAAK0W,cAAe1W,EAAK8I,GAAI9I,EAAKyW,cAE/D,IAAIR,GAAWjW,EAAM,wBAvB9B9C,EAAAA,aA0BDyqD,EA/BA,kBCiBC,SAAAG,WACChnD,EAAAjL,KAAAZ,OAAOA,KAIT,OAPgD8L,EAAAA,EAAAA,uBAX/CwE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0BACVC,SAAU,oFAMV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,+CASlC4hD,GAPgD7/C,mBCc/C,SAAA8/C,EAAoBnsC,EACTosC,EACA9jB,EACA7qB,GAHX,IAAAre,EAIC8F,EAAAjL,KAAAZ,OAAOA,YAJY+F,EAAA4gB,YAAAA,EACT5gB,EAAAgtD,UAAAA,EACAhtD,EAAAkpC,wBAAAA,EACAlpC,EAAAqe,0BAAAA,EAEVre,EAAKitD,WAAajtD,EAAK4gB,YAAYG,MAAM,CACxCuH,aAAgB,OA+BnB,OA5C8CviB,EAAAA,EAAAA,GAiB7CgnD,EAAA5yD,UAAAuP,SAAA,WACCzP,KAAKinB,kBAGN6rC,EAAA5yD,UAAAgnB,gBAAA,WAAA,IAAAnhB,EAAA/F,KACCA,KAAKokB,0BACHT,cACAtQ,KACArT,KAAK+S,aAELqF,WAAS,SAAEuH,GACX5Z,EAAKgtD,UAAUtuC,SAAS1e,EAAKktD,QAAQ7iD,cAAe,SAAU,YAIzD0iD,EAAA5yD,UAAA+mB,eAAR,WAAA,IAAAlhB,EAAA/F,KACCA,KAAKgzD,WACHrrC,SAAuB,aACvBC,aACAvU,KACA2V,EAAAA,aAAa,KACbhpB,KAAK+S,aAELqF,WAAS,SAAE8wB,GACXnjC,EAAKkpC,wBAAwB7E,OAAOlB,2BArDvC54B,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,2BACVC,SAAU,mMAOV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDAnBzB8W,EAAAA,mBADuEnD,EAAAA,iBAMvE2kB,UACAxlB,uCAiBPzS,EAAAA,UAASf,KAAA,CAAC,UAAW,CAAEgB,QAAQ,OA0CjCuhD,GA5C8C9/C,ICtB9C,IAAAkgD,GAAA,WAQA,SAAAA,KAeA,2BAfC73C,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACAsmB,EAAAA,qBAEDpmB,aAAc,CACbo3C,GACAC,IAEDp3C,QAAS,CACRm3C,GACAC,QAIFI,EAvBA,GCAAC,GAAA,WAGA,SAAAA,KAUA,2BAVC7iD,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,6BACVC,SAAA,gCACA+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACLwiD,qCAAsC,YAIxCD,EAbA,kBC+BC,SAAAE,EAAoBhkD,EACTC,EACA2/B,EACAa,EACAwjB,GAJX,IAAAvtD,EAKC8F,EAAAjL,KAAAZ,OAAOA,YALY+F,EAAAsJ,WAAAA,EACTtJ,EAAAuJ,kBAAAA,EACAvJ,EAAAkpC,wBAAAA,EACAlpC,EAAA+pC,iCAAAA,EACA/pC,EAAAutD,6BAAAA,IA4BZ,OA1C2DxnD,EAAAA,EAAAA,GAkB1DunD,EAAAnzD,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAK8vC,iCACHl4B,UACAvE,KACArT,KAAK+S,aAELqF,WAAS,SAAErR,GACXhB,EAAKgB,OAASA,EACdhB,EAAKuJ,kBAAkBJ,oBAI1BmkD,EAAAnzD,UAAAqzD,iBAAA,WACCvzD,KAAKszD,6BAA6B3uC,KAAK3kB,KAAKwzD,sBAAuBxzD,KAAK+vB,SAGzEsjC,EAAAnzD,UAAAuzD,kBAAA,WACCzzD,KAAKszD,6BAA6Bne,SAGnCke,EAAAnzD,UAAAiM,UAAA,WACC,OAAOnM,KAAK+G,QAAU/G,KAAK+G,OAAOoF,iCAlDnCmE,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,sCACVC,SAAU,kQAZ4BW,EAAAA,kBAA9BC,EAAAA,yBAGAk4B,UAIA8J,UAHAyB,qDAmBPxjC,EAAAA,UAASf,KAAA,CAAC,wBAAyB,CAAEgB,QAAQ,oBAG7ChG,EAAAA,SAqCF8nD,GA1C2DrgD,uBCmB1D,SAAA0gD,EAAoBpkD,EACTggC,EACAuF,GAFX,IAAA9uC,EAGC8F,EAAAjL,KAAAZ,OAAOA,YAHY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAupC,0BAAAA,EACAvpC,EAAA8uC,4BAAAA,IA4BZ,OApCyD/oC,EAAAA,EAAAA,GAYxD4nD,EAAAxzD,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAK60C,4BACH5V,eACA5rB,KACArT,KAAK+S,aAELqF,WAAS,SAAElP,GACXnD,EAAKmD,QAAUA,EACfnD,EAAK4tD,oBAAsB5tD,EAAKmD,QACrBlC,KAAG,SAAE7F,GAAM,OAACA,EAAEgL,eACdynD,QAAM,SAAEC,EAAazpD,GAAiB,OAAAypD,EAAczpD,KAE/DrE,EAAKuJ,kBAAkBJ,oBAI1BwkD,EAAAxzD,UAAA4zD,aAAA,SAAa/jC,GACZzM,MAAMywC,kBACFhkC,EAAO5jB,YACVnM,KAAKsvC,0BAA0B/P,cAAcxP,EAAOnD,eAEpD5sB,KAAKsvC,0BAA0BlV,aAAarK,EAAOnD,oCA1DrDtc,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,oCACVC,SAAU,yaAiBV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,KACjCL,KAAM,CACLojD,4CAA6C,qDA/Bb3iD,EAAAA,yBAMzBguB,UAFAV,MAkET+0B,GApCyD1gD,uBCexD,SAAAihD,EAAoB3kD,EACT2/B,EACA4F,GAFX,IAAA9uC,EAGC8F,EAAAjL,KAAAZ,OAAOA,YAHY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAkpC,wBAAAA,EACAlpC,EAAA8uC,4BAAAA,EARX9uC,EAAAmuD,UAAuBC,EAAAA,UAAUC,MAEjCruD,EAAA0gB,OAASiG,KAwCV,OA/CwD5gB,EAAAA,EAAAA,GAiBvDmoD,EAAA/zD,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KACCA,KAAKysB,WAAazsB,KAAK+vB,OAAOrC,gBAE9B1tB,KAAK60C,4BACH3V,YAAYl/B,KAAK+vB,OAAOtC,cACxBpa,KACArT,KAAK+S,aAELqF,WAAS,SAAEqU,GACX1mB,EAAK0mB,WAAaA,EAClB1mB,EAAKuJ,kBAAkBJ,oBAI1B+kD,EAAA/zD,UAAAytB,UAAA,WACC,OAAO3tB,KAAKysB,aAAeC,GAAWX,KAGvCkoC,EAAA/zD,UAAA0tB,WAAA,WACC,OAAO5tB,KAAKysB,aAAeC,GAAWV,MAGvCioC,EAAA/zD,UAAAm0D,WAAA,WACC,OAAOr0D,KAAKysB,aAAeC,GAAW7oB,MAGvCowD,EAAA/zD,UAAA6pC,aAAA,SAAa7a,GACZ5L,MAAMywC,kBACN/zD,KAAKivC,wBAAwBlF,aAAa/pC,KAAK+vB,OAAOtC,aAAcyB,wBAzErE5e,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,mCACVC,SAAU,u7BAZFY,EAAAA,yBAMAk4B,UACA5K,sCAiCPpzB,EAAAA,SA6CF0oD,GA/CwDjhD,ICtCxD,IAAAshD,GAAA,WAsBC,SAAAA,EAAoBhlB,EACTgkB,GADStzD,KAAAsvC,0BAAAA,EACTtvC,KAAAszD,6BAAAA,EASZ,OANCgB,EAAAp0D,UAAAq0D,WAAA,SAAWxkC,GACV/vB,KAAKsvC,0BAA0B/P,cAAcxP,EAAOnD,eAEpD5sB,KAAKszD,6BAA6Bne,6BAtBnC7kC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0CACVC,SAAU,kKANF4uB,UACAyV,sCAePvpC,EAAAA,SAaF+oD,EAhCA,GCAA,IAAAE,GAAA,WA2BC,SAAAA,EAAoBllB,EACTgkB,GADStzD,KAAAsvC,0BAAAA,EACTtvC,KAAAszD,6BAAAA,EAaZ,OAVCkB,EAAAt0D,UAAAm4B,SAAA,SAAStI,GACR/vB,KAAKsvC,0BAA0BjX,SAAStI,EAAOnD,eAC/C5sB,KAAKszD,6BAA6Bne,SAGnCqf,EAAAt0D,UAAAs4B,UAAA,SAAUzI,GACT/vB,KAAKsvC,0BAA0B9W,UAAUzI,EAAOnD,eAChD5sB,KAAKszD,6BAA6Bne,6BAhCnC7kC,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,0CACVC,SAAU,4WALF4uB,UACAyV,sCAoBPvpC,EAAAA,SAiBFipD,EAzCA,OCWM/4C,GAAe,CACpBm5B,GACAye,GACAK,GACAO,GACAK,GACAE,IAGDC,GAAA,WAAA,SAAAA,KASA,2BATCp5C,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACA/J,IAEDiK,aAAcA,GACdC,QAASD,OAGVg5C,EATA,kBCmFC,SAAAC,EAAoBplD,EACTd,EACAmmD,EACAC,EACS3gB,GAJpB,IAAAluC,EAKC8F,EAAAjL,KAAAZ,OAAOA,YALY+F,EAAAuJ,kBAAAA,EACTvJ,EAAAyI,YAAAA,EACAzI,EAAA4uD,uCAAAA,EACA5uD,EAAA6uD,uBAAAA,EACS7uD,EAAAkuC,wBAAAA,EAVpBluC,EAAA8uD,aAAuB,EAatB9uD,EAAK4uD,uCACH3E,sBAAsBjqD,EAAKyI,aAC3B6E,KACAtN,EAAKgN,aAELqF,WAAS,SAAEkL,GAEXvd,EAAK89C,aAAevgC,EAAM49B,kBAC1Bn7C,EAAKuJ,kBAAkBJ,qBA+B3B,OAzDwDpD,EAAAA,EAAAA,GA8BvD4oD,EAAAx0D,UAAAuP,SAAA,WAAA,IAAA1J,EAAA/F,KAECA,KAAK40D,uBACH39C,iBACA5D,KACArT,KAAK+S,aAELqF,WAAS,SAAEE,GACXvS,EAAK8uD,YAAuB,IAATv8C,EACnBvS,EAAKuJ,kBAAkBJ,mBAGzBlP,KAAKi0C,wBACHjV,kBACA3rB,KACArT,KAAK+S,aAELqF,WAAS,SAAElP,GACXnD,EAAK+wC,cAAgB5tC,EACrBnD,EAAKuJ,kBAAkBJ,oBAK1BwlD,EAAAx0D,UAAA40D,uBAAA,SAAuBvtD,GACtB,OAAOA,MAAAA,uBAxIR+I,EAAAA,UAASC,KAAA,CAAC,CACVC,SAAU,kCACVC,SAAU,2wGA4EV+H,gBAAiBC,EAAAA,wBAAwBC,OACzC3H,cAAeC,EAAAA,kBAAkBC,kDA1FAI,EAAAA,yBAGzBuC,UACAm8C,UAIAx5C,UAHAooB,uCAyFPpzB,EAAAA,SAuDFmpD,GAzDwD1hD,IC5FxD,IAAA+hD,GAAA,WAWA,SAAAA,KAkBA,2BAlBC15C,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAS,CACRC,EAAAA,aACAC,EAAAA,cAEDC,aAAc,CACbi5C,IAEDh5C,QAAS,CACRg5C,IAEDhkD,UAAW,CACV09B,GACAK,GACAJ,QAIF0mB,EA7BA,GCqCA,SAAgBC,KACf,OAAO,IAAIroD,EAAoBN,gBAAiBX,YAI3C4P,GAAO5Y,EAAA,CACZ6Y,EAAAA,aACAsmB,EAAAA,oBACAozB,EAAAA,cAIGzjD,GAAa,CAEhB4J,GACA0J,GACAiwC,GACA7B,GACAuB,GAEA7yB,GAEA6wB,KAGKh3C,GAAe,CACpBs4B,GACA4C,GACAtB,GACAa,GACAiB,GACAO,GACAa,GACAC,GACAmB,GACAwZ,GACAtY,GACAQ,IAGKt2B,GAAkB,CACvB6vB,IAGKlkC,GAAShO,EAAA,CACd,CACCgL,QAASytC,GACTxtC,SAAU,aAEX,CACCD,QAASf,EACTknC,WAAYmhB,IAEbtC,GAEAn8C,GAEA2rB,IAEGowB,IAIE3wB,GAAkBj/B,EAAA,CACvB8Y,EAAAA,aACAu4B,GACA4C,GACAe,GACAa,GACAoB,IAEGnoC,GAAa,CAChB4J,KAGD85C,GAAA,WAyBC,SAAAA,EAAyC9lD,GAAApP,KAAAoP,WAAAA,EACpCU,EAAAA,kBAAkB9P,KAAKoP,cAC1BW,OAAkB,UAAEolD,SAAU,GAIjC,OArBQD,EAAAE,WAAP,SAAkBC,GACjB,YADiB,IAAAA,IAAAA,EAAA,CAA2C7nB,aAAc,GAAI8nB,mBAAoB,CAAEH,SAAS,KACtG,CACNI,SAAUL,EACVxkD,UAAShO,EAAA,CACR,CACCgL,QAASytC,GACTxtC,SAAU0nD,EAAgB7nB,cAE3B,CAAE9/B,QAAS8nD,EAAAA,uBAAwB7nD,SAAU0nD,EAAgBC,mBAAmBH,SAChF,CAAEznD,QAAS+nD,EAAAA,qBAAsB9nD,SAAU0nD,EAAgBC,mBAAmBH,UAC3EzkD,MAZCwkD,EAAAvzB,mBAAkBj/B,EAAOi/B,wBARhCtmB,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAOA,GACPG,aAAYi6C,GACZh6C,QAASimB,GACT5c,gBAAeA,yEAqBF7T,EAAAA,OAAMX,KAAA,CAACY,EAAAA,kBAMrB+jD,EA/BA,OCtGM55C,GAAU,CACf45C,GAAgBE,WAAW,CAC1B5nB,aAAc,OACd8nB,mBAAoB,CACnBH,SAAS,MAKN15C,GAAe,CACpBtM,IAGKuB,GAAS,CACd5C,EACAI,GAGKyzB,GAAqB,CAC1BxyB,IAGK4V,GAAe,GAEf4wC,GAAoB,CACzBxmD,IAGDymD,GAAA,WAAA,SAAAA,KAcA,OALQA,EAAA7wC,gBAAeriB,EAAOqiB,IAEtB6wC,EAAAj0B,mBAAkBj/B,EAAOi/B,IAEzBi0B,EAAAD,kBAAiBjzD,EAAOizD,wBAb/Bt6C,EAAAA,SAAQ9K,KAAA,CAAC,CACT+K,QAAOu6C,GACPp6C,aAAYq6C,GACZplD,UAASqlD,GACTr6C,QAASimB,GACT5c,gBAAeixC,OAShBJ,EAdA,uNzZ1B4B","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export type FieldAccessor = (element?: any) => any;\nexport type ViewTemplateMethod = (cellValue: any) => string;\n\nexport interface GuiColumn {\n\n\tfield?: string | FieldAccessor;\n\n\ttype?: string | GuiDataType;\n\n\tview?: string | GuiCellView | ViewTemplateMethod;\n\n\theader?: string;\n\n\tcustomTemplate?: string;\n\n\twidth?: string | number;\n\n\taggregation?: GuiColumnAggregation;\n}\n\nexport enum GuiDataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n\nexport enum GuiCellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM\n}\n\nexport enum GuiNumberCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiStringCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport enum GuiBooleanCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP,\n\tCHECKBOX\n}\n\nexport enum GuiDateCellView {\n\tTEXT,\n\tBOLD,\n\tITALIC,\n\tCHIP\n}\n\nexport interface GuiPagingConfig {\n\n\tenabled?: boolean;\n\n\tpage?: number;\n\n\tpageSize?: number;\n\n\tpageSizes?: Array<number>;\n\n\tpagerTop?: boolean;\n\n\tpagerBottom?: boolean;\n\n\tdisplay?: string | GuiPagingDisplay;\n\n}\n\nexport enum GuiTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n\nexport enum GuiRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n\nexport interface GuiSorting {\n\n\tenabled?: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\tmultiSorting?: boolean;\n\n}\n\nexport interface GuiFiltering {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiQuickFilters {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiSearching {\n\n\tenabled?: boolean;\n\n}\n\nexport interface GuiAggregation {\n\n\tenabled?: boolean;\n\n\ttop?: boolean;\n\n\tbottom?: boolean;\n\n}\n\nexport interface GuiColumnAggregation {\n\n\tenabled?: boolean;\n\n\taggregationTypes?: Array<any>;\n}\n\nexport interface GuiColumnMenu {\n\n\tenabled?: boolean;\n\n\tsort?: boolean;\n\n\tfilter?: boolean;\n\n\tcolumnsManager?: boolean;\n\n}\n\nexport enum GuiPagingDisplay {\n\tBASIC,\n\tADVANCED\n}\n","export enum DataType {\n\tUNKNOWN,\n\tNUMBER,\n\tSTRING,\n\tBOOLEAN,\n\tDATE,\n\tCUSTOM\n}\n","import { GuiDataType } from '../../../ui-api/grid.api';\nimport { DataType } from '../../../../../lib/structure/domain/structure/command/field/data-type/data-type';\n\nexport class GridColumnTypeConverter {\n\n\tconvertType(type: string | GuiDataType): DataType {\n\n\t\tif (typeof type === 'string') {\n\t\t\treturn this.convertTypeString(type);\n\t\t} else {\n\t\t\treturn this.convertTypeEnum(type);\n\t\t}\n\t}\n\n\tprivate convertTypeEnum(enumType: GuiDataType): DataType {\n\n\t\tswitch (enumType) {\n\n\t\t\tcase GuiDataType.STRING:\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase GuiDataType.NUMBER:\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase GuiDataType.BOOLEAN:\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase GuiDataType.DATE:\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase GuiDataType.UNKNOWN:\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase GuiDataType.CUSTOM:\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n\tprivate convertTypeString(type: string): DataType {\n\t\tconst loweredType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredType) {\n\n\t\t\tcase 'string':\n\t\t\t\treturn DataType.STRING;\n\n\t\t\tcase 'number':\n\t\t\t\treturn DataType.NUMBER;\n\n\t\t\tcase 'boolean':\n\t\t\t\treturn DataType.BOOLEAN;\n\n\t\t\tcase 'date':\n\t\t\t\treturn DataType.DATE;\n\n\t\t\tcase 'unknown':\n\t\t\t\treturn DataType.UNKNOWN;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn DataType.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn DataType.STRING;\n\t\t}\n\t}\n\n}\n","export enum AggregationType {\n\tCOUNT = 1 << 10,\n\tDISTINCT = 1 << 0,\n\tSUM = 1 << 1,\n\tAVERAGE = 1 << 2,\n\tMIN = 1 << 3,\n\tMAX = 1 << 4,\n\tMEDIAN = 1 << 5,\n\tTRUTHY = 1 << 6,\n\tFALSY = 1 << 7,\n\tEARLIEST = 1 << 8,\n\tLATEST = 1 << 9,\n}\n\n// count\n// count distinct\n// percentile\n// std.dev\n// std.dev Pop\n// variance\n// variance pop\n","import { ColumnAggregationConfig } from '../../../../../lib/composition/domain/column-aggregation.config';\nimport { AggregationType } from '../../../../../lib/structure/domain/structure/command/aggregation/aggregation.type';\n\nimport { GuiColumnAggregation } from '../../../../../grid.index';\n\n\nexport class GridColumnAggregationConverter {\n\n\tconvert(aggregationConfig: GuiColumnAggregation): ColumnAggregationConfig {\n\t\tlet columnAggregationConfig: ColumnAggregationConfig = {};\n\n\t\tif (aggregationConfig.enabled !== undefined && aggregationConfig.enabled !== null) {\n\t\t\tcolumnAggregationConfig.enabled = aggregationConfig.enabled;\n\t\t}\n\n\t\tif (aggregationConfig.aggregationTypes !== undefined && aggregationConfig.aggregationTypes !== null) {\n\t\t\tcolumnAggregationConfig.aggregationTypes = this.convertAggregationTypes(aggregationConfig.aggregationTypes);\n\t\t}\n\n\t\treturn columnAggregationConfig;\n\t}\n\n\tprivate convertAggregationTypes(configAggregationTypes: Array<string>): Array<AggregationType> {\n\n\t\tconst aggregationTypes: Array<AggregationType> = [];\n\n\t\tconfigAggregationTypes.forEach((type: string) => {\n\n\t\t\tconst aggregationType = this.convertAggregationType(type);\n\n\t\t\tif (aggregationType !== undefined && aggregationType !== null) {\n\t\t\t\taggregationTypes.push(aggregationType);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregationTypes;\n\t}\n\n\tprivate convertAggregationType(type: string): AggregationType {\n\n\t\tconst loweredAggregationType = type.toLocaleLowerCase();\n\n\t\tswitch (loweredAggregationType) {\n\n\t\t\tcase 'count':\n\t\t\t\treturn AggregationType.COUNT;\n\n\t\t\tcase 'distinct':\n\t\t\t\treturn AggregationType.DISTINCT;\n\n\t\t\tcase 'sum':\n\t\t\t\treturn AggregationType.SUM;\n\n\t\t\tcase 'average':\n\t\t\t\treturn AggregationType.AVERAGE;\n\n\t\t\tcase 'min':\n\t\t\t\treturn AggregationType.MIN;\n\n\t\t\tcase 'max':\n\t\t\t\treturn AggregationType.MAX;\n\n\t\t\tcase 'median':\n\t\t\t\treturn AggregationType.MEDIAN;\n\n\t\t\tcase 'truthy':\n\t\t\t\treturn AggregationType.TRUTHY;\n\n\t\t\tcase 'falsy':\n\t\t\t\treturn AggregationType.FALSY;\n\n\t\t\tcase 'earliest':\n\t\t\t\treturn AggregationType.EARLIEST;\n\n\t\t\tcase 'latest':\n\t\t\t\treturn AggregationType.LATEST;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\n\t\t}\n\t}\n\n}\n","export enum CellView {\n\tTEXT,\n\tCHIP,\n\tLINK,\n\tIMAGE,\n\tBOLD,\n\tITALIC,\n\tCHECKBOX,\n\tCUSTOM,\n\tFUNCTION\n}\n","import { GuiCellView, ViewTemplateMethod } from '../../../ui-api/grid.api';\nimport { CellView } from '../../../../../lib/composition/domain/cell-view';\n\nexport class GridColumnViewConverter {\n\n\tconvert(view: string | GuiCellView | ViewTemplateMethod): CellView | ViewTemplateMethod {\n\n\t\tif (typeof view === 'string') {\n\t\t\treturn this.convertString(view);\n\t\t} else if (typeof view === 'function') {\n\t\t\treturn view;\n\t\t} else {\n\t\t\treturn this.convertEnum(view);\n\t\t}\n\t}\n\n\tprivate convertString(view: string): CellView {\n\n\t\tconst loweredView = view.toLocaleLowerCase();\n\n\t\tswitch (loweredView) {\n\n\t\t\tcase 'text':\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase 'chip':\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase 'link':\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase 'image':\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase 'bold':\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase 'italic':\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase 'checkbox':\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase 'custom':\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n\tprivate convertEnum(view: GuiCellView): CellView {\n\n\t\tswitch (view) {\n\n\t\t\tcase GuiCellView.TEXT:\n\t\t\t\treturn CellView.TEXT;\n\n\t\t\tcase GuiCellView.CHIP:\n\t\t\t\treturn CellView.CHIP;\n\n\t\t\tcase GuiCellView.LINK:\n\t\t\t\treturn CellView.LINK;\n\n\t\t\tcase GuiCellView.IMAGE:\n\t\t\t\treturn CellView.IMAGE;\n\n\t\t\tcase GuiCellView.BOLD:\n\t\t\t\treturn CellView.BOLD;\n\n\t\t\tcase GuiCellView.ITALIC:\n\t\t\t\treturn CellView.ITALIC;\n\n\t\t\tcase GuiCellView.CHECKBOX:\n\t\t\t\treturn CellView.CHECKBOX;\n\n\t\t\tcase GuiCellView.CUSTOM:\n\t\t\t\treturn CellView.CUSTOM;\n\n\t\t\tdefault:\n\t\t\t\treturn CellView.TEXT;\n\t\t}\n\t}\n\n}\n","import { GuiColumn } from '../../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../../lib/composition/domain/column.config';\n\nimport { GridColumnTypeConverter } from './grid.column-type.converter';\nimport { GridColumnAggregationConverter } from './grid.column-aggregation.converter';\nimport { GridColumnViewConverter } from './grid.column-view.converter';\n\n\nexport class GridColumnConverter {\n\n\tprivate readonly columnTypeConverter = new GridColumnTypeConverter();\n\n\tprivate readonly columnAggregationConverter = new GridColumnAggregationConverter();\n\n\tprivate readonly columnViewConverter = new GridColumnViewConverter();\n\n\tconvert(config: Array<GuiColumn>): Array<ColumnConfig> {\n\t\treturn config.map((c) => this.convertColumn(c));\n\t}\n\n\tprivate convertColumn(guiColumn: GuiColumn): ColumnConfig {\n\t\tlet columnConfig: ColumnConfig = {};\n\n\t\tif (guiColumn.type !== undefined && guiColumn.type !== null) {\n\t\t\tcolumnConfig.type = this.columnTypeConverter.convertType(guiColumn.type);\n\t\t}\n\n\t\tif (guiColumn.header !== undefined && guiColumn.header !== null) {\n\t\t\tcolumnConfig.header = guiColumn.header;\n\t\t}\n\n\t\tif (guiColumn.field !== undefined && guiColumn.field !== null) {\n\t\t\tcolumnConfig.field = guiColumn.field;\n\t\t}\n\n\t\tif (guiColumn.width !== undefined && guiColumn.width !== null) {\n\t\t\tcolumnConfig.width = guiColumn.width;\n\t\t}\n\n\t\tif (guiColumn.view !== undefined && guiColumn.view !== null) {\n\t\t\tcolumnConfig.view = this.columnViewConverter.convert(guiColumn.view);\n\t\t}\n\n\t\tif (guiColumn.aggregation !== undefined && guiColumn.aggregation !== null) {\n\t\t\tcolumnConfig.aggregation = this.columnAggregationConverter.convert(guiColumn.aggregation);\n\t\t}\n\n\t\treturn columnConfig;\n\t}\n\n}\n","export enum SchemaTheme {\n\tFABRIC,\n\tMATERIAL,\n\tLIGHT,\n\tDARK\n}\n","import { GuiTheme } from '../../../ui-api/grid.api';\nimport { SchemaTheme } from '../../../../../lib/structure/domain/schema/schema-theme';\n\n\nexport class GridThemeConverter {\n\n\tconvert(theme: string | GuiTheme): SchemaTheme {\n\n\t\tif (typeof theme === 'string') {\n\t\t\treturn this.convertString(theme);\n\t\t} else {\n\t\t\treturn this.convertEnum(theme);\n\t\t}\n\n\t}\n\n\tprivate convertString(theme: string): SchemaTheme {\n\n\t\tconst loweredTheme = theme.toLocaleLowerCase();\n\n\t\tswitch (loweredTheme) {\n\n\t\t\tcase 'material':\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase 'fabric':\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase 'light':\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase 'dark':\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(theme: GuiTheme): SchemaTheme {\n\n\t\tswitch (theme) {\n\n\t\t\tcase GuiTheme.MATERIAL:\n\t\t\t\treturn SchemaTheme.MATERIAL;\n\n\t\t\tcase GuiTheme.FABRIC:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t\tcase GuiTheme.LIGHT:\n\t\t\t\treturn SchemaTheme.LIGHT;\n\n\t\t\tcase GuiTheme.DARK:\n\t\t\t\treturn SchemaTheme.DARK;\n\n\t\t\tdefault:\n\t\t\t\treturn SchemaTheme.FABRIC;\n\n\t\t}\n\n\t}\n\n}\n","export enum RowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { GuiRowColoring } from '../../../ui-api/grid.api';\nimport { RowColoring } from '../../../../../lib/structure/ui-api/schema/row-coloring';\n\n\nexport class GridRowColoringConverter {\n\n\tconvert(rowColoring: string | GuiRowColoring): RowColoring {\n\n\t\tif (typeof rowColoring === 'string') {\n\t\t\treturn this.convertString(rowColoring);\n\t\t} else {\n\t\t\treturn this.convertEnum(rowColoring);\n\t\t}\n\n\t}\n\n\tprivate convertString(rowColoring: string): RowColoring {\n\n\t\tconst loweredRowColoring = rowColoring.toLocaleLowerCase();\n\n\t\tswitch (loweredRowColoring) {\n\n\t\t\tcase 'none':\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase 'even':\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase 'odd':\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n\tprivate convertEnum(rowColoring: GuiRowColoring): RowColoring {\n\n\t\tswitch (rowColoring) {\n\n\t\t\tcase GuiRowColoring.NONE:\n\t\t\t\treturn RowColoring.NONE;\n\n\t\t\tcase GuiRowColoring.EVEN:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t\tcase GuiRowColoring.ODD:\n\t\t\t\treturn RowColoring.ODD;\n\n\t\t\tdefault:\n\t\t\t\treturn RowColoring.EVEN;\n\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { GuiColumnMenu } from '../../../../ui-api/grid.api';\n\nimport { ColumnMenuConfig } from '../../../../../../lib/structure/ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class GridColumnMenuConverter {\n\n\tconvert(config: GuiColumnMenu): ColumnMenuConfig {\n\t\treturn config as ColumnMenuConfig;\n\t}\n}\n","export enum PagingDisplayMode {\n\tBASIC,\n\tADVANCED\n}\n","import { PagingDisplayMode } from '../../../../../lib/structure/ui/paging/mode/paging-display-mode';\nimport { GuiPagingConfig, GuiPagingDisplay } from '../../../ui-api/grid.api';\nimport { PagingConfig } from '../../../../../lib/structure/domain/paging/paging-config';\n\n\nexport class GridPagingConverter {\n\n\tconvert(guiPaging: GuiPagingConfig): PagingConfig {\n\n\t\tlet pagingConfig: PagingConfig = {};\n\n\t\tif (guiPaging.enabled !== undefined && guiPaging.enabled !== null) {\n\t\t\tpagingConfig.enabled = guiPaging.enabled;\n\t\t}\n\n\t\tif (guiPaging.page !== undefined && guiPaging.page !== null) {\n\t\t\tpagingConfig.page = guiPaging.page;\n\t\t}\n\n\t\tif (guiPaging.pageSize !== undefined && guiPaging.pageSize !== null) {\n\t\t\tpagingConfig.pageSize = guiPaging.pageSize;\n\t\t}\n\n\t\tif (guiPaging.pageSizes !== undefined && guiPaging.pageSizes !== null) {\n\t\t\tpagingConfig.pageSizes = guiPaging.pageSizes;\n\t\t}\n\n\t\tif (guiPaging.pagerTop !== undefined && guiPaging.pagerTop !== null) {\n\t\t\tpagingConfig.pagerTop = guiPaging.pagerTop;\n\t\t}\n\n\t\tif (guiPaging.pagerBottom !== undefined && guiPaging.pagerBottom !== null) {\n\t\t\tpagingConfig.pagerBottom = guiPaging.pagerBottom;\n\t\t}\n\n\t\tif (guiPaging.display !== undefined && guiPaging.display !== null) {\n\t\t\tpagingConfig.displayMode = this.convertDisplay(guiPaging.display);\n\t\t}\n\n\t\treturn pagingConfig;\n\t}\n\n\tprivate convertDisplay(pagingDisplay: string | GuiPagingDisplay): PagingDisplayMode {\n\n\t\tif (typeof pagingDisplay === 'string') {\n\t\t\treturn this.convertString(pagingDisplay);\n\t\t} else {\n\t\t\treturn this.convertEnum(pagingDisplay);\n\t\t}\n\t}\n\n\tprivate convertString(pagingDisplay: string): PagingDisplayMode {\n\n\t\tconst loweredPaging = pagingDisplay.toLocaleLowerCase();\n\n\t\tswitch (loweredPaging) {\n\n\t\t\tcase 'basic':\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase 'advanced':\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n\tprivate convertEnum(pagingDisplay: GuiPagingDisplay): PagingDisplayMode {\n\n\t\tswitch (pagingDisplay) {\n\n\t\t\tcase GuiPagingDisplay.BASIC:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\n\t\t\tcase GuiPagingDisplay.ADVANCED:\n\t\t\t\treturn PagingDisplayMode.ADVANCED;\n\n\t\t\tdefault:\n\t\t\t\treturn PagingDisplayMode.BASIC;\n\t\t}\n\t}\n\n}\n","import { EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport {\n\tGuiAggregation,\n\tGuiColumn,\n\tGuiColumnMenu,\n\tGuiFiltering,\n\tGuiPagingConfig,\n\tGuiQuickFilters,\n\tGuiRowColoring,\n\tGuiSearching,\n\tGuiSorting,\n\tGuiTheme\n} from '../../ui-api/grid.api';\nimport { ColumnConfig } from '../../../../lib/composition/domain/column.config';\n\nimport { GridColumnConverter } from './column/grid.column.converter';\nimport { GridThemeConverter } from './theme/grid.theme.converter';\nimport { GridRowColoringConverter } from './coloring/grid.row-coloring.converter';\nimport { ColumnMenuConfig } from '../../../../lib/structure/ui-api/structure/column-menu-config';\nimport { GridColumnMenuConverter } from './column/menu/grid.column-menu.converter';\nimport { GridPagingConverter } from './paging/grid.paging.converter';\n\nexport abstract class GridGateway implements OnChanges {\n\n\t/**\n\t * INPUTS\n\t */\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<GuiColumn> = [];\n\n\t@Input()\n\tpaging: boolean | GuiPagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: string | GuiTheme;\n\n\t@Input()\n\trowColoring: string | GuiRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | GuiSorting;\n\n\t@Input()\n\tsearching: boolean | GuiSearching;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tfiltering: boolean | GuiFiltering;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tquickFilters: boolean | GuiQuickFilters;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\teditMode: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t/**\n\t * @experimental\n\t */\n\t@Input()\n\taggregation: GuiAggregation;\n\n\t@Input()\n\tcolumnMenu: GuiColumnMenu;\n\n\n\t/**\n\t * OUTPUTS\n\t */\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<{ after: any, before: any }> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\t/** @internal */\n\tcolumnsConfig: Array<ColumnConfig>;\n\n\tthemeConfig: any; // SchemaTheme;\n\n\trowColoringConfig: any; // RowColoring;\n\n\tcolumnMenuConfig: ColumnMenuConfig;\n\n\tprivate readonly gridColumnConverter: GridColumnConverter = new GridColumnConverter();\n\n\tprivate readonly gridThemeConverter: GridThemeConverter = new GridThemeConverter();\n\n\tprivate readonly gridRowColoringConverter: GridRowColoringConverter = new GridRowColoringConverter();\n\n\tprivate readonly gridColumnMenuConverter: GridColumnMenuConverter = new GridColumnMenuConverter();\n\n\tprivate readonly gridPagingConverter: GridPagingConverter = new GridPagingConverter();\n\n\tprotected constructor() {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\n\t\tif (changes.columns !== undefined && changes.columns.currentValue !== undefined) {\n\t\t\tthis.columnsConfig = this.gridColumnConverter.convert(this.columns);\n\t\t}\n\n\t\tif (changes.theme !== undefined && changes.theme.currentValue !== undefined) {\n\t\t\tthis.themeConfig = this.gridThemeConverter.convert(this.theme);\n\t\t}\n\n\t\tif (changes.rowColoring !== undefined && changes.rowColoring.currentValue !== undefined) {\n\t\t\tthis.rowColoringConfig = this.gridRowColoringConverter.convert(this.rowColoring);\n\t\t}\n\n\t\tif (changes.columnMenu !== undefined && changes.columnMenu.currentValue !== undefined) {\n\t\t\tthis.columnMenuConfig = this.gridColumnMenuConverter.convert(this.columnMenu);\n\t\t}\n\n\t\t// TODO\n\t\tif (changes.paging !== undefined && changes.paging.currentValue !== undefined) {\n\n\t\t\tif (typeof this.paging !== 'boolean') {\n\t\t\t\tthis.paging = this.gridPagingConverter.convert(this.paging);\n\t\t\t}\n\t\t}\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n\tonPageSizeChange(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n\n\tonItemSelect(item: any): void {\n\t\tthis.itemsSelected.emit(item);\n\t}\n\n\tonColumnsChange(): void {\n\t\tthis.columnsChanged.emit();\n\t}\n\n\tonContainerWidthChange(containerWidth: number): void {\n\t\tthis.containerWidthChanged.emit(containerWidth);\n\t}\n\n\tonSourceEdit(value: any): void {\n\t\tthis.sourceEdited.emit(value);\n\t}\n\n\tonCellEditEnter(): void {\n\t\tthis.cellEditEntered.emit();\n\t}\n\n\tonCellEditSubmit(): void {\n\t\tthis.cellEditSubmitted.emit();\n\t}\n\n\tonCellEditCancel(): void {\n\t\tthis.cellEditCanceled.emit();\n\t}\n\n}\n","export abstract class GenericBuilder<T> {\n\n\tprotected abstract buildObject(): T;\n\n\tbuild(): T {\n\t\treturn this.buildObject();\n\t}\n\n}\n","import { GenericBuilder } from '../../../../common/cdk/generic-builder';\n\nexport class StructurePagingDefinitionBuilder extends GenericBuilder<StructurePagingDefinition> {\n\n\tprivate enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tsuper();\n\t\tthis.enabled = enabled;\n\t}\n\n\tprotected buildObject(): StructurePagingDefinition {\n\t\treturn new StructurePagingDefinition(this.enabled);\n\t}\n\n\twithEnabled(enabled: boolean): StructurePagingDefinitionBuilder {\n\t\tthis.enabled = enabled;\n\t\treturn this;\n\t}\n}\n\nexport class StructurePagingDefinitionDefaultBuilder extends StructurePagingDefinitionBuilder {\n\n\tprivate static readonly defaultEnabled = true;\n\n\tconstructor() {\n\t\tsuper(StructurePagingDefinitionDefaultBuilder.defaultEnabled);\n\t}\n}\n\nexport class StructurePagingDefinition {\n\n\tprivate readonly enabled: boolean;\n\n\tconstructor(enabled: boolean) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tstatic Builder = StructurePagingDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructurePagingDefinitionDefaultBuilder;\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { GenericBuilder } from '../../../common/cdk/generic-builder';\nimport { StructurePagingDefinition } from './paging/structure-paging-definition';\n\nexport class StructureDefinitionBuilder extends GenericBuilder<StructureDefinition> {\n\n\tprivate border: boolean = true;\n\n\tconstructor(private headerEnabled: boolean,\n\t\t\t\tprivate bottomPaging: StructurePagingDefinition,\n\t\t\t\tprivate topPaging: StructurePagingDefinition) {\n\t\tsuper();\n\t}\n\n\tprotected buildObject(): StructureDefinition {\n\t\treturn new StructureDefinition(\n\t\t\tthis.headerEnabled,\n\t\t\tthis.bottomPaging,\n\t\t\tthis.topPaging,\n\t\t\tthis.border\n\t\t);\n\t}\n\n\twithHeader(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.headerEnabled = enabled;\n\t\treturn this;\n\t}\n\n\twithBottomPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.bottomPaging = paging;\n\t\treturn this;\n\t}\n\n\twithTopPaging(paging: StructurePagingDefinition): StructureDefinitionBuilder {\n\t\tthis.topPaging = paging;\n\t\treturn this;\n\t}\n\n\twithBorder(enabled: boolean): StructureDefinitionBuilder {\n\t\tthis.border = enabled;\n\t\treturn this;\n\t}\n\n}\n\nexport class StructureDefinitionDefaultBuilder extends StructureDefinitionBuilder {\n\n\tprivate static readonly defaultHeaderEnabled: boolean = true;\n\tprivate static readonly defaultBottomPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\tprivate static readonly defaultTopPaging: StructurePagingDefinition = new StructurePagingDefinition.DefaultBuilder().build();\n\n\tconstructor() {\n\t\tsuper(\n\t\t\tStructureDefinitionDefaultBuilder.defaultHeaderEnabled,\n\t\t\tStructureDefinitionDefaultBuilder.defaultBottomPaging,\n\t\t\tStructureDefinitionDefaultBuilder.defaultTopPaging\n\t\t);\n\t}\n}\n\nexport class StructureDefinition {\n\n\tprivate readonly headerEnabled: boolean;\n\n\tprivate readonly bottomPaging: StructurePagingDefinition;\n\n\tprivate readonly topPaging: StructurePagingDefinition;\n\n\tprivate readonly border: boolean;\n\n\tconstructor(headerEnabled: boolean,\n\t\t\t\tbottomPaging: StructurePagingDefinition,\n\t\t\t\ttopPaging: StructurePagingDefinition,\n\t\t\t\tborder: boolean) {\n\t\tthis.headerEnabled = headerEnabled;\n\t\tthis.bottomPaging = bottomPaging;\n\t\tthis.topPaging = topPaging;\n\t\tthis.border = border;\n\t}\n\n\tstatic Builder = StructureDefinitionBuilder;\n\n\tstatic DefaultBuilder = StructureDefinitionDefaultBuilder;\n\n\tisHeaderEnabled(): boolean {\n\t\treturn this.headerEnabled;\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.border;\n\t}\n\n\tgetBottomPaging(): StructurePagingDefinition {\n\t\treturn this.bottomPaging;\n\t}\n\n\tgetTopPaging(): StructurePagingDefinition {\n\t\treturn this.topPaging;\n\t}\n\n}\n","import { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\n/** @internal */\nexport const gridStructureDefinition = new StructureDefinition.DefaultBuilder().build();\n","import { Provider } from '@angular/core';\n\nimport { StructureDefinition } from '../../../../lib/structure/ui/structure-definition';\n\nimport { gridStructureDefinition } from './grid-structure-definition';\n\nexport const gridProviders = [{\n\tprovide: StructureDefinition,\n\tuseValue: gridStructureDefinition\n}] as Array<Provider>;\n","import { InjectionToken } from '@angular/core';\n\nexport const structureParentComponent = new InjectionToken('StructureParentComponent');\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GridIdGenerator {\n\n\tprivate static readonly PREFIX = 'gui-grid-';\n\n\tprivate static index = 0;\n\n\tgenerateId(): string {\n\t\tGridIdGenerator.index++;\n\n\t\treturn GridIdGenerator.PREFIX + GridIdGenerator.index;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { GridComponent } from '../grid.component';\n\n@Injectable()\nexport class GridRegister {\n\n\tprivate readonly gridMap = new Map();\n\n\t// structureId: StructureId\n\tregister(gridId: string, component: GridComponent, structureId: any): void {\n\t\tthis.gridMap.set(gridId, { component, structureId });\n\t}\n\n\tunregister(gridId: string): void {\n\t\tthis.gridMap.delete(gridId);\n\t}\n\n\tgetValues(gridId: string): any {\n\t\treturn this.gridMap.get(gridId);\n\t}\n\n}\n","import { GridComponent } from '../grid.component';\n\nexport interface GridConsoleApi {\n\n\tchangeColumnHeaderTop(enabled: boolean): void;\n\n\n}\n\nexport class GridConsoleApiProvider {\n\n\tconstructor(private readonly gridComponent: GridComponent,\n\t\t\t\tprivate readonly structureId: any) {\n\t} // StructureId\n\n\tprovide(): GridConsoleApi {\n\n\t\tconst component = this.gridComponent;\n\n\t\treturn {\n\t\t\tchangeColumnHeaderTop(enabled: boolean): void {\n\t\t\t\tcomponent.columnHeaderTop = enabled;\n\t\t\t\tcomponent.detectChanges();\n\t\t\t}\n\t\t};\n\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, Input, OnInit, PLATFORM_ID, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { GridGateway } from './grid-gateway';\nimport { gridProviders } from './grid.providers';\n\nimport { structureParentComponent } from '../../../../lib/structure/ui/structure-parent-component';\n\nimport { GridIdGenerator } from './register/grid-id.generator';\nimport { GridRegister } from './register/grid.register';\nimport { GridConsoleApiProvider } from './console/grid.console.api';\nimport { isPlatformBrowser } from '@angular/common';\n\nexport const gridSelector = 'gui-grid';\n\n@Component({\n\tselector: gridSelector,\n\ttemplateUrl: './grid.component.html',\n\tstyleUrls: [\n\t\t'../grid.ngx.scss'\n\t],\n\tproviders: [\n\t\t...gridProviders,\n\t\t{\n\t\t\tprovide: structureParentComponent,\n\t\t\tuseExisting: GridComponent\n\t\t}\n\t],\n\thost: {\n\t\t'[class]': `\"${gridSelector}\"`,\n\t\t'[style.height]': 'maxHeight'\n\t},\n\tencapsulation: ViewEncapsulation.None\n})\nexport class GridComponent extends GridGateway implements OnInit {\n\n\t@ViewChild('structure', { static: true })\n\tstructureRef: any;\n\n\t@Input()\n\tgridId: string; // can be set once\n\n\tprivate localGridId: string;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate gridRegister: GridRegister,\n\t\t\t\tprivate gridIdGenerator: GridIdGenerator) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tlet gridId = this.gridId;\n\n\t\tif (gridId === undefined) {\n\t\t\tgridId = this.gridIdGenerator.generateId();\n\t\t}\n\n\t\tthis.localGridId = gridId;\n\n\t\tthis.exposeGridId();\n\n\t\t// register\n\t\tthis.gridRegister.register(gridId, this, this.structureRef.getStructureId());\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['getGuiGrid'] = (gridId: string) => {\n\n\t\t\t\tconst gridConsoleConfig = this.gridRegister.getValues(gridId);\n\n\t\t\t\tif (gridConsoleConfig) {\n\t\t\t\t\treturn new GridConsoleApiProvider(gridConsoleConfig.component, gridConsoleConfig.structureId).provide();\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tthis.gridRegister.unregister(this.localGridId);\n\t}\n\n\tgetElementRef(): ElementRef {\n\t\treturn this.elementRef;\n\t}\n\n\tgetGridId(): string {\n\t\treturn '';\n\t}\n\n\tdetectChanges(): void {\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tprivate exposeGridId(): void {\n\t\tthis.elementRef.nativeElement.setAttribute('gui-grid-id', this.localGridId);\n\t}\n\n}\n","import {\n\tFabricBadgeModule,\n\tFabricButtonGroupModule,\n\tFabricButtonModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDialogModule,\n\tFabricDropdownModule,\n\tFabricInlineDialogModule,\n\tFabricInputModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule\n} from '@generic-ui/fabric';\n\n\nexport const fabricImports = [\n\tFabricBadgeModule,\n\tFabricButtonModule,\n\tFabricButtonGroupModule,\n\tFabricCheckboxModule,\n\tFabricChipModule,\n\tFabricDropdownModule,\n\tFabricRadioButtonModule,\n\tFabricRadioGroupModule,\n\tFabricProgressBarModule,\n\tFabricProgressSpinnerModule,\n\tFabricSelectModule,\n\tFabricSpinnerModule,\n\tFabricTabModule,\n\tFabricToggleButtonModule,\n\tFabricInputModule,\n\tFabricDialogModule,\n\tFabricInlineDialogModule,\n\tFabricTabModule\n];\n","import { OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport abstract class Reactive implements OnDestroy {\n\n\tprivate readonly unsubscribe$ = new Subject<void>();\n\n\tprotected constructor() {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe();\n\t}\n\n\tprotected unsubscribe(): void {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tprotected takeUntil() {\n\t\treturn takeUntil(this.unsubscribe$);\n\t}\n\n}\n","import { Reactive } from './reactive';\n\nexport abstract class SmartComponent extends Reactive {\n}\n","import { Observable } from 'rxjs/';\n\nimport { AggregateId } from '@generic-ui/hermes';\nimport { Structure } from './structure';\n\n\nexport abstract class StructureRepository {\n\n\tabstract onStructure(aggregateId: AggregateId): Observable<Structure>;\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Paging } from './paging';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class PagingRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Paging> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getPaging())\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class StructureId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { StructureId } from './structure-id';\n\nexport const globalStructureId = new StructureId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Paging } from '../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class PagingReadModelService {\n\n\tconstructor(private pagingRepository: PagingRepository) {\n\t}\n\n\tonPaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.pagingRepository.on(structureId);\n\t}\n\n\tonSinglePaging(structureId: StructureId = globalStructureId): Observable<Paging> {\n\t\treturn this.onPaging(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { PagingConfig } from '../../paging-config';\n\nexport class SetPagingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload: PagingConfig) {\n\t\tsuper(structureId, 'SetPagingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class ChangePagesizeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly pageSize: number) {\n\t\tsuper(structureId, 'ChangePagesizeCommand');\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class NextPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'NextPageCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class PrevPageCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'PrevPageCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { PagingConfig } from '../paging-config';\nimport { SetPagingCommand } from './set/set-paging.command';\nimport { ChangePagesizeCommand } from './change-pagesize/change-pagesize.command';\nimport { NextPageCommand } from './next-page/next-page.command';\nimport { PrevPageCommand } from './prev-page/prev-page.command';\n\n\n@Injectable()\nexport class PagingDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetPaging(structureId: StructureId, paging: PagingConfig): void {\n\t\tthis.commandDispatcher.dispatch(new SetPagingCommand(structureId, paging));\n\t}\n\n\tchangePageSize(structureId: StructureId, pageSize: number): void {\n\t\tthis.commandDispatcher.dispatch(new ChangePagesizeCommand(structureId, pageSize));\n\t}\n\n\tnextPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new NextPageCommand(structureId));\n\t}\n\n\tprevPage(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new PrevPageCommand(structureId));\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { PagingConfig } from '../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class PagingCommandService {\n\n\tconstructor(private pagingDispatcher: PagingDispatcher) {\n\t}\n\n\tenable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: true });\n\t}\n\n\tdisable(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { enabled: false });\n\t}\n\n\tsetPaging(paging: PagingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, paging);\n\t}\n\n\tchangePageSize(pageSize: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.changePageSize(structureId, pageSize);\n\t}\n\n\tnextPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.nextPage(structureId);\n\t}\n\n\tprevPage(structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.prevPage(structureId);\n\t}\n\n\tgoToPage(pageNumber: number, currentPage: number) {\n\n\t\tif (currentPage < pageNumber) {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.nextPage();\n\t\t\t\tcurrentPage += 1;\n\t\t\t}\n\t\t} else {\n\t\t\twhile (currentPage !== pageNumber) {\n\t\t\t\tthis.prevPage();\n\t\t\t\tcurrentPage -= 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tchangePagerTop(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerTop: enabled });\n\t}\n\n\tchangePagerBottom(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.pagingDispatcher.setPaging(structureId, { pagerBottom: enabled });\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureSourceOriginRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetOrigin(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonOrigin(structureId: StructureId): Observable<Array<any>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { OriginItemEntity } from '../../command/origin/origin-item-entity';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructurePreparedItemsRepository {\n\n\tprivate origin = new Map<string, Array<any>>();\n\n\tprivate origin$ = new ReplaySubject<Map<string, Array<any>>>();\n\n\tsetItems(origin: Array<OriginItemEntity>, structureId: StructureId): void {\n\t\tthis.origin.set(structureId.toString(), origin);\n\t\tthis.origin$.next(this.origin);\n\t}\n\n\tonPreparedItems(structureId: StructureId): Observable<Array<OriginItemEntity>> {\n\n\t\treturn this.origin$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, Array<any>>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, take } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class SourceReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate structurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tprivate structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t}\n\n\tonEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getEntities()),\n\t\t\t\t\t   distinctUntilChanged((ents1: Array<ItemEntity>, ents2: Array<ItemEntity>) => {\n\t\t\t\t\t\t   if (ents1.length !== ents2.length) {\n\t\t\t\t\t\t\t   return false;\n\t\t\t\t\t\t   }\n\n\t\t\t\t\t\t   let flag = true;\n\n\t\t\t\t\t\t   ents1.forEach((ent, index) => {\n\t\t\t\t\t\t\t   if (!ent.equals(ents2[index])) {\n\t\t\t\t\t\t\t\t   flag = false;\n\t\t\t\t\t\t\t\t   return;\n\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t   });\n\n\t\t\t\t\t\t   return flag;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonEntitiesSize(structureId: StructureId = globalStructureId): Observable<number> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t   return entities.length;\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonSingleEntities(structureId: StructureId = globalStructureId): Observable<Array<ItemEntity>> {\n\n\t\treturn this.onEntities(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonOriginSize(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.structureSourceOriginRepository\n\t\t\t\t   .onOrigin(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map(origin => origin.length)\n\t\t\t\t   );\n\t}\n\n\tonLoading(structureId: StructureId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.getSource().isLoading())\n\t\t\t\t   );\n\t}\n\n\tonPreparedEntities(structureId: StructureId = globalStructureId): Observable<any> {\n\t\treturn this.structurePreparedItemsRepository.onPreparedItems(structureId);\n\t}\n\n}\n","import { BehaviorSubject, Observable, ReplaySubject, Subject } from 'rxjs';\n\nexport abstract class Archive<T> {\n\n\tprivate readonly archive$: Subject<T>;\n\n\tprotected constructor(value?: T) {\n\t\tif (value) {\n\t\t\tthis.archive$ = new BehaviorSubject(value);\n\t\t} else {\n\t\t\tthis.archive$ = new ReplaySubject(1);\n\t\t}\n\t}\n\n\tonValue(): Observable<T> {\n\t\treturn this.archive$.asObservable();\n\t}\n\n\tnext(value: T): void {\n\t\tthis.archive$.next(value);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { PagingDisplayMode } from './paging-display-mode';\n\n\n@Injectable()\nexport class StructurePagingDisplayModeArchive extends Archive<PagingDisplayMode> {\n\n\tconstructor() {\n\t\tsuper(PagingDisplayMode.BASIC);\n\t}\n\n\tonValue(): Observable<PagingDisplayMode> {\n\t\treturn super.onValue();\n\t\t// .pipe(\n\t\t// \tdistinctUntilChanged()\n\t\t// );\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { StructurePagingDisplayModeArchive } from './mode/structure-paging.display-mode.archive';\nimport { PagingDisplayMode } from './mode/paging-display-mode';\n\n\n@Component({\n\tselector: 'gui-structure-paging',\n\ttemplateUrl: 'structure-paging.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingComponent extends SmartComponent implements OnInit {\n\n\tsourceSize: number;\n\n\tpaging: Paging;\n\n\talternativeDisplay: boolean = false;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate pagingCommandService: PagingCommandService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structurePagingDisplayModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((mode: PagingDisplayMode) => {\n\t\t\t\tthis.alternativeDisplay = mode === PagingDisplayMode.ADVANCED;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.paging = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tchangePageSize(pageSize: number) {\n\t\tthis.pagingCommandService.changePageSize(pageSize);\n\t}\n\n\tnextPage(): void {\n\n\t\tif (!this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pagingCommandService.nextPage();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingCommandService.prevPage();\n\t}\n\n}\n","export class Paging {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly page: number,\n\t\t\t\tprivate readonly pageSize: number,\n\t\t\t\tprivate readonly pageSizes: Array<number>,\n\t\t\t\tprivate readonly pagerTop: boolean,\n\t\t\t\tprivate readonly pagerBottom: boolean,\n\t\t\t\tprivate readonly isNextDisabled: boolean,\n\t\t\t\tprivate readonly isPrevDisabled: boolean,\n\t\t\t\tprivate readonly start: number,\n\t\t\t\tprivate readonly end: number,\n\t\t\t\tprivate readonly sourceSize: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\treturn this.pagerBottom;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\t\treturn this.isNextDisabled;\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.isPrevDisabled;\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tcalculateVisiblePages(currentPage: number, numberOfVisiblePages: number, page: number): boolean {\n\t\treturn currentPage - numberOfVisiblePages < page && page < currentPage + numberOfVisiblePages;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tlet start = this.getStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.getEnd());\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n@Component({\n\tselector: 'gui-structure-paging-navigator',\n\ttemplateUrl: `structure-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-select',\n\ttemplateUrl: `structure-paging-select.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingSelectComponent {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Output()\n\tpageSizeChanged = new EventEmitter();\n\n\tchangePageSize(pageSize: number): void {\n\t\tthis.pageSizeChanged.emit(pageSize);\n\t}\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Component({\n\tselector: 'gui-structure-paging-stats',\n\ttemplateUrl: `structure-paging-stats.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructurePagingStatsComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\tsourceSize: number;\n\n\tfirstItemIndex: number;\n\n\tlastItemIndex: number;\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging) {\n\t\t\tthis.firstItemIndex = this.paging.getStart();\n\t\t\tthis.lastItemIndex = this.paging.getEnd();\n\t\t\tthis.sourceSize = this.paging.getSourceSize();\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-navigator',\n\ttemplateUrl: `structure-alternative-paging-navigator.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingNavigatorComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number;\n\n\t@Output()\n\tnextPageChanged = new EventEmitter();\n\n\t@Output()\n\tprevPageChanged = new EventEmitter();\n\n\tprevDisabled: boolean = false;\n\n\tnextDisabled: boolean = false;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.calculatePrev();\n\t\tthis.calculateNext();\n\t}\n\n\tprevPage(): void {\n\t\tthis.prevPageChanged.emit();\n\t}\n\n\tnextPage(): void {\n\t\tthis.nextPageChanged.emit();\n\t}\n\n\tfirstPage(): void {\n\t\tthis.pagingCommandService.goToPage(1, this.paging.getPage());\n\t}\n\n\tlastPage(): void {\n\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\t\tthis.pagingCommandService.goToPage(numberOfPages, this.paging.getPage());\n\t}\n\n\tprivate calculatePrev(): void {\n\n\t\tif (!this.paging) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prevDisabled = this.paging.isPrevPageDisabled();\n\t}\n\n\tprivate calculateNext(): void {\n\n\t\tif (!this.paging && !this.sourceSize) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.nextDisabled = this.paging.isNextPageDisabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { Paging } from '../../../../domain/paging/read/paging';\nimport { PagingCommandService } from '../../../../ui-api/paging/paging-command.service';\n\n\n@Component({\n\tselector: 'gui-structure-alternative-paging-pages',\n\ttemplateUrl: `structure-alternative-paging-pages.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureAlternativePagingPagesComponent implements OnChanges {\n\n\t@Input()\n\tpaging: Paging;\n\n\t@Input()\n\tsourceSize: number = 0;\n\n\tcurrentPage: number;\n\n\tpages: Array<number>;\n\n\tnumberOfVisiblePages: number = 3;\n\n\tconstructor(private pagingCommandService: PagingCommandService) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tthis.calculate();\n\t}\n\n\tcalculate(): void {\n\t\tif (this.paging && this.sourceSize) {\n\t\t\tlet numberOfPages = Math.ceil(this.sourceSize / this.paging.getPageSize());\n\n\t\t\tthis.currentPage = this.paging.getPage();\n\n\t\t\tthis.pages = [];\n\t\t\tif (this.pages.length <= numberOfPages) {\n\t\t\t\tfor (let i = 1; i <= numberOfPages; i++) {\n\t\t\t\t\tthis.pages.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tisSourceNotEmpty(): boolean {\n\t\treturn this.sourceSize > 0;\n\t}\n\n\tgoToPage(pageNumber: number) {\n\t\tconst currentPage = this.paging.getPage();\n\t\tthis.pagingCommandService.goToPage(pageNumber, currentPage);\n\t}\n\n\tcalculateVisiblePages(page: number): boolean {\n\t\treturn this.paging.calculateVisiblePages(this.currentPage, this.numberOfVisiblePages, page);\n\t}\n\n\tactivePage(page: number): boolean {\n\t\treturn this.currentPage === page;\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructurePagingComponent } from './structure-paging.component';\nimport { StructurePagingNavigatorComponent } from './navigator/structure-paging-navigator.component';\nimport { StructurePagingSelectComponent } from './select/structure-paging-select.component';\nimport { StructurePagingStatsComponent } from './stats/structure-paging-stats.component';\nimport { StructureAlternativePagingNavigatorComponent } from './alternative-paging/navigator/structure-alternative-paging-navigator.component';\nimport { StructureAlternativePagingPagesComponent } from './alternative-paging/pages/structure-alternative-paging-pages.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t],\n\texports: [\n\t\tStructurePagingComponent,\n\t\tStructurePagingNavigatorComponent,\n\t\tStructurePagingSelectComponent,\n\t\tStructurePagingStatsComponent,\n\t\tStructureAlternativePagingNavigatorComponent,\n\t\tStructureAlternativePagingPagesComponent\n\t]\n})\nexport class StructurePagingModule {\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'numberFormatter' })\nexport class NumberFormatterPipe implements PipeTransform {\n\n\ttransform(number: number): string {\n\t\treturn number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { NumberFormatterPipe } from './number-formatter.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tNumberFormatterPipe\n\t],\n\texports: [\n\t\tNumberFormatterPipe\n\t]\n})\nexport class NumberFormatterModule {\n\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n\ttemplate: `\n\t\t<div class=\"gui-structure-info-modal\">\n\n\t\t\t<p class=\"gui-info-title\">Generic UI Grid</p>\n\n\t\t\t<p class=\"gui-info-version\">version 0.7.0</p>\n\n\t\t\t<p>Links:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/\">Website</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"http://generic-ui.com/guide/\">Documentation</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/tree/master/ngx-grid\">Github</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<p>Feedback:</p>\n\t\t\t<ul>\n\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Report a bug</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://github.com/generic-ui/generic-ui/issues\">Suggest an idea</a>\n\t\t\t\t</li>\n\n\t\t\t</ul>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StructureInfoModalComponent {\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class VerticalScrollEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'VerticalScrollEnabledSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../domain/structure/command/structure.aggregate';\n\n\n@Injectable()\nexport class InMemoryStructureStore extends InMemoryStore<StructureAggregate> {\n}\n","import { ItemEntity } from '../../../source/item.entity';\n\nexport class SelectedRowsList {\n\n\tconstructor(private readonly rowIds: Array<string>) {\n\t}\n\n\tisRowSelected(entity: ItemEntity): boolean {\n\t\treturn !!(this.rowIds.find((id) => entity.equalsById(id)));\n\t}\n\n\tgetIds(): Array<string> {\n\t\treturn this.rowIds;\n\t}\n}\n","import { SelectedRowsList } from './selected-rows/selected-rows-list';\n\nexport class Formation {\n\n\tprivate readonly selectedRowsList: SelectedRowsList;\n\n\tconstructor(selectedRows: Array<string>) {\n\t\tthis.selectedRowsList = new SelectedRowsList(selectedRows);\n\t}\n\n\tgetSelectedRows(): SelectedRowsList {\n\t\treturn this.selectedRowsList;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './command/formation-aggregate';\nimport { Formation } from './read/formation';\n\n\n@Injectable()\nexport class FormationConverter {\n\n\tconvert(aggregate: FormationAggregate): Formation {\n\n\t\tconst rows = aggregate.getSelectedRows();\n\n\t\treturn new Formation(rows);\n\t}\n}\n","import { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaCssClass {\n\n\tconstructor(public readonly verticalGrid: boolean,\n\t\t\t\tpublic readonly horizontalGrid: boolean,\n\t\t\t\tpublic readonly theme: SchemaTheme,\n\t\t\t\tpublic readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n}\n","import { SchemaRowColoring } from '../schema-row-coloring';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaColumnHeader } from './schema-column-header';\nimport { SchemaCssClass } from './schema-css-class';\n\nexport class Schema {\n\n\tconstructor(private readonly width: number,\n\t\t\t\tprivate readonly height: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly verticalGridEnabled: boolean,\n\t\t\t\tprivate readonly horizontalGridEnabled: boolean,\n\t\t\t\tprivate readonly theme: SchemaTheme,\n\t\t\t\tprivate readonly columnHeader: SchemaColumnHeader,\n\t\t\t\tprivate readonly rowColoring: SchemaRowColoring) {\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGridEnabled;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGridEnabled;\n\t}\n\n\tgetColumnHeader(): SchemaColumnHeader {\n\t\treturn this.columnHeader;\n\t}\n\n\tgetCssClasses(): SchemaCssClass {\n\t\treturn new SchemaCssClass(\n\t\t\tthis.isVerticalGridEnabled(),\n\t\t\tthis.isHorizontalGridEnabled(),\n\t\t\tthis.getTheme(),\n\t\t\tthis.getRowColoring()\n\t\t);\n\t}\n\n}\n","export class SchemaColumnHeader {\n\n\tconstructor(private readonly top: boolean,\n\t\t\t\tprivate readonly bottom: boolean) {\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaAggregate } from './command/schema-aggregate';\nimport { Schema } from './read/schema';\nimport { ColumnHeaderEntity } from './command/column-header/column-header.entity';\nimport { SchemaColumnHeader } from './read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaConverter {\n\n\tconvert(aggregate: SchemaAggregate): Schema {\n\n\t\tconst columnHeader = aggregate.getColumnHeader();\n\n\t\treturn new Schema(\n\t\t\taggregate.getWidth(),\n\t\t\taggregate.getHeight(),\n\t\t\taggregate.getContainerHeight(),\n\t\t\taggregate.isVerticalGridEnabled(),\n\t\t\taggregate.isHorizontalGridEnabled(),\n\t\t\taggregate.getTheme(),\n\t\t\tthis.convertColumnHeader(columnHeader),\n\t\t\taggregate.getRowColoring()\n\t\t);\n\t}\n\n\tprivate convertColumnHeader(columnHeader: ColumnHeaderEntity): SchemaColumnHeader {\n\t\treturn new SchemaColumnHeader(columnHeader.isHeaderOnTop(), columnHeader.isHeaderOnBottom());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregate } from './command/paging.aggregate';\nimport { Paging } from './read/paging';\n\n\n@Injectable()\nexport class PagingConverter {\n\n\tconvert(aggregate: PagingAggregate): Paging {\n\t\treturn new Paging(\n\t\t\taggregate.isEnabled(),\n\t\t\taggregate.getPage(),\n\t\t\taggregate.getPageSize(),\n\t\t\taggregate.getPageSizes(),\n\t\t\taggregate.isPagerTop(),\n\t\t\taggregate.isPagerBottom(),\n\t\t\taggregate.isNextPageDisabled(),\n\t\t\taggregate.isPrevPageDisabled(),\n\t\t\taggregate.calculateStart(),\n\t\t\taggregate.calculateEnd(),\n\t\t\taggregate.getSourceSize()\n\t\t);\n\t}\n\n}\n","export class Source {\n\n\tconstructor(private readonly loading: boolean) {\n\t}\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Source } from './read/source';\nimport { SourceManager } from './command/source.manager';\n\n@Injectable()\nexport class SourceConverter {\n\n\tconvert(aggregate: SourceManager): Source {\n\t\treturn new Source(aggregate.isLoading());\n\t}\n\n}\n","export class VerticalFormationReadModel {\n\n\tconstructor(private readonly enabled: boolean,\n\t\t\t\tprivate readonly topMargin: number,\n\t\t\t\tprivate readonly containerHeight: number,\n\t\t\t\tprivate readonly viewportHeight: number,\n\t\t\t\tprivate readonly rowHeight: number) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.topMargin;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.containerHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VerticalFormation } from '../../command/vertical-formation/vertical-formation';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\n\n\n@Injectable()\nexport class VerticalFormationConverter {\n\n\tconvert(verticalFormation: VerticalFormation): VerticalFormationReadModel {\n\n\t\tconst enabled = verticalFormation.isEnabled(),\n\t\t\ttopMargin = verticalFormation.getTopMargin(),\n\t\t\tcontainerHeight = verticalFormation.calcFullHeight(),\n\t\t\tviewportHeight = verticalFormation.getViewPortHeight(),\n\t\t\trowHeight = verticalFormation.getRowHeight();\n\n\t\treturn new VerticalFormationReadModel(enabled, topMargin, containerHeight, viewportHeight, rowHeight);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { Formation } from '../../formation/read/formation';\nimport { Schema } from '../../schema/read/schema';\nimport { Paging } from '../../paging/read/paging';\nimport { Source } from '../../source/read/source';\nimport { ItemEntity } from '../../source/item.entity';\nimport { VerticalFormationReadModel } from './vertical-formation/vertical-formation.read-model';\n\n\nexport class Structure extends ReadModel {\n\n\tprivate readonly formation: Formation;\n\n\tprivate readonly schema: Schema;\n\n\tprivate readonly paging: Paging;\n\n\tprivate readonly entities: Array<ItemEntity>;\n\n\tprivate readonly source: Source;\n\n\tprivate readonly verticalFormation: VerticalFormationReadModel;\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tformation: Formation,\n\t\t\t\tschema: Schema,\n\t\t\t\tpaging: Paging,\n\t\t\t\tentities: Array<ItemEntity>,\n\t\t\t\tsource: Source,\n\t\t\t\tverticalFormation: VerticalFormationReadModel) {\n\t\tsuper(uid);\n\t\tthis.formation = formation;\n\t\tthis.schema = schema;\n\t\tthis.paging = paging;\n\t\tthis.entities = entities;\n\t\tthis.source = source;\n\t\tthis.verticalFormation = verticalFormation;\n\t}\n\n\tgetFormation(): Formation {\n\t\treturn this.formation;\n\t}\n\n\tgetSchema(): Schema {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): Paging {\n\t\treturn this.paging;\n\t}\n\n\tgetEntities(): Array<ItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tgetSource(): Source {\n\t\treturn this.source;\n\t}\n\n\tgetVerticalFormation(): VerticalFormationReadModel {\n\t\treturn this.verticalFormation;\n\t}\n\n\tgetSelectedEntities(): Array<ItemEntity> {\n\n\t\tconst selectedIds = this.formation.getSelectedRows().getIds();\n\n\t\treturn this.entities.filter((entity: ItemEntity) => {\n\t\t\treturn selectedIds.some((id: string) => entity.equalsById(id));\n\t\t});\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.verticalFormation.getTopMargin();\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.verticalFormation.getContainerHeight();\n\t}\n\n\tisLoaderVisible(): boolean {\n\t\tif (this.getSchema().getHeight() > 150) {\n\t\t\treturn this.getSource().isLoading();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tisTopHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isTopHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.topHeader to presentation\n\t}\n\n\tisBottomHeaderEnabled(): boolean {\n\t\treturn this.schema.getColumnHeader().isBottomHeaderEnabled();\n\t\t// && this.presentation.getColumns().length > 0; // TODO Move schema.bottomHeader to presentation\n\t}\n\n\tisReadyToDisplay(): boolean {\n\t\treturn this.entities.length > 0;\n\t\t// this.presentation.getColumns().length > 0; // TODO presentation getColumns\n\t}\n\n\tisVerticalScrollEnabled(): boolean {\n\t\treturn this.verticalFormation.isEnabled();\n\t}\n\n}\n\n","import { Entity, RandomStringGenerator } from '@generic-ui/hermes';\n\n\n@Entity\nexport class ItemEntity {\n\n\tprivate readonly id: string;\n\n\tprivate readonly data: any;\n\n\tprivate readonly position: number;\n\n\tprivate readonly version: number = 0;\n\n\tconstructor(data: any,\n\t\t\t\tposition: number,\n\t\t\t\tid?: string,\n\t\t\t\tversion: number = 0) {\n\t\tthis.data = data;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t\tif (!id) {\n\t\t\tthis.id = RandomStringGenerator.generate();\n\t\t} else {\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\tgetData(): any {\n\t\treturn this.data;\n\t}\n\n\tgetUiId(): string {\n\t\treturn 'gui' + this.id.replace(/-/g, '');\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tisEven(): boolean {\n\t\treturn this.position % 2 === 0;\n\t}\n\n\tisOdd(): boolean {\n\t\treturn this.position % 2 === 1;\n\t}\n\n\tequals(entity: ItemEntity): boolean {\n\t\treturn this.id === entity.id && this.getVersion() === entity.getVersion();\n\t}\n\n\tequalsById(id: string): boolean {\n\t\treturn this.id === id;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationConverter } from '../formation/formation.converter';\nimport { SchemaConverter } from '../schema/schema.converter';\nimport { PagingConverter } from '../paging/paging.converter';\nimport { SourceConverter } from '../source/source.converter';\nimport { VerticalFormationConverter } from './read/vertical-formation/vertical-formation.converter';\nimport { StructureAggregate } from './command/structure.aggregate';\nimport { Structure } from './read/structure';\nimport { OriginItemEntity } from '../source/command/origin/origin-item-entity';\nimport { ItemEntity } from '../source/item.entity';\n\n\n@Injectable()\nexport class StructureConverter {\n\n\tconstructor(private formationConverter: FormationConverter,\n\t\t\t\tprivate schemaConverter: SchemaConverter,\n\t\t\t\tprivate pagingConverter: PagingConverter,\n\t\t\t\tprivate sourceConverter: SourceConverter,\n\t\t\t\tprivate verticalFormationConverter: VerticalFormationConverter) {\n\t}\n\n\tconvert(aggregate: StructureAggregate): Structure {\n\n\t\tconst formationAggregate = aggregate.getFormation(),\n\t\t\tschemaAggregate = aggregate.getSchema(),\n\t\t\tpagingAggregate = aggregate.getPaging(),\n\t\t\tsourceQuery = aggregate.getEntities(),\n\t\t\tsourceCoordinator = aggregate.getSource(),\n\t\t\tverticalFormation = aggregate.getVerticalFormation();\n\n\t\treturn new Structure(\n\t\t\taggregate.getId(),\n\t\t\tthis.formationConverter.convert(formationAggregate),\n\t\t\tthis.schemaConverter.convert(schemaAggregate),\n\t\t\tthis.pagingConverter.convert(pagingAggregate),\n\t\t\tthis.convertSource(sourceQuery),\n\t\t\tthis.sourceConverter.convert(sourceCoordinator),\n\t\t\tthis.verticalFormationConverter.convert(verticalFormation)\n\t\t);\n\t}\n\n\tprivate convertSource(source: Array<OriginItemEntity>): Array<ItemEntity> {\n\t\treturn source.map((originItem: OriginItemEntity) => {\n\t\t\treturn new ItemEntity(originItem.rawData, originItem.getPosition(), originItem.id, originItem.getVersion());\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\nimport { StructureConverter } from '../../../../domain/structure/structure.converter';\n\n\n@Injectable()\nexport class InMemoryStructureReadStore extends InMemoryReadModelStore<Structure, StructureAggregate> {\n\n\tconstructor(private inMemoryProjectStore: InMemoryStructureStore,\n\t\t\t\tprivate structureConverter: StructureConverter) {\n\t\tsuper(inMemoryProjectStore);\n\t}\n\n\ttoReadModel(aggregate: StructureAggregate): Structure {\n\t\treturn this.structureConverter.convert(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowHeightSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowHeightSetEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { Reactive } from '../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../structure-id';\nimport { VerticalFormationReadModel } from './vertical-formation.read-model';\nimport { StructureInitedEvent } from '../../command/init/structure-inited.event';\nimport { VerticalScrollEnabledSetEvent } from '../../command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { InMemoryStructureReadStore } from '../../../../infrastructure/in-memory/structure/read/in-memory-structure.read-store';\nimport { RowHeightSetEvent } from '../../command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class VerticalFormationRepository extends Reactive {\n\n\tprivate readonly verticalFormation = new Map<string, VerticalFormationReadModel>();\n\n\tprivate readonly verticalFormation$ = new ReplaySubject<Map<string, VerticalFormationReadModel>>();\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tverticalFormation = structure.getVerticalFormation(),\n\t\t\t\t\tstructureId = structure.getId();\n\n\t\t\t\tthis.next(structureId, verticalFormation);\n\t\t\t});\n\t}\n\n\tonVerticalScrollEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.isEnabled())\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(structureId: StructureId): Observable<number> {\n\n\t\treturn this.onVerticalFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((v: VerticalFormationReadModel) => v.getRowHeight())\n\t\t\t\t   );\n\t}\n\n\tprivate onVerticalFormation(structureId: StructureId): Observable<VerticalFormationReadModel> {\n\n\t\treturn this.verticalFormation$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => {\n\n\t\t\t\t\t\t   const key = structureId.getId();\n\n\t\t\t\t\t\t   return idToVerticalFormation.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((idToVerticalFormation: Map<string, VerticalFormationReadModel>) => idToVerticalFormation.get(structureId.getId()))\n\t\t\t\t   );\n\t}\n\n\tprivate next(structureId: StructureId, verticalFormation: VerticalFormationReadModel): void {\n\t\tthis.verticalFormation.set(structureId.toString(), verticalFormation);\n\t\tthis.verticalFormation$.next(this.verticalFormation);\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../domain/structure/read/structure.repository';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class StructureReadModelService {\n\n\tconstructor(private structureRepository: StructureRepository,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository) {\n\t}\n\n\tonStructure(aggregateId: AggregateId = globalStructureId): Observable<Structure> {\n\t\treturn this.structureRepository.onStructure(aggregateId);\n\t}\n\n\tonVerticalScrollEnabled(aggregateId: AggregateId = globalStructureId): Observable<boolean> {\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(aggregateId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((structure: Structure) => structure.isVerticalScrollEnabled()),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n\tonRowHeight(aggregateId: AggregateId = globalStructureId): Observable<number> {\n\t\treturn this.verticalFormationRepository.onRowHeight(aggregateId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n\nimport { FabricDialogService } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-info-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"preparedItemsSize !== undefined && totalItemsSize !== undefined\">\n\n\t\t\t<p *ngIf=\"preparedItemsSize === totalItemsSize\">\n\t\t\t\tShowing <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t\t<p *ngIf=\"preparedItemsSize !== totalItemsSize\">\n\t\t\t\tShowing <b>{{preparedItemsSize | numberFormatter}}</b> out of <b>{{totalItemsSize | numberFormatter}}</b> items\n\t\t\t</p>\n\n\t\t</ng-container>\n\t\t<div>\n\t\t\t<p (click)=\"openInfo()\">\n\t\t\t\t<button>i</button>\n\t\t\t\tInfo\n\t\t\t</p>\n\t\t</div>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureInfoPanelComponent extends SmartComponent implements OnInit {\n\n\ttotalItemsSize: number;\n\n\tpreparedItemsSize: number;\n\n\trowHeight: number;\n\n\tinfoPanel = StructureInfoModalComponent;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate dialog: FabricDialogService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceQueryService\n\t\t\t.onOriginSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.totalItemsSize = size;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.sourceQueryService\n\t\t\t.onPreparedEntities()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((preparedItems: Array<any>) => {\n\t\t\t\tthis.preparedItemsSize = preparedItems.length;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'line-height', '30px');\n\t\t\t});\n\t}\n\n\topenInfo() {\n\t\tthis.dialog.open(this.infoPanel);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NumberFormatterModule } from '../../../../../common/cdk/number-formatter/number-formatter.module';\nimport { StructureInfoPanelComponent } from './structure.info-panel.component';\nimport { StructureInfoModalComponent } from './structure-info-modal.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tNumberFormatterModule\n\t],\n\tdeclarations: [\n\t\tStructureInfoPanelComponent,\n\t\tStructureInfoModalComponent\n\t],\n\texports: [\n\t\tStructureInfoModalComponent,\n\t\tStructureInfoPanelComponent\n\t],\n\tentryComponents: [\n\t\tStructureInfoModalComponent\n\t]\n})\nexport class StructureInfoPanelModule {\n\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { CellView } from '../../cell-view';\nimport { TemplatesComponent } from '../template/templates.component';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #text let-element=\"element\">\n\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-element=\"element\">\n\t\t\t<span class=\"gui-cell-number\">\n\t\t\t\t{{ element }}\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #chip let-element=\"element\">\n\t\t\t<gui-chip>\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</gui-chip>\n\t\t</ng-template>\n\n\t\t<ng-template #link let-element=\"element\">\n\t\t\t<a gui-button link=\"true\" href=\"{{ element }}\">\n\t\t\t\t<span [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t\t</a>\n\t\t</ng-template>\n\n\t\t<ng-template #image let-element=\"element\">\n\t\t\t<img src=\"{{ element }}\"/>\n\t\t</ng-template>\n\n\t\t<ng-template #checkbox let-element=\"element\">\n\t\t\t<span class=\"gui-cell-boolean\">\n\t\t\t\t<gui-checkbox [checked]=\"!!element\" [disabled]=\"true\"></gui-checkbox>\n\t\t\t</span>\n\t\t</ng-template>\n\n\t\t<ng-template #bold let-element=\"element\">\n\t\t\t<span class=\"gui-bold\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #italic let-element=\"element\">\n\t\t\t<span class=\"gui-italic\" [innerHTML]=\"element | guiSafe: 'html'\"></span>\n\t\t</ng-template>\n\n\t\t<ng-template #custom let-element=\"element\">\n\t\t\t{{ element }}\n\t\t</ng-template>\n\n\t\t<ng-template #function let-element=\"element\">\n\t\t\t<gui-function-view [element]=\"element\"></gui-function-view>\n\t\t</ng-template>\n\n\t`\n})\nexport class ViewTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('text', { read: TemplateRef, static: true })\n\ttextTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('chip', { read: TemplateRef, static: true })\n\tchipTemplate: TemplateRef<any>;\n\n\t@ViewChild('link', { read: TemplateRef, static: true })\n\tlinkTemplate: TemplateRef<any>;\n\n\t@ViewChild('image', { read: TemplateRef, static: true })\n\timageTemplate: TemplateRef<any>;\n\n\t@ViewChild('checkbox', { read: TemplateRef, static: true })\n\tcheckboxTemplate: TemplateRef<any>;\n\n\t@ViewChild('bold', { read: TemplateRef, static: true })\n\tboldTemplate: TemplateRef<any>;\n\n\t@ViewChild('italic', { read: TemplateRef, static: true })\n\titalicTemplate: TemplateRef<any>;\n\n\t@ViewChild('custom', { read: TemplateRef, static: true })\n\tcustomTemplate: TemplateRef<any>;\n\n\t@ViewChild('function', { read: TemplateRef, static: true })\n\tfunctionTemplate: TemplateRef<any>;\n\n\tgetTemplate(view: CellView): TemplateRef<any> {\n\n\t\tswitch (view) {\n\n\t\t\tcase CellView.TEXT:\n\t\t\t\treturn this.textTemplate;\n\n\t\t\tcase CellView.CHIP:\n\t\t\t\treturn this.chipTemplate;\n\n\t\t\tcase CellView.LINK:\n\t\t\t\treturn this.linkTemplate;\n\n\t\t\tcase CellView.IMAGE:\n\t\t\t\treturn this.imageTemplate;\n\n\t\t\tcase CellView.CHECKBOX:\n\t\t\t\treturn this.checkboxTemplate;\n\n\t\t\tcase CellView.BOLD:\n\t\t\t\treturn this.boldTemplate;\n\n\t\t\tcase CellView.ITALIC:\n\t\t\t\treturn this.italicTemplate;\n\n\t\t\tcase CellView.CUSTOM:\n\t\t\t\treturn this.customTemplate;\n\n\t\t\tcase CellView.FUNCTION:\n\t\t\t\treturn this.functionTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.textTemplate;\n\t\t}\n\t}\n\n}\n","import { Observable, ReplaySubject } from 'rxjs';\n\nexport class ChangedValueEmitter<T> {\n\n\tprivate subject$ = new ReplaySubject<T>(1);\n\n\tconstructor() {\n\t}\n\n\temit(value: T): void {\n\t\tthis.subject$.next(value);\n\t}\n\n\ton(): Observable<T> {\n\t\treturn this.subject$.asObservable();\n\t}\n}\n","export enum EditEventType {\n\tSUBMIT,\n\tBLUR,\n\tCANCEL\n}\n","import { Input } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { ChangedValueEmitter } from './changed-value.emitter';\nimport { EditEventType } from './state/edit.event-type';\n\n\nexport abstract class EditCommunicationComponent<T> extends SmartComponent {\n\n\t@Input()\n\tvalue: T;\n\n\t@Input()\n\tvalueChanges: ChangedValueEmitter<T>;\n\n\t@Input()\n\tstatus: ChangedValueEmitter<EditEventType>;\n\n\t@Input()\n\tfocus: boolean;\n\n\tprotected readonly ENTER_KEY_CODE = 13;\n\n\tprotected readonly ESC_KEY_CODE = 27;\n\n\tsubmit(): void {\n\t\tthis.emitStatus(EditEventType.SUBMIT);\n\t}\n\n\tcancel(): void {\n\t\tthis.emitStatus(EditEventType.CANCEL);\n\t}\n\n\tprivate emitStatus(status: EditEventType): void {\n\t\tif (this.status) {\n\t\t\tthis.status.emit(status);\n\t\t}\n\t}\n\n}\n","import { ElementRef, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\nexport abstract class InputEditTemplateComponent<T> extends EditCommunicationComponent<T> {\n\n\t@ViewChild('input', { static: true })\n\tinputRef: ElementRef;\n\n\tfilterForm: FormGroup;\n\n\treadonly filterFieldName = 'phrase';\n\n\tprotected constructor(private formBuilder: FormBuilder) {\n\t\tsuper();\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.value !== undefined) {\n\t\t\tthis.filterForm.get(this.filterFieldName).setValue(this.value);\n\t\t}\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.inputRef.nativeElement;\n\n\t\tthis.focusField(inputElement);\n\n\t\tthis.emitValueChange(inputElement.value);\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tconst keyup$ = fromEvent(inputElement, 'keyup');\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ENTER_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\n\t\tkeyup$\n\t\t\t.pipe(\n\t\t\t\tfilter((e: any) => e.keyCode === this.ESC_KEY_CODE),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.cancel();\n\t\t\t});\n\t}\n\n\tfocusField(inputElement: HTMLElement): void {\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t}\n\t}\n\n\tprivate observeChanges() {\n\t\tthis.filterForm\n\t\t\t.controls[this.filterFieldName]\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: string) => {\n\t\t\t\tthis.emitValueChange(value);\n\t\t\t});\n\t}\n\n\tprivate emitValueChange(value: any): void {\n\t\tif (this.valueChanges) {\n\t\t\tthis.valueChanges.emit(value);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-number-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"number\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class NumberEditTemplateComponent extends InputEditTemplateComponent<number> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n}\n","/**\n * Override decorator\n *\n * class Car {\n *     drive() {}\n * }\n *\n * class FastCar {\n *     @Override\n *     drive() {}}\n * }\n */\nexport function Override(container: { [key: string]: any }, key: string) {\n\tconst basePrototype = Object.getPrototypeOf(container);\n\tif (typeof basePrototype[key] !== 'function') {\n\t\tthrow new Error('Method \"' + key + '\" of class \"' + container.constructor.name + '\" doesn\\'t override any method of base class.');\n\t}\n};\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { Override } from '../../../../../../common/cdk/decorators';\n\nimport { InputEditTemplateComponent } from './input-edit-template.component';\n\n\n@Component({\n\tselector: 'gui-string-edit',\n\ttemplate: `\n\n\t\t<form [formGroup]=\"filterForm\" >\n\t\t\t<input #input [formControlName]=\"filterFieldName\" type=\"type\" class=\"gui-input\" />\n\t\t</form>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StringEditTemplateComponent extends InputEditTemplateComponent<string> {\n\n\tconstructor(fb: FormBuilder) {\n\t\tsuper(fb);\n\t}\n\n\t@Override\n\tfocusField(inputElement: any): void {\n\n\t\tif (this.focus) {\n\t\t\tinputElement.focus();\n\t\t\tinputElement.setSelectionRange(0, inputElement.value.length);\n\t\t}\n\t}\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\n\nimport { TemplatesComponent } from '../template/templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Component({\n\ttemplate: `\n\n\t\t<ng-template #string let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-string-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-string-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #number let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-number-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-number-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #boolean let-valueChanges=\"valueChanges\" let-value=\"value\" let-status=\"status\" let-focus=\"focus\" >\n\t\t\t<gui-boolean-edit [valueChanges]=\"valueChanges\" [value]=\"value\" [status]=\"status\" [focus]=\"focus\">\n\t\t\t</gui-boolean-edit>\n\t\t</ng-template>\n\n\t\t<ng-template #empty>\n\n\t\t</ng-template>\n\n\t`\n})\nexport class EditTemplatesComponent implements TemplatesComponent {\n\n\t@ViewChild('string', { read: TemplateRef, static: true })\n\tstringTemplate: TemplateRef<any>;\n\n\t@ViewChild('number', { read: TemplateRef, static: true })\n\tnumberTemplate: TemplateRef<any>;\n\n\t@ViewChild('boolean', { read: TemplateRef, static: true })\n\tbooleanTemplate: TemplateRef<any>;\n\n\t@ViewChild('empty', { read: TemplateRef, static: true })\n\temptyTemplate: TemplateRef<any>;\n\n\tgetTemplate(dataType: DataType): TemplateRef<any> {\n\n\t\tswitch (dataType) {\n\n\t\t\tcase DataType.STRING:\n\t\t\t\treturn this.stringTemplate;\n\n\t\t\tcase DataType.NUMBER:\n\t\t\t\treturn this.numberTemplate;\n\n\t\t\tcase DataType.BOOLEAN:\n\t\t\t\treturn this.booleanTemplate;\n\n\t\t\tdefault:\n\t\t\t\treturn this.emptyTemplate;\n\t\t}\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { EditCommunicationComponent } from '../edit-communication.component';\n\n\n@Component({\n\tselector: 'gui-boolean-edit',\n\ttemplate: `\n\n\t\t<gui-checkbox #checkbox\n\t\t\t\t\t  [checked]=\"value\"\n\t\t\t\t\t  [name]=\"filterFieldName\"\n\t\t\t\t\t  (changed)=\"toggle($event)\">\n\t\t</gui-checkbox>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class BooleanEditTemplateComponent extends EditCommunicationComponent<boolean> {\n\n\t@ViewChild('checkbox', { read: ElementRef, static: true })\n\tcheckboxRef: ElementRef;\n\n\treadonly filterFieldName = 'booleanEdit';\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tngAfterViewInit() {\n\t\tconst inputElement = this.checkboxRef.nativeElement.querySelector('input[type=\"checkbox\"]');\n\n\t\tinputElement.focus();\n\n\t\tfromEvent(inputElement, 'blur')\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(400),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.unsubscribe();\n\t\t\t\tthis.submit();\n\t\t\t});\n\t}\n\n\ttoggle(changed: boolean): void {\n\t\tthis.valueChanges.emit(changed);\n\t}\n\n\n}\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-column',\n\ttemplate: ''\n})\nexport class ColumnQueryComponent {\n\n\t@ContentChild(TemplateRef, { static: false })\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\t@Input()\n\theader: string;\n\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n\n@Component({\n\tselector: 'gui-function-view',\n\ttemplate: `\n\n\t\t<div [innerHTML]=\"safeHTML\"></div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FunctionViewComponent {\n\n\t@Input()\n\telement: any;\n\n\tsafeHTML: SafeHtml;\n\n\tconstructor(private sanitizer: DomSanitizer) {\n\t}\n\n\tngOnChanges() {\n\t\tthis.safeHTML = this.sanitizer.bypassSecurityTrustHtml(this.element);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionStore extends InMemoryStore<CompositionAggregate> {\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateStore extends InMemoryAggregateStore<CompositionAggregate> {\n\n\tconstructor(inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryCompositionStore, aggregateStoreRegister);\n\t}\n\n}\n","import { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\nexport abstract class CompositionAggregateRepository {\n\n\tabstract getById(compositionId: CompositionId): CompositionAggregate;\n\n\tabstract save(aggregate: CompositionAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateStore } from './in-memory.composition.aggregate-store';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\n\n\n@Injectable()\nexport class InMemoryCompositionAggregateRepository extends CompositionAggregateRepository {\n\n\tconstructor(private inMemoryCompositionAggregateStore: InMemoryCompositionAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): CompositionAggregate {\n\t\treturn this.inMemoryCompositionAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: CompositionAggregate): void {\n\t\tthis.inMemoryCompositionAggregateStore.save(aggregate);\n\t}\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Injector, TemplateRef, Type } from '@angular/core';\nimport { TemplatesComponent } from './templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../cell-view';\n\n\nexport abstract class TemplateFactory<T extends TemplatesComponent> {\n\n\tprivate templates: Map<DataType | CellView, TemplateRef<any>> = new Map<DataType | CellView, TemplateRef<any>>();\n\n\tprivate templatesComponent: ComponentRef<T> = null;\n\n\tprotected constructor(private readonly templatesComponentDefinition: Type<T>,\n\t\t\t\t\t\t  private componentFactoryResolver: ComponentFactoryResolver) {\n\t\tthis.createTemplatesComponent();\n\t}\n\n\tabstract generateMapKeys(): Array<DataType | CellView>;\n\n\tgetTemplates(): Map<DataType | CellView, TemplateRef<any>> {\n\t\treturn this.templates;\n\t}\n\n\tdestroy(): void {\n\t\tif (this.templatesComponent) {\n\t\t\tthis.templatesComponent.destroy();\n\t\t\tthis.templatesComponent = null;\n\t\t}\n\t}\n\n\tprivate createTemplatesComponent(): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.templatesComponentDefinition);\n\n\t\tconst injector: Injector = Injector.create({ providers: [] });\n\n\t\tthis.templatesComponent = componentFactory.create(injector);\n\n\t\tthis.generateMap();\n\t}\n\n\tprivate generateMap(): void {\n\t\tthis.generateMapKeys()\n\t\t\t.forEach((type: DataType | CellView) => {\n\t\t\t\tthis.findAndSetTemplate(type);\n\t\t\t});\n\t};\n\n\tprivate findAndSetTemplate(dt: DataType | CellView): void {\n\n\t\tconst template = this.templatesComponent.instance.getTemplate(dt);\n\n\t\tthis.templates.set(dt, template);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\n\nimport { ViewTemplatesComponent } from './view-templates.component';\nimport { CellView } from '../../cell-view';\nimport { TemplateFactory } from '../template/template.factory';\n\n\n@Injectable()\nexport class ViewTemplateFactory extends TemplateFactory<ViewTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tViewTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<CellView> {\n\t\treturn Object.keys(CellView)\n\t\t\t\t\t .map(key => CellView[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { ViewTemplateFactory } from './view-template.factory';\nimport { CellView } from '../../cell-view';\n\n\n@Injectable()\nexport class ViewTemplateRepository {\n\n\tconstructor(private columnTemplateFactory: ViewTemplateFactory) {\n\t}\n\n\tfindTemplate(view: CellView): TemplateRef<any> {\n\t\tconst typeToTemplate = this.columnTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(view);\n\t}\n\n}\n","import { ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { TemplateFactory } from '../template/template.factory';\nimport { EditTemplatesComponent } from './edit-templates.component';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateFactory extends TemplateFactory<EditTemplatesComponent> {\n\n\tconstructor(componentFactoryResolver: ComponentFactoryResolver) {\n\t\tsuper(\n\t\t\tEditTemplatesComponent,\n\t\t\tcomponentFactoryResolver\n\t\t);\n\t}\n\n\tgenerateMapKeys(): Array<DataType> {\n\t\treturn Object.keys(DataType)\n\t\t\t\t\t .map(key => DataType[key]);\n\t}\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { EditTemplateFactory } from './edit-template.factory';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class EditTemplateRepository {\n\n\tconstructor(private editTemplateFactory: EditTemplateFactory) {\n\t}\n\n\tfindTemplate(dataType: DataType): TemplateRef<any> {\n\t\tconst typeToTemplate = this.editTemplateFactory.getTemplates();\n\n\t\treturn typeToTemplate.get(dataType);\n\t}\n\n}\n","export enum SortStatus {\n\tASC,\n\tDESC,\n\tNONE\n}\n","import { CellView } from '../../cell-view';\n\nexport class ViewEntity {\n\n\tprivate readonly view: CellView;\n\n\tprivate readonly templateFunction?: (entity: any) => string = (value: any) => value;\n\n\tconstructor(columnView: CellView | any) {\n\n\t\tif (typeof columnView === 'function') {\n\t\t\tthis.view = CellView.FUNCTION;\n\t\t\tthis.templateFunction = columnView;\n\t\t} else {\n\t\t\tthis.view = columnView;\n\t\t}\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view;\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.templateFunction;\n\t}\n\n}\n","import { CellView } from '../../cell-view';\nimport { ColumnId } from './column.id';\nimport { ColumnField } from './field/column-field';\nimport { ColumnConfig, HeaderTemplate } from '../../column.config';\nimport { SortStatus } from './sort/sort-status';\nimport { ViewEntity } from './view.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\nexport class ColumnEntity {\n\n\tcolumnId: ColumnId;\n\n\tcolumnField: ColumnField;\n\n\theader?: string | HeaderTemplate;\n\n\tsortStatus = SortStatus.NONE;\n\n\t// REMOVE\n\twidth?: number;\n\n\tsortable?: boolean;\n\n\tprivate enabled: boolean = true;\n\n\tprivate columnConfig: ColumnConfig;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\tcolumnConfig: ColumnConfig,\n\t\t\t\theader?: string | HeaderTemplate,\n\t\t\t\tview?: ViewEntity,\n\t\t\t\twidth?: number) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\t\tthis.columnConfig = columnConfig;\n\n\t\tif (header) {\n\t\t\tthis.header = header;\n\t\t}\n\n\t\tif (view) {\n\t\t\tthis.view = view;\n\t\t}\n\n\t\tif (width) {\n\t\t\tthis.width = width;\n\t\t}\n\n\t}\n\n\tgetColumnConfig(): ColumnConfig {\n\t\treturn this.columnConfig;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetView(view: ViewEntity): void {\n\t\tthis.view = view;\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { ColumnId } from '../../command/column/column.id';\n\n\nexport class CellTemplateWithContext {\n\n\tconstructor(public viewTemplate: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\t// public editContext: any,\n\t\t\t\tpublic context: CellContext,\n\t\t\t\tpublic width: number,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly sortStatus: SortStatus,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n}\n","export class CellContext {\n\n\tconstructor(public element: string) {\n\t}\n}\n","export class FieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\ttoString(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(fieldId: FieldId): boolean {\n\t\treturn fieldId.getId() === this.id;\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnFieldId } from '../../command/column/field/column-field.id';\nimport { ItemEntity } from '../../../../structure/domain/source/item.entity';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\nimport { CellView } from '../../cell-view';\n\n\nexport class CellTemplateWithAccessor {\n\n\tconstructor(public template: TemplateRef<any>,\n\t\t\t\tpublic editTemplate: TemplateRef<any>,\n\t\t\t\tpublic editable: boolean,\n\t\t\t\tpublic accessor: (element: any) => any,\n\t\t\t\tpublic width: number,\n\t\t\t\tpublic columnFieldId: ColumnFieldId,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity) { // REFACTOR\n\t}\n\n\tgetValue(entity: ItemEntity, searchPhrase?: string): any | HTMLElement {\n\n\t\tconst value = this.accessor(entity);\n\n\t\tif (this.type !== DataType.STRING) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (this.view && this.view.getCellView() === CellView.FUNCTION) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (searchPhrase) {\n\n\t\t\tlet txt: string = '' + this.accessor(entity),\n\t\t\t\tlowerCasedText: string = txt.toLocaleLowerCase(),\n\t\t\t\tloweredSearchPhrase = searchPhrase.toLocaleLowerCase();\n\n\t\t\tlet positions: Array<number> = [];\n\n\t\t\tlet index = 0;\n\n\t\t\twhile (index < loweredSearchPhrase.length) {\n\n\t\t\t\tconst found = lowerCasedText.indexOf(loweredSearchPhrase, index);\n\n\t\t\t\tif (found >= 0) {\n\t\t\t\t\tpositions.push(found);\n\t\t\t\t\tindex = found + searchPhrase.length;\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tindex = loweredSearchPhrase.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst arr = txt.split('');\n\n\t\t\tpositions.forEach((pos: number) => {\n\n\t\t\t\tfor (let i = 0; i < searchPhrase.length; i += 1) {\n\n\t\t\t\t\tlet ph;\n\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tph = `<span class=\"gui-text-highlight\">${arr[pos + i]}`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tph = arr[pos + i];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === searchPhrase.length - 1) {\n\t\t\t\t\t\tph += `</span>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tarr[pos + i] = ph;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\ttxt = arr.join('');\n\n\t\t\treturn txt;\n\t\t} else {\n\t\t\treturn this.accessor(entity);\n\t\t}\n\t}\n\n}\n","import { TemplateRef } from '@angular/core';\n\nimport { ColumnField } from '../../command/column/field/column-field';\nimport { SortStatus } from '../../command/column/sort/sort-status';\nimport { HeaderTemplate } from '../../column.config';\nimport { CellTemplateWithContext } from './cell-template-with-context';\nimport { CellContext } from './cell-context';\nimport { FieldId } from '../../../../structure/domain/structure/command/field/data-type/field.id';\nimport { CellTemplateWithAccessor } from './cell-template-with-accessor';\nimport { ColumnId } from '../../command/column/column.id';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ViewEntity } from '../../command/column/view.entity';\n\n\nexport class ColumnDefinition {\n\n\tcellTemplate: TemplateRef<any>;\n\n\theaderTemplate: TemplateRef<any>;\n\n\teditTemplate: TemplateRef<any>;\n\n\twidth: number;\n\n\ttemplateFunction: (i: any) => string;\n\n\tprivate readonly columnId: ColumnId;\n\n\tprivate field: ColumnField;\n\n\tprivate sortStatus: SortStatus;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate enabled: boolean;\n\n\tconstructor(field: ColumnField,\n\t\t\t\tcolumnId: ColumnId,\n\t\t\t\tenabled: boolean,\n\t\t\t\tprivate readonly type: DataType, // REFACTOR\n\t\t\t\tprivate readonly view: ViewEntity, // REFACTOR\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tsort: SortStatus = SortStatus.NONE) {\n\t\tthis.field = field;\n\t\tthis.columnId = columnId;\n\t\tthis.enabled = enabled;\n\t\tthis.header = header;\n\t\tthis.sortStatus = sort;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tsetHeader(header: string): void {\n\t\tthis.header = header;\n\t}\n\n\tsetField(field: ColumnField): void {\n\t\tthis.field = field;\n\t}\n\n\tgetHeaderCellTemplateWithContext(index: number): CellTemplateWithContext {\n\n\t\tconst header: any = this.header;\n\t\tlet headerCellContext: CellContext;\n\n\t\tif (typeof header === 'string') {\n\t\t\theaderCellContext = new CellContext(header);\n\t\t} else if (typeof header === 'function') {\n\t\t\theaderCellContext = new CellContext(header(index));\n\t\t}\n\n\t\tconst fieldId = new FieldId(this.field.getId().getId());\n\n\t\treturn new CellTemplateWithContext(this.headerTemplate, this.editTemplate, headerCellContext, this.width, fieldId, this.columnId, this.sortStatus, this.enabled);\n\t}\n\n\tgetContentCellTemplateWithAccessor(): CellTemplateWithAccessor {\n\n\t\tlet accessor = (entity: any) => {\n\t\t\treturn this.templateFunction(this.field.getAccessor()(entity));\n\t\t};\n\n\t\treturn new CellTemplateWithAccessor(this.cellTemplate, this.editTemplate, true, accessor, this.width, this.field.getId(), this.type, this.view);\n\t}\n\n\tgetColumn(): any {\n\n\t}\n\n}\n","import { Injectable, TemplateRef } from '@angular/core';\n\nimport { ViewTemplateRepository } from '../view/view-template.repository';\nimport { EditTemplateRepository } from '../edit/edit-template.repository';\nimport { ColumnEntity } from '../../command/column/column.entity';\nimport { ColumnDefinition } from './column-definition';\nimport { CellView } from '../../cell-view';\nimport { DataType } from '../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { ActiveColumnEntity } from '../../command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class ColumnDefinitionFactory {\n\n\tconstructor(private viewTemplateRepository: ViewTemplateRepository,\n\t\t\t\tprivate editTemplateRepository: EditTemplateRepository) {\n\t}\n\n\tcreate(column: ColumnEntity): ColumnDefinition;\n\tcreate(column: ActiveColumnEntity): ColumnDefinition;\n\tcreate(column: ColumnEntity | ActiveColumnEntity): ColumnDefinition {\n\n\t\tif (column instanceof ColumnEntity) {\n\t\t\treturn this.createFromColumnEntity(column);\n\t\t} else {\n\t\t\treturn this.createFromActiveColumnEntity(column);\n\t\t}\n\t}\n\n\tprivate createFromColumnEntity(column: ColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tcolumn.getField(),\n\t\t\tcolumn.getColumnId(),\n\t\t\tcolumn.isEnabled(),\n\t\t\tcolumn.getDataType(),\n\t\t\tcolumn.getView(),\n\t\t\tcolumn.getHeader(),\n\t\t\tcolumn.sortStatus\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(column.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = column.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(column.getDataType());\n\n\t\tcolumnDef.width = +column.width;\n\n\t\treturn columnDef;\n\t}\n\n\tprivate createFromActiveColumnEntity(activeColumn: ActiveColumnEntity): ColumnDefinition {\n\n\t\tlet columnDef = new ColumnDefinition(\n\t\t\tactiveColumn.getField(),\n\t\t\tactiveColumn.getColumnId(),\n\t\t\ttrue, // remove,\n\t\t\tactiveColumn.getDataType(),\n\t\t\tactiveColumn.getView(),\n\t\t\tactiveColumn.getHeader(),\n\t\t\tactiveColumn.getSortStatus()\n\t\t);\n\n\t\tcolumnDef.cellTemplate = this.findViewTemplate(activeColumn.getCellView());\n\t\tcolumnDef.headerTemplate = this.findViewTemplate(CellView.TEXT);\n\n\t\tcolumnDef.templateFunction = activeColumn.getTemplateFunction();\n\n\t\tcolumnDef.editTemplate = this.findEditTemplate(activeColumn.getDataType());\n\n\t\tcolumnDef.width = +activeColumn.getWidth();\n\n\t\treturn columnDef;\n\t}\n\n\tcreateColumns(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\t\treturn columns.map((column: ColumnEntity) => this.create(column));\n\t}\n\n\tprivate findViewTemplate(view: CellView): TemplateRef<any> {\n\n\t\tif (view === CellView.FUNCTION) {\n\t\t\treturn this.viewTemplateRepository.findTemplate(CellView.FUNCTION);\n\t\t} else {\n\t\t\treturn this.viewTemplateRepository.findTemplate(view);\n\t\t}\n\t}\n\n\tprivate findEditTemplate(dataType: DataType): TemplateRef<any> {\n\t\treturn this.editTemplateRepository.findTemplate(dataType);\n\t}\n\n}\n","import { AggregateId, ReadModel } from '@generic-ui/hermes';\n\nimport { ColumnDefinition } from './definition/column-definition';\nimport { CellTemplateWithContext } from './definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from './definition/cell-template-with-accessor';\n\n\nexport class Composition extends ReadModel {\n\n\tconstructor(uid: AggregateId,\n\t\t\t\tprivate readonly ready: boolean,\n\t\t\t\tprivate readonly allColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly activeColumns: Array<ColumnDefinition>,\n\t\t\t\tprivate readonly width: number,\n\t\t\t\tprivate readonly resizeWidth: boolean) {\n\t\tsuper(uid);\n\t}\n\n\tgetActiveColumns(): Array<ColumnDefinition> {\n\t\treturn this.activeColumns;\n\t}\n\n\tgetAllColumns(): Array<ColumnDefinition> {\n\t\treturn this.allColumns;\n\t}\n\n\tgetActiveHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetHeaderColumns(): Array<CellTemplateWithContext> {\n\t\treturn this.getAllColumns()\n\t\t\t\t   .map((column: ColumnDefinition, index: number) => column.getHeaderCellTemplateWithContext(index));\n\t}\n\n\tgetTemplateColumns(): Array<CellTemplateWithAccessor> {\n\t\treturn this.getActiveColumns()\n\t\t\t\t   .map((column: ColumnDefinition) => column.getContentCellTemplateWithAccessor());\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetContainerWidth(): number {\n\t\treturn +this.width - 2;\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tisResizeWidthEnabled(): boolean {\n\t\treturn this.resizeWidth;\n\t}\n\n\tequals(composition: Composition): boolean {\n\t\treturn this.width === composition.width &&\n\t\t\tthis.resizeWidth === composition.resizeWidth &&\n\t\t\tthis.equalsByColumns(composition.allColumns);\n\t}\n\n\tequalsByColumns(columns: Array<ColumnDefinition>): boolean {\n\t\treturn this.allColumns.length === columns.length;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnDefinitionFactory } from './read/definition/column-definition.factory';\nimport { CompositionAggregate } from './command/composition.aggregate';\nimport { Composition } from './read/composition';\nimport { ColumnEntity } from './command/column/column.entity';\nimport { ColumnDefinition } from './read/definition/column-definition';\nimport { ActiveColumnEntity } from './command/column/active/active-column.entity';\n\n\n@Injectable()\nexport class CompositionConverter {\n\n\tconstructor(private columnDefinitionFactory: ColumnDefinitionFactory) {\n\t}\n\n\tconvert(aggregate: CompositionAggregate): Composition {\n\n\t\tconst ready = aggregate.isReady(),\n\t\t\tallColumns: Array<ColumnEntity> = aggregate.getColumns(),\n\t\t\tactiveColumns: Array<ActiveColumnEntity> = aggregate.getActiveColumns(),\n\t\t\tallColumnDefs: Array<ColumnDefinition> = this.convertToColumnDef(allColumns),\n\t\t\tactiveColumnDefs: Array<ColumnDefinition> = this.convertActiveColumnsToColumnDef(activeColumns),\n\t\t\twidth = aggregate.getWidth(),\n\t\t\tresizeWidth = aggregate.isResizeEnabled(),\n\t\t\tid = aggregate.getId();\n\n\t\treturn new Composition(id, ready, allColumnDefs, activeColumnDefs, width, resizeWidth);\n\t}\n\n\tprivate convertToColumnDef(columns: Array<ColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tcolumns.forEach((column: ColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n\tprivate convertActiveColumnsToColumnDef(activeColumns: Array<ActiveColumnEntity>): Array<ColumnDefinition> {\n\n\t\tconst columnDefs: Array<ColumnDefinition> = [];\n\n\t\tactiveColumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\tconst columnDef = this.columnDefinitionFactory.create(column);\n\n\t\t\tcolumnDefs.push(columnDef);\n\t\t});\n\n\t\treturn columnDefs;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { InMemoryReadModelStore } from '@generic-ui/hermes';\n\nimport { Composition } from '../../../domain/read/composition';\nimport { CompositionAggregate } from '../../../domain/command/composition.aggregate';\nimport { InMemoryCompositionStore } from '../in-memory.composition.store';\nimport { CompositionConverter } from '../../../domain/composition.converter';\n\n\n@Injectable()\nexport class InMemoryCompositionReadStore extends InMemoryReadModelStore<Composition, CompositionAggregate> {\n\n\tconstructor(private inMemoryCompositionStore: InMemoryCompositionStore,\n\t\t\t\tprivate compositionConverter: CompositionConverter) {\n\t\tsuper(inMemoryCompositionStore);\n\t}\n\n\ttoReadModel(aggregate: CompositionAggregate): Composition {\n\t\treturn this.compositionConverter.convert(aggregate);\n\t}\n\n}\n","import { Observable } from 'rxjs';\n\nimport { CompositionId } from '../composition-id';\nimport { Composition } from './composition';\n\n\nexport abstract class CompositionRepository {\n\n\tabstract on(compositionId: CompositionId): Observable<Composition>;\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionInitedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionResizeWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionResizeWidthSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnsSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnsSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionContainerWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tpayload: any) {\n\t\tsuper(aggregateId, 'CompositionContainerWidthSetEvent', payload);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetEvent');\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\n\nexport class CompositionChangeSortStatusEvent extends DomainEvent {\n\n\tconstructor(aggregateId: CompositionId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.aggregateId;\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnSetEnabledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedLeftEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class CompositionColumnMovedRightEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightEvent');\n\t}\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionRepository } from '../../../domain/read/composition.repository';\nimport { Composition } from '../../../domain/read/composition';\nimport { InMemoryCompositionReadStore } from './in-memory.composition.read-store';\nimport { CompositionInitedEvent } from '../../../domain/command/init/composition-inited.event';\nimport { CompositionResizeWidthSetEvent } from '../../../domain/command/width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from '../../../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../../../domain/command/width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from '../../../domain/command/width/set-width/composition-width-set.event';\nimport { CompositionChangeSortStatusEvent } from '../../../domain/command/column/sort/composition-change-sort-status.event';\nimport { CompositionColumnSetEnabledEvent } from '../../../domain/command/column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from '../../../domain/command/column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from '../../../domain/command/column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class InMemoryCompositionRepository extends CompositionRepository implements OnDestroy {\n\n\tprivate readonly compositionIdToComposition = new Map<string, Composition>();\n\n\tprivate readonly composition$ = new ReplaySubject<Map<string, Composition>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryCompositionQueryStore: InMemoryCompositionReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tCompositionInitedEvent,\n\t\t\t\tCompositionResizeWidthSetEvent,\n\t\t\t\tCompositionColumnsSetEvent,\n\t\t\t\tCompositionContainerWidthSetEvent,\n\t\t\t\tCompositionWidthSetEvent,\n\t\t\t\tCompositionColumnSetEnabledEvent,\n\t\t\t\tCompositionColumnMovedLeftEvent,\n\t\t\t\tCompositionColumnMovedRightEvent,\n\t\t\t\tCompositionChangeSortStatusEvent as any\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst composition = this.inMemoryCompositionQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = composition.getId().toString();\n\n\t\t\t\tthis.compositionIdToComposition.set(key, composition);\n\n\t\t\t\tthis.composition$.next(this.compositionIdToComposition);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\ton(aggregateId: AggregateId): Observable<Composition> {\n\n\t\treturn this.composition$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((compositionIdToComposition: Map<string, Composition>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return compositionIdToComposition.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((compositionIdToComposition: Map<string, Composition>) => compositionIdToComposition.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryCompositionAggregateStore } from './command/in-memory.composition.aggregate-store';\nimport { CompositionAggregateRepository } from '../../domain/command/composition.aggregate-repository';\nimport { InMemoryCompositionAggregateRepository } from './command/in-memory.composition.aggregate-repository';\nimport { InMemoryCompositionReadStore } from './read/in-memory.composition.read-store';\nimport { CompositionRepository } from '../../domain/read/composition.repository';\nimport { InMemoryCompositionRepository } from './read/in-memory.composition.repository';\nimport { InMemoryCompositionStore } from './in-memory.composition.store';\n\nexport const inMemoryCompositionCommandProviders = [\n\tInMemoryCompositionAggregateStore,\n\t{\n\t\tprovide: CompositionAggregateRepository,\n\t\tuseClass: InMemoryCompositionAggregateRepository\n\t}\n];\n\nexport const inMemoryCompositionQueryProviders = [\n\tInMemoryCompositionReadStore,\n\t{\n\t\tprovide: CompositionRepository,\n\t\tuseClass: InMemoryCompositionRepository\n\t}\n];\n\nexport const inMemoryCompositionProviders = [\n\tInMemoryCompositionStore\n];\n","export class ColumnId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tequals(columnId: ColumnId): boolean {\n\t\treturn this.id === columnId.getId();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { ColumnParams } from './set-columns/column.params';\nimport { ColumnEntity } from './column.entity';\nimport { ColumnConfig } from '../../column.config';\nimport { ColumnField } from './field/column-field';\nimport { ViewEntity } from './view.entity';\nimport { ColumnId } from './column.id';\n\n\n@Injectable()\nexport class ColumnEntityFactory {\n\n\tcreate(params: ColumnParams): ColumnEntity;\n\tcreate(params: Array<ColumnParams>): Array<ColumnEntity>;\n\tcreate(data: ColumnParams | Array<ColumnParams>): ColumnEntity | Array<ColumnEntity> {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createColumns(data);\n\t\t} else {\n\t\t\treturn this.createColumn(data);\n\t\t}\n\t}\n\n\tprivate createColumn(params: ColumnParams): ColumnEntity {\n\n\t\tconst columnConfig: ColumnConfig = params.getColumn(),\n\t\t\tfield: ColumnField = params.getField();\n\n\t\tlet columnEntity = new ColumnEntity(\n\t\t\tnew ColumnId(RandomStringGenerator.generate()),\n\t\t\tfield,\n\t\t\tcolumnConfig\n\t\t);\n\n\t\tif (columnConfig.header !== undefined) {\n\t\t\tcolumnEntity.header = columnConfig.header;\n\t\t}\n\n\t\tif (columnConfig.view !== undefined) {\n\t\t\tcolumnEntity.setView(new ViewEntity(columnConfig.view));\n\t\t}\n\n\t\tif (columnConfig.width !== undefined) {\n\t\t\tcolumnEntity.width = this.convertWidth(columnConfig.width);\n\t\t}\n\n\t\treturn columnEntity;\n\t}\n\n\tprivate createColumns(columns: Array<ColumnParams>): Array<ColumnEntity> {\n\n\t\tlet columnEntities = [] as Array<ColumnEntity>;\n\n\t\tcolumns.forEach((column: ColumnParams) => {\n\t\t\tcolumnEntities.push(this.createColumn(column));\n\t\t});\n\n\t\treturn columnEntities;\n\t}\n\n\tprivate convertWidth(width: string | number): number {\n\t\treturn +width;\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\n\nexport class CompositionContainerWidthCalculator {\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number) {\n\t}\n\n\tcalculateMinWidth(columnWidths: Array<ColumnWidth>): number {\n\n\t\tconst { staticColumns, fluidColumns } = this.segregateColumns(columnWidths);\n\n\t\t// TODO reduce\n\t\tlet sum = 0;\n\t\tstaticColumns.forEach((c) => {\n\t\t\tsum += c.getWidth();\n\t\t});\n\n\t\tsum += fluidColumns.length * this.MIN_COLUMN_WIDTH;\n\n\t\treturn sum;\n\t}\n\n\tprivate segregateColumns(columns: Array<ColumnWidth>): { staticColumns: Array<ColumnWidth>, fluidColumns: Array<ColumnWidth> } {\n\n\t\tlet staticColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber() && columnWidth.getWidth() > this.MIN_COLUMN_WIDTH),\n\t\t\tfluidColumns = columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeAuto() || columnWidth.isTypePercentage() || (columnWidth.isTypeNumber() && columnWidth.getWidth() <= this.MIN_COLUMN_WIDTH));\n\n\t\treturn {\n\t\t\tstaticColumns: staticColumns,\n\t\t\tfluidColumns: fluidColumns\n\t\t};\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionWidthSetAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionContainerWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId,\n\t\t\t\tpublic readonly containerWidth: number) {\n\t\tsuper(compositionId, 'CompositionContainerWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../composition-id';\n\n\nexport class CompositionResizeWidthSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(compositionId: CompositionId) {\n\t\tsuper(compositionId, 'CompositionResizeWidthSetAggregateEvent');\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../active/active-column.entity';\n\nexport class CompositionColumnSetEnabledAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnSetEnabledAggregateEvent');\n\t}\n\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumns;\n\t}\n\n}\n","export enum ColumnWidthType {\n\tPERCENTAGE,\n\tNUMBER,\n\tAUTO\n}\n","import { ColumnWidthType } from './column-width-type';\n\nexport class ColumnWidth {\n\n\tprivate template: ColumnWidthType;\n\n\tprivate baseWidth: number | string;\n\n\tprivate width: number;\n\n\tconstructor(width?: number | string) {\n\t\tthis.baseWidth = width;\n\t\tthis.setWidthAndType(width);\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnType(): ColumnWidthType {\n\t\treturn this.template;\n\t}\n\n\tisTypePercentage(): boolean {\n\t\treturn this.template === ColumnWidthType.PERCENTAGE;\n\t}\n\n\tisTypeAuto(): boolean {\n\t\treturn this.template === ColumnWidthType.AUTO;\n\t}\n\n\tisTypeNumber(): boolean {\n\t\treturn this.template === ColumnWidthType.NUMBER;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n\n\tsetWidthAndType(width: number | string): void {\n\n\t\tif (width === undefined || width === null || width === 'auto') {\n\n\t\t\tthis.template = ColumnWidthType.AUTO;\n\t\t\tthis.setWidth(null);\n\n\t\t} else if (this.isPercentage(width)) {\n\n\t\t\tthis.template = ColumnWidthType.PERCENTAGE;\n\t\t\tthis.setWidth(this.percentageToNumber('' + width));\n\n\t\t} else if (this.isStringNumber(width)) {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t} else {\n\n\t\t\tthis.template = ColumnWidthType.NUMBER;\n\t\t\tthis.setWidth(+width);\n\t\t}\n\t}\n\n\tclone(): ColumnWidth {\n\t\treturn new ColumnWidth(this.baseWidth);\n\t}\n\n\tprivate isPercentage(width: number | string): boolean {\n\t\treturn typeof width === 'string' && width[width.length - 1] === '%';\n\t}\n\n\t/**\n\t * Width needs to be in format '89%'\n\t * @param width\n\t */\n\tprivate percentageToNumber(width: string): number {\n\t\treturn +(width.slice(0, -1));\n\t}\n\n\tprivate isStringNumber(width: number | string): boolean {\n\t\tconst widthAsNumber = +width;\n\n\t\treturn Number.isNaN(widthAsNumber);\n\t}\n}\n","import { ColumnWidth } from '../column/column-width/column-width';\nimport { ColumnWidthType } from '../column/column-width/column-width-type';\n\nexport class CompositionWidthCalculator {\n\n\tprivate readonly columns: Array<ColumnWidth>;\n\n\tconstructor(private source: Array<ColumnWidth>,\n\t\t\t\tprivate width: number,\n\t\t\t\tprivate readonly MIN_COLUMN_WIDTH: number) {\n\t\tthis.columns = this.source.map((c) => c.clone());\n\t}\n\n\tcalculate(): Array<ColumnWidth> {\n\n\t\tlet width = this.width,\n\t\t\tcolumns = [...this.columns];\n\n\t\t// adjust min value\n\t\tthis.adjustMinimalWidth(columns);\n\n\t\t// remove number columns\n\t\tlet newColumns: Array<ColumnWidth> = [];\n\n\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\twidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tnewColumns.push(column);\n\t\t\t}\n\t\t});\n\n\t\tcolumns = newColumns;\n\n\t\t// split even auto columns\n\t\tif (columns.length !== 0) {\n\n\t\t\tconst evenWidth = width / columns.length;\n\n\t\t\tcolumns.forEach((column: ColumnWidth, index: number) => {\n\t\t\t\tcolumn.setWidth(evenWidth);\n\t\t\t});\n\t\t}\n\n\t\t// adjust number columns\n\t\t// let numberColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypeNumber());\n\t\t//\n\t\t// // sort by min values\n\t\t// numberColumns.sort((columnOne: ColumnWidth, columnTwo: ColumnWidth) => {\n\t\t// \treturn columnOne.getWidth() - columnTwo.getWidth();\n\t\t// });\n\t\t//\n\t\t// numberColumns.forEach(() => {\n\t\t// });\n\n\t\t// this.adjustMinimalWidth(ColumnWidthType.NUMBER);\n\t\t//\n\t\t// this.adjustPercentageWidth();\n\t\t//\n\t\t// this.adjustAutoWidth();\n\n\t\treturn this.columns;\n\t}\n\n\tprivate adjustMinimalWidth(columns: Array<ColumnWidth>): void {\n\t\tcolumns.forEach((column: ColumnWidth) => {\n\t\t\tif (column.isTypeNumber()) {\n\t\t\t\tif (column.getWidth() < this.MIN_COLUMN_WIDTH) {\n\t\t\t\t\tcolumn.setWidthAndType(this.MIN_COLUMN_WIDTH);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate adjustPercentageWidth(): void {\n\n\t\tconst percentageColumns = this.columns.filter((columnWidth: ColumnWidth) => columnWidth.isTypePercentage());\n\n\t\tfor (let column of this.columns) {\n\t\t\tif (column.getColumnType() === ColumnWidthType.PERCENTAGE) {\n\t\t\t\tcolumn.setWidth(this.width * column.getWidth() * 0.01);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate adjustAutoWidth(): void {\n\n\t\tlet leftWidth = this.width,\n\t\t\tautoColumns = [];\n\n\t\tfor (let i = 0; i < this.columns.length; i += 1) {\n\n\t\t\tlet column = this.columns[i];\n\n\t\t\tif (column.getColumnType() !== ColumnWidthType.AUTO) {\n\t\t\t\tleftWidth -= column.getWidth();\n\t\t\t} else {\n\t\t\t\tautoColumns.push(column);\n\t\t\t}\n\t\t}\n\n\t\tif (autoColumns.length > 0) {\n\t\t\tconst splitWidth = leftWidth / autoColumns.length;\n\n\t\t\tfor (let column of autoColumns) {\n\t\t\t\tcolumn.setWidth(splitWidth);\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ColumnWidth } from './column-width';\nimport { ColumnConfig } from '../../../column.config';\nimport { CompositionContainerWidthCalculator } from '../../width/composition-container-width.calculator';\nimport { CompositionWidthCalculator } from '../../width/composition-width.calculator';\n\n\nexport class ColumnWidthCollection {\n\n\tprivate baseColumnWidths: Array<ColumnWidth>;\n\n\tprivate columnWidths: Array<ColumnWidth>;\n\n\tprivate width: number;\n\n\tconstructor(private readonly MIN_COLUMN_WIDTH: number,\n\t\t\t\tcolumns: Array<ColumnConfig> = [],\n\t\t\t\twidth: number = 100) {\n\t\tthis.baseColumnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columns.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.setContainerWidth(width);\n\n\t\tthis.calculate();\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.baseColumnWidths;\n\t}\n\n\tgetColumnsWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetWidths(): Array<number> {\n\t\treturn this.columnWidths.map(c => c.getWidth());\n\t}\n\n\tgetMinWidth(): number {\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.MIN_COLUMN_WIDTH);\n\n\t\treturn calculator.calculateMinWidth(this.columnWidths);\n\t}\n\n\tsetWidth(width: number): void {\n\n\t\tthis.setContainerWidth(width);\n\t\tthis.calculate();\n\t}\n\n\tsetColumns(columnConfigs: Array<ColumnConfig>): void {\n\t\tthis.baseColumnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\t\tthis.columnWidths = columnConfigs.map((column: ColumnConfig) => new ColumnWidth(column.width));\n\n\t\tthis.calculate();\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate calculate(): void {\n\n\t\tif (this.baseColumnWidths && this.width) {\n\n\t\t\tconst calculator = new CompositionWidthCalculator(this.baseColumnWidths, this.width, this.MIN_COLUMN_WIDTH);\n\n\t\t\tthis.columnWidths = calculator.calculate();\n\t\t}\n\t}\n\n\tprivate setContainerWidth(width: number): void {\n\t\tif (this.getMinWidth() > width) {\n\t\t\tthis.width = this.getMinWidth();\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.calculate();\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionChangeSortStatusAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'CompositionChangeSortStatusAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnWidthCollection } from '../column-width/column-width-collection';\nimport { ColumnConfig } from '../../../column.config';\nimport { ChangeSortParams } from '../sort/change-sort.params';\nimport { SortStatus } from '../sort/sort-status';\nimport { CompositionId } from '../../../composition-id';\nimport { CompositionChangeSortStatusAggregateEvent } from '../sort/composition-change-sort-status.aggregate-event';\nimport { ColumnId } from '../column.id';\nimport { ColumnWidth } from '../column-width/column-width';\n\nexport class ActiveColumnContainer {\n\n\tprivate readonly MIN_COLUMN_WIDTH = 50;\n\n\tprivate columns: Array<ActiveColumnEntity>;\n\n\t/**\n\t * Columns taken from user config.\n\t * This should not be modified and it should be used as a reference point.\n\t */\n\tprivate columnWidthCollection: ColumnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH);\n\n\tconstructor(private compositionId: CompositionId,\n\t\t\t\tcolumns: Array<ActiveColumnEntity> = [],\n\t\t\t\tgridWidth?: number,\n\t\t\t\tcolumnConfigs?: Array<ColumnConfig>) {\n\t\tthis.columns = columns;\n\n\t\tif (gridWidth && columnConfigs) {\n\t\t\tthis.columnWidthCollection = new ColumnWidthCollection(this.MIN_COLUMN_WIDTH, columnConfigs, gridWidth);\n\t\t}\n\t}\n\n\tgetColumnWidths(): Array<ColumnWidth> {\n\t\treturn this.columnWidthCollection.getColumnWidths();\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.columns;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.columnWidthCollection.setWidth(width);\n\t}\n\n\taddColumn(column: ActiveColumnEntity, index: number): void {\n\t\tthis.columns.splice(index, 0, column);\n\t}\n\n\tremoveColumn(index: number): void {\n\t\tthis.columns.splice(index, 1);\n\t}\n\n\tsetColumns(columns: Array<ActiveColumnEntity>, columnConfigs: Array<ColumnConfig>) {\n\n\t\tthis.columns = columns;\n\n\t\tthis.columnWidthCollection.setColumns(columnConfigs);\n\n\t\tconst updatedWidths = this.columnWidthCollection.getWidths();\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity, index: number) => {\n\t\t\tcolumn.setWidth(updatedWidths[index]);\n\t\t});\n\n\t\t// TODO\n\t\t//this.addEvent(new ColumnsSetAggregateEvent(this.getId(), columns));\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): AggregateEvent {\n\n\t\tthis.columns.forEach((column: ActiveColumnEntity) => {\n\t\t\tcolumn.setSortStatus(SortStatus.NONE);\n\t\t});\n\n\t\tfor (let param of sortParams) {\n\n\t\t\tconst fieldId = param.fieldId,\n\t\t\t\tdirection = param.direction,\n\t\t\t\tsortStatus = direction ? SortStatus.ASC : SortStatus.DESC;\n\n\t\t\tconst columns = this.columns.filter((column: ActiveColumnEntity) => {\n\t\t\t\treturn column.getField().getId().getId() === fieldId.getId();\n\t\t\t});\n\n\t\t\tif (columns.length > 0) {\n\t\t\t\tcolumns.forEach((column: ActiveColumnEntity) => {\n\n\t\t\t\t\tcolumn.setSortStatus(sortStatus);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new CompositionChangeSortStatusAggregateEvent(this.getCompositionId());\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index - 1);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst index = this.findColumnIndex(columnId);\n\n\t\tthis.move(index, index + 1);\n\t}\n\n\tgetMinColumnWidth(): number {\n\t\treturn this.MIN_COLUMN_WIDTH;\n\t}\n\n\tprivate move(fromIndex: number, toIndex: number): void {\n\n\t\tif (!this.validateMoveIndex(fromIndex) || !this.validateMoveIndex(toIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst column = this.columns[fromIndex];\n\n\t\tthis.columns[fromIndex] = this.columns[toIndex];\n\t\tthis.columns[toIndex] = column;\n\t}\n\n\tprivate validateMoveIndex(index: number): boolean {\n\t\treturn index >= 0;\n\t}\n\n\tprivate getCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.columns.findIndex(c => c.getColumnId().equals(columnId));\n\t}\n\n}\n","import { SortStatus } from '../sort/sort-status';\nimport { ColumnField } from '../field/column-field';\nimport { ColumnId } from '../column.id';\nimport { ColumnConfig, HeaderTemplate } from '../../../column.config';\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { CellView } from '../../../cell-view';\nimport { ViewEntity } from '../view.entity';\n\n\nexport class ActiveColumnEntity {\n\n\tprivate columnId: ColumnId;\n\n\tprivate columnField: ColumnField;\n\n\tprivate sortStatus = SortStatus.NONE;\n\n\tprivate width: number;\n\n\tprivate header: string | HeaderTemplate;\n\n\tprivate view: ViewEntity = new ViewEntity(CellView.TEXT);\n\n\tprivate config: ColumnConfig;\n\n\tconstructor(columnId: ColumnId,\n\t\t\t\tcolumnField: ColumnField,\n\t\t\t\theader: string | HeaderTemplate,\n\t\t\t\tview: ViewEntity,\n\t\t\t\tconfig: ColumnConfig) {\n\t\tthis.columnId = columnId;\n\t\tthis.columnField = columnField;\n\n\t\tthis.header = header;\n\t\tthis.view = view;\n\n\t\tthis.config = config;\n\t}\n\n\tgetConfig(): ColumnConfig {\n\t\treturn this.config;\n\t}\n\n\tgetSortStatus(): SortStatus {\n\t\treturn this.sortStatus;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.columnField;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tgetHeader(): string | HeaderTemplate {\n\t\treturn this.header;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.columnField.getDataType();\n\t}\n\n\tgetView(): ViewEntity {\n\t\treturn this.view;\n\t}\n\n\tgetCellView(): CellView {\n\t\treturn this.view.getCellView();\n\t}\n\n\tgetTemplateFunction(): any {\n\t\treturn this.view.getTemplateFunction();\n\t}\n\n\tsetSortStatus(status: SortStatus): void {\n\t\tthis.sortStatus = status;\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t}\n}\n","import { ActiveColumnEntity } from './active-column.entity';\nimport { ColumnEntity } from '../column.entity';\n\nexport class ActiveColumnEntityConverter {\n\n\tconvertMany(entities: Array<ColumnEntity>): Array<ActiveColumnEntity> {\n\t\treturn entities.map(e => this.convert(e));\n\t}\n\n\tconvert(entity: ColumnEntity): ActiveColumnEntity {\n\n\t\treturn new ActiveColumnEntity(\n\t\t\tentity.getColumnId(),\n\t\t\tentity.getField(),\n\t\t\tentity.getHeader(),\n\t\t\tentity.getView(),\n\t\t\tentity.getColumnConfig()\n\t\t);\n\t}\n\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedLeftAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedLeftAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { ActiveColumnEntity } from '../../active/active-column.entity';\n\nexport class CompositionColumnMovedRightAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly activeColumns: Array<ActiveColumnEntity>) {\n\t\tsuper(aggregateId, 'CompositionColumnMovedRightAggregateEvent');\n\t}\n\n\t// getActiveColumns(): Array<ActiveColumnEntity> {\n\t// \treturn this.activeColumns;\n\t// }\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\n\nexport class ColumnsSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ColumnsSetAggregateEvent');\n\t}\n\n}\n","import { Aggregate, AggregateId, RootAggregate } from '@generic-ui/hermes';\n\nimport { ColumnEntity } from './column/column.entity';\nimport { ColumnConfig } from '../column.config';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { ColumnEntityFactory } from './column/column-entity.factory';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionContainerWidthCalculator } from './width/composition-container-width.calculator';\nimport { CompositionWidthSetAggregateEvent } from './width/set-width/composition-width-set.aggregate-event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionResizeWidthSetAggregateEvent } from './width/resize-width/composition-resize-width-set.aggregate-event';\nimport { ColumnId } from './column/column.id';\nimport { CompositionColumnSetEnabledAggregateEvent } from './column/set-enabled/composition.column-set-enabled.aggregate-event';\nimport { ActiveColumnContainer } from './column/active/active-column.container';\nimport { ActiveColumnEntity } from './column/active/active-column.entity';\nimport { ActiveColumnEntityConverter } from './column/active/active-column.entity-converter';\nimport { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\nimport { CompositionColumnMovedRightAggregateEvent } from './column/move/right/composition.column-moved-right.aggregate-event';\nimport { ColumnsSetAggregateEvent } from './column/set-columns/columns-set.aggregate-event';\n\n\n@RootAggregate\nexport class CompositionAggregate extends Aggregate {\n\n\tprivate allColumns: Array<ColumnEntity> = [];\n\n\tprivate readonly baseColumns: Array<ColumnConfig>;\n\n\tprivate readonly baseParams: Array<ColumnParams>;\n\n\t/**\n\t * Value taken from user config [width]/tree-content.assert.ts\n\n\t */\n\tprivate width: number;\n\n\tprivate containerInDOMWidth: number;\n\n\tprivate resizeWidthEnabled: boolean = true;\n\n\t/**\n\t * Autowired\n\t */\n\tprivate readonly columnFactory: ColumnEntityFactory = new ColumnEntityFactory();\n\n\tprivate readonly activeColumnContainer: ActiveColumnContainer;\n\n\tprivate readonly activeColumnEntityConverter: ActiveColumnEntityConverter = new ActiveColumnEntityConverter();\n\n\tconstructor(id: AggregateId,\n\t\t\t\tcolumnsParams: Array<ColumnParams> = [],\n\t\t\t\twidth?: number,\n\t\t\t\tresizeWidth?: boolean) {\n\t\tsuper(id);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = columnsParams.map((param) => param.getColumn());\n\n\t\tthis.baseParams = columnsParams;\n\t\tthis.baseColumns = columnConfigs;\n\t\tthis.width = width;\n\n\t\tthis.allColumns = this.columnFactory.create(columnsParams);\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer = new ActiveColumnContainer(this.getId(), activeColumns, width, columnConfigs);\n\n\t\tif (resizeWidth !== undefined && resizeWidth !== null) {\n\t\t\tthis.resizeWidthEnabled = resizeWidth;\n\t\t}\n\n\t}\n\n\t// REMOVE\n\tgetColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns;\n\t}\n\n\t// REMOVE\n\tgetActiveColumns(): Array<ActiveColumnEntity> {\n\t\treturn this.activeColumnContainer.getColumns();\n\t}\n\n\t// make private\n\tgetWidth(): number {\n\n\t\tif (this.resizeWidthEnabled) {\n\t\t\treturn this.containerInDOMWidth;\n\t\t} else {\n\t\t\treturn this.width;\n\t\t}\n\t}\n\n\t// REMOVE\n\tisResizeEnabled(): boolean {\n\t\treturn this.resizeWidthEnabled;\n\t}\n\n\t// REMOVE\n\tisReady(): boolean {\n\t\treturn !!this.getWidth() && this.getActiveColumns().length > 0;\n\t}\n\n\tsetColumns(params: Array<ColumnParams>): void {\n\n\t\tthis.allColumns = this.columnFactory.create(params);\n\n\t\tconst columnConfigs: Array<ColumnConfig> = params.map((param: ColumnParams) => param.getColumn());\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, columnConfigs);\n\n\t\tthis.addEvent(new ColumnsSetAggregateEvent(this.getId()));\n\t}\n\n\tsetContainerWidth(containerWidth: number): void {\n\n\t\tthis.setContainerWidthWithEvent(containerWidth);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.setWidthWithEvent(width);\n\n\t\tthis.setResizeWidthWithEvent(false);\n\n\t\tthis.recalculateColumns();\n\t}\n\n\tsetResizeWidth(enabled: boolean): void {\n\t\tthis.setResizeWidthWithEvent(enabled);\n\t}\n\n\tchangeSort(sortParams: Array<ChangeSortParams>): void {\n\t\tthis.addEvent(\n\t\t\tthis.activeColumnContainer.changeSort(sortParams)\n\t\t);\n\t}\n\n\t// DELEGATE\n\tenableColumn(columnId: ColumnId, enabled: boolean): void {\n\n\t\tlet enabledIndex = -1;\n\n\t\tthis.allColumns.forEach((column: ColumnEntity, index: number) => {\n\t\t\tif (column.getColumnId().getId() === columnId.getId()) {\n\n\t\t\t\tconst prevState = column.isEnabled();\n\n\t\t\t\tcolumn.setEnabled(enabled);\n\n\t\t\t\tif (prevState !== enabled) {\n\t\t\t\t\tenabledIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (enabledIndex > 0) {\n\n\t\t\tif (enabled) {\n\n\t\t\t\t// convert\n\t\t\t\tconst columnToAdd = this.activeColumnEntityConverter.convert(this.allColumns[enabledIndex]);\n\n\t\t\t\tthis.activeColumnContainer.addColumn(columnToAdd, enabledIndex);\n\t\t\t} else {\n\t\t\t\tthis.activeColumnContainer.removeColumn(enabledIndex);\n\t\t\t}\n\t\t}\n\n\t\tthis.recalculateColumns();\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnSetEnabledAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveLeft(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextLeft,\n\t\t\tnextLeftIndex = -1;\n\n\t\tfor (let i = columnIndex - 1; i >= 0; i -= 1) {\n\n\t\t\tconst leftColumn = this.allColumns[i];\n\n\t\t\tif (leftColumn.isEnabled()) {\n\n\t\t\t\tnextLeft = leftColumn;\n\t\t\t\tnextLeftIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextLeft && nextLeftIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextLeft;\n\t\t\tthis.allColumns[nextLeftIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveLeft(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedLeftAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tmoveRight(columnId: ColumnId): void {\n\n\t\tconst columnIndex = this.findColumnIndex(columnId);\n\n\t\tlet nextRight,\n\t\t\tnextRightIndex = -1;\n\n\t\tfor (let i = columnIndex + 1; i < this.allColumns.length; i += 1) {\n\n\t\t\tconst rightColumn = this.allColumns[i];\n\n\t\t\tif (rightColumn.isEnabled()) {\n\n\t\t\t\tnextRight = rightColumn;\n\t\t\t\tnextRightIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (nextRight && nextRightIndex >= 0 && columnIndex >= 0) {\n\n\t\t\tlet column = this.allColumns[columnIndex];\n\n\t\t\tthis.allColumns[columnIndex] = nextRight;\n\t\t\tthis.allColumns[nextRightIndex] = column;\n\t\t}\n\n\t\tthis.activeColumnContainer.moveRight(columnId);\n\n\t\tthis.addEvent(\n\t\t\tnew CompositionColumnMovedRightAggregateEvent(this.getId(), this.getActiveColumns())\n\t\t);\n\t}\n\n\tprivate recalculateColumns(): void {\n\n\t\tconst activeColumns = this.activeColumnEntityConverter.convertMany(this.getEnabledColumns());\n\n\t\tthis.activeColumnContainer.setColumns(activeColumns, activeColumns.map(c => c.getConfig()));\n\t}\n\n\t// TODO Refactor\n\tprivate setWidthWithEvent(width: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > width) {\n\t\t\tthis.width = minWidth;\n\t\t} else {\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// TODO Refactor\n\tprivate setContainerWidthWithEvent(containerWidth: number): void {\n\n\t\tconst calculator = new CompositionContainerWidthCalculator(this.getMinColumnWidth());\n\n\t\tconst minWidth = calculator.calculateMinWidth(this.activeColumnContainer.getColumnWidths());\n\n\t\tif (minWidth > containerWidth) {\n\t\t\tthis.containerInDOMWidth = minWidth;\n\t\t} else {\n\t\t\tthis.containerInDOMWidth = containerWidth;\n\t\t}\n\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\n\t\tthis.addEvent(new CompositionContainerWidthSetAggregateEvent(this.getId(), containerWidth));\n\t}\n\n\tprivate setResizeWidthWithEvent(enabled: boolean): void {\n\t\tthis.resizeWidthEnabled = enabled;\n\t\tthis.activeColumnContainer.setWidth(this.getWidth());\n\t\tthis.addEvent(new CompositionResizeWidthSetAggregateEvent(this.getId()));\n\t}\n\n\t// REMOVE -> move to allColumnsContainer\n\tprivate getEnabledColumns(): Array<ColumnEntity> {\n\t\treturn this.allColumns.filter(c => c.isEnabled());\n\t}\n\n\tprivate findColumnIndex(columnId: ColumnId): number {\n\t\treturn this.allColumns.findIndex((column: ColumnEntity) => column.getColumnId().equals(columnId));\n\t}\n\n\tprivate getMinColumnWidth(): number {\n\t\treturn this.activeColumnContainer.getMinColumnWidth();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionId } from '../composition-id';\nimport { CompositionAggregate } from './composition.aggregate';\n\n\n@Injectable()\nexport class CompositionAggregateFactory {\n\n\tcreate(id: CompositionId): CompositionAggregate {\n\t\treturn new CompositionAggregate(id);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../composition-id';\n\n\nexport class InitCompositionCommand extends Command {\n\n\tconstructor(public readonly compositionId: CompositionId) {\n\t\tsuper(compositionId, 'InitCompositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\n\nimport { ColumnParams } from './column.params';\n\n\nexport class SetColumnsCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columns: Array<ColumnParams>) {\n\t\tsuper(compositionId, 'SetColumnsCommand');\n\t}\n\n\tgetParams(): Array<ColumnParams> {\n\t\treturn this.columns;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionContainerWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly width: number) {\n\t\tsuper(structureId, 'SetCompositionContainerWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../../structure/domain/structure-id';\n\nexport class SetCompositionResizeWidthCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetCompositionResizeWidthCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ChangeSortParams } from './change-sort.params';\n\n\nexport class CompositionChangeSortStatusCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly sortParams: Array<ChangeSortParams>) {\n\t\tsuper(compositionId, 'CompositionChangeSortStatusCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetSortParams(): Array<ChangeSortParams> {\n\t\treturn this.sortParams;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../composition-id';\nimport { ColumnId } from '../column.id';\n\nexport class CompositionSetColumnEnabledCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(compositionId, 'CompositionSetColumnEnabledCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveLeftColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveLeftColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../../../../composition-id';\nimport { ColumnId } from '../../column.id';\n\nexport class CompositionMoveRightColumnCommand extends Command {\n\n\tconstructor(readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly columnId: ColumnId) {\n\t\tsuper(compositionId, 'CompositionMoveRightColumnCommand');\n\t}\n\n\tgetColumnId(): ColumnId {\n\t\treturn this.columnId;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../composition-id';\nimport { InitCompositionCommand } from './init/init-composition.command';\nimport { ColumnParams } from './column/set-columns/column.params';\nimport { SetColumnsCommand } from './column/set-columns/set-columns.command';\nimport { SetCompositionWidthCommand } from './width/set-width/set-composition-width.command';\nimport { SetCompositionContainerWidthCommand } from './width/set-container-width/set-composition-container-width.command';\nimport { SetCompositionResizeWidthCommand } from './width/resize-width/set-composition-resize-width.command';\nimport { ChangeSortParams } from './column/sort/change-sort.params';\nimport { CompositionChangeSortStatusCommand } from './column/sort/composition-change-sort-status.command';\nimport { ColumnId } from './column/column.id';\nimport { CompositionSetColumnEnabledCommand } from './column/set-enabled/composition.set-column-enabled.command';\nimport { CompositionMoveLeftColumnCommand } from './column/move/left/composition.move-left-column.command';\nimport { CompositionMoveRightColumnCommand } from './column/move/right/composition.move-right-column.command';\n\n\n@Injectable()\nexport class CompositionDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId): void {\n\t\tthis.commandDispatcher.dispatch(new InitCompositionCommand(compositionId));\n\t}\n\n\tsetColumns(compositionId: CompositionId, params: Array<ColumnParams>): void {\n\t\tthis.commandDispatcher.dispatch(new SetColumnsCommand(compositionId, params));\n\t}\n\n\tsetWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionWidthCommand(compositionId, width));\n\t}\n\n\tsetContainerWidth(compositionId: CompositionId, width: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionContainerWidthCommand(compositionId, width));\n\t}\n\n\tsetResizeWidth(compositionId: CompositionId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetCompositionResizeWidthCommand(compositionId, enabled));\n\t}\n\n\tchangeSort(compositionId: CompositionId, params: Array<ChangeSortParams>): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionChangeSortStatusCommand(compositionId, params));\n\t}\n\n\tsetColumnEnabled(compositionId: CompositionId, columnId: ColumnId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionSetColumnEnabledCommand(compositionId, columnId, enabled));\n\t}\n\n\tmoveLeft(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveLeftColumnCommand(compositionId, columnId));\n\t}\n\n\tmoveRight(compositionId: CompositionId, columnId: ColumnId): void {\n\t\tthis.commandDispatcher.dispatch(new CompositionMoveRightColumnCommand(compositionId, columnId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../composition.aggregate-repository';\nimport { CompositionAggregateFactory } from '../composition.aggregate-factory';\nimport { InitCompositionCommand } from './init-composition.command';\nimport { CompositionInitedEvent } from './composition-inited.event';\n\n\n@Injectable()\nexport class InitCompositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly compositionAggregateFactory: CompositionAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitCompositionCommand,\n\t\t\tCompositionInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitCompositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.compositionId;\n\n\t\tconst compositionAggregate = this.compositionAggregateFactory.create(aggregateId);\n\n\t\tthis.compositionAggregateRepository.save(compositionAggregate);\n\t}\n\n}\n","import { CompositionColumnMovedLeftAggregateEvent } from './column/move/left/composition.column-moved-left.aggregate-event';\n\nexport const CompositionAggregateEvents = {\n\tCompositionResizeWidthSetAggregateEvent: 'CompositionResizeWidthSetAggregateEvent',\n\tColumnsSetAggregateEvent: 'ColumnsSetAggregateEvent',\n\tCompositionContainerWidthSetAggregateEvent: 'CompositionContainerWidthSetAggregateEvent',\n\tCompositionWidthSetAggregateEvent: 'CompositionWidthSetAggregateEvent',\n\tCompositionColumnSetEnabledAggregateEvent: 'CompositionColumnSetEnabledAggregateEvent',\n\tCompositionColumnMovedLeftAggregateEvent: 'CompositionColumnMovedLeftAggregateEvent',\n\tCompositionColumnMovedRightAggregateEvent: 'CompositionColumnMovedRightAggregateEvent'\n};\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEvent } from '@generic-ui/hermes';\n\nimport { CompositionAggregateEvents } from './composition.events';\nimport { CompositionResizeWidthSetEvent } from './width/resize-width/composition-resize-width-set.event';\nimport { CompositionColumnsSetEvent } from './column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetAggregateEvent } from './width/set-container-width/composition-container-width-set.aggregate-event';\nimport { CompositionContainerWidthSetEvent } from './width/set-container-width/composition-container-width-set.event';\nimport { CompositionWidthSetEvent } from './width/set-width/composition-width-set.event';\nimport { CompositionColumnSetEnabledEvent } from './column/set-enabled/composition.column-set-enabled.event';\nimport { CompositionColumnMovedLeftEvent } from './column/move/left/composition.column-moved-left.event';\nimport { CompositionColumnMovedRightEvent } from './column/move/right/composition.column-moved-right.event';\n\n\n@Injectable()\nexport class CompositionEventConverter {\n\n\tconvert(event: AggregateEvent): DomainEvent;\n\tconvert(events: Array<AggregateEvent>): Array<DomainEvent>;\n\tconvert(arg: AggregateEvent | Array<AggregateEvent>): DomainEvent | Array<DomainEvent> {\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn this.convertEvents(arg);\n\t\t} else {\n\t\t\treturn this.convertEvent(arg);\n\t\t}\n\t}\n\n\tprivate convertEvents(aggregateEvents: Array<AggregateEvent>): Array<DomainEvent> {\n\t\treturn aggregateEvents.map((event: AggregateEvent) => {\n\t\t\treturn this.convertEvent(event);\n\t\t});\n\t}\n\n\tprivate convertEvent(aggregateEvent: AggregateEvent): DomainEvent {\n\n\t\tswitch (aggregateEvent.getType()) {\n\t\t\tcase CompositionAggregateEvents.CompositionResizeWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionResizeWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.ColumnsSetAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnsSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionContainerWidthSetAggregateEvent:\n\n\t\t\t\tconst payload = (aggregateEvent as CompositionContainerWidthSetAggregateEvent).containerWidth;\n\n\t\t\t\treturn new CompositionContainerWidthSetEvent(aggregateEvent.getAggregateId(), payload);\n\n\t\t\tcase CompositionAggregateEvents.CompositionWidthSetAggregateEvent:\n\n\t\t\t\treturn new CompositionWidthSetEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnSetEnabledAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnSetEnabledEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedLeftAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedLeftEvent(aggregateEvent.getAggregateId());\n\n\t\t\tcase CompositionAggregateEvents.CompositionColumnMovedRightAggregateEvent:\n\n\t\t\t\treturn new CompositionColumnMovedRightEvent(aggregateEvent.getAggregateId());\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\n\nimport { SetColumnsCommand } from './set-columns.command';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class SetColumnsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetColumnsCommand);\n\t}\n\n\thandle(command: SetColumnsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tsetColumnsParams: Array<ColumnParams> = command.getParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setColumns(setColumnsParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionWidthCommand } from './set-composition-width.command';\nimport { CompositionWidthSetEvent } from './composition-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionWidthCommand,\n\t\t\tCompositionWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { ColumnEntityFactory } from '../../column/column-entity.factory';\nimport { SetCompositionResizeWidthCommand } from './set-composition-resize-width.command';\nimport { CompositionResizeWidthSetEvent } from './composition-resize-width-set.event';\n\n\n@Injectable()\nexport class SetCompositionResizeWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprivate readonly columnConverter: ColumnEntityFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetCompositionResizeWidthCommand,\n\t\t\tCompositionResizeWidthSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetCompositionResizeWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setResizeWidth(enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { SetCompositionContainerWidthCommand } from './set-composition-container-width.command';\n\n\n@Injectable()\nexport class SetCompositionContainerWidthCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(SetCompositionContainerWidthCommand);\n\t}\n\n\thandle(command: SetCompositionContainerWidthCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\twidth = command.width;\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.setContainerWidth(width);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishAggregateEvents(composition.getEvents() as Array<AggregateEvent>);\n\t}\n\n\tprivate publishAggregateEvents(aggregateEvents: Array<AggregateEvent>): void {\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(aggregateEvents);\n\n\t\tthis.domainEventPublisher.publish(domainEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionChangeSortStatusCommand } from './composition-change-sort-status.command';\nimport { CompositionChangeSortStatusEvent } from './composition-change-sort-status.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(CompositionChangeSortStatusCommand);\n\t}\n\n\thandle(command: CompositionChangeSortStatusCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst compositionId = command.getCompositionId(),\n\t\t\tsortParams = command.getSortParams();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(compositionId);\n\n\t\tconst aggregateEvent = composition.changeSort(sortParams);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tconst columns = composition.getActiveColumns();\n\n\t\tthis.domainEventPublisher.publish(new CompositionChangeSortStatusEvent(compositionId, columns));\n\t}\n\n}\n","import { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\nimport { OriginItemEntity } from '../../../../../structure/domain/source/command/origin/origin-item-entity';\n\n\nexport class ColumnField {\n\n\tprivate readonly fieldId: ColumnFieldId;\n\n\tprivate readonly accessor: ColumnFieldAccessor;\n\n\tprivate readonly dataType: DataType;\n\n\tconstructor(fieldId: ColumnFieldId,\n\t\t\t\taccessor: ColumnFieldAccessor,\n\t\t\t\tdataType: DataType) {\n\t\tthis.fieldId = fieldId;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\t}\n\n\tgetId(): ColumnFieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessor(entity);\n\t}\n\n\tgetAccessor(): ColumnFieldAccessor {\n\t\treturn this.accessor;\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { ColumnFieldId } from './column-field.id';\nimport { ColumnFieldAccessor } from './column-field-accessor';\nimport { ColumnField } from './column-field';\n\nimport { DataType } from '../../../../../structure/domain/structure/command/field/data-type/data-type';\n\n\n@Injectable()\nexport class ColumnFieldFactory {\n\n\tcreate(columnFieldId: ColumnFieldId, accessor: ColumnFieldAccessor, dataType: DataType): ColumnField {\n\t\treturn new ColumnField(columnFieldId, accessor, dataType);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { CompositionId } from '../domain/composition-id';\nimport { CompositionColumnsSetEvent } from '../domain/command/column/set-columns/composition.columns-set.event';\nimport { CompositionContainerWidthSetEvent } from '../domain/command/width/set-container-width/composition-container-width-set.event';\n\n\n@Injectable()\nexport class CompositionEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonColumnsChanged(compositionId: CompositionId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionColumnsSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === compositionId.toString())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidthChanged(compositionId: CompositionId): Observable<number> {\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   CompositionContainerWidthSetEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.getAggregateId().equals(compositionId)),\n\t\t\t\t\t   map((event: CompositionContainerWidthSetEvent) => {\n\t\t\t\t\t\t   return event.getPayload();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((width: number) => !!width)\n\t\t\t\t   );\n\t}\n\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nexport class CompositionId extends AggregateId {\n\n\tconstructor(id: string) {\n\t\tsuper(id);\n\t}\n\n}\n","import { CompositionId } from './composition-id';\n\nexport const globalCompositionId = new CompositionId('-1');\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { CompositionRepository } from '../domain/read/composition.repository';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { Composition } from '../domain/read/composition';\nimport { CellTemplateWithContext } from '../domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../domain/read/definition/cell-template-with-accessor';\nimport { SortStatus } from '../domain/command/column/sort/sort-status';\nimport { FieldId } from '../../structure/domain/structure/command/field/data-type/field.id';\n\n\n@Injectable()\nexport class CompositionReadModelService {\n\n\tconstructor(private compositionRepository: CompositionRepository) {\n\t}\n\n\tonWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getWidth())\n\t\t\t\t   );\n\t}\n\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getContainerWidth())\n\t\t\t\t   );\n\t}\n\n\tonWidthForEachColumn(compositionId: CompositionId = globalCompositionId): Observable<Array<number>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getAllColumns().map(c => c.width))\n\t\t\t\t   );\n\t}\n\n\tonHeaderColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getHeaderColumns())\n\t\t\t\t   );\n\t}\n\n\tonSortOrder(fieldId: FieldId, compositionId: CompositionId = globalCompositionId): Observable<SortStatus> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getActiveHeaderColumns()),\n\t\t\t\t\t   map((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.filter((c) => c.getFieldId().equals(fieldId));\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\t\t\t   return columns.length > 0;\n\t\t\t\t\t   }),\n\t\t\t\t\t   map(columns => columns[0].getSortStatus())\n\t\t\t\t   );\n\t}\n\n\tonTemplateColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.getTemplateColumns())\n\t\t\t\t   );\n\t}\n\n\tonResizeWidth(compositionId: CompositionId = globalCompositionId): Observable<boolean> {\n\t\treturn this.compositionRepository\n\t\t\t\t   .on(compositionId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((composition: Composition) => composition.isResizeWidthEnabled())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { CompositionId } from '../domain/composition-id';\nimport { globalCompositionId } from '../domain/global-composition-id';\nimport { ColumnParams } from '../domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../domain/command/column/column.id';\n\n\n@Injectable()\nexport class CompositionCommandService {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t}\n\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.init(compositionId);\n\t}\n\n\tsetColumns(params: Array<ColumnParams>, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumns(compositionId, params);\n\t}\n\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setWidth(compositionId, width);\n\t}\n\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setContainerWidth(compositionId, width);\n\t}\n\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setResizeWidth(compositionId, enabled);\n\t}\n\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, true);\n\t}\n\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.setColumnEnabled(compositionId, columnId, false);\n\t}\n\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveLeft(compositionId, columnId);\n\t}\n\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tthis.compositionDispatcher.moveRight(compositionId, columnId);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class SortToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'ToggleSortEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","export class ColumnFieldId {\n\n\tprivate readonly id: string;\n\n\tconstructor(id: string) {\n\t\tthis.id = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n}\n","import { ColumnFieldId } from '../field/column-field.id';\n\nexport class ChangeSortParams {\n\n\tconstructor(public readonly fieldId: ColumnFieldId,\n\t\t\t\tpublic readonly direction: boolean) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\nexport class SortOrderSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly directions: Array<{ fieldId: FieldId, direction: boolean }>) {\n\t\tsuper(aggregateId, 'SortOrderSetEvent');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetDirections(): any {\n\t\treturn this.directions;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { SortToggledEvent } from '../../../../../structure/domain/structure/command/sort/toggle/sort-toggled.event';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ChangeSortParams } from './change-sort.params';\nimport { SortOrderSetEvent } from '../../../../../structure/domain/structure/command/sort/order/sort-order-set.event';\n\n\n@Injectable()\nexport class CompositionChangeSortStatusEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof SortToggledEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\n\t\tif (event instanceof SortOrderSetEvent) {\n\n\t\t\tconst compositionId = event.getCompositionId(),\n\t\t\t\tdirs = event.getDirections();\n\n\t\t\tlet params = dirs.map((dir: any) => {\n\n\t\t\t\tconst columnFieldId = new ColumnFieldId(dir.fieldId.getId());\n\n\t\t\t\treturn new ChangeSortParams(columnFieldId, dir.direction);\n\t\t\t});\n\n\t\t\tthis.compositionDispatcher.changeSort(compositionId, params);\n\t\t}\n\t}\n}\n","import { DomainEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from '../data-type/field';\n\n\nexport class FieldsInitedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>, // TODO merge\n\t\t\t\tprivate readonly fields: Array<Field>) {\n\t\tsuper(aggregateId, 'FieldsInitedEvent');\n\t}\n\n\tgetFields(): Array<Field> {\n\t\treturn this.fields;\n\t}\n}\n","import { ColumnConfig } from '../../../column.config';\nimport { ColumnField } from '../field/column-field';\n\nexport class ColumnParams {\n\n\tconstructor(private readonly column: ColumnConfig,\n\t\t\t\tprivate readonly field: ColumnField) {\n\t}\n\n\tgetColumn(): ColumnConfig {\n\t\treturn this.column;\n\t}\n\n\tgetField(): ColumnField {\n\t\treturn this.field;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEvent, DomainEventHandler } from '@generic-ui/hermes';\n\nimport { FieldsInitedEvent } from '../../../../../structure/domain/structure/command/field/init/fields-inited.event';\nimport { Field } from '../../../../../structure/domain/structure/command/field/data-type/field';\n\nimport { CompositionDispatcher } from '../../composition.dispatcher';\nimport { ColumnFieldFactory } from '../field/colum-field.factory';\nimport { ColumnFieldId } from '../field/column-field.id';\nimport { ColumnConfig } from '../../../column.config';\nimport { ColumnParams } from './column.params';\n\n\n@Injectable()\nexport class CompositionFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private compositionDispatcher: CompositionDispatcher,\n\t\t\t\tprivate readonly columnFieldFactory: ColumnFieldFactory) {\n\t\tsuper();\n\t}\n\n\thandle(event: DomainEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\t// TODO Move to different layer\n\t\t\tconst fields = event.getFields(),\n\t\t\t\tcolumnFieldIds = this.convertColumnFieldIds(fields),\n\t\t\t\tcolumns = event.columns,\n\t\t\t\tparams = this.convertColumns(columns, fields, columnFieldIds);\n\n\t\t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t\t}\n\t}\n\n\tprivate convertColumnFieldIds(fields: Array<Field>): Array<ColumnFieldId> {\n\n\t\tif (!fields) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t}\n\n\tprivate convertColumns(columns: Array<ColumnConfig>, fields: Array<Field>, columnFieldIds: Array<ColumnFieldId>): Array<ColumnParams> {\n\n\t\tif (!columns) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn columns.map((column: ColumnConfig, index: number) => {\n\n\t\t\tconst columnFieldId = columnFieldIds[index],\n\t\t\t\tfield = fields[index];\n\n\t\t\tconst columnField = this.columnFieldFactory.create(columnFieldId, field.getAccessorMethod(), field.getDataType());\n\n\t\t\treturn new ColumnParams(column, columnField);\n\t\t});\n\n\t}\n\n\t// handle(event: DomainEvent): void {\n\t//\n\t// \tif (event instanceof FieldsInitedEvent) {\n\t//\n\t// \t\t// TODO Move to different layer\n\t// \t\tlet fields = event.getFields();\n\t//\n\t// \t\tif (!!fields) {\n\t// \t\t\tfields = [];\n\t// \t\t}\n\t// \t\tconst columnFieldIds = fields.map((field: Field) => new ColumnFieldId(field.getId().getId()));\n\t//\n\t// \t\tlet columns = event.columns || [];\n\t//\n\t// \t\tconst params = columns.map((column: ColumnConfig, index: number) => {\n\t// \t\t\tconst columnField = new ColumnField(columnFieldIds[index], fields[index].getAccessorMethod());\n\t//\n\t// \t\t\treturn new ColumnParams(column, columnField);\n\t// \t\t});\n\t//\n\t// \t\tthis.compositionDispatcher.setColumns(event.compositionId, params);\n\t// \t}\n\t// }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../composition-event.converter';\nimport { CompositionAggregate } from '../../composition.aggregate';\nimport { CompositionSetColumnEnabledCommand } from './composition.set-column-enabled.command';\n\n\n@Injectable()\nexport class CompositionSetColumnEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionSetColumnEnabledCommand);\n\t}\n\n\thandle(command: CompositionSetColumnEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId(),\n\t\t\tenabled = command.isEnabled();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.enableColumn(columnId, enabled);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveLeftColumnCommand } from './composition.move-left-column.command';\n\n@Injectable()\nexport class CompositionMoveLeftColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveLeftColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveLeftColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveLeft(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, Command, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { CompositionAggregateRepository } from '../../../composition.aggregate-repository';\nimport { CompositionEventConverter } from '../../../composition-event.converter';\nimport { CompositionAggregate } from '../../../composition.aggregate';\nimport { CompositionMoveRightColumnCommand } from './composition.move-right-column.command';\n\n@Injectable()\nexport class CompositionMoveRightColumnCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly compositionAggregateRepository: CompositionAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate compositionEventConverter: CompositionEventConverter) {\n\t\tsuper(CompositionMoveRightColumnCommand);\n\t}\n\n\thandle(command: CompositionMoveRightColumnCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.getAggregateId(),\n\t\t\tcolumnId = command.getColumnId();\n\n\t\tconst composition = this.compositionAggregateRepository.getById(aggregateId);\n\n\t\tcomposition.moveRight(columnId);\n\n\t\tthis.compositionAggregateRepository.save(composition);\n\n\t\tthis.publishEvents(composition, command);\n\t}\n\n\tprivate publishEvents(composition: CompositionAggregate, command: Command): void {\n\n\t\tconst events = composition.getEvents() as Array<AggregateEvent>;\n\n\t\tconst domainEvents = this.compositionEventConverter.convert(events);\n\n\t\tif (domainEvents && domainEvents.length > 0) {\n\t\t\tthis.domainEventPublisher.publish(domainEvents);\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryCompositionCommandProviders,\n\tinMemoryCompositionProviders,\n\tinMemoryCompositionQueryProviders\n} from '../infrastructure/in-memory/in-memory.composition.providers';\nimport { CompositionAggregateFactory } from '../domain/command/composition.aggregate-factory';\nimport { CompositionDispatcher } from '../domain/command/composition.dispatcher';\nimport { InitCompositionCommandHandler } from '../domain/command/init/init-composition.command-handler';\nimport { SetColumnsCommandHandler } from '../domain/command/column/set-columns/set-columns.command-handler';\nimport { SetCompositionWidthCommandHandler } from '../domain/command/width/set-width/set-composition-width.command-handler';\nimport { SetCompositionResizeWidthCommandHandler } from '../domain/command/width/resize-width/set-composition-resize-width.command-handler';\nimport { SetCompositionContainerWidthCommandHandler } from '../domain/command/width/set-container-width/set-composition-container-width.command-handler';\nimport { CompositionChangeSortStatusCommandHandler } from '../domain/command/column/sort/composition-change-sort-status.command-handler';\nimport { ColumnEntityFactory } from '../domain/command/column/column-entity.factory';\nimport { CompositionEventConverter } from '../domain/command/composition-event.converter';\nimport { ColumnFieldFactory } from '../domain/command/column/field/colum-field.factory';\nimport { CompositionEventService } from './composition.event-service';\nimport { CompositionReadModelService } from './composition-read-model.service';\nimport { CompositionCommandService } from './composition.command-service';\nimport { CompositionConverter } from '../domain/composition.converter';\nimport { EditTemplateRepository } from '../domain/read/edit/edit-template.repository';\nimport { EditTemplateFactory } from '../domain/read/edit/edit-template.factory';\nimport { ViewTemplateFactory } from '../domain/read/view/view-template.factory';\nimport { ViewTemplateRepository } from '../domain/read/view/view-template.repository';\nimport { ColumnDefinitionFactory } from '../domain/read/definition/column-definition.factory';\nimport { CompositionChangeSortStatusEventHandler } from '../domain/command/column/sort/composition-change-sort-status.event-handler';\nimport { CompositionFieldsInitedEventHandler } from '../domain/command/column/set-columns/composition-fields-inited.event-handler';\nimport { CompositionSetColumnEnabledCommandHandler } from '../domain/command/column/set-enabled/composition.set-column-enabled.command-handler';\nimport { CompositionMoveLeftColumnCommandHandler } from '../domain/command/column/move/left/composition.move-left-column.command-handler';\nimport { CompositionMoveRightColumnCommandHandler } from '../domain/command/column/move/right/composition.move-right-column.command-handler';\n\n\nconst commandProviders = [\n\t...inMemoryCompositionCommandProviders,\n\tCompositionDispatcher,\n\tCompositionAggregateFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitCompositionCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetColumnsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionResizeWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetCompositionContainerWidthCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionSetColumnEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveLeftColumnCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: CompositionMoveRightColumnCommandHandler,\n\t\tmulti: true\n\t},\n\tColumnEntityFactory,\n\tCompositionEventConverter,\n\tColumnFieldFactory\n];\n\nconst readProviders = [\n\t...inMemoryCompositionQueryProviders,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: CompositionChangeSortStatusEventHandler,\n\t\tmulti: true\n\t},\n\tColumnDefinitionFactory,\n\tViewTemplateRepository,\n\tViewTemplateFactory,\n\tEditTemplateFactory,\n\tEditTemplateRepository\n];\n\nexport const compositionProviders = [\n\t...inMemoryCompositionProviders,\n\t...commandProviders,\n\t...readProviders,\n\n\tCompositionConverter,\n\n\tCompositionCommandService,\n\tCompositionReadModelService,\n\tCompositionEventService\n];\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeUrl, SafeScript, SafeResourceUrl } from \"@angular/platform-browser\";\n\n@Pipe({\n\tname: 'guiSafe'\n})\nexport class SafePipe implements PipeTransform {\n\n\tconstructor(protected sanitizer: DomSanitizer) {}\n\n\ttransform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n\t\tswitch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SafePipe } from './safe.pipe';\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tSafePipe\n\t],\n\texports: [\n\t\tSafePipe\n\t]\n})\nexport class SanitizeModule {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport {\n\tFabricButtonComponent,\n\tFabricButtonModule,\n\tFabricCheckboxComponent,\n\tFabricCheckboxModule,\n\tFabricChipComponent,\n\tFabricChipModule,\n\tFabricInputComponent,\n\tFabricInputModule\n} from '@generic-ui/fabric';\nimport { ViewTemplatesComponent } from '../domain/read/view/view-templates.component';\nimport { NumberEditTemplateComponent } from '../domain/read/edit/template/number-edit-template.component';\nimport { StringEditTemplateComponent } from '../domain/read/edit/template/string-edit-template.component';\nimport { EditTemplatesComponent } from '../domain/read/edit/edit-templates.component';\nimport { BooleanEditTemplateComponent } from '../domain/read/edit/template/boolean-edit-template.component';\nimport { ColumnQueryComponent } from '../ui/column-query.component';\nimport { FunctionViewComponent } from '../domain/read/view/function-view.component';\nimport { compositionProviders } from './composition.providers';\nimport { SanitizeModule } from '../../../common/cdk/sanitize/sanitize.module';\n\n\nconst components = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tStringEditTemplateComponent,\n\tNumberEditTemplateComponent,\n\tBooleanEditTemplateComponent,\n\tColumnQueryComponent,\n\tFunctionViewComponent\n];\n\nconst exportDeclarations = [\n\tViewTemplatesComponent,\n\tEditTemplatesComponent,\n\tColumnQueryComponent,\n\n\tFabricChipModule,\n\tFabricCheckboxModule,\n\tFabricButtonModule,\n\tFabricInputModule,\n\tFunctionViewComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\n\t\tSanitizeModule,\n\n\t\tFabricChipModule,\n\t\tFabricCheckboxModule,\n\t\tFabricButtonModule,\n\t\tFabricInputModule\n\t],\n\tproviders: [\n\t\t...compositionProviders\n\t],\n\tdeclarations: [\n\t\tcomponents\n\t],\n\texports: exportDeclarations,\n\tentryComponents: [\n\t\tViewTemplatesComponent,\n\t\tEditTemplatesComponent,\n\t\tFabricChipComponent,\n\t\tFabricCheckboxComponent,\n\t\tFabricButtonComponent,\n\t\tFabricInputComponent\n\t]\n})\nexport class CompositionModule {\n\n}\n","export class StructureIdGenerator {\n\n\tprivate increment = 0;\n\n\tgenerateId(): number {\n\t\tthis.increment++;\n\t\treturn this.increment;\n\t}\n\n}\n","export abstract class Logger {\n\n\tabstract warn(text: string): void;\n\n\tabstract error(text: string): void;\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class PageChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PageChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\nexport class PagesizeChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(structureId: StructureId) {\n\t\tsuper(structureId, 'PagesizeChangedAggregateEvent');\n\t}\n\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\nimport { PagingConfigWithId } from '../paging-config-with-id';\nimport { PagingConfig } from '../paging-config';\nimport { PageChangedAggregateEvent } from './page/page-changed.aggregate-event';\nimport { StructureId } from '../../structure-id';\nimport { PagesizeChangedAggregateEvent } from './pagesize/pagesize-changed.aggregate-event';\n\n\n// Aggregate\nexport class PagingAggregate {\n\n\tprivate readonly events: Array<AggregateEvent> = [];\n\n\t// TODO Remove\n\tstatic default(logger: Logger) {\n\t\treturn new PagingAggregate(\n\t\t\tfalse,\n\t\t\t1,\n\t\t\t25,\n\t\t\t[10, 25, 50, 100],\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tprivate readonly logger: Logger;\n\n\tprivate constructor(private enabled: boolean,\n\t\t\t\t\t\tprivate page: number,\n\t\t\t\t\t\tprivate pageSize: number,\n\t\t\t\t\t\tprivate pageSizes: Array<number>,\n\t\t\t\t\t\tprivate pagerTop: boolean,\n\t\t\t\t\t\tprivate pagerBottom: boolean,\n\t\t\t\t\t\tprivate sourceSize: number,\n\t\t\t\t\t\tlogger: Logger) {\n\t\tthis.logger = logger;\n\t}\n\n\t// TODO Remove\n\tstatic fromConfig(paging: PagingConfigWithId, logger: Logger): PagingAggregate {\n\n\t\tconst defaultPagingDefinition = PagingAggregate.default(logger),\n\t\t\tenabled = paging.enabled || defaultPagingDefinition.isEnabled(),\n\t\t\tpage = paging.page || defaultPagingDefinition.getPage(),\n\t\t\tpageSize = paging.pageSize || defaultPagingDefinition.getPageSize(),\n\t\t\tpageSizes = paging.pageSizes || defaultPagingDefinition.getPageSizes(),\n\t\t\tpagerTop = paging.pagerTop || defaultPagingDefinition.isPagerTop(),\n\t\t\tpagerBottom = paging.pagerBottom || defaultPagingDefinition.isPagerBottom();\n\n\t\treturn new PagingAggregate(\n\t\t\tenabled,\n\t\t\tpage,\n\t\t\tpageSize,\n\t\t\tpageSizes,\n\t\t\tpagerTop,\n\t\t\tpagerBottom,\n\t\t\t0,\n\t\t\tlogger\n\t\t);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n\tisDisabled(): boolean {\n\t\treturn !this.enabled;\n\t}\n\n\tgetPage(): number {\n\t\treturn this.page;\n\t}\n\n\tgetPageSize(): number {\n\t\treturn this.pageSize;\n\t}\n\n\tgetPageSizes(): Array<number> {\n\t\treturn this.pageSizes;\n\t}\n\n\tisPagerTop(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerTop;\n\t}\n\n\tisPagerBottom(): boolean {\n\t\tif (this.isDisabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.pagerBottom;\n\t}\n\n\tgetSourceSize(): number {\n\t\treturn this.sourceSize;\n\t}\n\n\tchange(pagingConfig: PagingConfig): void {\n\n\t\tif (pagingConfig.enabled !== undefined) {\n\t\t\tthis.enabled = pagingConfig.enabled;\n\t\t}\n\n\t\tif (pagingConfig.page !== undefined) {\n\t\t\tthis.page = pagingConfig.page;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSize !== undefined) {\n\t\t\tthis.pageSize = pagingConfig.pageSize;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pageSizes !== undefined) {\n\t\t\tthis.pageSizes = pagingConfig.pageSizes;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerTop !== undefined) {\n\t\t\tthis.pagerTop = pagingConfig.pagerTop;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (pagingConfig.pagerBottom !== undefined) {\n\t\t\tthis.pagerBottom = pagingConfig.pagerBottom;\n\n\t\t\tif (pagingConfig.enabled === undefined) {\n\t\t\t\tthis.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (this.enabled === true &&\n\t\t\tpagingConfig.pagerTop === false &&\n\t\t\tpagingConfig.pagerBottom === false) {\n\t\t\tthis.pagerBottom = true;\n\n\t\t\tthis.logger.warn('Pagers cannot be turn off when paging is enabled.');\n\t\t}\n\n\t}\n\n\tsetSourceSize(size: number): void {\n\t\tthis.sourceSize = size;\n\t}\n\n\tnextPage(): void {\n\t\tlet nextPage = this.page;\n\n\t\tif (!this.isNextPageDisabled()) {\n\t\t\tnextPage += 1;\n\t\t}\n\n\t\tthis.page = nextPage;\n\t}\n\n\tprevPage(): void {\n\t\tlet prevPage = this.page;\n\n\t\tif (!this.isPrevPageDisabled()) {\n\t\t\tprevPage -= 1;\n\t\t}\n\n\t\tthis.page = prevPage;\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tif (this.pageSizes.find((ps: number) => ps === pageSize)) {\n\n\t\t\tthis.setPage(1);\n\t\t\tthis.setPageSize(pageSize);\n\t\t}\n\n\t\treturn this.events;\n\t}\n\n\tisNextPageDisabled(): boolean {\n\n\t\tif (this.sourceSize === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.page === Math.ceil(this.sourceSize / this.pageSize);\n\t}\n\n\tisPrevPageDisabled(): boolean {\n\t\treturn this.page === 1;\n\t}\n\n\tcalculateStart(): number {\n\n\t\tconst firstItem = 1 + ((this.page - 1) * this.pageSize);\n\n\t\tif (this.sourceSize < firstItem) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn firstItem;\n\t}\n\n\tcalculateEnd(): number {\n\n\t\tconst lastItem = this.page * this.pageSize;\n\n\t\tif (this.sourceSize < lastItem) {\n\t\t\treturn this.sourceSize;\n\t\t}\n\n\t\treturn lastItem;\n\t}\n\n\tsample(source: Array<any>): Array<any> {\n\n\t\tif (this.isDisabled()) {\n\t\t\treturn source;\n\t\t}\n\n\t\tlet start = this.calculateStart();\n\n\t\tif (start !== 0) {\n\t\t\tstart -= 1;\n\t\t}\n\n\t\treturn source.slice(start, this.calculateEnd());\n\t}\n\n\tprivate setPage(page: number): void {\n\t\tthis.page = page;\n\t\tthis.events.push(new PageChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n\tprivate setPageSize(pageSize: number): void {\n\t\tthis.pageSize = pageSize;\n\t\tthis.events.push(new PagesizeChangedAggregateEvent(new StructureId('TODO need to be changed')));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Logger } from '../../../../../common/cdk/logger/logger';\n\nimport { PagingAggregate } from './paging.aggregate';\nimport { PagingConfigWithId } from '../paging-config-with-id';\n\n\n@Injectable()\nexport class PagingAggregateFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreateDefault(): PagingAggregate {\n\t\treturn PagingAggregate.default(this.logger);\n\t}\n\n\tcreateFromConfig(config: PagingConfigWithId): PagingAggregate {\n\t\treturn PagingAggregate.fromConfig(config, this.logger);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { PagingCommandService } from '../../../ui-api/paging/paging-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingAggregateFactory } from '../../../domain/paging/command/paging.aggregate-factory';\nimport { PagingDispatcher } from '../../../domain/paging/command/paging.dispatcher';\nimport { PagingConfig } from '../../../domain/paging/paging-config';\n\n\n@Injectable()\nexport class LocalPagingCommandService extends PagingCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tprivate aggregateFactory: PagingAggregateFactory,\n\t\t\t\tpagingDispatcher: PagingDispatcher) {\n\t\tsuper(pagingDispatcher);\n\t}\n\n\tsetDefaultPaging(): void {\n\n\t\tconst defaultPaggingAggregate = this.aggregateFactory.createDefault();\n\n\t\tsuper.setPaging({\n\t\t\tpage: defaultPaggingAggregate.getPage(),\n\t\t\tpageSize: defaultPaggingAggregate.getPageSize(),\n\t\t\tpageSizes: defaultPaggingAggregate.getPageSizes()\n\t\t}, this.structureId);\n\t}\n\n\t@Override\n\tsetPaging(paging: PagingConfig): void {\n\t\tsuper.setPaging(paging, this.structureId);\n\t}\n\n\t@Override\n\tchangePageSize(pageSize: number): void {\n\t\tsuper.changePageSize(pageSize, this.structureId);\n\t}\n\n\t@Override\n\tnextPage(): void {\n\t\tsuper.nextPage(this.structureId);\n\t}\n\n\t@Override\n\tprevPage(): void {\n\t\tsuper.prevPage(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PagingReadModelService } from '../../../ui-api/paging/paging-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { PagingRepository } from '../../../domain/paging/read/paging.repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Paging } from '../../../domain/paging/read/paging';\n\n\n@Injectable()\nexport class LocalPagingReadModelService extends PagingReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tpagingRepository: PagingRepository) {\n\t\tsuper(pagingRepository);\n\t}\n\n\t@Override\n\tonPaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId);\n\t}\n\n\t@Override\n\tonSinglePaging(): Observable<Paging> {\n\t\treturn super.onPaging(this.structureId)\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttake(1)\n\t\t\t\t\t);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetSchemaCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly height: number) {\n\t\tsuper(structureId, 'SetSchemaCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaVerticalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaVerticalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetSchemaHorizontalGridCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetSchemaHorizontalGridCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\nimport { SchemaTheme } from '../../schema-theme';\n\nexport class SetSchemaThemeCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly theme: SchemaTheme) {\n\t\tsuper(structureId, 'SetSchemaThemeCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SchemaRowColoring } from '../../../schema-row-coloring';\n\nexport class SetRowColoringCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly coloring: SchemaRowColoring) {\n\t\tsuper(structureId, 'SetRowColoringCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaTopHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaTopHeaderCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class ChangeSchemaBottomHeaderCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'ChangeSchemaBottomHeaderCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SetSchemaCommand } from './set/set-schema.command';\nimport { SetSchemaVerticalGridCommand } from './grid/vertical/set-schema-vertical-grid.command';\nimport { SetSchemaHorizontalGridCommand } from './grid/horizontal/set-schema-horizontal-grid.command';\nimport { SchemaTheme } from '../schema-theme';\nimport { SetSchemaThemeCommand } from './theme/set-schema-theme.command';\nimport { globalStructureId } from '../../global-structure-id';\nimport { SchemaRowColoring } from '../schema-row-coloring';\nimport { SetRowColoringCommand } from './coloring/set/set-row-coloring.command';\nimport { ChangeSchemaTopHeaderCommand } from './column-header/top/change-schema-top-header.command';\nimport { ChangeSchemaBottomHeaderCommand } from './column-header/bottom/change-schema-bottom-header.command';\n\n\n@Injectable()\nexport class SchemaDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetSchema(structureId: StructureId, height: number): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaCommand(structureId, height));\n\t}\n\n\tchangeVerticalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaVerticalGridCommand(structureId, enabled));\n\t}\n\n\tchangeHorizontalGrid(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaHorizontalGridCommand(structureId, enabled));\n\t}\n\n\tsetTheme(structureId: StructureId, theme: SchemaTheme): void {\n\t\tthis.commandDispatcher.dispatch(new SetSchemaThemeCommand(structureId, theme));\n\t}\n\n\tsetRowColoring(structureId: StructureId = globalStructureId, coloring: SchemaRowColoring): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowColoringCommand(structureId, coloring));\n\t}\n\n\tchangeTopHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaTopHeaderCommand(structureId, enabled));\n\t}\n\n\tchangeBottomHeader(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new ChangeSchemaBottomHeaderCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from './schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SchemaRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\ton(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { Schema } from '../../domain/schema/read/schema';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\n\n\n@Injectable()\nexport class SchemaReadModelService {\n\n\tconstructor(private schemaRepository: SchemaRepository) {\n\t}\n\n\tonSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.schemaRepository.on(structureId);\n\t}\n\n\tonSingleSchema(structureId: StructureId = globalStructureId): Observable<Schema> {\n\t\treturn this.onSchema(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   take(1)\n\t\t\t\t   );\n\t}\n\n\tonHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonContainerHeight(structureId: StructureId = globalStructureId): Observable<number> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getContainerHeight();\n\t\t\t\t\t   }),\n\t\t\t\t\t   filter((height: number) => height !== undefined)\n\t\t\t\t   );\n\t}\n\n\tonCssClasses(structureId: StructureId = globalStructureId): Observable<SchemaCssClass> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getCssClasses();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn this.schemaRepository\n\t\t\t\t   .on(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((schema: Schema) => {\n\t\t\t\t\t\t   return schema.getColumnHeader();\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, take, takeUntil } from 'rxjs/operators';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaColumnHeader } from '../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class SchemaCommandService implements OnDestroy {\n\n\tprivate unsubscribe$ = new Subject<void>();\n\n\tconstructor(private schemaDispatcher: SchemaDispatcher,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tsetHeight(height: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setSchema(structureId, height);\n\t}\n\n\tchangeVerticalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeVerticalGrid(structureId, enabled);\n\t}\n\n\tchangeHorizontalGrid(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeHorizontalGrid(structureId, enabled);\n\t}\n\n\tsetTheme(theme: SchemaTheme, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setTheme(structureId, theme);\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.setRowColoring(structureId, coloring);\n\t}\n\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeTopHeader(structureId, enabled);\n\t}\n\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaDispatcher.changeBottomHeader(structureId, enabled);\n\t}\n\n\ttoggleVerticalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.verticalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeVerticalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleHorizontalGrid(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((css: SchemaCssClass) => css.horizontalGrid),\n\t\t\t\tfilter((grid: boolean) => grid !== undefined),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((grid: boolean) => {\n\t\t\t\tthis.changeHorizontalGrid(!grid, structureId);\n\t\t\t});\n\t}\n\n\ttoggleTopHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isTopHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeTopHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n\ttoggleBottomHeader(structureId: StructureId = globalStructureId): void {\n\t\tthis.schemaQueryService\n\t\t\t.onColumnHeader(structureId)\n\t\t\t.pipe(\n\t\t\t\tmap((columnHeader: SchemaColumnHeader) => columnHeader.isBottomHeaderEnabled()),\n\t\t\t\ttake(1),\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.changeBottomHeader(!enabled, structureId);\n\t\t\t});\n\t}\n\n}\n","export enum SchemaRowColoring {\n\tNONE,\n\tEVEN,\n\tODD\n}\n","import { Injectable } from '@angular/core';\nimport { SchemaCommandService } from '../../../ui-api/schema/schema-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { SchemaDispatcher } from '../../../domain/schema/command/schema.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaTheme } from '../../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class LocalSchemaCommandService extends SchemaCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaQueryService: SchemaReadModelService,\n\t\t\t\tschemaDispatcher: SchemaDispatcher) {\n\t\tsuper(schemaDispatcher, schemaQueryService);\n\t}\n\n\tsetDefaultSchema(): void {\n\t\tsuper.setSchema(Number.MAX_SAFE_INTEGER, this.structureId);\n\t}\n\n\t@Override\n\tsetSchema(height: number, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSchema(height, this.structureId);\n\t}\n\n\t@Override\n\tsetHeight(height: number): void {\n\t\tsuper.setHeight(height, this.structureId);\n\t}\n\n\t@Override\n\tchangeVerticalGrid(enabled: boolean): void {\n\t\tsuper.changeVerticalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeHorizontalGrid(enabled: boolean): void {\n\t\tsuper.changeHorizontalGrid(enabled, this.structureId);\n\t}\n\n\t@Override\n\tsetTheme(theme: SchemaTheme): void {\n\t\tsuper.setTheme(theme, this.structureId);\n\t}\n\n\t@Override\n\tsetRowColoring(coloring: SchemaRowColoring, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setRowColoring(coloring, this.structureId);\n\t}\n\n\t@Override\n\tchangeTopHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeTopHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\tchangeBottomHeader(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tsuper.changeBottomHeader(enabled, this.structureId);\n\t}\n\n\t@Override\n\ttoggleVerticalGrid(): void {\n\t\tsuper.toggleVerticalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleHorizontalGrid(): void {\n\t\tsuper.toggleHorizontalGrid(this.structureId);\n\t}\n\n\t@Override\n\ttoggleTopHeader(): void {\n\t\tsuper.toggleTopHeader(this.structureId);\n\t}\n\n\t@Override\n\ttoggleBottomHeader(): void {\n\t\tsuper.toggleBottomHeader(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SchemaReadModelService } from '../../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SchemaRepository } from '../../../domain/schema/read/schema-repository';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { Schema } from '../../../domain/schema/read/schema';\nimport { SchemaCssClass } from '../../../domain/schema/read/schema-css-class';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { SchemaColumnHeader } from '../../../domain/schema/read/schema-column-header';\n\n\n@Injectable()\nexport class LocalSchemaReadModelService extends SchemaReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tschemaRepository: SchemaRepository) {\n\t\tsuper(schemaRepository);\n\t}\n\n\t@Override\n\tonSchema(): Observable<Schema> {\n\t\treturn super.onSchema(this.structureId);\n\t}\n\n\t@Override\n\tonSingleSchema(): Observable<Schema> {\n\t\treturn super.onSingleSchema(this.structureId);\n\t}\n\n\t@Override\n\tonHeight(): Observable<number> {\n\t\treturn super.onHeight(this.structureId);\n\t}\n\n\t@Override\n\tonContainerHeight(): Observable<number> {\n\t\treturn super.onContainerHeight(this.structureId);\n\t}\n\n\t@Override\n\tonCssClasses(): Observable<SchemaCssClass> {\n\t\treturn super.onCssClasses(this.structureId);\n\t}\n\n\t@Override\n\tonColumnHeader(structureId: StructureId = globalStructureId): Observable<SchemaColumnHeader> {\n\t\treturn super.onColumnHeader(this.structureId);\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class SetFormationCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly payload?: any) {\n\t\tsuper(structureId, 'SetFormationCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class ToggleSelectedRowCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly selectedRow: string) {\n\t\tsuper(structureId, 'ToggleSelectedRowCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../structure-id';\nimport { SetFormationCommand } from './set/set-formation.command';\nimport { ToggleSelectedRowCommand } from './toggle/toggle-selected-row.command';\n\n@Injectable()\nexport class FormationDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetDefault(structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetFormationCommand(structureId));\n\t}\n\n\ttoggleSelectedRow(structureId: StructureId, selectedRow: string): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSelectedRowCommand(structureId, selectedRow));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\n\n\n@Injectable()\nexport class FormationCommandService {\n\n\tconstructor(private formationDispatcher: FormationDispatcher) {\n\t}\n\n\tsetDefaultFormation(structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.setDefault(structureId);\n\t}\n\n\ttoggleSelectedRow(selectedRow: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.formationDispatcher.toggleSelectedRow(structureId, selectedRow);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { FormationCommandService } from '../../../ui-api/formation/formation-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationDispatcher } from '../../../domain/formation/command/formation.dispatcher';\n\n\n@Injectable()\nexport class LocalFormationCommandService extends FormationCommandService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationDispatcher: FormationDispatcher) {\n\t\tsuper(formationDispatcher);\n\t}\n\n\tsetDefault(): void {\n\t\tsuper.setDefaultFormation(this.structureId);\n\t}\n\n\t@Override\n\ttoggleSelectedRow(selectedRow: string): void {\n\t\tsuper.toggleSelectedRow(selectedRow, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Formation } from './formation';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class FormationRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tonFormation(structureId: StructureId): Observable<Formation> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getFormation())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { Formation } from '../../domain/formation/read/formation';\n\n\n@Injectable()\nexport class FormationReadModelService {\n\n\tconstructor(private formationRepository: FormationRepository) {\n\t}\n\n\tonSelectedRows(structureId: StructureId = globalStructureId): Observable<SelectedRowsList> {\n\t\treturn this.formationRepository\n\t\t\t\t   .onFormation(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((formation: Formation) => formation.getSelectedRows())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { FormationReadModelService } from '../../../ui-api/formation/formation-read-model.service';\nimport { FormationRepository } from '../../../domain/formation/read/formation-repository';\nimport { SelectedRowsList } from '../../../domain/formation/read/selected-rows/selected-rows-list';\n\n\n@Injectable()\nexport class LocalFormationReadModelService extends FormationReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tformationRepository: FormationRepository) {\n\t\tsuper(formationRepository);\n\t}\n\n\t@Override\n\tonSelectedRows(): Observable<SelectedRowsList> {\n\t\treturn super.onSelectedRows(this.structureId);\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FilterConfig } from '../../../../../ui-api/structure/filter/filter-config';\n\nexport class StructureSetConfigFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly filterConfig: FilterConfig) {\n\t\tsuper(structureId, 'StructureSetConfigFilterCommand');\n\t}\n\n\tgetConfig(): FilterConfig {\n\t\treturn this.filterConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class StructureToggleFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly fieldId: FieldId,\n\t\t\t\tpublic readonly externalFilterId: string,\n\t\t\t\tpublic readonly filterValue: string) {\n\t\tsuper(structureId, 'StructureToggleFilterCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { FilterConfig } from './filter-config';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetConfigFilterCommand } from '../../../domain/structure/command/filter/config/structure.set-config-filter.command';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { StructureToggleFilterCommand } from '../../../domain/structure/command/filter/toggle/structure.toggle-filter.command';\n\n\n@Injectable()\nexport class StructureFilterCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetFilteringEnabled(config: FilterConfig, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigFilterCommand(structureId, config));\n\t}\n\n\taddFilter(fieldId: FieldId, externalFieldId: string, filterValue: string, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureToggleFilterCommand(structureId, fieldId, externalFieldId, filterValue));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../structure-id';\n\n\nexport class SourceSetLoadingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SourceSetLoadingCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetOriginCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly items: Array<any> = []) {\n\t\tsuper(structureId, 'SetOriginCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemParams } from './structure.edit-source-item.params';\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureEditSourceItemCommand extends Command {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly params: StructureEditSourceItemParams) {\n\t\tsuper(structureId, 'StructureEditSourceItemCommand');\n\t}\n\n\tgetParams(): StructureEditSourceItemParams {\n\t\treturn this.params;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../structure-id';\nimport { SourceSetLoadingCommand } from './loading/source-set-loading.command';\nimport { SetOriginCommand } from './origin/set-origin/set-origin.command';\nimport { StructureEditSourceItemParams } from './origin/edit/structure.edit-source-item.params';\nimport { StructureEditSourceItemCommand } from './origin/edit/structure.edit-source-item.command';\n\n\n@Injectable()\nexport class SourceDispatcher {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetLoading(structureId: StructureId, enabled: boolean): void {\n\t\tthis.commandDispatcher.dispatch(new SourceSetLoadingCommand(structureId, enabled));\n\t}\n\n\tsetOrigin(structureId: StructureId, items: Array<any>): void {\n\t\tthis.commandDispatcher.dispatch(new SetOriginCommand(structureId, items));\n\t}\n\n\teditItem(structureId: StructureId, params: StructureEditSourceItemParams): void {\n\t\tthis.commandDispatcher.dispatch(new StructureEditSourceItemCommand(structureId, params));\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\n\nexport class InitStructureCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId) {\n\t\tsuper(structureId, 'InitStructureCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetVerticalScrollEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'SetVerticalScrollEnabledCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class SetScrollPositionCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly position: number) {\n\t\tsuper(structureId, 'SetScrollPositionCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortingConfig } from '../../../../../ui-api/structure/sorting-config';\n\n\nexport class SetSortingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly sortingConfig: SortingConfig) {\n\t\tsuper(structureId, 'SetSortingCommand');\n\t}\n\n\tgetSortingConfig(): SortingConfig {\n\t\treturn this.sortingConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\n\n\nexport class ToggleSortCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId) {\n\t\tsuper(structureId, 'ToggleSortCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { QuickFiltersConfig } from '../../../../../ui-api/structure/filter/quick-filters.config';\n\n\nexport class StructureSetConfigQuickFilterCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly quickFiltersConfig: QuickFiltersConfig) {\n\t\tsuper(structureId, 'StructureSetConfigQuickFilterCommand');\n\t}\n\n\tgetConfig(): QuickFiltersConfig {\n\t\treturn this.quickFiltersConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SearchConfig } from '../../../../../ui-api/structure/search/search-config';\n\n\nexport class StructureSetConfigSearchingCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tprivate readonly searchConfig: SearchConfig) {\n\t\tsuper(structureId, 'StructureSetConfigSearchingCommand');\n\t}\n\n\tgetConfig(): SearchConfig {\n\t\treturn this.searchConfig;\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\n\n\nexport class InitFieldsCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly compositionId: CompositionId,\n\t\t\t\tpublic readonly columns: Array<ColumnConfig>) {\n\t\tsuper(structureId, 'InitFieldsCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\nexport class StructureSetSearchPhraseCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly phrase: string) {\n\t\tsuper(structureId, 'StructureSetSearchPhraseCommand');\n\t}\n\n}\n","import { Command } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\n\n\nexport class SetSortOrderCommand extends Command {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tprivate readonly fieldId: FieldId,\n\t\t\t\tprivate readonly sortOrder: SortStatus) {\n\t\tsuper(structureId, 'SetSortOrderCommand');\n\t}\n\n\tgetCompositionId(): CompositionId {\n\t\treturn this.compositionId;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.fieldId;\n\t}\n\n\tgetSortOrder(): SortStatus {\n\t\treturn this.sortOrder;\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\nexport class SetRowHeightCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly rowHeight: number) {\n\t\tsuper(structureId, 'SetRowHeightCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { InitStructureCommand } from '../../domain/structure/command/init/init-structure.command';\nimport { SetVerticalScrollEnabledCommand } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command';\nimport { SetScrollPositionCommand } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command';\nimport { SortingConfig } from './sorting-config';\nimport { SetSortingCommand } from '../../domain/structure/command/sort/set-config/set-sorting.command';\nimport { FieldId } from '../../domain/structure/command/field/data-type/field.id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { ToggleSortCommand } from '../../domain/structure/command/sort/toggle/toggle-sort.command';\nimport { FilterConfig } from './filter/filter-config';\nimport { QuickFiltersConfig } from './filter/quick-filters.config';\nimport { StructureSetConfigQuickFilterCommand } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command';\nimport { SearchConfig } from './search/search-config';\nimport { StructureSetConfigSearchingCommand } from '../../domain/structure/command/search/config/structure.set-config-searching.command';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { InitFieldsCommand } from '../../domain/structure/command/field/init/init-fields.command';\nimport { StructureSetSearchPhraseCommand } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command';\nimport { SortStatus } from '../../../composition/domain/command/column/sort/sort-status';\nimport { SetSortOrderCommand } from '../../domain/structure/command/sort/order/set-sort-order.command';\nimport { SetRowHeightCommand } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command';\n\n\n@Injectable()\nexport class StructureCommandService {\n\n\tconstructor(private readonly commandDispatcher: CommandDispatcher,\n\t\t\t\tprivate readonly structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate readonly sourceDispatcher: SourceDispatcher) {\n\t}\n\n\tinit(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitStructureCommand(structureId));\n\t}\n\n\tenableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, true));\n\t}\n\n\tdisableVerticalScroll(structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetVerticalScrollEnabledCommand(structureId, false));\n\t}\n\n\tsetScrollPosition(position: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetScrollPositionCommand(structureId, position));\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortingCommand(structureId, config));\n\t}\n\n\ttoggleSort(fieldId: FieldId, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new ToggleSortCommand(structureId, compositionId, fieldId));\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus, compositionId?: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetSortOrderCommand(structureId, compositionId, fieldId, sortOrder));\n\t}\n\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.structureFilterCommandService.setFilteringEnabled(config, structureId);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigQuickFilterCommand(structureId, config));\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>, compositionId: CompositionId, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new InitFieldsCommand(structureId, compositionId, columns));\n\t}\n\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetConfigSearchingCommand(structureId, config));\n\t}\n\n\tsearch(phrase: string, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetSearchPhraseCommand(structureId, phrase));\n\t}\n\n\tsetRowHeight(rowHeight: number, structureId: StructureId = globalStructureId): void {\n\t\tthis.commandDispatcher.dispatch(new SetRowHeightCommand(structureId, rowHeight));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { Override } from '../../../../../common/cdk/decorators';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { globalStructureId } from '../../../domain/global-structure-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalStructureCommandService extends StructureCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tprivate readonly compositionId: CompositionId,\n\t\t\t\tcommandDispatcher: CommandDispatcher,\n\t\t\t\tstructureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tsourceDispatcher: SourceDispatcher) {\n\t\tsuper(commandDispatcher, structureFilterCommandService, sourceDispatcher);\n\t}\n\n\t@Override\n\tinit(): void {\n\t\tsuper.init(this.structureId);\n\t}\n\n\t@Override\n\tenableVerticalScroll(): void {\n\t\tsuper.enableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tdisableVerticalScroll(): void {\n\t\tsuper.disableVerticalScroll(this.structureId);\n\t}\n\n\t@Override\n\tsetScrollPosition(position: number): void {\n\t\tsuper.setScrollPosition(position, this.structureId);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetSortingConfig(config: SortingConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSortingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\ttoggleSort(fieldId: FieldId): void {\n\t\tsuper.toggleSort(fieldId, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): void {\n\t\tsuper.setSortOrder(fieldId, sortOrder, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetFilterConfig(config: FilterConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setFilterConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsetQuickFiltersConfig(config: QuickFiltersConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setQuickFiltersConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tinitFields(columns: Array<ColumnConfig>): void {\n\t\tsuper.initFields(columns, this.compositionId, this.structureId);\n\t}\n\n\t@Override\n\tsetSearchingConfig(config: SearchConfig, structureId: StructureId = globalStructureId): void {\n\t\tsuper.setSearchingConfig(config, this.structureId);\n\t}\n\n\t@Override\n\tsearch(phrase: string): void {\n\t\tsuper.search(phrase, this.structureId);\n\t}\n\n\t@Override\n\tsetRowHeight(rowHeight: number): void {\n\t\tsuper.setRowHeight(rowHeight, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { StructureReadModelService } from '../../../ui-api/structure/structure-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../domain/structure/read/structure';\nimport { VerticalFormationRepository } from '../../../domain/structure/read/vertical-formation/vertical-formation.repository';\n\n\n@Injectable()\nexport class LocalStructureReadModelService extends StructureReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tverticalFormationRepository: VerticalFormationRepository) {\n\t\tsuper(structureRepository, verticalFormationRepository);\n\t}\n\n\t@Override\n\tonStructure(): Observable<Structure> {\n\t\treturn super.onStructure(this.structureId);\n\t}\n\n\t@Override\n\tonVerticalScrollEnabled(): Observable<boolean> {\n\t\treturn super.onVerticalScrollEnabled(this.structureId);\n\t}\n\n\t@Override\n\tonRowHeight(): Observable<number> {\n\t\treturn super.onRowHeight(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateArchive } from '@generic-ui/hermes';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiArchive extends AggregateArchive<Array<StructureFieldUiModel>> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiRepository {\n\n\tconstructor(private structureFieldUiArchive: StructureFieldUiArchive) {\n\t}\n\n\tonFields(structureId: StructureId): Observable<Array<StructureFieldUiModel>> {\n\t\treturn this.structureFieldUiArchive.when(structureId);\n\t}\n\n}\n","import { ColumnFieldId } from '../../../../../../composition/domain/command/column/field/column-field.id';\n\nexport class StructureEditSourceItemParams {\n\n\tconstructor(private readonly itemId: string,\n\t\t\t\tprivate readonly columnFieldId: ColumnFieldId, // TODO Rethink\n\t\t\t\tprivate readonly value: any) {\n\t}\n\n\tgetItemId(): string {\n\t\treturn this.itemId;\n\t}\n\n\tgetColumnFieldId(): ColumnFieldId {\n\t\treturn this.columnFieldId;\n\t}\n\n\tgetValue(): any {\n\t\treturn this.value;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { zip } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../common/cdk/reactive';\n\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { globalStructureId } from '../../domain/global-structure-id';\nimport { StructureEditSourceItemParams } from '../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class SourceCommandService extends Reactive {\n\n\tconstructor(private sourceDispatcher: SourceDispatcher,\n\t\t\t\tprivate structureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService) {\n\t\tsuper();\n\t}\n\n\tsetOrigin(items: Array<any>, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setOrigin(structureId, items);\n\t}\n\n\tsetLoading(enabled: boolean, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.setLoading(structureId, enabled);\n\t}\n\n\teditItem(params: StructureEditSourceItemParams, structureId: StructureId = globalStructureId): void {\n\t\tthis.sourceDispatcher.editItem(structureId, params);\n\t}\n\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any, structureId: StructureId = globalStructureId): void {\n\n\t\tconst itemId$ = this.sourceQueryService\n\t\t\t\t\t\t\t.onSingleEntities()\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tmap((entities: Array<ItemEntity>) => {\n\t\t\t\t\t\t\t\t\treturn entities[itemIndex].getId();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\n\t\tconst fieldId$ = this.structureFieldUiRepository\n\t\t\t\t\t\t\t .onFields(structureId);\n\n\t\tzip(itemId$, fieldId$)\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((array: Array<any>) => {\n\n\t\t\t\tconst itemId = array[0],\n\t\t\t\t\tfields = array[1];\n\n\t\t\t\tthis.editItem(\n\t\t\t\t\tnew StructureEditSourceItemParams(itemId, fields[fieldIndex], value),\n\t\t\t\t\tstructureId\n\t\t\t\t);\n\t\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { SourceDispatcher } from '../../../domain/source/command/source.dispatcher';\nimport { StructureFieldUiRepository } from '../../../ui-api/structure/field/structure.field.ui-repository';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\n\n\n@Injectable()\nexport class LocalSourceCommandService extends SourceCommandService {\n\n\tconstructor(private readonly structureId: StructureId,\n\t\t\t\tsourceDispatcher: SourceDispatcher,\n\t\t\t\tstructureFieldUiRepository: StructureFieldUiRepository,\n\t\t\t\tsourceQueryService: SourceReadModelService) {\n\t\tsuper(sourceDispatcher, structureFieldUiRepository, sourceQueryService);\n\t}\n\n\t@Override\n\tsetOrigin(items: Array<any>): void {\n\t\tsuper.setOrigin(items, this.structureId);\n\t}\n\n\t@Override\n\tsetLoading(enabled: boolean): void {\n\t\tsuper.setLoading(enabled, this.structureId);\n\t}\n\n\t@Override\n\teditItem(params: StructureEditSourceItemParams): void {\n\t\tsuper.editItem(params, this.structureId);\n\t}\n\n\t@Override\n\teditItemByIndex(itemIndex: number, fieldIndex: number, value: any): void {\n\t\tsuper.editItemByIndex(itemIndex, fieldIndex, value, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { StructureSourceOriginRepository } from '../../../domain/source/read/origin/structure.source-origin.repository';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructurePreparedItemsRepository } from '../../../domain/source/read/prepared/structure.prepared-items.repository';\n\n\n@Injectable()\nexport class LocalSourceReadModelService extends SourceReadModelService {\n\n\tconstructor(private structureId: StructureId,\n\t\t\t\tstructureRepository: StructureRepository,\n\t\t\t\tstructurePreparedItemsRepository: StructurePreparedItemsRepository,\n\t\t\t\tstructureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper(structureRepository, structurePreparedItemsRepository, structureSourceOriginRepository);\n\t}\n\n\t@Override\n\tonEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onEntities(this.structureId);\n\t}\n\n\t@Override\n\tonEntitiesSize(): Observable<number> {\n\t\treturn super.onEntitiesSize(this.structureId);\n\t}\n\n\t@Override\n\tonSingleEntities(): Observable<Array<ItemEntity>> {\n\t\treturn super.onSingleEntities(this.structureId);\n\t}\n\n\t@Override\n\tonOriginSize(): Observable<number> {\n\t\treturn super.onOriginSize(this.structureId);\n\t}\n\n\t@Override\n\tonLoading(): Observable<boolean> {\n\t\treturn super.onLoading(this.structureId);\n\t}\n\n\t@Override\n\tonPreparedEntities(): Observable<boolean> {\n\t\treturn super.onPreparedEntities(this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionCommandService } from '../../../../composition/ui-api/composition.command-service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionDispatcher } from '../../../../composition/domain/command/composition.dispatcher';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { ColumnParams } from '../../../../composition/domain/command/column/set-columns/column.params';\nimport { ColumnId } from '../../../../composition/domain/command/column/column.id';\n\n\n@Injectable()\nexport class LocalCompositionCommandService extends CompositionCommandService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionDispatcher: CompositionDispatcher) {\n\t\tsuper(compositionDispatcher);\n\t}\n\n\t@Override\n\tinit(compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.init(this.compositionId);\n\t}\n\n\t@Override\n\tsetColumns(params: Array<ColumnParams>): void {\n\t\tsuper.setColumns(params, this.compositionId);\n\t}\n\n\t@Override\n\tsetWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetContainerWidth(width: number, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setContainerWidth(width, this.compositionId);\n\t}\n\n\t@Override\n\tsetResizeWidth(enabled: boolean, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.setResizeWidth(enabled, this.compositionId);\n\t}\n\n\t@Override\n\tenableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.enableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tdisableColumn(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.disableColumn(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveLeft(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveLeft(columnId, this.compositionId);\n\t}\n\n\t@Override\n\tmoveRight(columnId: ColumnId, compositionId: CompositionId = globalCompositionId): void {\n\t\tsuper.moveRight(columnId, this.compositionId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Override } from '../../../../../common/cdk/decorators';\n\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { CompositionId } from '../../../../composition/domain/composition-id';\nimport { CompositionRepository } from '../../../../composition/domain/read/composition.repository';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { globalCompositionId } from '../../../../composition/domain/global-composition-id';\nimport { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Injectable()\nexport class LocalCompositionReadModelService extends CompositionReadModelService {\n\n\tconstructor(private readonly compositionId: CompositionId,\n\t\t\t\tcompositionRepository: CompositionRepository) {\n\t\tsuper(compositionRepository);\n\t}\n\n\t@Override\n\tonWidth(): Observable<number> {\n\t\treturn super.onWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonContainerWidth(compositionId: CompositionId = globalCompositionId): Observable<number> {\n\t\treturn super.onContainerWidth(this.compositionId);\n\t}\n\n\t@Override\n\tonWidthForEachColumn(): Observable<Array<number>> {\n\t\treturn super.onWidthForEachColumn(this.compositionId);\n\t}\n\n\t@Override\n\tonHeaderColumns(): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onHeaderColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonAllColumns(compositionId: CompositionId = globalCompositionId): Observable<Array<CellTemplateWithContext>> {\n\t\treturn super.onAllColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonSortOrder(fieldId: FieldId): Observable<SortStatus> {\n\t\treturn super.onSortOrder(fieldId, this.compositionId);\n\t}\n\n\t@Override\n\tonTemplateColumns(): Observable<Array<CellTemplateWithAccessor>> {\n\t\treturn super.onTemplateColumns(this.compositionId);\n\t}\n\n\t@Override\n\tonResizeWidth(): Observable<boolean> {\n\t\treturn super.onResizeWidth(this.compositionId);\n\t}\n\n}\n","import { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { LocalPagingCommandService } from './paging/local-paging-command.service';\nimport { LocalPagingReadModelService } from './paging/local-paging-read-model.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { LocalSchemaCommandService } from './schema/local-schema-command.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { LocalSchemaReadModelService } from './schema/local-schema-read-model.service';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { LocalFormationCommandService } from './formation/local-formation-command.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { LocalFormationReadModelService } from './formation/local-formation-read-model.service';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { LocalStructureCommandService } from './structure/local-structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { LocalStructureReadModelService } from './structure/local-structure-read-model.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { LocalSourceCommandService } from './source/local-source-command.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { LocalSourceReadModelService } from './source/local-source-read-model.service';\nimport { LocalCompositionCommandService } from './composition/local-composition-command.service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { LocalCompositionReadModelService } from './composition/local-composition-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\n\nexport const localProviders = [\n\t{ provide: PagingCommandService, useClass: LocalPagingCommandService },\n\t{ provide: PagingReadModelService, useClass: LocalPagingReadModelService },\n\t{ provide: SchemaCommandService, useClass: LocalSchemaCommandService },\n\t{ provide: SchemaReadModelService, useClass: LocalSchemaReadModelService },\n\t{ provide: FormationCommandService, useClass: LocalFormationCommandService },\n\t{ provide: FormationReadModelService, useClass: LocalFormationReadModelService },\n\t{ provide: StructureCommandService, useClass: LocalStructureCommandService },\n\t{ provide: StructureReadModelService, useClass: LocalStructureReadModelService },\n\t{ provide: SourceCommandService, useClass: LocalSourceCommandService },\n\t{ provide: SourceReadModelService, useClass: LocalSourceReadModelService },\n\n\t{ provide: CompositionCommandService, useClass: LocalCompositionCommandService },\n\t{ provide: CompositionReadModelService, useClass: LocalCompositionReadModelService }\n];\n","import { ElementRef, Injectable, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SchemaCssClass } from '../../domain/schema/read/schema-css-class';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\n\n\n@Injectable()\nexport class SchemaCssClassManager implements OnDestroy {\n\n\tprivate readonly VERTICAL_GRID_CLASS_NAME = 'gui-vertical-grid';\n\n\tprivate readonly HORIZONTAL_GRID_CLASS_NAME = 'gui-horizontal-grid';\n\n\tprivate readonly THEME_FABRIC_CLASS_NAME = 'gui-fabric';\n\n\tprivate readonly THEME_MATERIAL_CLASS_NAME = 'gui-material';\n\n\tprivate readonly THEME_LIGHT_CLASS_NAME = 'gui-light';\n\n\tprivate readonly THEME_DARK_CLASS_NAME = 'gui-dark';\n\n\tprivate readonly ROW_COLORING_ODD = 'gui-rows-odd';\n\n\tprivate readonly ROW_COLORING_EVEN = 'gui-rows-even';\n\n\tprivate readonly renderer: Renderer2;\n\n\tprivate cssClass: SchemaCssClass = null;\n\n\tprivate cssHostRef: ElementRef;\n\n\tprivate unsubscribe$ = new Subject();\n\n\tconstructor(private rendererFactory2: RendererFactory2,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService) {\n\t\tthis.renderer = this.rendererFactory2.createRenderer(null, null);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tinit(elementRef: ElementRef, structureId: StructureId): void {\n\n\t\tthis.cssHostRef = elementRef;\n\n\t\tthis.schemaQueryService\n\t\t\t.onCssClasses(structureId)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((classes: SchemaCssClass) => {\n\n\t\t\t\tconst diff = this.updateState(classes);\n\n\t\t\t\tthis.renderCssClasses(diff);\n\t\t\t});\n\t}\n\n\tprivate updateState(css: SchemaCssClass): Partial<SchemaCssClass> {\n\n\t\tif (!this.cssClass) {\n\t\t\tthis.cssClass = css;\n\t\t\treturn this.cssClass;\n\t\t} else {\n\n\t\t\tlet diff = {};\n\n\t\t\tObject.keys(this.cssClass)\n\t\t\t\t  .forEach((key: string) => {\n\t\t\t\t\t  if (css[key] !== this.cssClass[key]) {\n\t\t\t\t\t\t  diff[key] = css[key];\n\t\t\t\t\t  }\n\t\t\t\t  });\n\n\t\t\tthis.cssClass = css;\n\n\t\t\treturn diff;\n\t\t}\n\t}\n\n\tprivate renderCssClasses(diff: Partial<SchemaCssClass>): void {\n\n\t\tif (diff.hasOwnProperty('verticalGrid')) {\n\t\t\tthis.toggleCssClass(diff.verticalGrid, this.VERTICAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('horizontalGrid')) {\n\t\t\tthis.toggleCssClass(diff.horizontalGrid, this.HORIZONTAL_GRID_CLASS_NAME);\n\t\t}\n\n\t\tif (diff.hasOwnProperty('theme')) {\n\t\t\tthis.removeThemeCssClasses();\n\t\t\tthis.addClass(this.resolveThemeClassName(diff.theme));\n\t\t}\n\n\t\tif (diff.hasOwnProperty('rowColoring')) {\n\t\t\tthis.removeRowColoringClasses();\n\t\t\tthis.addClass(this.resolveRowColoringClassName(diff.rowColoring));\n\t\t}\n\t}\n\n\tprivate toggleCssClass(toggle: boolean, cssClassName: string): void {\n\t\tif (toggle) {\n\t\t\tthis.addClass(cssClassName);\n\t\t} else {\n\t\t\tthis.removeClass(cssClassName);\n\t\t}\n\t}\n\n\tprivate removeThemeCssClasses(): void {\n\t\tObject.keys(SchemaTheme)\n\t\t\t  .map((key: string) => SchemaTheme[key])\n\t\t\t  .map((theme: SchemaTheme) => this.resolveThemeClassName(theme))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate resolveThemeClassName(theme: SchemaTheme | string): string {\n\t\tswitch (theme) {\n\t\t\tcase SchemaTheme.FABRIC:\n\t\t\tcase SchemaTheme[SchemaTheme.FABRIC]:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.MATERIAL:\n\t\t\tcase SchemaTheme[SchemaTheme.MATERIAL]:\n\t\t\t\treturn this.THEME_MATERIAL_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.LIGHT:\n\t\t\tcase SchemaTheme[SchemaTheme.LIGHT]:\n\t\t\t\treturn this.THEME_LIGHT_CLASS_NAME;\n\n\t\t\tcase SchemaTheme.DARK:\n\t\t\tcase SchemaTheme[SchemaTheme.DARK]:\n\t\t\t\treturn this.THEME_DARK_CLASS_NAME;\n\n\t\t\tdefault:\n\t\t\t\treturn this.THEME_FABRIC_CLASS_NAME;\n\t\t}\n\t}\n\n\tprivate resolveRowColoringClassName(coloring: SchemaRowColoring | string): string {\n\t\tswitch (coloring) {\n\t\t\tcase SchemaRowColoring.ODD:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.ODD]:\n\t\t\t\treturn this.ROW_COLORING_ODD;\n\n\t\t\tcase SchemaRowColoring.EVEN:\n\t\t\tcase SchemaRowColoring[SchemaRowColoring.EVEN]:\n\t\t\t\treturn this.ROW_COLORING_EVEN;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate removeRowColoringClasses(): void {\n\t\tObject.keys(SchemaRowColoring)\n\t\t\t  .map((key: string) => SchemaRowColoring[key])\n\t\t\t  .map((coloring: SchemaRowColoring) => this.resolveRowColoringClassName(coloring))\n\t\t\t  .filter((className: string) => !!className)\n\t\t\t  .forEach((className: string) => {\n\t\t\t\t  this.removeClass(className);\n\t\t\t  });\n\t}\n\n\tprivate addClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.addClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n\tprivate removeClass(cssClassName: string): void {\n\t\tif (cssClassName) {\n\t\t\tthis.renderer.removeClass(this.cssHostRef.nativeElement, cssClassName);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureCellEditArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\nimport { StructureCellEditState } from './structure.cell-edit.state';\n\n\n@Injectable()\nexport class StructureCellEditStore extends Archive<StructureCellEditState> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../common/cdk/archive';\n\n@Injectable()\nexport class StructureEditModeArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureInfoPanelEnabledArchive extends Archive<boolean> {\n\n\tconstructor() {\n\t\tsuper(false);\n\t}\n}\n","export class StructureAggregationPanelConfig {\n\n\tprivate readonly top: boolean = false;\n\n\tprivate readonly bottom: boolean = true;\n\n\tconstructor(top?: boolean,\n\t\t\t\tbottom?: boolean) {\n\n\t\tif (top !== undefined && top !== null) {\n\t\t\tthis.top = top;\n\t\t}\n\n\t\tif (bottom !== undefined && bottom !== null) {\n\t\t\tthis.bottom = bottom;\n\t\t}\n\n\t}\n\n\titTopEnabled(): boolean {\n\t\treturn this.top;\n\t}\n\n\titBottomEnabled(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\n\n@Injectable()\nexport class StructureAggregationArchive extends Archive<StructureAggregationPanelConfig> {\n\n\tconstructor() {\n\t\tsuper(new StructureAggregationPanelConfig());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfig } from './structure.aggregation-panel.config';\n\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationPanelConfigConverter {\n\n\tconvert(config: AggregationConfig): StructureAggregationPanelConfig {\n\n\t\tif (config.enabled) {\n\t\t\treturn new StructureAggregationPanelConfig(config.top, config.bottom);\n\t\t} else {\n\t\t\treturn new StructureAggregationPanelConfig(false, false);\n\t\t}\n\t}\n}\n","import { Command } from '@generic-ui/hermes';\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureSetAggregationEnabledCommand extends Command {\n\n\tconstructor(public readonly structureId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(structureId, 'StructureSetAggregationEnabledCommand');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { CommandDispatcher } from '@generic-ui/hermes';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureSetAggregationEnabledCommand } from '../../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command';\n\n\n@Injectable()\nexport class StructureAggregationCommandService {\n\n\tconstructor(private commandDispatcher: CommandDispatcher) {\n\t}\n\n\tsetAggregationEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.commandDispatcher.dispatch(new StructureSetAggregationEnabledCommand(structureId, enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\n\nimport { StructureAggregationCommandService } from '../../../ui-api/structure/aggregation/structure.aggregation.command-service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { AggregationConfig } from '../../../ui-api/structure/aggregation/aggregation-config';\n\n\n@Injectable()\nexport class StructureAggregationConfigService {\n\n\tconstructor(private structureAggregationPanelConfigConverter: StructureAggregationPanelConfigConverter,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureAggregationCommandService: StructureAggregationCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t}\n\n\tset(config: AggregationConfig): void {\n\n\t\tconst aggregationPanelConfig = this.structureAggregationPanelConfigConverter.convert(config);\n\n\t\tthis.structureAggregationArchive.next(aggregationPanelConfig);\n\n\t\tthis.structureAggregationCommandService.setAggregationEnabled(config.enabled, this.structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { StructureComponent } from './structure.component';\n\nexport const structureComponentToken = new InjectionToken<StructureComponent>('StructureComponentToken');\n","export enum StructureCellEditState {\n\tENTER,\n\tSUBMIT,\n\tCANCEL\n}\n","import { EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { skip } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { ColumnConfig } from '../../../composition/domain/column.config';\nimport { PagingConfig } from '../../domain/paging/paging-config';\nimport { SchemaTheme } from '../../domain/schema/schema-theme';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { SortingConfig } from '../../ui-api/structure/sorting-config';\nimport { FilterConfig } from '../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../ui-api/structure/search/search-config';\nimport { AggregationConfig } from '../../ui-api/structure/aggregation/aggregation-config';\nimport { EditemItemValues } from '../../ui-api/source/event/editem-item.values';\nimport { StructureId } from '../../domain/structure-id';\nimport { CompositionId } from '../../../composition/domain/composition-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { PagingCommandService } from '../../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../../ui-api/source/source-command.service';\nimport { SourceEventService } from '../../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../../ui-api/formation/formation-event.service';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationConfigService } from '../panel/aggregation/structure.aggregation-config.service';\nimport { StructureCellEditStore } from '../edit/structure.cell-edit.store';\nimport { StructureCellEditState } from '../edit/structure.cell-edit.state';\nimport { ColumnMenuConfig } from '../../ui-api/structure/column-menu-config';\nimport { StructureColumnMenuConfigArchive } from '../header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from '../paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from '../content/row/structure.row-select-enabled.archive';\n\n\n/** @internal */\nexport abstract class StructureGateway extends SmartComponent implements OnChanges, OnInit {\n\n\t/***********************\n\t * INPUTS\n\t ***********************/\n\n\t@Input()\n\tcolumnHeaderTop: boolean;\n\n\t@Input()\n\tcolumnHeaderBottom: boolean;\n\n\t@Input()\n\tmaxHeight: number;\n\n\t@Input()\n\twidth: number;\n\n\t@Input()\n\trowHeight: number;\n\n\t@Input()\n\tautoResizeWidth: boolean;\n\n\t@Input()\n\tsource: Array<any> = [];\n\n\t@Input()\n\tcolumns: Array<ColumnConfig> = [];\n\n\t@Input()\n\tpaging: boolean | PagingConfig;\n\n\t@Input()\n\tverticalGrid: boolean;\n\n\t@Input()\n\thorizontalGrid: boolean;\n\n\t@Input()\n\ttheme: SchemaTheme;\n\n\t@Input()\n\trowColoring: SchemaRowColoring;\n\n\t@Input()\n\trowSelecting: boolean;\n\n\t@Input()\n\tloading: boolean;\n\n\t@Input()\n\tvirtualScroll: boolean;\n\n\t@Input()\n\tsorting: boolean | SortingConfig;\n\n\t@Input()\n\tfiltering: boolean | FilterConfig;\n\n\t@Input()\n\tquickFilters: boolean | QuickFiltersConfig;\n\n\t@Input()\n\tsearching: boolean | SearchConfig;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tinfoPanel: boolean;\n\n\t@Input()\n\taggregation: AggregationConfig;\n\n\t@Input()\n\tcolumnMenu: ColumnMenuConfig;\n\n\n\t/***********************\n\t * OUTPUTS\n\t ***********************/\n\n\t@Output()\n\tpageChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\tpageSizeChanged: EventEmitter<number> = new EventEmitter<number>();\n\n\t@Output()\n\titemsSelected: EventEmitter<any> = new EventEmitter();\n\n\t@Output()\n\tcolumnsChanged: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcontainerWidthChanged: EventEmitter<number> = new EventEmitter();\n\n\t@Output()\n\tsourceEdited: EventEmitter<EditemItemValues> = new EventEmitter();\n\n\t@Output()\n\tcellEditEntered: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditCanceled: EventEmitter<void> = new EventEmitter();\n\n\t@Output()\n\tcellEditSubmitted: EventEmitter<void> = new EventEmitter();\n\n\n\tprotected constructor(\n\t\tpublic structureId: StructureId,\n\t\tprotected compositionId: CompositionId,\n\t\tprotected structureCommandService: StructureCommandService,\n\t\tprotected pagingCommandService: PagingCommandService,\n\t\tprotected pagingEventService: PagingEventService,\n\t\tprotected sourceCommandService: SourceCommandService,\n\t\tprotected sourceEventService: SourceEventService,\n\t\tprotected schemaCommandService: SchemaCommandService,\n\t\tprotected compositionCommandService: CompositionCommandService,\n\t\tprotected compositionEventService: CompositionEventService,\n\t\tprotected formationEventService: FormationEventService,\n\t\tprotected structureEditModeArchive: StructureEditModeArchive,\n\t\tprotected structureCellEditArchive: StructureCellEditArchive,\n\t\tprotected structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\tprotected structureAggregationConfigService: StructureAggregationConfigService,\n\t\tprotected structureCellEditStore: StructureCellEditStore,\n\t\tprotected structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\tprotected structurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\tprotected structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive\n\t) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(simpleChanges: SimpleChanges) {\n\n\t\tif (simpleChanges.columnMenu !== undefined && simpleChanges.columnMenu.currentValue !== undefined) {\n\t\t\tthis.structureColumnMenuConfigArchive.nextConfig(this.columnMenu);\n\t\t}\n\n\t\tif (simpleChanges.rowSelecting !== undefined && simpleChanges.rowSelecting.currentValue !== undefined) {\n\t\t\tthis.structureRowSelectEnabledArchive.next(this.rowSelecting);\n\t\t}\n\n\t\tif (simpleChanges.infoPanel !== undefined && simpleChanges.infoPanel.currentValue !== undefined) {\n\t\t\tthis.structureInfoPanelEnabledArchive.next(this.infoPanel);\n\t\t}\n\n\t\tif (simpleChanges.aggregation !== undefined && simpleChanges.aggregation.currentValue !== undefined) {\n\t\t\tthis.structureAggregationConfigService.set(this.aggregation);\n\t\t}\n\n\t\tif (simpleChanges.editMode !== undefined && simpleChanges.editMode.currentValue !== undefined) {\n\t\t\tthis.structureEditModeArchive.next(this.editMode);\n\t\t}\n\n\t\tif (simpleChanges.cellEditing !== undefined && simpleChanges.cellEditing.currentValue !== undefined) {\n\t\t\tthis.structureCellEditArchive.next(this.cellEditing);\n\t\t}\n\n\t\tif (simpleChanges.width !== undefined && simpleChanges.width.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setWidth(this.width);\n\t\t}\n\n\t\tif (simpleChanges.rowHeight !== undefined && simpleChanges.rowHeight.currentValue !== undefined) {\n\t\t\tthis.structureCommandService.setRowHeight(this.rowHeight);\n\t\t}\n\n\t\tif (simpleChanges.autoResizeWidth !== undefined && simpleChanges.autoResizeWidth.currentValue !== undefined) {\n\t\t\tthis.compositionCommandService.setResizeWidth(this.autoResizeWidth);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderTop !== undefined && simpleChanges.columnHeaderTop.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeTopHeader(this.columnHeaderTop);\n\t\t}\n\n\t\tif (simpleChanges.columnHeaderBottom !== undefined && simpleChanges.columnHeaderBottom.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeBottomHeader(this.columnHeaderBottom);\n\t\t}\n\n\t\tif (simpleChanges.loading !== undefined && simpleChanges.loading.currentValue !== undefined) {\n\t\t\tthis.sourceCommandService.setLoading(this.loading);\n\t\t}\n\n\t\tif (simpleChanges.paging !== undefined && simpleChanges.paging.currentValue !== undefined) {\n\n\t\t\tlet pagingConfig: PagingConfig;\n\n\t\t\tif (typeof this.paging === 'boolean') {\n\t\t\t\tpagingConfig = {\n\t\t\t\t\tenabled: this.paging\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tpagingConfig = this.paging;\n\n\t\t\t\tif (this.paging.displayMode !== undefined) {\n\t\t\t\t\tthis.structurePagingDisplayModeArchive.next(this.paging.displayMode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pagingCommandService.setPaging(pagingConfig);\n\t\t}\n\n\t\tif (simpleChanges.columns) {\n\t\t\tthis.structureCommandService.initFields(this.columns, this.compositionId, this.structureId);\n\t\t\t// this.compositionCommandService.setColumns(this.columns);\n\t\t}\n\n\t\tif (simpleChanges.verticalGrid !== undefined && simpleChanges.verticalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeVerticalGrid(this.verticalGrid);\n\t\t}\n\n\t\tif (simpleChanges.horizontalGrid !== undefined && simpleChanges.horizontalGrid.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.changeHorizontalGrid(this.horizontalGrid);\n\t\t}\n\n\t\tif (simpleChanges.theme !== undefined && simpleChanges.theme.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setTheme(this.theme);\n\t\t}\n\n\t\tif (simpleChanges.rowColoring !== undefined && simpleChanges.rowColoring.currentValue !== undefined) {\n\t\t\tthis.schemaCommandService.setRowColoring(this.rowColoring);\n\t\t}\n\n\t\tif (simpleChanges.maxHeight && this.maxHeight) {\n\t\t\tthis.schemaCommandService.setHeight(this.maxHeight);\n\t\t}\n\n\t\tif (simpleChanges.virtualScroll !== undefined && simpleChanges.virtualScroll.currentValue !== undefined) {\n\t\t\tif (this.virtualScroll) {\n\t\t\t\tthis.structureCommandService.enableVerticalScroll();\n\t\t\t} else {\n\t\t\t\tthis.structureCommandService.disableVerticalScroll();\n\t\t\t}\n\t\t}\n\n\t\tif (simpleChanges.sorting !== undefined && simpleChanges.sorting.currentValue !== undefined) {\n\n\t\t\tlet sorting: SortingConfig;\n\n\t\t\tif (typeof this.sorting === 'boolean') {\n\t\t\t\tsorting = {\n\t\t\t\t\tenabled: this.sorting\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsorting = this.sorting;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSortingConfig(sorting);\n\t\t}\n\n\t\tif (simpleChanges.filtering !== undefined && simpleChanges.filtering.currentValue !== undefined) {\n\n\t\t\tlet filtering: FilterConfig;\n\n\t\t\tif (typeof this.filtering === 'boolean') {\n\t\t\t\tfiltering = {\n\t\t\t\t\tenabled: this.filtering\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tfiltering = this.filtering;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setFilterConfig(filtering);\n\t\t}\n\n\t\tif (simpleChanges.quickFilters !== undefined && simpleChanges.quickFilters.currentValue !== undefined) {\n\n\t\t\tlet quickFilters: QuickFiltersConfig;\n\n\t\t\tif (typeof this.quickFilters === 'boolean') {\n\t\t\t\tquickFilters = {\n\t\t\t\t\tenabled: this.quickFilters\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tquickFilters = this.quickFilters;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setQuickFiltersConfig(quickFilters);\n\t\t}\n\n\t\tif (simpleChanges.searching !== undefined && simpleChanges.searching.currentValue !== undefined) {\n\n\t\t\tlet searching: SearchConfig;\n\n\t\t\tif (typeof this.searching === 'boolean') {\n\t\t\t\tsearching = {\n\t\t\t\t\tenabled: this.searching\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tsearching = this.searching;\n\t\t\t}\n\n\t\t\tthis.structureCommandService.setSearchingConfig(searching);\n\t\t}\n\n\t\t/**\n\t\t * Setting source should be last step\n\t\t */\n\t\tif (simpleChanges.source) {\n\t\t\tthis.sourceCommandService.setOrigin(this.source);\n\t\t}\n\t}\n\n\tngOnInit() {\n\n\t\tthis.pagingEventService\n\t\t\t.onPageChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageNumber: number) => {\n\t\t\t\tthis.pageChanged.emit(pageNumber);\n\t\t\t});\n\n\t\tthis.pagingEventService\n\t\t\t.onPageSizeChange(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((pageSize: number) => {\n\t\t\t\tthis.pageSizeChanged.emit(pageSize);\n\t\t\t});\n\n\t\tthis.formationEventService\n\t\t\t.onItemSelected(this.structureId)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((items: Array<any>) => {\n\t\t\t\tthis.itemsSelected.emit(items);\n\t\t\t});\n\n\t\tthis.compositionEventService\n\t\t\t.onColumnsChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\tskip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil())\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.columnsChanged.emit();\n\t\t\t});\n\n\n\t\tthis.compositionEventService\n\t\t\t.onContainerWidthChanged(this.compositionId)\n\t\t\t.pipe(\n\t\t\t\t// skip(1), // TODO system should emit response that it is ready\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((containerWidth: number) => {\n\t\t\t\tthis.containerWidthChanged.emit(containerWidth);\n\t\t\t});\n\n\t\tthis.sourceEventService\n\t\t\t.onSourceEdited(this.structureId)\n\t\t\t.pipe(\n\t\t\t\t// this.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((values: EditemItemValues) => {\n\t\t\t\tthis.sourceEdited.emit(values);\n\t\t\t});\n\n\t\tthis.structureCellEditStore\n\t\t\t.onValue()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((state: StructureCellEditState) => {\n\n\t\t\t\tswitch (state) {\n\n\t\t\t\t\tcase StructureCellEditState.ENTER:\n\t\t\t\t\t\tthis.cellEditEntered.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.SUBMIT:\n\t\t\t\t\t\tthis.cellEditSubmitted.emit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase StructureCellEditState.CANCEL:\n\t\t\t\t\t\tthis.cellEditCanceled.emit();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t});\n\n\n\t}\n\n\tonPageChange(page: number): void {\n\t\tthis.pageChanged.emit(page);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class NextPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'NextPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PrevPageEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PrevPageEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PageChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PageChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagesizeChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagesizeChangedEvent');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { NextPageEvent } from '../../domain/paging/command/next-page/next-page.event';\nimport { PrevPageEvent } from '../../domain/paging/command/prev-page/prev-page.event';\nimport { PageChangedEvent } from '../../domain/paging/command/page/page-changed.event';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { PagesizeChangedEvent } from '../../domain/paging/command/change-pagesize/pagesize-changed.event';\n\n\n@Injectable()\nexport class PagingEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly pagingQueryService: PagingReadModelService) {\n\t}\n\n\tonPageChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   NextPageEvent,\n\t\t\t\t\t   PrevPageEvent,\n\t\t\t\t\t   PageChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPage()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n\tonPageSizeChange(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   PagesizeChangedEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.pagingQueryService\n\t\t\t\t\t\t\t\t\t  .onPaging(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  map((paging: Paging) => paging.getPageSize()),\n\t\t\t\t\t\t\t\t\t\t  take(1)\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","export class EditemItemValues {\n\n\tconstructor(public readonly after: any,\n\t\t\t\tpublic readonly before: any) {\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class StructureSourceItemEditedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { EditemItemValues } from './editem-item.values';\nimport { StructureSourceItemEditedEvent } from '../../../domain/source/command/origin/edit/structure.source-item-edited.event';\n\n\n@Injectable()\nexport class SourceEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonSourceEdited(structureId: StructureId): Observable<EditemItemValues> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   StructureSourceItemEditedEvent as any\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   map((event: StructureSourceItemEditedEvent) => {\n\n\t\t\t\t\t\t   const afterItem = event.getAfterItem().getData(),\n\t\t\t\t\t\t\t   beforeItem = event.getBeforeItem().getData();\n\n\t\t\t\t\t\t   return new EditemItemValues(afterItem, beforeItem);\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SelectedRowToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SelectedRowToggledEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureReadModelService } from '../structure/structure-read-model.service';\nimport { StructureId } from '../../domain/structure-id';\nimport { SelectedRowToggledEvent } from '../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Injectable()\nexport class FormationEventService {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureQueryService: StructureReadModelService) {\n\t}\n\n\tonItemSelected(structureId: StructureId): Observable<number> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .ofEvent(\n\t\t\t\t\t   SelectedRowToggledEvent\n\t\t\t\t   )\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString()),\n\t\t\t\t\t   switchMap((event: DomainEvent) => {\n\n\t\t\t\t\t\t   return this.structureQueryService\n\t\t\t\t\t\t\t\t\t  .onStructure(structureId)\n\t\t\t\t\t\t\t\t\t  .pipe(\n\t\t\t\t\t\t\t\t\t\t  take(1),\n\t\t\t\t\t\t\t\t\t\t  map((str: Structure) => str.getSelectedEntities()),\n\t\t\t\t\t\t\t\t\t\t  map((entities: Array<ItemEntity>) => entities.map(ent => ent.getData()))\n\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t   })\n\t\t\t\t   );\n\t}\n\n}\n","import { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\nexport class StructureColumnMenuConfig {\n\n\tstatic default(): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig();\n\t}\n\n\tstatic fromConfig(config: ColumnMenuConfig): StructureColumnMenuConfig {\n\t\treturn new StructureColumnMenuConfig(\n\t\t\tconfig.enabled,\n\t\t\tconfig.sort,\n\t\t\tconfig.filter,\n\t\t\tconfig.columnsManager\n\t\t);\n\t}\n\n\tprivate static readonly MAIN = 'Menu';\n\n\tprivate static readonly FILTER = 'Filter';\n\n\tprivate static readonly COLUMNS = 'Columns';\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tprivate sort: boolean = true,\n\t\t\t\tprivate filter: boolean = false,\n\t\t\t\tprivate columnsManager: boolean = false) {\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\t(this.sort || this.filter || this.columnsManager);\n\t}\n\n\tisMainEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisSortingEnabled(): boolean {\n\t\treturn this.sort;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filter;\n\t}\n\n\tisColumnManagerEnabled(): boolean {\n\t\treturn this.columnsManager;\n\t}\n\n\tgetMenus(): Array<string> {\n\n\t\tconst menus = [];\n\n\t\tif (this.isMainEnabled()) {\n\t\t\tmenus.push(this.getMainMenu());\n\t\t}\n\n\t\tif (this.isFilteringEnabled()) {\n\t\t\tmenus.push(this.getFilterMenu());\n\t\t}\n\n\t\tif (this.isColumnManagerEnabled()) {\n\t\t\tmenus.push(this.getColumnMenu());\n\t\t}\n\n\t\treturn menus;\n\t}\n\n\tgetActiveMenu(): string {\n\t\treturn this.getMenus()[0];\n\t}\n\n\tgetMainMenu(): string {\n\t\treturn StructureColumnMenuConfig.MAIN;\n\t}\n\n\tgetFilterMenu(): string {\n\t\treturn StructureColumnMenuConfig.FILTER;\n\t}\n\n\tgetColumnMenu(): string {\n\t\treturn StructureColumnMenuConfig.COLUMNS;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../../common/cdk/archive';\n\nimport { StructureColumnMenuConfig } from './structure.column-menu-config';\nimport { ColumnMenuConfig } from '../../../../ui-api/structure/column-menu-config';\n\n@Injectable()\nexport class StructureColumnMenuConfigArchive extends Archive<StructureColumnMenuConfig> {\n\n\tconstructor() {\n\t\tsuper(StructureColumnMenuConfig.default());\n\t}\n\n\tnextConfig(config: ColumnMenuConfig): void {\n\n\t\tconst menuConfig = StructureColumnMenuConfig.fromConfig(config);\n\n\t\tthis.next(menuConfig);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Archive } from '../../../../../common/cdk/archive';\n\n\n@Injectable()\nexport class StructureRowSelectEnabledArchive extends Archive<boolean> {\n\n\tstatic readonly DEFAULT_ROW_SELECT = true;\n\n\tconstructor() {\n\t\tsuper(StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT);\n\t}\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnChanges,\n\tOnInit,\n\tRenderer2,\n\tSimpleChanges,\n\tViewEncapsulation\n} from '@angular/core';\nimport { timer } from 'rxjs';\n\n\nimport { StructureDefinition } from './structure-definition';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { StructureId } from '../domain/structure-id';\nimport { CompositionId } from '../../composition/domain/composition-id';\nimport { localProviders } from './local/local-providers';\nimport { SchemaCssClassManager } from './schema/schema-css-class.manager';\nimport { StructureCellEditArchive } from './edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from './edit/structure.cell-edit.store';\nimport { StructureEditModeArchive } from './edit/structure.edit-mode.archive';\nimport { StructureInfoPanelEnabledArchive } from './panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from './panel/aggregation/structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './panel/aggregation/structure.aggregation-config.service';\nimport { structureComponentToken } from './structure-component-token';\nimport { StructureGateway } from './gateway/structure.gateway';\nimport { SchemaColumnHeader } from '../domain/schema/read/schema-column-header';\nimport { Structure } from '../domain/structure/read/structure';\nimport { PagingCommandService } from '../ui-api/paging/paging-command.service';\nimport { PagingEventService } from '../ui-api/paging/paging-event.service';\nimport { SourceCommandService } from '../ui-api/source/source-command.service';\nimport { SourceEventService } from '../ui-api/source/event/source-event.service';\nimport { SchemaCommandService } from '../ui-api/schema/schema-command.service';\nimport { CompositionCommandService } from '../../composition/ui-api/composition.command-service';\nimport { CompositionEventService } from '../../composition/ui-api/composition.event-service';\nimport { FormationEventService } from '../ui-api/formation/formation-event.service';\nimport { StructureCommandService } from '../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../ui-api/structure/structure-read-model.service';\nimport { CompositionReadModelService } from '../../composition/ui-api/composition-read-model.service';\nimport { SchemaReadModelService } from '../ui-api/schema/schema-read-model.service';\nimport { StructureColumnMenuConfigArchive } from './header/menu/config/structure.column-menu-config.archive';\nimport { StructurePagingDisplayModeArchive } from './paging/mode/structure-paging.display-mode.archive';\nimport { StructureRowSelectEnabledArchive } from './content/row/structure.row-select-enabled.archive';\n\n/** @internal */\nexport function structureIdFactory(generator: StructureIdGenerator): StructureId {\n\treturn new StructureId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport function compositionIdFactory(generator: StructureIdGenerator): CompositionId {\n\treturn new CompositionId('gui-' + generator.generateId());\n}\n\n/** @internal */\nexport const structureComponentSelfProviders = [\n\t{\n\t\tprovide: StructureId,\n\t\tuseFactory: structureIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t{\n\t\tprovide: CompositionId,\n\t\tuseFactory: compositionIdFactory,\n\t\tdeps: [\n\t\t\tStructureIdGenerator\n\t\t]\n\t},\n\t...localProviders,\n\n\tSchemaCssClassManager,\n\tStructureCellEditArchive,\n\tStructureCellEditStore,\n\tStructureEditModeArchive,\n\tStructureInfoPanelEnabledArchive,\n\tStructureAggregationArchive,\n\tStructureAggregationConfigService,\n\tStructureColumnMenuConfigArchive,\n\tStructurePagingDisplayModeArchive,\n\tStructureRowSelectEnabledArchive\n];\n\n/** @internal */\n@Component({\n\tselector: 'gui-structure',\n\ttemplateUrl: './structure.component.html',\n\tstyleUrls: [\n\t\t'./style/styles.ngx.scss',\n\t\t'./style/structure.ngx.scss',\n\t\t'./style/structure-paging.ngx.scss',\n\t\t'./style/structure-responsive.ngx.scss',\n\t\t'./style/structure-flex.ngx.scss',\n\t\t'../../composition/ui/composition.ngx.scss',\n\t\t'./style/themes/material.structure.ngx.scss',\n\t\t'./style/themes/dark.structure.ngx.scss',\n\t\t'./style/themes/light.structure.ngx.scss'\n\t],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class]': `\"gui-structure\"`,\n\t\t// '[style.min-height.px]': 'structureHeight',\n\t\t'[class.gui-structure-border]': 'isBorderEnabled()',\n\t\t'[id]': 'structureId.toString()'\n\t},\n\tproviders: [\n\t\t...structureComponentSelfProviders,\n\t\t{\n\t\t\tprovide: structureComponentToken,\n\t\t\tuseExisting: StructureComponent\n\t\t}\n\t]\n})\nexport class StructureComponent extends StructureGateway implements OnChanges, OnInit, AfterViewInit {\n\n\tloaderEnabled: boolean = false;\n\n\tcircleLoaderEnabled: boolean = true;\n\n\tinitialLoaderAnimation: boolean = false;\n\n\tstructureHeight: number;\n\n\tprivate columnHeader: SchemaColumnHeader;\n\n\tprivate structure: Structure;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tcompositionId: CompositionId,\n\t\t\t\tpagingCommandService: PagingCommandService,\n\t\t\t\tpagingEventService: PagingEventService,\n\t\t\t\tsourceCommandService: SourceCommandService,\n\t\t\t\tsourceEventService: SourceEventService,\n\t\t\t\tschemaCommandService: SchemaCommandService,\n\t\t\t\tcompositionCommandService: CompositionCommandService,\n\t\t\t\tcompositionEventService: CompositionEventService,\n\t\t\t\tformationEventService: FormationEventService,\n\t\t\t\tstructureCommandService: StructureCommandService,\n\t\t\t\tstructureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tstructureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tstructureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tstructureAggregationConfigService: StructureAggregationConfigService,\n\t\t\t\tstructureCellEditStore: StructureCellEditStore,\n\t\t\t\tstructureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tstructurePagingDisplayModeArchive: StructurePagingDisplayModeArchive,\n\t\t\t\tstructureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate schemaReadModelService: SchemaReadModelService,\n\t\t\t\tprivate schemaStylesManager: SchemaCssClassManager) {\n\n\t\tsuper(\n\t\t\tstructureId,\n\t\t\tcompositionId,\n\t\t\tstructureCommandService,\n\t\t\tpagingCommandService,\n\t\t\tpagingEventService,\n\t\t\tsourceCommandService,\n\t\t\tsourceEventService,\n\t\t\tschemaCommandService,\n\t\t\tcompositionCommandService,\n\t\t\tcompositionEventService,\n\t\t\tformationEventService,\n\t\t\tstructureEditModeArchive,\n\t\t\tstructureCellEditArchive,\n\t\t\tstructureInfoPanelEnabledArchive,\n\t\t\tstructureAggregationConfigService,\n\t\t\tstructureCellEditStore,\n\t\t\tstructureColumnMenuConfigArchive,\n\t\t\tstructurePagingDisplayModeArchive,\n\t\t\tstructureRowSelectEnabledArchive\n\t\t);\n\n\t\tthis.structureCommandService.init();\n\t\tcompositionCommandService.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tsuper.ngOnChanges(changes);\n\t}\n\n\tngOnInit() {\n\t\tsuper.ngOnInit();\n\n\t\tthis.schemaReadModelService\n\t\t\t.onHeight()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((height: number) => {\n\t\t\t\tthis.structureHeight = height;\n\t\t\t});\n\n\t\tthis.schemaReadModelService\n\t\t\t.onColumnHeader()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columnHeader: SchemaColumnHeader) => {\n\t\t\t\tthis.columnHeader = columnHeader;\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\n\t\t\t\tthis.loaderEnabled = structure.getSource().isLoading();\n\n\t\t\t\tthis.circleLoaderEnabled = structure.isLoaderVisible();\n\n\t\t\t\tif (this.loaderEnabled && !this.initialLoaderAnimation) {\n\t\t\t\t\tthis.initialLoaderAnimation = true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tlet width = this.elementRef.nativeElement.offsetWidth;\n\n\t\tif (width > 0) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t} else {\n\n\t\t\t/**\n\t\t\t * When gui-grid is in dynamic container which is created later then grid.\n\t\t\t */\n\t\t\ttimer(0)\n\t\t\t\t.pipe(\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\n\t\t\t\t\twidth = this.elementRef.nativeElement.offsetWidth;\n\n\t\t\t\t\tif (width > 0) {\n\t\t\t\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tthis.schemaStylesManager\n\t\t\t.init(this.elementRef, this.structureId);\n\n\t\tthis.compositionQueryService\n\t\t\t.onWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\t}\n\n\tisBorderEnabled(): boolean {\n\t\treturn this.structureDefinition.isBorderEnabled();\n\t}\n\n\tgetStructureId(): StructureId {\n\t\treturn this.structureId;\n\t}\n\n}\n","import { ChangeDetectorRef, Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\n\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\n\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\n\n\n@Component({\n\ttemplate: `\n\t\t<div *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-tab\">\n\n\t\t\t<gui-tab [menu]=\"config.getMenus()\" [active]=\"config.getActiveMenu()\">\n\n\t\t\t\t<ng-container *ngIf=\"config.isMainEnabled()\">\n\n\t\t\t\t\t<gui-tab-item class=\"gui-tab-item-dropdown\" [tab]=\"config.getMainMenu()\">\n\n\t\t\t\t\t\t<gui-structure-column-config-sort\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-sort>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-hide\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-hide>\n\n\t\t\t\t\t\t<gui-structure-column-config-column-move\n\t\t\t\t\t\t\t\t[column]=\"column\">\n\t\t\t\t\t\t</gui-structure-column-config-column-move>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isFilteringEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getFilterMenu()\">\n\t\t\t\t\t\t<div class=\"gui-header-menu-item\">{{config.getFilterMenu()}}</div>\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t\t<ng-container *ngIf=\"config.isColumnManagerEnabled()\">\n\n\t\t\t\t\t<gui-tab-item [tab]=\"config.getColumnMenu()\">\n\n\t\t\t\t\t\t<gui-structure-menu-column-manager>\n\t\t\t\t\t\t</gui-structure-menu-column-manager>\n\n\t\t\t\t\t</gui-tab-item>\n\n\t\t\t\t</ng-container>\n\n\t\t\t</gui-tab>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerSortMenu', { static: false })\n\theaderSortMenu: ElementRef;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\t@Inject('column') public column: CellTemplateWithContext) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n}\n","import { ElementRef, Injectable, Injector } from '@angular/core';\n\nimport { FabricInlineDialogService, InlineDialogPlacement } from '@generic-ui/fabric';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n@Injectable()\nexport class StructureColumnConfigService {\n\n\tconstructor(private injector: Injector,\n\t\t\t\tprivate inlineDialogService: FabricInlineDialogService) {\n\t}\n\n\topen(elementRef: ElementRef, column: CellTemplateWithContext): void {\n\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [{\n\t\t\t\tprovide: 'column',\n\t\t\t\tuseValue: column\n\t\t\t}],\n\t\t\tparent: this.injector\n\t\t});\n\n\t\tthis.inlineDialogService.open(elementRef, StructureColumnConfigComponent, injector, InlineDialogPlacement.Top, -2);\n\t}\n\n\tclose(): void {\n\t\tthis.inlineDialogService.close();\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, ElementRef, Injector, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from '../menu/structure.column-config.service';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n\n@Component({\n\tselector: 'gui-structure-header-columns',\n\ttemplateUrl: './structure-header-columns.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tproviders: [\n\t\tStructureColumnConfigService\n\t]\n})\nexport class StructureHeaderColumnsComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate injector: Injector,\n\t\t\t\tprivate structureCommandService: StructureCommandService) {\n\t}\n\n\ttoggleSort(column: CellTemplateWithContext) {\n\t\tthis.structureCommandService.toggleSort(column.getFieldId());\n\t}\n\n\tisSortAsc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.ASC;\n\t}\n\n\tisSortDesc(column: CellTemplateWithContext): boolean {\n\t\treturn column.getSortStatus() === SortStatus.DESC;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../structure-id';\n\n\n@Injectable()\nexport class StructureQuickFilterRepository {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tselectQuickFilterEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureFilterRepository } from '../../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureFilterReadModelRepository {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository,\n\t\t\t\tprivate structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t}\n\n\tonFilteringEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureFilterRepository.selectFilterEnabled(structureId);\n\t}\n\n\tonQuickFiltersEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureQuickFilterRepository.selectQuickFilterEnabled(structureId);\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\n\n\n@Component({\n\tselector: 'gui-structure-header-filters',\n\ttemplate: `\n\t\t\n\t\t<ng-container *ngIf=\"!filterMode\">\n\n\t\t\t<div *ngFor=\"let cell of columns\"\n\t\t\t\t [style.width.px]=\"cell.width\"\n\t\t\t\t class=\"gui-header-cell\">\n\n\t\t\t\t<!--\t\t\t\t<gui-structure-header-filter [column]=\"cell\">-->\n\t\t\t\t<!--\t\t\t\t</gui-structure-header-filter>-->\n\n\t\t\t\t<button (click)=\"turnOnFilterMode()\">Add Filter</button>\n\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t\t<ng-container *ngIf=\"filterMode\">\n\n\t\t\t<gui-select [options]=\"['has value', 'is the same as', 'starts with', 'ends with']\" [selected]=\"'has value'\" >\n\n\t\t\t</gui-select>\n\n\t\t\t<form [formGroup]=\"filterForm\">\n\t\t\t\t<input type=\"text\" [formControlName]=\"filterFieldName\" gui-input/>\n\t\t\t</form>\n\n\t\t\t<button gui-button (click)=\"clearFilters()\">Clear All</button>\n\t\t\t<button gui-button (click)=\"turnOffFilterMode()\">Close</button>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFiltersComponent {\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithContext>;\n\n\t@Output()\n\tclosed = new EventEmitter<void>();\n\n\treadonly filterFieldName = 'phrase';\n\n\tfilterForm: FormGroup;\n\n\tfilterMode: boolean = false;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate formBuilder: FormBuilder,\n\t\t\t\tprivate cd: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tthis.filterForm = this.formBuilder.group({\n\t\t\t[this.filterFieldName]: ['']\n\t\t});\n\n\t}\n\n\tngOnInit() {\n\t\tthis.filterForm\n\t\t\t.valueChanges\n\t\t\t// .pipe(\n\t\t\t// debounceTime(500)\n\t\t\t// )\n\t\t\t.subscribe((f) => {\n\t\t\t\tthis.filter(f[this.filterFieldName]);\n\t\t\t});\n\t}\n\n\tfilter(phrase: string): void {\n\n\t\tif (phrase === undefined || phrase === null) {\n\t\t\tphrase = '';\n\t\t}\n\n\t\tthis.structureFilterCommandService.addFilter(this.columns[0].getFieldId(), '1', phrase, this.structureId);\n\t}\n\n\tclearFilters(): void {\n\t\tthis.filterForm.reset();\n\t}\n\n\tturnOnFilterMode(): void {\n\t\tthis.filterMode = true;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tturnOffFilterMode(): void {\n\t\tthis.filterMode = false;\n\t\tthis.cd.detectChanges();\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tOnInit,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\n\nimport { DomainEventBus } from '@generic-ui/hermes';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { StructureHeaderColumnsComponent } from './columns/structure-header-columns.component';\nimport { CellTemplateWithContext } from '../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { StructureHeaderFiltersComponent } from './filters/structure-header-filters.component';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-header',\n\ttemplateUrl: './structure-header.component.html',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild(StructureHeaderColumnsComponent, { read: ElementRef, static: true })\n\tcontainerRef: ElementRef;\n\n\t@ViewChild(StructureHeaderFiltersComponent, { read: ElementRef, static: true })\n\tfiltersRef: ElementRef;\n\n\theaderColumns: Array<CellTemplateWithContext> = [];\n\n\tfilterRowEnabled: boolean = false;\n\n\tconstructor(private readonly changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate readonly renderer: Renderer2,\n\t\t\t\tprivate readonly eventBus: DomainEventBus,\n\t\t\t\tprivate readonly structureId: StructureId,\n\t\t\t\tprivate readonly structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate readonly structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onFilteringEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\n\t\t\t\tthis.filterRowEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\n\t\t\t\tconst headerHeight = +(rowHeight) + 2;\n\n\t\t\t\tif (this.containerRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\n\t\t\t\tif (this.filtersRef) {\n\t\t\t\t\tthis.renderer.setStyle(this.filtersRef.nativeElement, 'height', headerHeight + 'px');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { StructureFilterCommandService } from '../../../ui-api/structure/filter/structure.filter.command.service';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-header-filter',\n\ttemplate: `\n\t\t\n<!--\t\t<ng-container-->\n<!--\t\t\t\t*ngTemplateOutlet=\"column.editTemplate; context: editContext\">-->\n<!--\t\t</ng-container>-->\n\t\t\n\t\t<button gui-button [primary]=\"true\" >Add Filter</button>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureHeaderFilterComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tsub = new ChangedValueEmitter();\n\n\teditContext: any;\n\n\tconstructor(private structureFilterCommandService: StructureFilterCommandService,\n\t\t\t\tprivate structureId: StructureId) {\n\t\tsuper();\n\n\t\tthis.editContext = {\n\t\t\tchanges: this.sub\n\t\t};\n\t}\n\n\tngOnInit() {\n\t\tthis.sub\n\t\t\t.on()\n\t\t\t.subscribe((phrase: string) => this.filter(phrase));\n\t}\n\n\tfilter(phrase: string): void {\n\t\tthis.structureFilterCommandService.addFilter(this.column.getFieldId(), '1', phrase, this.structureId);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\nimport { StructureId } from '../../../../structure-id';\n\n\n@Injectable()\nexport class StructureSearchPhraseRepository extends Reactive {\n\n\tprivate phrase = new Map<string, string>();\n\n\tprivate phrase$ = new ReplaySubject<Map<string, string>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetPhrase(phrase: string, structureId: StructureId): void {\n\t\tthis.phrase.set(structureId.toString(), phrase);\n\t\tthis.phrase$.next(this.phrase);\n\t}\n\n\tonPhrase(structureId: StructureId): Observable<string> {\n\n\t\treturn this.phrase$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, string>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import {\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tInput,\n\tOnInit,\n\tPLATFORM_ID,\n\tRenderer2,\n\tViewEncapsulation\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { FormationCommandService } from '../../ui-api/formation/formation-command.service';\nimport { StructureCellEditArchive } from '../edit/structure.cell-edit.archive';\nimport { StructureEditModeArchive } from '../edit/structure.edit-mode.archive';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { SelectedRowsList } from '../../domain/formation/read/selected-rows/selected-rows-list';\nimport { ItemEntity } from '../../domain/source/item.entity';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { StructureRowSelectEnabledArchive } from './row/structure.row-select-enabled.archive';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\n\n\n@Component({\n\tselector: 'gui-structure-content',\n\ttemplateUrl: `structure-content.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContentComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tsource: Array<ItemEntity>;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\teditMode = false;\n\n\tcellEditing = false;\n\n\trowHeight: number;\n\n\tsearchPhrase: string;\n\n\trowSelecting = StructureRowSelectEnabledArchive.DEFAULT_ROW_SELECT;\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate formationCommandService: FormationCommandService,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureEditModeArchive: StructureEditModeArchive,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService,\n\t\t\t\tprivate structureRowSelectEnabledArchive: StructureRowSelectEnabledArchive,\n\t\t\t\tprivate verticalFormationRepository: VerticalFormationRepository,\n\t\t\t\tprivate structureId: StructureId, // REfactor\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\tthis.formationQueryService\n\t\t\t.onSelectedRows()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowsList: SelectedRowsList) => {\n\n\t\t\t\tthis.clearSelectedRows();\n\n\t\t\t\trowsList.getIds().forEach((id: string) => {\n\n\t\t\t\t\tconst strippedId = 'gui' + id.replace(/-/g, ''),\n\t\t\t\t\t\tselectedRowEl = this.elementRef.nativeElement.querySelector(`#${strippedId}`);\n\n\t\t\t\t\tif (selectedRowEl) {\n\t\t\t\t\t\tthis.renderer.addClass(selectedRowEl, 'selected');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\tthis.structureEditModeArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.editMode = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureCellEditArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.cellEditing = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.rowHeight = rowHeight;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureRowSelectEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowSelecting: boolean) => {\n\t\t\t\tthis.rowSelecting = rowSelecting;\n\t\t\t});\n\n\t\tthis.structureSearchPhraseRepository\n\t\t\t.onPhrase(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((searchPhrase: string) => {\n\t\t\t\tthis.searchPhrase = searchPhrase;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\ttrackByFn() {\n\t\treturn 0;\n\t}\n\n\ttranslateY(index: number): string {\n\t\treturn `translateY(${index * this.rowHeight}px)`;\n\t}\n\n\ttoggleSelectedRow(entity: ItemEntity): void {\n\t\tif (this.rowSelecting) {\n\t\t\tthis.formationCommandService.toggleSelectedRow((entity as any).id);\n\t\t}\n\t}\n\n\tprivate clearSelectedRows(): void {\n\t\tconst selectedElements = this.elementRef.nativeElement.querySelectorAll('.selected');\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tselectedElements.forEach((el: any) => {\n\t\t\t\tthis.renderer.removeClass(el, 'selected');\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { ItemEntity } from '../../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-row',\n\ttemplateUrl: `structure-row.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureRowComponent {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcolumns: Array<CellTemplateWithAccessor>;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditing: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\ttrackByFn(): number {\n\t\treturn 0;\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnDestroy, SimpleChanges, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\nimport { CellTemplateWithAccessor } from '../../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { StructureCellEditArchive } from '../../edit/structure.cell-edit.archive';\nimport { StructureCellEditStore } from '../../edit/structure.cell-edit.store';\nimport { SourceCommandService } from '../../../ui-api/source/source-command.service';\nimport { ChangedValueEmitter } from '../../../../composition/domain/read/edit/changed-value.emitter';\nimport { EditEventType } from '../../../../composition/domain/read/edit/state/edit.event-type';\nimport { StructureEditSourceItemParams } from '../../../domain/source/command/origin/edit/structure.edit-source-item.params';\nimport { StructureCellEditState } from '../../edit/structure.cell-edit.state';\nimport { ItemEntity } from '../../../domain/source/item.entity';\nimport { StructureSearchPhraseRepository } from '../../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Component({\n\tselector: 'gui-structure-cell',\n\ttemplate: `\n\n\t\t<span *ngIf=\"!inEditMode\"\n\t\t\t  (click)=\"enterEditMode()\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.template;\n\t\t\t\t\tcontext: { element: cell.getValue(entity, searchPhrase) }\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t\t<span *ngIf=\"inEditMode\" class=\"gui-cell-edit-mode\">\n\t\t\t<ng-container\n\t\t\t\t\t*ngTemplateOutlet=\"cell.editTemplate;\n\t\t\t\t\tcontext: editContext\">\n\t\t\t</ng-container>\n\t\t</span>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureCellComponent extends SmartComponent implements OnChanges {\n\n\t@Input()\n\tentity: ItemEntity;\n\n\t@Input()\n\tcell: CellTemplateWithAccessor;\n\n\t@Input()\n\teditMode: boolean;\n\n\t@Input()\n\tcellEditingEnabled: boolean;\n\n\t@Input()\n\tsearchPhrase: string;\n\n\tinEditMode: boolean = false;\n\n\teditContext: any;\n\n\tvalueChanges$: ChangedValueEmitter<any>;\n\n\tstatus$: ChangedValueEmitter<any>;\n\n\tactualValue: any;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCellEditArchive: StructureCellEditArchive,\n\t\t\t\tprivate structureCellEditStore: StructureCellEditStore,\n\t\t\t\tprivate sourceCommandService: SourceCommandService,\n\t\t\t\tprivate id: StructureId,\n\t\t\t\tprivate structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\n\t\tif (changes.editMode !== undefined) {\n\t\t\tif (this.editMode) {\n\t\t\t\tthis.cellEditingEnabled = true;\n\t\t\t\tthis.enterEditMode(false);\n\t\t\t} else if (!this.editMode) {\n\t\t\t\tthis.exitEditMode();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.editMode) {\n\t\t\tthis.exitEditMode();\n\t\t}\n\t}\n\n\tenterEditMode(forceCheck: boolean = true): void {\n\n\t\tif (!this.cellEditingEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inEditMode = true;\n\n\t\tthis.valueChanges$ = new ChangedValueEmitter();\n\t\tthis.status$ = new ChangedValueEmitter<EditEventType>();\n\n\t\tthis.editContext = {\n\t\t\tstatus: this.status$,\n\t\t\tvalueChanges: this.valueChanges$,\n\t\t\tvalue: this.cell.getValue(this.entity),\n\t\t\tfocus: forceCheck\n\t\t};\n\n\t\tthis.observeFieldStatus();\n\t\tthis.observeValueChanges();\n\n\t\tthis.publishEditEnter();\n\n\t\tif (!forceCheck) {\n\t\t\tthis.changeDetectorRef.markForCheck();\n\t\t} else {\n\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t}\n\n\t}\n\n\texitEditMode(): void {\n\t\tthis.inEditMode = false;\n\t\tthis.changeDetectorRef.detectChanges();\n\t}\n\n\tsubmitChangesAndExit(): void {\n\n\t\tconst itemId = this.entity.getId(),\n\t\t\tupdatedValue = this.actualValue,\n\t\t\tfieldId = this.cell.columnFieldId;\n\n\t\tthis.sourceCommandService.editItem(new StructureEditSourceItemParams(itemId, fieldId, updatedValue));\n\n\t\tthis.exitEditMode();\n\t}\n\n\tprivate observeFieldStatus(): void {\n\n\t\tthis.status$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((status: EditEventType) => {\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase EditEventType.SUBMIT:\n\t\t\t\t\t\tthis.submitChangesAndExit();\n\t\t\t\t\t\tthis.publishEditSubmit();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EditEventType.CANCEL:\n\t\t\t\t\t\tthis.exitEditMode();\n\t\t\t\t\t\tthis.publishEditCancel();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate observeValueChanges(): void {\n\n\t\tthis.valueChanges$\n\t\t\t.on()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((value: any) => {\n\t\t\t\tthis.actualValue = value;\n\t\t\t});\n\t}\n\n\tprivate publishEditState(state: StructureCellEditState): void {\n\t\tthis.structureCellEditStore.next(state);\n\t}\n\n\tprivate publishEditEnter(): void {\n\t\tthis.publishEditState(StructureCellEditState.ENTER);\n\t}\n\n\tprivate publishEditCancel(): void {\n\t\tthis.publishEditState(StructureCellEditState.CANCEL);\n\t}\n\n\tprivate publishEditSubmit(): void {\n\t\tthis.publishEditState(StructureCellEditState.SUBMIT);\n\t}\n\n}\n","import {\n\tAfterViewInit,\n\tChangeDetectionStrategy,\n\tChangeDetectorRef,\n\tComponent,\n\tElementRef,\n\tInject,\n\tNgZone,\n\tOnDestroy,\n\tOnInit,\n\tOptional,\n\tRenderer2,\n\tViewChild,\n\tViewEncapsulation\n} from '@angular/core';\nimport { combineLatest, fromEvent, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, map, takeUntil } from 'rxjs/operators';\n\nimport { ResizeDetector } from '@generic-ui/fabric';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { CellTemplateWithAccessor } from '../../../composition/domain/read/definition/cell-template-with-accessor';\nimport { SchemaRowColoring } from '../../domain/schema/schema-row-coloring';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureCommandService } from '../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { SourceReadModelService } from '../../ui-api/source/source-read-model.service';\nimport { SchemaReadModelService } from '../../ui-api/schema/schema-read-model.service';\nimport { CompositionCommandService } from '../../../composition/ui-api/composition.command-service';\nimport { CompositionReadModelService } from '../../../composition/ui-api/composition-read-model.service';\nimport { FormationReadModelService } from '../../ui-api/formation/formation-read-model.service';\nimport { structureParentComponent } from '../structure-parent-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { ItemEntity } from '../../domain/source/item.entity';\n\n\n@Component({\n\tselector: 'gui-structure-container',\n\ttemplateUrl: `structure-container.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureContainerComponent extends SmartComponent implements OnInit, AfterViewInit, OnDestroy {\n\n\t@ViewChild('container', { static: false })\n\tcontainerRef: ElementRef;\n\n\tcolumns: Array<CellTemplateWithAccessor> = [];\n\n\tsource: Array<ItemEntity> = [];\n\n\theight: number;\n\n\trowColoring: SchemaRowColoring;\n\n\tprivate autoResizeWidthEnabled: boolean = false;\n\n\tprivate scrollObservation$ = new Subject();\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate renderer: Renderer2,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate ngZone: NgZone,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate sourceQueryService: SourceReadModelService,\n\t\t\t\tprivate schemaQueryService: SchemaReadModelService,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionQueryService: CompositionReadModelService,\n\t\t\t\tprivate formationQueryService: FormationReadModelService,\n\t\t\t\tprivate resizeDetector: ResizeDetector,\n\t\t\t\t@Optional() @Inject(structureParentComponent) private structureParent: any) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\n\t\t/**\n\t\t * TODO One source of truth\n\t\t *\n\t\t * There should only one sub here.\n\t\t */\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\trowHeight = combine[1];\n\n\t\t\t\tthis.source = source;\n\t\t\t\tthis.setHeight(source.length * rowHeight);\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onTemplateColumns()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((columns: Array<CellTemplateWithAccessor>) => {\n\t\t\t\tthis.columns = columns;\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onResizeWidth()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.autoResizeWidthEnabled = enabled;\n\t\t\t});\n\n\t\tcombineLatest(\n\t\t\tthis.sourceQueryService.onEntities(),\n\t\t\tthis.schemaQueryService.onContainerHeight(),\n\t\t\tthis.structureQueryService.onRowHeight()\n\t\t)\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((combine: Array<any>) => {\n\n\t\t\t\tconst source: Array<ItemEntity> = combine[0],\n\t\t\t\t\theight: number = combine[1],\n\t\t\t\t\trowHeight = combine[2];\n\n\t\t\t\tconst sourceSizeHeight = source.length * rowHeight;\n\n\t\t\t\tif (sourceSizeHeight > height) {\n\t\t\t\t\tthis.setHeight(height);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setHeight(sourceSizeHeight);\n\t\t\t\t}\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngAfterViewInit() {\n\n\t\t// turn on when structure is ready\n\t\tif (this.structureParent) {\n\t\t\tthis.resizeDetector\n\t\t\t\t.observe(this.structureParent.getElementRef().nativeElement)\n\t\t\t\t.pipe(\n\t\t\t\t\tfilter(() => this.autoResizeWidthEnabled),\n\t\t\t\t\tmap((element: HTMLElement) => element.offsetWidth),\n\t\t\t\t\tdistinctUntilChanged(),\n\t\t\t\t\tthis.takeUntil()\n\t\t\t\t)\n\t\t\t\t.subscribe((width: number) => {\n\t\t\t\t\tthis.recalculateContainer(width);\n\t\t\t\t});\n\t\t}\n\n\t\tthis.compositionQueryService\n\t\t\t.onContainerWidth()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((width: number) => {\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'width', width + 'px');\n\t\t\t});\n\n\t\tthis.structureQueryService\n\t\t\t.onVerticalScrollEnabled()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tif (enabled) {\n\t\t\t\t\tthis.enableScrollObservation();\n\t\t\t\t} else {\n\t\t\t\t\tthis.disableScrollObservation();\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t// never runs ??\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(\n\t\t\t\tfilter((str: Structure) => {\n\t\t\t\t\treturn str.isVerticalScrollEnabled();\n\t\t\t\t}),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((structure: Structure) => {\n\n\t\t\t\tconst containerHeight = structure.getContainerHeight(),\n\t\t\t\t\ttopMargin = structure.getTopMargin();\n\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'padding-top', topMargin + 'px');\n\t\t\t\tthis.renderer.setStyle(this.containerRef.nativeElement, 'height', containerHeight + 'px');\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tsuper.ngOnDestroy();\n\t\tthis.resizeDetector.destroy(this.elementRef.nativeElement);\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\t\tthis.renderer.setStyle(this.elementRef.nativeElement, 'height', this.height + 'px');\n\t}\n\n\tprivate recalculateContainer(width: number): void {\n\t\tif (this.autoResizeWidthEnabled) {\n\t\t\tthis.compositionCommandService.setContainerWidth(width);\n\t\t}\n\t}\n\n\tprivate enableScrollObservation(): void {\n\t\tthis.ngZone\n\t\t\t.runOutsideAngular(() => {\n\n\t\t\t\tfromEvent(this.elementRef.nativeElement, 'scroll')\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\t// auditTime(10),\n\t\t\t\t\t\ttakeUntil(this.scrollObservation$),\n\t\t\t\t\t\tthis.takeUntil()\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe((event: any) => {\n\n\t\t\t\t\t\tconst scrollTop = event.target.scrollTop;\n\n\t\t\t\t\t\tthis.structureCommandService.setScrollPosition(scrollTop);\n\t\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprivate disableScrollObservation(): void {\n\t\tthis.scrollObservation$.next();\n\t\tthis.scrollObservation$.complete();\n\t}\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'gui-structure-quick-fitlers',\n\ttemplate: `\n\t\n\t\tQuickFilters\n\t\t\n\t`\n})\nexport class StructureQuickFiltersComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { StructureId } from '../../../../structure-id';\nimport { Reactive } from '../../../../../../../common/cdk/reactive';\n\n\n@Injectable()\nexport class StructureSearchingRepository extends Reactive {\n\n\tprivate enabled = new Map<string, boolean>();\n\n\tprivate enabled$ = new ReplaySubject<Map<string, boolean>>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tsetEnabled(enabled: boolean, structureId: StructureId): void {\n\t\tthis.enabled.set(structureId.toString(), enabled);\n\t\tthis.enabled$.next(this.enabled);\n\t}\n\n\tonSearchingEnabled(structureId: StructureId): Observable<boolean> {\n\n\t\treturn this.enabled$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   map((map: Map<string, boolean>) => {\n\t\t\t\t\t\t   return map.get(structureId.toString());\n\t\t\t\t\t   }),\n\t\t\t\t\t   distinctUntilChanged()\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { StructureSearchingRepository } from '../../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureId } from '../../../domain/structure-id';\n\n\n@Injectable()\nexport class StructureSearchReadModelRepository {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t}\n\n\tonSearchEnabled(structureId: StructureId): Observable<boolean> {\n\t\treturn this.structureSearchingRepository.onSearchingEnabled(structureId);\n\t}\n\n}\n","import { InjectionToken } from '@angular/core';\n\nconst prefix = 'Structure -';\n\nexport const STRUCTURE_CSS_CLASS_NAME = new InjectionToken<string>(`${prefix} - css className`);\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../common/cdk/smart-component';\nimport { Structure } from '../../domain/structure/read/structure';\nimport { Paging } from '../../domain/paging/read/paging';\nimport { StructureDefinition } from '../structure-definition';\nimport { StructureId } from '../../domain/structure-id';\nimport { StructureReadModelService } from '../../ui-api/structure/structure-read-model.service';\nimport { PagingReadModelService } from '../../ui-api/paging/paging-read-model.service';\nimport { StructureInfoPanelEnabledArchive } from '../panel/info/structure.info-panel-enabled.archive';\nimport { StructureAggregationArchive } from '../panel/aggregation/structure.aggregation.archive';\nimport { StructureFilterReadModelRepository } from '../../ui-api/structure/filter/structure.filter.read-model.repository';\nimport { StructureSearchReadModelRepository } from '../../ui-api/structure/search/structure-search.read-model.repository';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../../ui-api/structure/structure-tokens';\nimport { StructureAggregationPanelConfig } from '../panel/aggregation/structure.aggregation-panel.config';\n\n\n@Component({\n\tselector: 'gui-structure-blueprint',\n\ttemplateUrl: `structure.blueprint.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureBlueprintComponent extends SmartComponent {\n\n\tstructure: Structure;\n\n\tsearchEnabled: boolean = false;\n\n\ttopAggregationPanelEnabled: boolean = false;\n\n\tbottomAggregationPanelEnabled: boolean = false;\n\n\tquickFiltersEnabled: boolean = false;\n\n\tinfoPanelEnabled: boolean = false;\n\n\treadonly contentCssClass: string;\n\n\treadonly headerCssClass: string;\n\n\tprivate pagingReadModel: Paging;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureDefinition: StructureDefinition,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureQueryService: StructureReadModelService,\n\t\t\t\tprivate pagingQueryService: PagingReadModelService,\n\t\t\t\tprivate structureInfoPanelEnabledArchive: StructureInfoPanelEnabledArchive,\n\t\t\t\tprivate structureAggregationArchive: StructureAggregationArchive,\n\t\t\t\tprivate structureFilterReadModelRepository: StructureFilterReadModelRepository,\n\t\t\t\tprivate structureSearchReadModelRepository: StructureSearchReadModelRepository,\n\t\t\t\t@Inject(STRUCTURE_CSS_CLASS_NAME) private className: string) {\n\t\tsuper();\n\n\t\tthis.headerCssClass = `gui-${this.className}-header`;\n\t\tthis.contentCssClass = `gui-${this.className}-content`;\n\t}\n\n\tngOnInit() {\n\t\tthis.structureQueryService\n\t\t\t.onStructure()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((structure: Structure) => {\n\t\t\t\tthis.structure = structure;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.pagingQueryService\n\t\t\t.onPaging()\n\t\t\t.pipe(this.takeUntil())\n\t\t\t.subscribe((paging: Paging) => {\n\t\t\t\tthis.pagingReadModel = paging;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureSearchReadModelRepository\n\t\t\t.onSearchEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.searchEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\n\t\tthis.structureFilterReadModelRepository\n\t\t\t.onQuickFiltersEnabled(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.quickFiltersEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureAggregationArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureAggregationPanelConfig) => {\n\t\t\t\tthis.topAggregationPanelEnabled = config.itTopEnabled();\n\t\t\t\tthis.bottomAggregationPanelEnabled = config.itBottomEnabled();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.structureInfoPanelEnabledArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((enabled: boolean) => {\n\t\t\t\tthis.infoPanelEnabled = enabled;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tgetHeaderTopClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-top';\n\t}\n\n\tgetHeaderBottomClasses(): string {\n\t\treturn this.headerCssClass + ' gui-header-bottom';\n\t}\n\n\tisColumnHeaderTopEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isTopHeaderEnabled();\n\t}\n\n\tisColumnHeaderBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.isHeaderEnabled() && this.structure && this.structure.isBottomHeaderEnabled();\n\t}\n\n\tisPagingTopEnabled(): boolean {\n\t\treturn this.structureDefinition.getTopPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerTop();\n\t}\n\n\tisPagingBottomEnabled(): boolean {\n\t\treturn this.structureDefinition.getBottomPaging().isEnabled() && this.pagingReadModel && this.pagingReadModel.isPagerBottom();\n\t}\n\n\tisSourceEmpty(): boolean {\n\t\treturn this.structure && this.structure.getEntities().length === 0;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateStoreRegister, InMemoryAggregateStore } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\nimport { InMemoryStructureStore } from '../in-memory.structure.store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateStore extends InMemoryAggregateStore<StructureAggregate> {\n\n\tconstructor(inMemoryStructureStore: InMemoryStructureStore,\n\t\t\t\taggregateStoreRegister: AggregateStoreRegister) {\n\t\tsuper(inMemoryStructureStore, aggregateStoreRegister);\n\t}\n}\n","import { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregate } from './structure.aggregate';\n\nexport abstract class StructureAggregateRepository {\n\n\tabstract getById(aggregateId: AggregateId): StructureAggregate;\n\n\tabstract save(aggregate: StructureAggregate): void;\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateId } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../domain/structure/command/structure-aggregate.repository';\nimport { StructureAggregate } from '../../../../domain/structure/command/structure.aggregate';\n\nimport { InMemoryStructureAggregateStore } from './in-memory.structure.aggregate-store';\n\n\n@Injectable()\nexport class InMemoryStructureAggregateRepository extends StructureAggregateRepository {\n\n\tconstructor(private inMemoryStructureAggregateStore: InMemoryStructureAggregateStore) {\n\t\tsuper();\n\t}\n\n\tgetById(aggregateId: AggregateId): StructureAggregate {\n\t\treturn this.inMemoryStructureAggregateStore.getById(aggregateId);\n\t}\n\n\tsave(aggregate: StructureAggregate): void {\n\t\tthis.inMemoryStructureAggregateStore.save(aggregate);\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SetSourceLoadingEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SetSourceLoadingEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaThemeSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaThemeSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaHorizontalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaHorizontalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaVerticalGridSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaVerticalGridSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaTopHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaTopHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SchemaBottomHeaderChangedEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SchemaBottomHeaderChangedEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class RowColoringSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'RowColoringSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class PagingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'PagingSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class FormationSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'FormationSetEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class ScrollPositionSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'ScrollPositionSetEvent');\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\n\nexport class OriginSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'OriginSetEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureFilterToggledEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'StructureFilterToggledEvent');\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureSearchPhraseSetDomainEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly phrase: string) {\n\t\tsuper(aggregateId, 'StructureSearchPhraseSetDomainEvent');\n\t}\n\n\tgetPhrase(): string {\n\t\treturn this.phrase;\n\t}\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\nimport { AggregateId, DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureRepository } from '../../../../domain/structure/read/structure.repository';\nimport { Structure } from '../../../../domain/structure/read/structure';\nimport { InMemoryStructureReadStore } from './in-memory-structure.read-store';\nimport { StructureInitedEvent } from '../../../../domain/structure/command/init/structure-inited.event';\nimport { SetSourceLoadingEvent } from '../../../../domain/source/command/loading/set-source-loading.event';\nimport { SchemaSetEvent } from '../../../../domain/schema/command/set/schema-set.event';\nimport { SchemaThemeSetEvent } from '../../../../domain/schema/command/theme/schema-theme-set.event';\nimport { SchemaHorizontalGridSetEvent } from '../../../../domain/schema/command/grid/horizontal/schema-horizontal-grid-set.event';\nimport { SchemaVerticalGridSetEvent } from '../../../../domain/schema/command/grid/vertical/schema-vertical-grid-set.event';\nimport { SchemaTopHeaderChangedEvent } from '../../../../domain/schema/command/column-header/top/schema-top-header-changed.event';\nimport { SchemaBottomHeaderChangedEvent } from '../../../../domain/schema/command/column-header/bottom/schema-bottom-header-changed.event';\nimport { RowColoringSetEvent } from '../../../../domain/schema/command/coloring/set/row-coloring-set.event';\nimport { PagingSetEvent } from '../../../../domain/paging/command/set/paging-set.event';\nimport { PrevPageEvent } from '../../../../domain/paging/command/prev-page/prev-page.event';\nimport { NextPageEvent } from '../../../../domain/paging/command/next-page/next-page.event';\nimport { PagesizeChangedEvent } from '../../../../domain/paging/command/change-pagesize/pagesize-changed.event';\nimport { FormationSetEvent } from '../../../../domain/formation/command/set/formation-set.event';\nimport { SelectedRowToggledEvent } from '../../../../domain/formation/command/toggle/selected-row-toggled.event';\nimport { VerticalScrollEnabledSetEvent } from '../../../../domain/structure/command/vertical-formation/set-enabled/vertical-scroll-enabled-set.event';\nimport { ScrollPositionSetEvent } from '../../../../domain/structure/command/vertical-formation/scroll-position/scroll-position-set.event';\nimport { SortToggledEvent } from '../../../../domain/structure/command/sort/toggle/sort-toggled.event';\nimport { OriginSetEvent } from '../../../../domain/source/command/origin/set-origin/origin-set.event';\nimport { StructureFilterToggledEvent } from '../../../../domain/structure/command/filter/toggle/structure.filter-toggled.event';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../../domain/structure/command/search/set-phrase/structure.search-phrase-set.domain-event';\nimport { SortOrderSetEvent } from '../../../../domain/structure/command/sort/order/sort-order-set.event';\nimport { RowHeightSetEvent } from '../../../../domain/structure/command/vertical-formation/set-row-height/row-height-set.event';\n\n\n@Injectable()\nexport class InMemoryStructureRepository extends StructureRepository implements OnDestroy {\n\n\tprivate readonly structureIdToStructure = new Map<string, Structure>();\n\n\tprivate readonly structure$ = new ReplaySubject<Map<string, Structure>>(1);\n\n\tprivate readonly unsubscribe$ = new Subject();\n\n\tconstructor(private domainEventBus: DomainEventBus,\n\t\t\t\tprivate inMemoryStructureQueryStore: InMemoryStructureReadStore) {\n\t\tsuper();\n\n\t\tthis.domainEventBus\n\t\t\t.ofEvent(\n\t\t\t\tStructureInitedEvent,\n\t\t\t\tSetSourceLoadingEvent,\n\t\t\t\tSchemaSetEvent,\n\t\t\t\tSchemaThemeSetEvent,\n\t\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\t\tSchemaVerticalGridSetEvent,\n\t\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\t\tRowColoringSetEvent,\n\t\t\t\tPagingSetEvent,\n\t\t\t\tPrevPageEvent,\n\t\t\t\tNextPageEvent,\n\t\t\t\tPagesizeChangedEvent,\n\t\t\t\tFormationSetEvent,\n\t\t\t\tSelectedRowToggledEvent,\n\t\t\t\tVerticalScrollEnabledSetEvent,\n\t\t\t\tScrollPositionSetEvent,\n\t\t\t\tSortToggledEvent as any,\n\t\t\t\tStructureFilterToggledEvent,\n\t\t\t\tStructureSearchPhraseSetDomainEvent,\n\t\t\t\tSortOrderSetEvent as any,\n\t\t\t\tOriginSetEvent as any,\n\t\t\t\tRowHeightSetEvent\n\t\t\t)\n\t\t\t.pipe(takeUntil(this.unsubscribe$))\n\t\t\t.subscribe((event: DomainEvent) => {\n\n\t\t\t\tconst aggregateId = event.aggregateId;\n\n\t\t\t\tconst structure = this.inMemoryStructureQueryStore.getById(aggregateId),\n\t\t\t\t\tkey = structure.getId().toString();\n\n\t\t\t\tthis.structureIdToStructure.set(key, structure);\n\n\t\t\t\tthis.structure$.next(this.structureIdToStructure);\n\t\t\t});\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unsubscribe$.next();\n\t\tthis.unsubscribe$.complete();\n\t}\n\n\tonStructure(aggregateId: AggregateId): Observable<Structure> {\n\n\t\treturn this.structure$\n\t\t\t\t   .asObservable()\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structureIdToStructure: Map<string, Structure>) => {\n\n\t\t\t\t\t\t   const key = aggregateId.getId();\n\n\t\t\t\t\t\t   return structureIdToStructure.has(key);\n\t\t\t\t\t   }),\n\t\t\t\t\t   map((structureIdToStructure: Map<string, Structure>) => structureIdToStructure.get(aggregateId.getId()))\n\t\t\t\t   );\n\t}\n\n}\n","import { InMemoryStructureAggregateStore } from './commad/in-memory.structure.aggregate-store';\n\nimport { InMemoryStructureAggregateRepository } from './commad/in-memory.structure-aggregate.repository';\nimport { StructureAggregateRepository } from '../../../domain/structure/command/structure-aggregate.repository';\nimport { InMemoryStructureReadStore } from './read/in-memory-structure.read-store';\nimport { StructureRepository } from '../../../domain/structure/read/structure.repository';\nimport { InMemoryStructureRepository } from './read/in-memory.structure.repository';\nimport { InMemoryStructureStore } from './in-memory.structure.store';\n\nexport const inMemoryStructureCommandProviders = [\n\tInMemoryStructureAggregateStore,\n\t{\n\t\tprovide: StructureAggregateRepository,\n\t\tuseClass: InMemoryStructureAggregateRepository\n\t}\n];\n\nexport const inMemoryStructureReadProviders = [\n\tInMemoryStructureReadStore,\n\t{\n\t\tprovide: StructureRepository,\n\t\tuseClass: InMemoryStructureRepository\n\t}\n];\n\nexport const inMemoryStructureProviders = [\n\tInMemoryStructureStore\n];\n","export class OriginItemEntity {\n\n\tid: string;\n\n\trawData: any;\n\n\tprivate version: number;\n\n\tprivate position: number;\n\n\tconstructor(id: string,\n\t\t\t\trawData: any,\n\t\t\t\tposition: number,\n\t\t\t\tversion: number = 0) {\n\t\tthis.id = id;\n\t\tthis.rawData = rawData;\n\t\tthis.position = position;\n\t\tthis.version = version;\n\t}\n\n\tgetData(): any {\n\t\treturn this.rawData;\n\t}\n\n\tgetVersion(): number {\n\t\treturn this.version;\n\t}\n\n\tgetPosition(): number {\n\t\treturn this.position;\n\t}\n\n\tbumpVersion(): void {\n\t\tthis.version += 1;\n\t}\n\n\tsetPosition(position: number): void {\n\t\tthis.position = position;\n\t}\n\n\tclone(): OriginItemEntity {\n\n\t\tconst rawData = { ...this.rawData };\n\n\t\treturn new OriginItemEntity(this.id, rawData, this.version);\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin-item-entity';\n\nexport class StructureSourceItemEditedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly beforeItem: OriginItemEntity,\n\t\t\t\tprivate readonly afterItem: OriginItemEntity) {\n\t\tsuper(aggregateId, 'StructureSourceItemEditedAggregateEvent');\n\t}\n\n\tgetBeforeItem(): OriginItemEntity {\n\t\treturn this.beforeItem;\n\t}\n\n\tgetAfterItem(): OriginItemEntity {\n\t\treturn this.afterItem;\n\t}\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin-item-entity';\n\nexport class StructureOriginChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly origin: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructureOriginChangedAggregateEvent');\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n}\n","import { AggregateEvent, RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from './origin/origin-item-entity';\nimport { StructureId } from '../../structure-id';\nimport { Field } from '../../structure/command/field/data-type/field';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\n\n\nexport class SourceManager {\n\n\tprivate loading: boolean = false;\n\n\tprivate fetched: boolean = false;\n\n\tprivate origin: Array<OriginItemEntity>;\n\n\tprivate entities: Array<OriginItemEntity> = [];\n\n\t// Entities after filtering, searching\n\tprivate preparedEntities: Array<OriginItemEntity> = [];\n\n\tprivate slicedEntities: Array<OriginItemEntity> = [];\n\n\tisLoading(): boolean {\n\t\treturn this.loading;\n\t}\n\n\tisFetched(): boolean {\n\t\treturn this.fetched;\n\t}\n\n\tsetLoading(enabled: boolean): void {\n\t\tthis.loading = enabled;\n\t}\n\n\tsetEntities(ent: Array<OriginItemEntity>): void {\n\t\tthis.entities = ent;\n\t\tthis.recalculatePositions();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.entities;\n\t}\n\n\tsetPreparedEntities(): void {\n\t\tthis.preparedEntities = [...this.entities];\n\t}\n\n\tgetPreparedEntities(): Array<OriginItemEntity> {\n\t\treturn this.preparedEntities;\n\t}\n\n\tsetSlicedEntities(ent: Array<OriginItemEntity>) {\n\t\tthis.slicedEntities = ent;\n\t}\n\n\tgetSlicedEntities(): Array<OriginItemEntity> {\n\t\treturn this.slicedEntities;\n\t}\n\n\tsetOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = this.convertItems(items);\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tsetConvertedOrigin(items: Array<any> = [], structureId: StructureId): AggregateEvent {\n\t\tthis.origin = items;\n\n\t\treturn this.createOriginChangedEvent(structureId);\n\t}\n\n\tgetOrigin(): Array<OriginItemEntity> {\n\t\treturn this.origin;\n\t}\n\n\tgetOriginSize(): number {\n\t\treturn this.origin.length;\n\t}\n\n\t// editOriginItemByProperty(byField, value: any, field: Field, structureId: StructureId): AggregateEvent {\n\t//\n\t// }\n\n\teditOriginItem(itemId: string, value: any, field: Field, structureId: StructureId): ReadonlyArray<AggregateEvent> {\n\n\t\tconst item: OriginItemEntity = this.findOriginItem(itemId),\n\t\t\titemBeforeChange = item.clone();\n\n\t\tif (item) {\n\t\t\titem.rawData[field.getAccessor()] = value;\n\t\t\titem.bumpVersion();\n\t\t}\n\n\t\treturn [\n\t\t\tnew StructureSourceItemEditedAggregateEvent(structureId, itemBeforeChange, item.clone()),\n\t\t\tthis.createOriginChangedEvent(structureId)\n\t\t];\n\t}\n\n\tremoveOriginItem(itemId: string, structureId: StructureId): Array<AggregateEvent> {\n\n\t\tconst index = this.findOriginItemIndex(itemId);\n\n\t\tif (index > -1) {\n\n\t\t\tthis.origin.splice(index, 1);\n\n\t\t\treturn [this.createOriginChangedEvent(structureId)];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate convertItems(items: Array<any>): Array<OriginItemEntity> {\n\t\treturn items.map((item: any, index: number) => {\n\t\t\treturn new OriginItemEntity(RandomStringGenerator.generate(), item, index);\n\t\t});\n\t}\n\n\tprivate createOriginChangedEvent(structureId: StructureId): AggregateEvent {\n\t\treturn new StructureOriginChangedAggregateEvent(structureId, this.origin);\n\t}\n\n\tprivate findOriginItem(itemId: string): OriginItemEntity {\n\t\treturn this.origin.find((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate findOriginItemIndex(itemId: string): number {\n\t\treturn this.origin.findIndex((item: OriginItemEntity) => item.id === itemId);\n\t}\n\n\tprivate recalculatePositions(): void {\n\t\tthis.entities.forEach((ent: OriginItemEntity, index: number) => {\n\t\t\tent.setPosition(index);\n\t\t});\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { SourceManager } from './source.manager';\n\n\n@Injectable()\nexport class SourceManagerFactory {\n\n\tcreateDefault(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n\tcreate(): SourceManager {\n\t\treturn new SourceManager();\n\t}\n\n}\n","export class VerticalRange {\n\n\tconstructor(private readonly start: number,\n\t\t\t\tprivate readonly end: number) {\n\t}\n\n\tgetStart(): number {\n\t\treturn this.start;\n\t}\n\n\tgetEnd(): number {\n\t\treturn this.end;\n\t}\n\n}\n","import { VerticalRange } from './vertical-range';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\n\nexport class VerticalFormation {\n\n\tprivate rowHeight: number = 30;\n\n\tprivate hiddenItemsTop = 0;\n\n\tprivate hiddenItemsBottom = 1;\n\n\tprivate viewportHeight: number;\n\n\tprivate scrollPosition: number;\n\n\tprivate range: VerticalRange;\n\n\tprivate sourceSize: number;\n\n\tprivate logger: Logger;\n\n\tconstructor(private enabled: boolean = false,\n\t\t\t\tviewportHeight: number = 0,\n\t\t\t\tsourceSize: number = 0,\n\t\t\t\tscrollPosition: number = 0,\n\t\t\t\trowHeight?: number,\n\t\t\t\thiddenItemsTop?: number,\n\t\t\t\thiddenItemsBottom?: number) {\n\t\tthis.viewportHeight = viewportHeight;\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.scrollPosition = scrollPosition;\n\n\t\tif (Number.isInteger(rowHeight)) {\n\t\t\tthis.rowHeight = rowHeight;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsTop)) {\n\t\t\tthis.hiddenItemsTop = hiddenItemsTop;\n\t\t}\n\n\t\tif (Number.isInteger(hiddenItemsBottom)) {\n\t\t\tthis.hiddenItemsBottom = hiddenItemsBottom;\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled &&\n\t\t\tthis.viewportHeight > 0 &&\n\t\t\tthis.sourceSize > 0;\n\t}\n\n\tgetRowHeight(): number {\n\t\treturn this.rowHeight;\n\t}\n\n\tgetRange(): VerticalRange {\n\t\treturn this.range;\n\t}\n\n\tgetTopMargin(): number {\n\t\treturn this.range.getStart() * this.rowHeight;\n\t}\n\n\tcalculateRange(): any {\n\n\t\tif (this.calcFullHeight() <= this.viewportHeight) {\n\t\t\tthis.range = new VerticalRange(0, this.sourceSize);\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemsInViewport = Math.floor(this.viewportHeight / this.rowHeight);\n\n\t\tconst hiddenElements = Math.floor(this.scrollPosition / this.rowHeight);\n\n\t\tconst topMargin = Math.abs(hiddenElements - this.hiddenItemsTop) * this.rowHeight;\n\n\t\tlet start = (hiddenElements - this.hiddenItemsTop);\n\n\t\tconst viewportElements = Math.ceil(this.viewportHeight / this.rowHeight);\n\n\t\tlet end = start + viewportElements + this.hiddenItemsBottom;\n\n\t\tif (end > this.sourceSize) {\n\t\t\tend = this.sourceSize;\n\t\t\tstart = end - itemsInViewport;\n\t\t}\n\n\t\tthis.range = new VerticalRange(start, end);\n\n\t\treturn {\n\t\t\tstart,\n\t\t\tend,\n\t\t\ttopMargin\n\t\t};\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\n\t\t// TODO dispatch aggregate event\n\t\tif (this.enabled && this.viewportHeight === 0) {\n\t\t\tthis.logger.warn('Height needs to be specified in order for virtual scroll to work.');\n\t\t}\n\n\t\tthis.calculateRange();\n\t}\n\n\tsetSourceSize(sourceSize: number = 0): void {\n\t\tthis.sourceSize = sourceSize;\n\t\tthis.calculateRange();\n\t}\n\n\tsetTopHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsTop = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetBottomHiddenItemsCount(count: number): void {\n\t\tthis.hiddenItemsBottom = count;\n\t\tthis.calculateRange();\n\t}\n\n\tsetScrollPosition(scrollPosition: number): void {\n\t\tthis.scrollPosition = scrollPosition;\n\t\tthis.calculateRange();\n\t}\n\n\tsetViewportHeight(height: number): void {\n\t\tthis.viewportHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetRowHeight(height: number): void {\n\t\tthis.rowHeight = height;\n\t\tthis.calculateRange();\n\t}\n\n\tsetLogger(logger: Logger): void {\n\t\tthis.logger = logger;\n\t}\n\n\tcalcFullHeight(): number {\n\t\treturn this.sourceSize * this.rowHeight;\n\t}\n\n\tgetViewPortHeight(): number {\n\t\treturn this.viewportHeight;\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from '../../../../../../common/cdk/logger/logger';\nimport { VerticalFormation } from './vertical-formation';\n\n\n@Injectable()\nexport class VerticalFormationFactory {\n\n\tconstructor(private logger: Logger) {\n\t}\n\n\tcreate(enabled: boolean = false,\n\t\t   viewportHeight: number = 0,\n\t\t   sourceSize: number = 0,\n\t\t   scrollPosition: number = 0,\n\t\t   rowHeight?: number,\n\t\t   hiddenItemsTop?: number,\n\t\t   hiddenItemsBottom?: number): VerticalFormation {\n\n\t\tconst vf = new VerticalFormation(\n\t\t\tenabled,\n\t\t\tviewportHeight,\n\t\t\tsourceSize,\n\t\t\tscrollPosition,\n\t\t\trowHeight,\n\t\t\thiddenItemsTop,\n\t\t\thiddenItemsBottom\n\t\t);\n\n\t\tvf.setLogger(this.logger);\n\n\t\treturn vf;\n\t}\n\n}\n","export const AGGREGATION_CALCULATORS = 'GUI - Aggregation Calculators';\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly aggregatedValues: Map<string, AggregatedValues>) {\n\t\tsuper(aggregateId, 'StructureAggregationsChangedAggregateEvent');\n\t}\n\n\tgetAggregations(): Map<string, AggregatedValues> {\n\t\treturn this.aggregatedValues;\n\t}\n}\n","import { AggregateEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { StructureAggregationsChangedAggregateEvent } from './structure.aggregations-changed.aggregate-event';\n\n\nexport class AggregationManager {\n\n\tprivate readonly structureId: StructureId;\n\n\tprivate enabled: boolean = false;\n\n\tprivate readonly values = new Map<FieldId, any>();\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly calculators: Array<AggregationCalculator<any, any>>) {\n\t\tthis.structureId = structureId;\n\t}\n\n\tcalculate(fields: Array<Field>, entities: Array<OriginItemEntity>): Array<AggregateEvent> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst calculations = new Map();\n\n\t\tthis.calculators.forEach((calc: AggregationCalculator<any, any>) => {\n\n\t\t\tconst aggregatedValues = calc.calculate(fields, entities);\n\n\t\t\tif (aggregatedValues) {\n\t\t\t\tArray.from(aggregatedValues.keys())\n\t\t\t\t\t .forEach((key: any) => {\n\t\t\t\t\t\t calculations.set(key, aggregatedValues.get(key));\n\t\t\t\t\t });\n\t\t\t}\n\t\t});\n\n\t\tif (calculations.size > 0) {\n\t\t\treturn [\n\t\t\t\tnew StructureAggregationsChangedAggregateEvent(this.structureId, calculations)\n\t\t\t];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\n\t}\n\n\tsetEnabled(enabled: boolean): void {\n\t\tthis.enabled = enabled;\n\t}\n\n\tadd() {\n\t}\n\n\tremove() {\n\t}\n\n\tupdate() {\n\t}\n\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { AggregationCalculator } from './calculation/aggregation.calculator';\nimport { StructureId } from '../../../structure-id';\nimport { AggregationManager } from './aggregation.manager';\n\n\n@Injectable()\nexport class AggregationManagerFactory {\n\n\tconstructor(@Inject(AGGREGATION_CALCULATORS) private calculators: Array<AggregationCalculator<any, any>>) {\n\t}\n\n\tcreate(structureId: StructureId): AggregationManager {\n\t\treturn new AggregationManager(structureId, this.calculators);\n\t}\n\n}\n","import { FilterId } from './filter.id';\nimport { Field } from '../field/data-type/field';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureFilter {\n\n\tprivate readonly filterId: FilterId;\n\n\tprivate field: Field;\n\n\tprivate filterValue: any;\n\n\tconstructor(id: FilterId,\n\t\t\t\tfield: Field,\n\t\t\t\tfilterValue: any) {\n\t\tthis.filterId = id;\n\t\tthis.field = field;\n\t\tthis.filterValue = filterValue;\n\t}\n\n\tgetFieldId(): FieldId {\n\t\treturn this.field.getId();\n\t}\n\n\tgetFilterValue(): any {\n\t\treturn this.filterValue;\n\t}\n\n\tsetFilterValue(filterValue: any): void {\n\t\tthis.filterValue = filterValue;\n\t}\n\n\t// Move to container\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.filter((item: OriginItemEntity) => {\n\n\t\t\tif (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.filterString(item);\n\t\t\t} else if (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.filterNumber(item);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.filterBoolean(item);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\t}\n\n\tprivate filterString(item: OriginItemEntity): boolean {\n\t\tconst value = this.field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.filterValue.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity): boolean {\n\t\tconst numberValue = this.field.getValue(item);\n\n\t\treturn numberValue > this.filterValue;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity): boolean {\n\t\tconst booleanValue = this.field.getValue(item);\n\n\t\treturn booleanValue === this.filterValue;\n\t}\n\n}\n","import { Field } from '../field/data-type/field';\n\nexport class FilterId {\n\n\tprivate readonly id: string;\n\n\tconstructor(field: Field,\n\t\t\t\tfilterId: string) {\n\n\t\tconst fieldId = field.getId().toString();\n\n\t\tthis.id = fieldId + '@' + filterId;\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n}\n","import { FilterConfig } from '../../../../ui-api/structure/filter/filter-config';\nimport { SearchConfig } from '../../../../ui-api/structure/search/search-config';\nimport { QuickFiltersConfig } from '../../../../ui-api/structure/filter/quick-filters.config';\n\nexport class FilterSettings {\n\n\tprivate filteringEnabled: boolean = false;\n\n\tprivate searchEnabled: boolean = false;\n\n\tprivate quickFiltersEnabled: boolean = false;\n\n\tconstructor(filteringEnabled: boolean = false,\n\t\t\t\tsearchEnabled: boolean = false,\n\t\t\t\tquickFiltersEnabled: boolean = false) {\n\t\tthis.filteringEnabled = filteringEnabled;\n\t\tthis.searchEnabled = searchEnabled;\n\t\tthis.quickFiltersEnabled = quickFiltersEnabled;\n\t}\n\n\tisFilteringEnabled(): boolean {\n\t\treturn this.filteringEnabled;\n\t}\n\n\tisQuickFilteringEnabled(): boolean {\n\t\treturn this.quickFiltersEnabled;\n\t}\n\n\tisSearchingEnabled(): boolean {\n\t\treturn this.searchEnabled;\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.filteringEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.searchEnabled = config.enabled;\n\t\t}\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.quickFiltersEnabled = config.enabled;\n\t\t}\n\t}\n\n}\n","import { StructureFilter } from './structure.filter';\nimport { Field } from '../field/data-type/field';\nimport { FilterId } from './filter.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { FilterSettings } from './filter.settings';\n\n\nexport class FilterManager {\n\n\tprivate readonly filterSettings = new FilterSettings();\n\n\tprivate readonly filters = new Map<string, StructureFilter>();\n\n\tgetAll(): Array<StructureFilter> {\n\t\treturn Array.from(this.filters)\n\t\t\t\t\t.map((arr) => arr[1]);\n\t}\n\n\tgetSettings(): FilterSettings {\n\t\treturn this.filterSettings;\n\t}\n\n\taddFilter(field: Field, externalFilterId: string, filterValue: string): void {\n\n\t\tconst filterId = new FilterId(field, externalFilterId),\n\t\t\tfilter = new StructureFilter(filterId, field, filterValue);\n\n\t\tif (filterValue === '') {\n\t\t\tthis.filters.delete(filterId.getId());\n\t\t} else {\n\t\t\tthis.filters.set(filterId.getId(), filter);\n\t\t}\n\t}\n\n\tfilter(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst filters = this.getAll();\n\n\t\tlet filteredEntities = [...entities];\n\n\t\tfor (let filter of filters) {\n\t\t\tfilteredEntities = filter.filter(filteredEntities);\n\t\t}\n\n\t\treturn filteredEntities;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FilterManager } from './filter.manager';\n\n\n@Injectable()\nexport class FilterManagerFactory {\n\n\tcreate(enabled: boolean = false): FilterManager {\n\t\treturn new FilterManager();\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { FieldId } from './data-type/field.id';\n\nexport class FieldIdGenerator {\n\n\tgenerateId(): FieldId {\n\n\t\tconst id = RandomStringGenerator.generate();\n\t\treturn new FieldId(id);\n\t}\n\n}\n","import { FieldId } from './field.id';\nimport { DataType } from './data-type';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../../aggregation/aggregation.type';\nimport { ColumnAggregationConfig } from '../../../../../../composition/domain/column-aggregation.config';\n\nexport abstract class Field {\n\n\tprivate readonly id: FieldId;\n\n\t// TODO\n\tprivate readonly accessor: string | any; //(rawData: any) => any;\n\n\tprivate readonly dataType: DataType;\n\n\tprivate readonly accessorMethod: (entity: OriginItemEntity) => any;\n\n\tprivate aggregationEnabled: boolean = true;\n\n\tprivate aggregations: AggregationType;\n\n\tprivate readonly possibleAggregations: AggregationType;\n\n\tprotected constructor(id: FieldId,\n\t\t\t\t\t\t  accessor: any,\n\t\t\t\t\t\t  dataType: DataType,\n\t\t\t\t\t\t  aggregationConfig?: ColumnAggregationConfig) {\n\t\tthis.id = id;\n\t\tthis.accessor = accessor;\n\t\tthis.dataType = dataType;\n\n\t\tif (typeof accessor === 'string') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => entity.getData()[accessor];\n\t\t} else if (typeof accessor === 'function') {\n\t\t\tthis.accessorMethod = (entity: OriginItemEntity) => accessor(entity.getData());\n\t\t}\n\n\t\tthis.possibleAggregations = this.assignPossibleAggregations();\n\n\t\tthis.assignAggregations(aggregationConfig);\n\t}\n\n\tabstract assignDefaultAggregations(): AggregationType;\n\n\tabstract assignPossibleAggregations(): AggregationType;\n\n\tgetId(): FieldId {\n\t\treturn this.id;\n\t}\n\n\tgetKey(): string {\n\t\treturn this.getId().getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\tgetAccessor(): string {\n\t\treturn this.accessor;\n\t}\n\n\tgetAccessorMethod(): (entity: OriginItemEntity) => any {\n\t\treturn this.accessorMethod;\n\t}\n\n\tgetValue(entity: OriginItemEntity): any {\n\t\treturn this.accessorMethod(entity);\n\t}\n\n\tisAggregation(type: AggregationType): boolean {\n\n\t\tif (!this.isAggregationEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !!(this.aggregations & type);\n\t}\n\n\tisAggregationEnabled(): boolean {\n\t\treturn this.aggregationEnabled;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): void {\n\t\tthis.aggregationEnabled = enabled;\n\t}\n\n\tprivate assignAggregations(aggregationConfig: ColumnAggregationConfig): void {\n\n\t\tif (!!aggregationConfig && Object.keys(aggregationConfig).length !== 0) {\n\n\t\t\tif (aggregationConfig.enabled) {\n\t\t\t\tthis.aggregationEnabled = !!aggregationConfig.enabled;\n\t\t\t}\n\n\t\t\tif (aggregationConfig.aggregationTypes) {\n\n\t\t\t\tthis.aggregations = 0;\n\n\t\t\t\taggregationConfig.aggregationTypes.forEach((t) => {\n\t\t\t\t\tthis.aggregations |= t;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.aggregations = this.assignDefaultAggregations();\n\t\t}\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class UnknownField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.UNKNOWN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class NumberField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.NUMBER,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.SUM |\n\t\t// \tAggregationType.MIN |\n\t\t// \tAggregationType.MAX |\n\t\t// \tAggregationType.AVERAGE |\n\t\t// \tAggregationType.MEDIAN;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.SUM |\n\t\t\tAggregationType.MIN |\n\t\t\tAggregationType.MAX |\n\t\t\tAggregationType.AVERAGE |\n\t\t\tAggregationType.MEDIAN;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class StringField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.STRING,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class BooleanField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.BOOLEAN,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT |\n\t\t// \tAggregationType.TRUTHY |\n\t\t// \tAggregationType.FALSY;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT |\n\t\t\tAggregationType.TRUTHY |\n\t\t\tAggregationType.FALSY;\n\t}\n\n}\n","import { Field } from '../field';\nimport { FieldId } from '../field.id';\nimport { ColumnAggregationConfig } from '../../../../../../../composition/domain/column-aggregation.config';\nimport { DataType } from '../data-type';\nimport { AggregationType } from '../../../aggregation/aggregation.type';\n\n\nexport class DateField extends Field {\n\n\tconstructor(id: FieldId,\n\t\t\t\taccessor: any,\n\t\t\t\taggregationConfig?: ColumnAggregationConfig) {\n\t\tsuper(id,\n\t\t\taccessor,\n\t\t\tDataType.DATE,\n\t\t\taggregationConfig);\n\t}\n\n\tassignDefaultAggregations(): AggregationType {\n\t\treturn 0;\n\t\t// return AggregationType.COUNT |\n\t\t// \tAggregationType.DISTINCT;\n\t}\n\n\tassignPossibleAggregations(): AggregationType {\n\t\treturn AggregationType.COUNT |\n\t\t\tAggregationType.DISTINCT;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FieldIdGenerator } from '../field-id.generator';\nimport { ColumnConfig } from '../../../../../../composition/domain/column.config';\nimport { Field } from './field';\nimport { DataType } from './data-type';\nimport { UnknownField } from './fields/unknown-field';\nimport { NumberField } from './fields/number-field';\nimport { StringField } from './fields/string-field';\nimport { BooleanField } from './fields/boolean-field';\nimport { DateField } from './fields/date-field';\n\n\n@Injectable()\nexport class FieldFactory {\n\n\tconstructor(private readonly fieldIdGenerator: FieldIdGenerator) {\n\t}\n\n\tcreate(column: ColumnConfig): Field {\n\n\t\tlet columnType = column.type;\n\n\t\tif (columnType === undefined) {\n\t\t\tcolumnType = DataType.STRING;\n\t\t}\n\n\t\tif (columnType === DataType.UNKNOWN) {\n\t\t\treturn new UnknownField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.NUMBER) {\n\t\t\treturn new NumberField(this.fieldIdGenerator.generateId(), column.field as string, column.aggregation);\n\t\t}\n\n\t\tif (columnType === DataType.STRING) {\n\t\t\treturn new StringField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.BOOLEAN) {\n\t\t\treturn new BooleanField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t\tif (columnType === DataType.DATE) {\n\t\t\treturn new DateField(this.fieldIdGenerator.generateId(), column.field as string);\n\t\t}\n\n\t}\n\n\n}\n","import { Field } from './data-type/field';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldId } from './data-type/field.id';\nimport { ColumnConfig } from '../../../../../composition/domain/column.config';\n\n\nexport class FieldCollection {\n\n\tprivate readonly fields = new Map<string, Field>();\n\n\tconstructor(private readonly fieldFactory: FieldFactory) {\n\t}\n\n\tgetField(fieldId: FieldId): Field {\n\n\t\tif (fieldId === null) {\n\t\t\treturn this.getAllFields()[0];\n\t\t}\n\n\t\treturn this.fields.get(fieldId.getId());\n\t}\n\n\tgetAllFieldIds(): Array<string> {\n\t\treturn Array.from(this.fields.keys());\n\t}\n\n\tgetAllFields(): Array<Field> {\n\t\treturn Array.from(this.fields.values());\n\t}\n\n\tinitFields(columns: Array<ColumnConfig>): void {\n\n\t\tif (!columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tcolumns.forEach((column: ColumnConfig) => {\n\n\t\t\tconst field = this.fieldFactory.create(column);\n\n\t\t\tthis.addField(field);\n\t\t});\n\t}\n\n\taddFields(fields: Array<Field>): void {\n\t\tfor (let field of fields) {\n\t\t\tthis.addField(field);\n\t\t}\n\t}\n\n\tprivate addField(field: Field): void {\n\t\tthis.fields.set(field.getId().toString(), field);\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { FieldFactory } from './data-type/field.factory';\nimport { FieldCollection } from './field.collection';\n\n\n@Injectable()\nexport class FieldCollectionFactory {\n\n\tconstructor(private fieldFactory: FieldFactory) {\n\t}\n\n\tcreate(): FieldCollection {\n\t\treturn new FieldCollection(this.fieldFactory);\n\t}\n\n}\n","import { SorterId } from './sorter.id';\nimport { Field } from '../field/data-type/field';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { DataType } from '../field/data-type/data-type';\n\nexport class StructureSorter {\n\n\tprivate readonly sorterId: SorterId;\n\n\tprivate columnId: string;\n\n\tprivate field: Field;\n\n\tprivate rank: number = 1;\n\n\tprivate direction: boolean;\n\n\tconstructor(id: SorterId,\n\t\t\t\tfield: Field,\n\t\t\t\tdirection: boolean = true) {\n\t\tthis.sorterId = id;\n\t\tthis.field = field;\n\t\tthis.direction = direction;\n\t}\n\n\tgetId(): SorterId {\n\t\treturn this.sorterId;\n\t}\n\n\tgetRank(): number {\n\t\treturn this.rank;\n\t}\n\n\tgetField(): Field {\n\t\treturn this.field;\n\t}\n\n\thasDirection(): boolean {\n\t\treturn this.direction;\n\t}\n\n\tchangeDirection(): void {\n\t\tthis.direction = !this.direction;\n\t}\n\n\tsetDirection(direction: boolean): void {\n\t\tthis.direction = direction;\n\t}\n\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\treturn entities.sort((entityOne: OriginItemEntity, entityTwo: OriginItemEntity) => {\n\n\t\t\tlet valueOne = this.direction ? this.field.getValue(entityOne) : this.field.getValue(entityTwo),\n\t\t\t\tvalueTwo = this.direction ? this.field.getValue(entityTwo) : this.field.getValue(entityOne);\n\n\t\t\tif (this.field.getDataType() === DataType.NUMBER) {\n\t\t\t\treturn this.sortNumber(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.BOOLEAN) {\n\t\t\t\treturn this.sortBoolean(valueOne, valueTwo);\n\t\t\t} else if (this.field.getDataType() === DataType.STRING) {\n\t\t\t\treturn this.sortString(valueOne, valueTwo);\n\t\t\t} else {\n\t\t\t\treturn this.sortUnknown(valueOne, valueTwo);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate sortString(strOne: string, strTwo: string): number {\n\n\t\tconst sureStrOne = '' + strOne,\n\t\t\tsureStrTwo = '' + strTwo;\n\n\t\treturn sureStrOne.localeCompare(sureStrTwo);\n\t}\n\n\tprivate sortNumber(numOne: number, numTwo: number): number {\n\n\t\tconst sureNumOne = +numOne,\n\t\t\tsureNumTwo = +numTwo;\n\n\t\treturn sureNumOne - sureNumTwo;\n\t}\n\n\tprivate sortBoolean(booleanOne: boolean, booleanTwo: boolean): number {\n\n\t\tconst sureBoolOne = !!booleanOne,\n\t\t\tsureBoolTwo = !!booleanTwo;\n\n\t\treturn (sureBoolOne === sureBoolTwo) ? 0 : sureBoolTwo ? -1 : 1;\n\t}\n\n\tprivate sortUnknown(a: any, b: any): number {\n\t\treturn 0;\n\t}\n\n}\n","export class SorterId {\n\n\tprivate readonly sorterId: string;\n\n\tconstructor(id: string) {\n\t\tthis.sorterId = id;\n\t}\n\n\tgetId(): string {\n\t\treturn this.sorterId;\n\t}\n}\n","import { RandomStringGenerator } from '@generic-ui/hermes';\n\nimport { StructureSorter } from './structure.sorter';\nimport { SortingConfig } from '../../../../ui-api/structure/sorting-config';\nimport { Field } from '../field/data-type/field';\nimport { SorterId } from './sorter.id';\nimport { FieldId } from '../field/data-type/field.id';\nimport { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { SortStatus } from '../../../../../composition/domain/command/column/sort/sort-status';\n\n\nexport class SorterCollection {\n\n\tprivate enabled: boolean;\n\n\tprivate multi: boolean;\n\n\tprivate readonly sorters = new Map<string, StructureSorter>();\n\n\tconstructor(enabled: boolean = false,\n\t\t\t\tmulti: boolean = false) {\n\t\tthis.enabled = enabled;\n\t\tthis.multi = multi;\n\t}\n\n\tsetConfig(config: SortingConfig): void {\n\n\t\tif (config && config.enabled !== undefined && config.enabled !== null) {\n\t\t\tthis.enabled = config.enabled;\n\t\t}\n\n\t\tif (config && config.multiSorting !== undefined && config.multiSorting !== null) {\n\t\t\tthis.multi = config.multiSorting;\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t}\n\n\ttoggle(field: Field): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sorter) {\n\t\t\tif (sorter.hasDirection()) {\n\t\t\t\tsorter.changeDirection();\n\t\t\t} else {\n\t\t\t\tthis.delete(fieldId);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.add(field);\n\t\t}\n\n\t}\n\n\tsetSortOrder(field: Field, sortOrder: SortStatus): void {\n\n\t\tconst fieldId = field.getId(),\n\t\t\tsorter = this.sorters.get(fieldId.getId());\n\n\t\tif (sortOrder === SortStatus.NONE) {\n\t\t\tthis.delete(fieldId);\n\t\t} else if (sortOrder === SortStatus.ASC || sortOrder === SortStatus.DESC) {\n\n\t\t\tthis.delete(fieldId);\n\n\t\t\tconst direction = sortOrder === SortStatus.ASC;\n\n\t\t\tthis.add(field, direction);\n\t\t}\n\t}\n\n\tadd(field: Field, direction = true): void {\n\t\tthis.addSorter(field.getId(), new StructureSorter(new SorterId(RandomStringGenerator.generate()), field, direction));\n\t}\n\n\taddSorter(fieldId: FieldId, sorter: StructureSorter): void {\n\n\t\tif (!this.multi) {\n\t\t\tthis.sorters.clear();\n\t\t}\n\n\t\tthis.sorters.set(fieldId.getId(), sorter);\n\t}\n\n\tdelete(fieldId: FieldId): void {\n\t\tthis.sorters.delete(fieldId.getId());\n\t}\n\n\tupdate(): void {\n\t}\n\n\t// TODO Remove the loop from sorter.sort\n\tsort(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\t\tconst sorters = this.getAll();\n\n\t\tlet sortedEntities = [...entities];\n\n\t\tfor (let sorter of sorters) {\n\t\t\tsortedEntities = sorter.sort(sortedEntities);\n\t\t}\n\n\t\treturn sortedEntities;\n\t}\n\n\tgetAll(): Array<StructureSorter> {\n\n\t\tif (!this.enabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn Array.from(this.sorters)\n\t\t\t\t\t.map((arr) => arr[1])\n\t\t\t\t\t.sort((sorterOne: StructureSorter, sorterTwo: StructureSorter) => {\n\t\t\t\t\t\treturn sorterOne.getRank() - sorterTwo.getRank();\n\t\t\t\t\t})\n\t\t\t\t\t.reverse();\n\t}\n}\n","export class FormationAggregate {\n\n\t/**\n\t * In the future this class can be responsible for managing:\n\t * - expanded / collapsed nodes\n\t * - sorting?\n\t * - filtering?\n\t */\n\n\tconstructor(private selectedRows: Array<string>) {\n\t}\n\n\tgetSelectedRows(): Array<string> {\n\t\treturn this.selectedRows;\n\t}\n\n\ttoggleRow(selectedRow: string): void {\n\n\t\tif (this.selectedRows.length > 0) {\n\n\t\t\tif (this.selectedRows[0] === selectedRow) {\n\t\t\t\tthis.selectedRows = [];\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.selectedRows = [selectedRow];\n\t}\n}\n","export class ColumnHeaderEntity {\n\n\tconstructor(private top: boolean,\n\t\t\t\tprivate bottom: boolean) {\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.top = enabled;\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.bottom = enabled;\n\t}\n\n\tisHeaderOnTop(): boolean {\n\t\treturn this.top;\n\t}\n\n\tisHeaderOnBottom(): boolean {\n\t\treturn this.bottom;\n\t}\n\n}\n","import { ColumnHeaderEntity } from './column-header/column-header.entity';\nimport { SchemaTheme } from '../schema-theme';\nimport { SchemaRowColoring } from '../schema-row-coloring';\n\nexport class SchemaAggregate {\n\n\tprivate headerHeight = 28;\n\n\tprivate pagerHeight = 35;\n\n\tprivate containerHeight: number;\n\n\tprivate active: boolean = false;\n\n\tprivate horizontalGrid: boolean = true;\n\n\tprivate verticalGrid: boolean = true;\n\n\tprivate columnHeader: ColumnHeaderEntity = new ColumnHeaderEntity(true, false);\n\n\tprivate theme: SchemaTheme = SchemaTheme.FABRIC;\n\n\tprivate rowColoring: SchemaRowColoring = SchemaRowColoring.ODD;\n\n\tconstructor(private width?: number,\n\t\t\t\tprivate height?: number) {\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tgetRowColoring(): SchemaRowColoring {\n\t\treturn this.rowColoring;\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.height = height;\n\n\t\tthis.calculateContainerHeight();\n\t}\n\n\tsetTheme(theme: SchemaTheme): void {\n\t\tthis.theme = theme;\n\t}\n\n\tsetRowColoring(coloring: SchemaRowColoring): void {\n\t\tthis.rowColoring = coloring;\n\t}\n\n\tgetTheme(): SchemaTheme {\n\t\treturn this.theme;\n\t}\n\n\tgetWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tgetHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tgetContainerHeight(): number {\n\t\treturn this.height;\n\t\t// return this.containerHeight;\n\t}\n\n\tgetColumnHeader(): ColumnHeaderEntity {\n\t\treturn this.columnHeader;\n\t}\n\n\tsetHeaderTop(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderTop(enabled);\n\t}\n\n\tsetHeaderBottom(enabled: boolean): void {\n\t\tthis.getColumnHeader().setHeaderBottom(enabled);\n\t}\n\n\tsetVerticalGrid(enabled: boolean): void {\n\t\tthis.verticalGrid = enabled;\n\t}\n\n\tsetHorizontalGrid(enabled: boolean): void {\n\t\tthis.horizontalGrid = enabled;\n\t}\n\n\tisVerticalGridEnabled(): boolean {\n\t\treturn this.verticalGrid;\n\t}\n\n\tisHorizontalGridEnabled(): boolean {\n\t\treturn this.horizontalGrid;\n\t}\n\n\tprivate getHeaderHeight(): number {\n\t\treturn this.headerHeight;\n\t}\n\n\tprivate getPagerHeight(): number {\n\t\treturn this.pagerHeight;\n\t}\n\n\tprivate calculateContainerHeight(): void {\n\n\t\tif (!this.height) {\n\t\t\tthis.active = false;\n\t\t\treturn;\n\t\t} else {\n\t\t\tthis.active = true;\n\t\t}\n\n\t\tthis.containerHeight = this.height - this.getHeaderHeight() - this.getPagerHeight();\n\t}\n\n}\n","import { OriginItemEntity } from '../../../source/command/origin/origin-item-entity';\nimport { Field } from '../field/data-type/field';\nimport { DataType } from '../field/data-type/data-type';\n\n\nexport class SearchManager {\n\n\tprivate searchFields: Array<Field> = [];\n\n\tprivate searchPhrase: string;\n\n\taddSearchPhrase(fields: Array<Field>, searchPhrase: string): void {\n\n\t\tif (!searchPhrase) {\n\t\t\tthis.searchFields = [];\n\t\t\treturn;\n\t\t}\n\n\t\tlet searchableFields =\n\t\t\tfields.filter((field: Field) => {\n\t\t\t\treturn field.getDataType() === DataType.STRING;\n\t\t\t});\n\n\t\tif (searchableFields.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.searchFields = searchableFields;\n\n\t\tthis.searchPhrase = searchPhrase;\n\t}\n\n\tremoveSearchFilters(): void {\n\t\tthis.searchFields = [];\n\t}\n\n\tsearch(entities: Array<OriginItemEntity>): Array<OriginItemEntity> {\n\n\t\tif (entities.length === 0 || this.searchFields.length === 0) {\n\t\t\treturn entities;\n\t\t}\n\n\t\tlet searchedItems = new Set<OriginItemEntity>();\n\n\t\tfor (let i = 0; i < entities.length; i += 1) {\n\n\t\t\tfor (let field of this.searchFields) {\n\n\t\t\t\tif (this.filterString(entities[i], field)) {\n\t\t\t\t\tsearchedItems.add(entities[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(searchedItems);\n\t}\n\n\tprivate filterString(item: OriginItemEntity, field: Field): boolean {\n\t\tconst value = field.getValue(item);\n\n\t\tif (typeof value === 'string') {\n\t\t\treturn value.toLowerCase().indexOf(this.searchPhrase.toLowerCase()) > -1;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate filterNumber(item: OriginItemEntity, field: Field): boolean {\n\t\tconst numberValue = field.getValue(item);\n\n\t\treturn numberValue > this.searchPhrase;\n\t}\n\n\tprivate filterBoolean(item: OriginItemEntity, field: Field): boolean {\n\t\tconst booleanValue = field.getValue(item);\n\n\t\treturn booleanValue === this.searchPhrase;\n\t}\n\n}\n","import { AggregateEvent, AggregateId } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\n\nexport class StructurePreparedEntitiesSetAggregateEvent extends AggregateEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetAggregateEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n\n}\n","import { Aggregate, AggregateEvent, RootAggregate } from '@generic-ui/hermes';\n\nimport { PagingAggregate } from '../../paging/command/paging.aggregate';\nimport { SourceManager } from '../../source/command/source.manager';\nimport { VerticalFormation } from './vertical-formation/vertical-formation';\nimport { AggregationManager } from './aggregation/aggregation.manager';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { FilterManager } from './filter/filter.manager';\nimport { FieldCollection } from './field/field.collection';\nimport { FormationAggregate } from '../../formation/command/formation-aggregate';\nimport { SchemaAggregate } from '../../schema/command/schema-aggregate';\nimport { StructureId } from '../../structure-id';\nimport { StructureEditSourceItemParams } from '../../source/command/origin/edit/structure.edit-source-item.params';\nimport { PagingConfig } from '../../paging/paging-config';\nimport { OriginItemEntity } from '../../source/command/origin/origin-item-entity';\nimport { ColumnConfig } from '../../../../composition/domain/column.config';\nimport { Field } from './field/data-type/field';\nimport { SortingConfig } from '../../../ui-api/structure/sorting-config';\nimport { FieldId } from './field/data-type/field.id';\nimport { StructureSorter } from './sort/structure.sorter';\nimport { FilterConfig } from '../../../ui-api/structure/filter/filter-config';\nimport { QuickFiltersConfig } from '../../../ui-api/structure/filter/quick-filters.config';\nimport { SearchConfig } from '../../../ui-api/structure/search/search-config';\nimport { SearchManager } from './search/search.manager';\nimport { StructurePreparedEntitiesSetAggregateEvent } from '../../source/command/prepared/structure.prepared-entities-set.aggregate-event';\nimport { SortStatus } from '../../../../composition/domain/command/column/sort/sort-status';\n\n@RootAggregate\nexport class StructureAggregate extends Aggregate {\n\n\tprivate formationAggregate: FormationAggregate;\n\n\tprivate schema: SchemaAggregate;\n\n\tprivate pagingAggregate: PagingAggregate;\n\n\tprivate sourceManager: SourceManager;\n\n\tprivate sorterCollection: SorterCollection;\n\n\tprivate filterManager: FilterManager;\n\n\tprivate searchManager: SearchManager;\n\n\tprivate verticalFormation: VerticalFormation;\n\n\tprivate fieldCollection: FieldCollection;\n\n\tprivate aggregationManager: AggregationManager;\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tpagingAggregate: PagingAggregate,\n\t\t\t\tformationAggregate: FormationAggregate,\n\t\t\t\tsourceManager: SourceManager,\n\t\t\t\tverticalFormation: VerticalFormation,\n\t\t\t\taggregationManager: AggregationManager,\n\t\t\t\tsorterCollection: SorterCollection,\n\t\t\t\tfilterCollection: FilterManager,\n\t\t\t\tsearchManager: SearchManager,\n\t\t\t\tfieldCollection: FieldCollection,\n\t\t\t\tschema: SchemaAggregate) {\n\t\tsuper(structureId);\n\t\tthis.pagingAggregate = pagingAggregate;\n\t\tthis.formationAggregate = formationAggregate;\n\t\tthis.sourceManager = sourceManager;\n\t\tthis.verticalFormation = verticalFormation;\n\t\tthis.aggregationManager = aggregationManager;\n\t\tthis.sorterCollection = sorterCollection;\n\t\tthis.filterManager = filterCollection;\n\t\tthis.searchManager = searchManager;\n\t\tthis.fieldCollection = fieldCollection;\n\t\tthis.schema = schema;\n\t}\n\n\tgetVerticalFormation(): VerticalFormation {\n\t\treturn this.verticalFormation;\n\t}\n\n\tsetAggregationEnabled(enabled: boolean): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.aggregationManager.setEnabled(enabled);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetOrigin(items: Array<any>): ReadonlyArray<AggregateEvent> {\n\n\t\tthis.addEvent(\n\t\t\tthis.sourceManager.setOrigin(items, this.getId())\n\t\t);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\teditItem(editParams: StructureEditSourceItemParams): ReadonlyArray<AggregateEvent> {\n\n\t\tconst itemId = editParams.getItemId(),\n\t\t\tfieldId = editParams.getColumnFieldId(),\n\t\t\tfield = this.fieldCollection.getField(fieldId as any), // as FieldId\n\t\t\tvalue = editParams.getValue();\n\n\t\tconst editItemEvents = this.sourceManager.editOriginItem(itemId, value, field, this.getId());\n\n\t\teditItemEvents.forEach((e) => this.addEvent(e));\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tsetHeight(height: number): void {\n\t\tthis.getSchema().setHeight(height);\n\n\t\tconst viewportHeight = this.getSchema().getContainerHeight();\n\n\t\tthis.verticalFormation.setViewportHeight(viewportHeight);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tsetFormation(formation: FormationAggregate): void {\n\t\tthis.formationAggregate = formation;\n\t}\n\n\tsetScrollPosition(position: number): void {\n\t\tthis.verticalFormation.setScrollPosition(position);\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tgetFormation(): FormationAggregate {\n\t\treturn this.formationAggregate;\n\t}\n\n\tsetSchema(schema: SchemaAggregate): void {\n\t\tthis.schema = schema;\n\t}\n\n\tgetSchema(): SchemaAggregate {\n\t\treturn this.schema;\n\t}\n\n\tgetPaging(): PagingAggregate {\n\t\treturn this.pagingAggregate;\n\t}\n\n\tchangePaging(config: PagingConfig) {\n\t\tthis.pagingAggregate.change(config);\n\t\tthis.calculateSource();\n\t}\n\n\tsetPaging(paging: PagingAggregate): void {\n\t\tthis.pagingAggregate = paging;\n\t\tthis.calculateSource();\n\t}\n\n\tnextPage(): void {\n\n\t\tthis.pagingAggregate.nextPage();\n\n\t\tthis.calculateSource();\n\t}\n\n\tprevPage(): void {\n\t\tthis.pagingAggregate.prevPage();\n\t\tthis.calculateSource();\n\t}\n\n\tchangePageSize(pageSize: number): ReadonlyArray<AggregateEvent> {\n\n\t\tconst pagingEvents = this.pagingAggregate.changePageSize(pageSize);\n\n\t\t// TODO\n\t\tpagingEvents.forEach((event) => {\n\t\t\tthis.addEvent(event);\n\t\t});\n\n\t\tthis.calculateSource();\n\n\t\treturn this.getEvents();\n\t}\n\n\tgetEntities(): Array<OriginItemEntity> {\n\t\treturn this.sourceManager.getSlicedEntities();\n\t}\n\n\tgetSource(): SourceManager {\n\t\treturn this.sourceManager;\n\t}\n\n\tcreateFields(columns: Array<ColumnConfig>): Array<Field> {\n\t\tthis.fieldCollection.initFields(columns);\n\n\t\t// TODO Should throw event fields created\n\t\treturn this.fieldCollection.getAllFields();\n\t}\n\n\tsetSortingConfig(config: SortingConfig): void {\n\t\tthis.sorterCollection.setConfig(config);\n\t}\n\n\ttoggleSort(fieldId: FieldId): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.toggle(field);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetSortOrder(fieldId: FieldId, sortOrder: SortStatus): Array<StructureSorter> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\tthis.sorterCollection.setSortOrder(field, sortOrder);\n\n\t\tthis.calculateSource();\n\n\t\treturn this.sorterCollection.getAll();\n\t}\n\n\tsetFilterConfig(config: FilterConfig): void {\n\t\tthis.filterManager.getSettings().setFilterConfig(config);\n\t}\n\n\tsetSearchingConfig(config: SearchConfig): void {\n\t\tthis.filterManager.getSettings().setSearchingConfig(config);\n\t}\n\n\tsetQuickFiltersConfig(config: QuickFiltersConfig): void {\n\t\tthis.filterManager.getSettings().setQuickFiltersConfig(config);\n\t}\n\n\ttoggleFilter(fieldId: FieldId, externalFilterId: string, filterValue: string): Array<AggregateEvent> {\n\n\t\tconst field = this.fieldCollection.getField(fieldId);\n\n\t\t// Field not found\n\t\t// TODO throw aggregate event\n\t\tif (field === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis.filterManager.addFilter(field, externalFilterId, filterValue);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\taddSearchPhrase(phrase: string): Array<AggregateEvent> {\n\n\t\tconst fields = this.fieldCollection.getAllFields();\n\n\t\tthis.searchManager.addSearchPhrase(fields, phrase);\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tremoveSearchPhrase(): Array<AggregateEvent> {\n\n\t\tthis.searchManager.removeSearchFilters();\n\n\t\tthis.calculateSource();\n\n\t\treturn [];\n\t}\n\n\tprivate calculateSource(): void {\n\n\t\tif (!this.sourceManager.getOrigin() || !this.pagingAggregate) {\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO Refactor\n\t\tthis.sourceManager.setEntities(this.sourceManager.getOrigin());\n\n\t\t// filtering\n\t\tthis.sourceManager.setEntities(this.filterManager.filter(this.sourceManager.getEntities()));\n\n\t\t// search\n\t\tconst searchedEntities = this.searchManager.search(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(searchedEntities);\n\n\t\t// sorting\n\t\tconst ents = this.sorterCollection.sort(this.sourceManager.getEntities());\n\t\tthis.sourceManager.setEntities(ents);\n\n\t\t// calculate filteredEntities\n\t\tthis.sourceManager.setPreparedEntities();\n\n\t\tthis.pagingAggregate.setSourceSize(this.sourceManager.getPreparedEntities().length);\n\n\t\tthis.addEvent(new StructurePreparedEntitiesSetAggregateEvent(this.getId(), ents));\n\n\t\t// aggregations\n\t\tconst aggregationEvents = this.aggregationManager.calculate(\n\t\t\tthis.fieldCollection.getAllFields(),\n\t\t\tthis.sourceManager.getEntities()\n\t\t);\n\n\t\taggregationEvents.forEach((ae: AggregateEvent) => {\n\t\t\tthis.addEvent(ae);\n\t\t});\n\n\t\t// paging\n\t\tthis.sourceManager.setEntities(this.pagingAggregate.sample(this.sourceManager.getEntities()));\n\n\t\tthis.verticalFormation.setSourceSize(this.sourceManager.getEntities().length);\n\n\t\tthis.calculateSourceBasedOnVirtualScroll();\n\t}\n\n\tprivate calculateSourceBasedOnVirtualScroll(): void {\n\n\t\tif (this.verticalFormation.isEnabled()) {\n\n\t\t\tconst range = this.verticalFormation.getRange();\n\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities().slice(range.getStart(), range.getEnd())\n\t\t\t);\n\t\t} else {\n\t\t\tthis.sourceManager.setSlicedEntities(\n\t\t\t\tthis.sourceManager.getEntities()\n\t\t\t);\n\t\t}\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SchemaAggregate } from './schema-aggregate';\n\n\n@Injectable()\nexport class SchemaAggregateFactory {\n\n\tcreate(): SchemaAggregate {\n\t\treturn new SchemaAggregate();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { FormationAggregate } from './formation-aggregate';\n\n\n@Injectable()\nexport class FormationAggregateFactory {\n\n\tcreate(): FormationAggregate {\n\t\treturn new FormationAggregate([]);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { SearchManager } from './search.manager';\n\n@Injectable()\nexport class SearchManagerFactory {\n\n\tcreate(): SearchManager {\n\t\treturn new SearchManager();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { PagingAggregateFactory } from '../../paging/command/paging.aggregate-factory';\nimport { SourceManagerFactory } from '../../source/command/source.manager-factory';\nimport { VerticalFormationFactory } from './vertical-formation/vertical-formation.factory';\nimport { AggregationManagerFactory } from './aggregation/aggregation.manager.factory';\nimport { FilterManagerFactory } from './filter/filter.manager-factory';\nimport { FieldCollectionFactory } from './field/field-collection.factory';\nimport { StructureId } from '../../structure-id';\nimport { StructureAggregate } from './structure.aggregate';\nimport { SorterCollection } from './sort/sorter.collection';\nimport { SchemaAggregateFactory } from '../../schema/command/schema.aggregate-factory';\nimport { FormationAggregateFactory } from '../../formation/command/formation.aggregate-factory';\nimport { SearchManagerFactory } from './search/search.manager-factory';\n\n\n@Injectable()\nexport class StructureAggregateFactory {\n\n\tconstructor(private readonly pagingAggregateFactory: PagingAggregateFactory,\n\t\t\t\tprivate readonly sourceManagerFactory: SourceManagerFactory,\n\t\t\t\tprivate readonly formationAggregateFactory: FormationAggregateFactory,\n\t\t\t\tprivate readonly verticalFormationFactory: VerticalFormationFactory,\n\t\t\t\tprivate readonly aggregationManagerFactory: AggregationManagerFactory,\n\t\t\t\tprivate readonly filterManagerFactory: FilterManagerFactory,\n\t\t\t\tprivate readonly searchManagerFactory: SearchManagerFactory,\n\t\t\t\tprivate readonly fieldCollectionFactory: FieldCollectionFactory,\n\t\t\t\tprivate readonly schemaAggregateFactory: SchemaAggregateFactory) {\n\t}\n\n\tcreate(structureId: StructureId): StructureAggregate {\n\n\t\tconst paging = this.pagingAggregateFactory.createDefault(),\n\t\t\tsource = this.sourceManagerFactory.createDefault(),\n\t\t\tverticalFormation = this.verticalFormationFactory.create(),\n\t\t\tformationAggregate = this.formationAggregateFactory.create();\n\n\t\tconst sorterContainer: SorterCollection = new SorterCollection(),\n\t\t\tfilterContainer = this.filterManagerFactory.create(false),\n\t\t\tfieldContainer = this.fieldCollectionFactory.create(),\n\t\t\taggregationManager = this.aggregationManagerFactory.create(structureId),\n\t\t\tschema = this.schemaAggregateFactory.create(),\n\t\t\tsearchManager = this.searchManagerFactory.create();\n\n\t\treturn new StructureAggregate(structureId,\n\t\t\tpaging,\n\t\t\tformationAggregate,\n\t\t\tsource,\n\t\t\tverticalFormation,\n\t\t\taggregationManager,\n\t\t\tsorterContainer,\n\t\t\tfilterContainer,\n\t\t\tsearchManager,\n\t\t\tfieldContainer,\n\t\t\tschema\n\t\t);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../structure.aggregate-factory';\nimport { InitStructureCommand } from './init-structure.command';\nimport { StructureInitedEvent } from './structure-inited.event';\n\n\n@Injectable()\nexport class InitStructureCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitStructureCommand,\n\t\t\tStructureInitedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: InitStructureCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId;\n\n\t\tconst structure = this.structureAggregateFactory.create(aggregateId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetVerticalScrollEnabledCommand } from './set-vertical-scroll-enabled.command';\nimport { VerticalScrollEnabledSetEvent } from './vertical-scroll-enabled-set.event';\n\n\n@Injectable()\nexport class SetVerticalScrollEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetVerticalScrollEnabledCommand);\n\t}\n\n\thandle(command: SetVerticalScrollEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new VerticalScrollEnabledSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetScrollPositionCommand } from './set-scroll-position.command';\nimport { ScrollPositionSetEvent } from './scroll-position-set.event';\n\n\n@Injectable()\nexport class SetScrollPositionCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetScrollPositionCommand);\n\t}\n\n\thandle(command: SetScrollPositionCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tposition = command.position;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setScrollPosition(position);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new ScrollPositionSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { InitFieldsCommand } from './init-fields.command';\nimport { FieldsInitedEvent } from './fields-inited.event';\n\n\n@Injectable()\nexport class InitFieldsCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(InitFieldsCommand);\n\t}\n\n\thandle(command: InitFieldsCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tcompositionId = command.compositionId,\n\t\t\tcolumns = command.columns;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst fields = structure.createFields(columns); // tODO convert don't let dandruff into the domain\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new FieldsInitedEvent(structureId, compositionId, columns, fields));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { ToggleSortCommand } from './toggle-sort.command';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\nimport { SortToggledEvent } from './sort-toggled.event';\n\n\n@Injectable()\nexport class ToggleSortCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSortCommand);\n\t}\n\n\thandle(command: ToggleSortCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst aggregateId = command.structureId,\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId();\n\n\t\tconst structure = this.structureAggregateRepository.getById(aggregateId);\n\n\t\tconst sorters = structure.toggleSort(fieldId);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(aggregateId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortToggledEvent(aggregateId, compositionId, directions));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class SortingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId) {\n\t\tsuper(aggregateId, 'SortingSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortingCommand } from './set-sorting.command';\nimport { SortingSetEvent } from './sorting-set.event';\n\n\n@Injectable()\nexport class SetSortingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortingCommand);\n\t}\n\n\thandle(command: SetSortingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsortingConfig = command.getSortingConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSortingConfig(sortingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new SortingSetEvent(structureId));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigFilterCommand } from './structure.set-config-filter.command';\nimport { StructureConfigFilterSetEvent } from './structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfilterConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setFilterConfig(filterConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigFilterSetEvent(structureId, filterConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nexport class StructureConfigSearchingSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigSearchingSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigSearchingCommand } from './structure.set-config-searching.command';\nimport { StructureConfigSearchingSetEvent } from './structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigSearchingCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigSearchingCommand);\n\t}\n\n\thandle(command: StructureSetConfigSearchingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tsearchingConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setSearchingConfig(searchingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigSearchingSetEvent(structureId, searchingConfig.enabled));\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\n\nexport class StructureConfigQuickFilterSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureConfigQuickFilterSetEvent');\n\t}\n\n\tgetEnabled(): boolean {\n\t\treturn this.enabled;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetConfigQuickFilterCommand } from './structure.set-config-quick-filter.command';\nimport { StructureConfigQuickFilterSetEvent } from './structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureSetConfigQuickFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetConfigQuickFilterCommand);\n\t}\n\n\thandle(command: StructureSetConfigQuickFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tquickFiltersConfig = command.getConfig();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setQuickFiltersConfig(quickFiltersConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureConfigQuickFilterSetEvent(structureId, quickFiltersConfig.enabled));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureToggleFilterCommand } from './structure.toggle-filter.command';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureFilterToggledEvent } from './structure.filter-toggled.event';\n\n\n@Injectable()\nexport class StructureToggleFilterCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureToggleFilterCommand);\n\t}\n\n\thandle(command: StructureToggleFilterCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tfieldId: FieldId = command.fieldId,\n\t\t\texternalFieldId: string = command.externalFilterId,\n\t\t\tfilterValue = command.filterValue;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.toggleFilter(fieldId, externalFieldId, filterValue);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureFilterToggledEvent(structureId));\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../structure-id';\nimport { AggregatedValues } from './calculation/aggregated.values';\n\n\nexport class StructureAggregationsChangedEvent extends DomainEvent {\n\n\tconstructor(structureId: StructureId,\n\t\t\t\tprivate readonly values: Map<string, AggregatedValues>) {\n\t\tsuper(structureId, 'StructureAggregationsChangedEvent');\n\t}\n\n\tgetAggregations() {\n\t\treturn this.values;\n\t}\n\n}\n","import { AggregateId, DomainEvent } from '@generic-ui/hermes';\n\nimport { OriginItemEntity } from '../origin/origin-item-entity';\n\nexport class StructurePreparedEntitiesSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: AggregateId,\n\t\t\t\tprivate readonly preparedItems: Array<OriginItemEntity>) {\n\t\tsuper(aggregateId, 'StructurePreparedEntitiesSetEvent');\n\t}\n\n\tgetPreparedItems(): Array<OriginItemEntity> {\n\t\treturn this.preparedItems;\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateEvent, DomainEventPublisher } from '@generic-ui/hermes';\n\nimport { StructureOriginChangedAggregateEvent } from './origin/structure.origin-changed.aggregate-event';\nimport { OriginSetEvent } from './origin/set-origin/origin-set.event';\nimport { StructureSourceItemEditedAggregateEvent } from './origin/edit/structure.source-item-edited.aggregate-event';\nimport { StructureSourceItemEditedEvent } from './origin/edit/structure.source-item-edited.event';\nimport { StructureAggregationsChangedAggregateEvent } from '../../structure/command/aggregation/structure.aggregations-changed.aggregate-event';\nimport { StructureAggregationsChangedEvent } from '../../structure/command/aggregation/structure.aggregations-changed.event';\nimport { StructurePreparedEntitiesSetAggregateEvent } from './prepared/structure.prepared-entities-set.aggregate-event';\nimport { StructurePreparedEntitiesSetEvent } from './prepared/structure.prepared-entities-set.event';\n\n\n@Injectable()\nexport class StructureSourceDomainEventPublisher {\n\n\tconstructor(private domainEventPublisher: DomainEventPublisher) {\n\t}\n\n\tpublish(events: ReadonlyArray<AggregateEvent>): void {\n\n\t\tevents.forEach((event) => {\n\t\t\tthis.publishEvent(event);\n\t\t});\n\t}\n\n\tprivate publishEvent(event: AggregateEvent): void {\n\n\t\tif (event.getType() === 'StructureOriginChangedAggregateEvent') {\n\n\t\t\tconst structureOriginChangedAggregateEvent = (event as StructureOriginChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new OriginSetEvent(structureOriginChangedAggregateEvent.getAggregateId(), structureOriginChangedAggregateEvent.getOrigin());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureSourceItemEditedAggregateEvent') {\n\n\t\t\tconst structureSourceItemEditedAggregateEvent = (event as StructureSourceItemEditedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureSourceItemEditedEvent(\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAggregateId(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getBeforeItem(),\n\t\t\t\tstructureSourceItemEditedAggregateEvent.getAfterItem()\n\t\t\t);\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\n\t\tif (event.getType() === 'StructureAggregationsChangedAggregateEvent') {\n\n\t\t\tconst structureAggregationsChangedAggregateEvent = (event as StructureAggregationsChangedAggregateEvent);\n\n\t\t\tconst domainEvent = new StructureAggregationsChangedEvent(structureAggregationsChangedAggregateEvent.getAggregateId(), structureAggregationsChangedAggregateEvent.getAggregations());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\n\t\t}\n\n\t\tif (event.getType() === 'StructurePreparedEntitiesSetAggregateEvent') {\n\n\t\t\tconst structurePreparedEntitiesSetAggregateEvent = (event as StructurePreparedEntitiesSetAggregateEvent);\n\n\t\t\tconst domainEvent = new StructurePreparedEntitiesSetEvent(structurePreparedEntitiesSetAggregateEvent.getAggregateId(), structurePreparedEntitiesSetAggregateEvent.getPreparedItems());\n\n\t\t\tthis.domainEventPublisher.publish(domainEvent);\n\t\t}\n\t}\n\n}\n","import { DomainEvent } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../../structure-id';\n\n\nexport class StructureAggregationEnabledSetEvent extends DomainEvent {\n\n\tconstructor(aggregateId: StructureId,\n\t\t\t\tpublic readonly enabled: boolean) {\n\t\tsuper(aggregateId, 'StructureAggregationEnabledSetEvent');\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureAggregateFactory } from '../../structure.aggregate-factory';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\nimport { StructureSetAggregationEnabledCommand } from './structure.set-aggregation-enabled.command';\nimport { StructureAggregationEnabledSetEvent } from './structure.aggregation-enabled-set.event';\n\n\n@Injectable()\nexport class StructureSetAggregationEnabledCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate readonly structureAggregateFactory: StructureAggregateFactory,\n\t\t\t\tprivate readonly structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetAggregationEnabledCommand);\n\t}\n\n\thandle(command: StructureSetAggregationEnabledCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tenabled = command.enabled;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.setAggregationEnabled(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new StructureAggregationEnabledSetEvent(structureId, enabled));\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { AggregatedValues } from './aggregated.values';\nimport { DataType } from '../../field/data-type/data-type';\nimport { Field } from '../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../source/command/origin/origin-item-entity';\nimport { AggregationType } from '../aggregation.type';\n\n\nexport abstract class AggregationCalculator<T, A extends AggregatedValues> {\n\n\tabstract forDataType(dataType: DataType): boolean;\n\n\tabstract prepare(field: Field): void;\n\n\tabstract postCalculate(field: Field, items: Array<OriginItemEntity>): void;\n\n\tabstract aggregate(field: Field, value: T): void;\n\n\tabstract generateAggregatedValues(field: Field): A;\n\n\tcalculate(fields: Array<Field>, items: Array<OriginItemEntity>): Map<string, A> {\n\n\t\tconst filteredFields = fields.filter((field: Field) => this.forDataType(field.getDataType()));\n\n\t\tif (!filteredFields || filteredFields.length === 0 || items.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet count = new Map<string, number>(),\n\t\t\tdistinct = new Map<string, Set<string>>();\n\n\t\t// init\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getKey();\n\n\t\t\tcount.set(key, 0);\n\t\t\tdistinct.set(key, new Set());\n\n\t\t\tthis.prepare(field);\n\t\t});\n\n\t\t// calculate\n\t\titems.forEach((item: OriginItemEntity) => {\n\n\t\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\t\tconst key = field.getKey(),\n\t\t\t\t\tvalue = field.getValue(item);\n\n\t\t\t\tif (value !== null || value !== undefined || value !== '') {\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\t\t\tconst countForField = count.get(key);\n\t\t\t\t\t\tcount.set(key, countForField + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\t\t\tconst distinctSet = distinct.get(key);\n\t\t\t\t\t\tdistinctSet.add(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.aggregate(field, value);\n\t\t\t});\n\t\t});\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tthis.postCalculate(field, items);\n\n\t\t});\n\n\t\tlet aggregations = new Map();\n\n\t\tfilteredFields.forEach((field: Field) => {\n\n\t\t\tconst key = field.getId().getId();\n\n\t\t\tlet aggregatedValues = this.generateAggregatedValues(field);\n\n\t\t\tif (field.isAggregation(AggregationType.COUNT)) {\n\t\t\t\taggregatedValues.setCount(count.get(key));\n\t\t\t}\n\n\t\t\tif (field.isAggregation(AggregationType.DISTINCT)) {\n\t\t\t\taggregatedValues.setDistinct((distinct.get(key)).size);\n\t\t\t}\n\n\t\t\taggregations.set(key, aggregatedValues);\n\t\t});\n\n\t\treturn aggregations;\n\t}\n\n}\n","export abstract class AggregatedValues {\n\n\tpublic count: number;\n\tpublic distinct: number;\n\n\tsetCount(value: number): void {\n\t\tthis.count = value;\n\t}\n\n\tsetDistinct(value: number): void {\n\t\tthis.distinct = value;\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class BooleanAggregatedValues extends AggregatedValues {\n\n\tpublic readonly truthy: number;\n\n\tpublic readonly falsy: number;\n\n\tconstructor(truthy: number,\n\t\t\t\tfalsy: number) {\n\t\tsuper();\n\t\tthis.truthy = truthy;\n\t\tthis.falsy = falsy;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { BooleanAggregatedValues } from './boolean-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class BooleanAggregationCalculator extends AggregationCalculator<boolean, BooleanAggregatedValues> {\n\n\tprivate readonly truthy = new Map<string, number>();\n\tprivate readonly falsy = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.BOOLEAN;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\tthis.truthy.set(key, 0);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\tthis.falsy.set(key, 0);\n\t\t}\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: boolean): void {\n\n\t\tconst booleanValue = value, // (value as any === 'true'),\n\t\t\tkey = field.getKey(),\n\t\t\ttruthyForField = this.truthy.get(key),\n\t\t\tfalsyForField = this.falsy.get(key);\n\n\t\tif (booleanValue) {\n\t\t\tif (field.isAggregation(AggregationType.TRUTHY)) {\n\t\t\t\tthis.truthy.set(key, truthyForField + 1);\n\t\t\t}\n\t\t} else {\n\t\t\tif (field.isAggregation(AggregationType.FALSY)) {\n\t\t\t\tthis.falsy.set(key, falsyForField + 1);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): BooleanAggregatedValues {\n\n\t\tconst key = field.getKey();\n\n\t\treturn new BooleanAggregatedValues(\n\t\t\tthis.truthy.get(key),\n\t\t\tthis.falsy.get(key)\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class DateAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { DateAggregatedValues } from './date-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class DateAggregationCalculator extends AggregationCalculator<Date, DateAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.DATE;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: Date): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): DateAggregatedValues {\n\t\treturn new DateAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class NumberAggregatedValues extends AggregatedValues {\n\n\tpublic readonly sum: number;\n\tpublic readonly min: number;\n\tpublic readonly max: number;\n\tpublic readonly average: number;\n\tpublic readonly median: number;\n\n\tconstructor(sum: number,\n\t\t\t\tmin: number,\n\t\t\t\tmax: number,\n\t\t\t\taverage: number,\n\t\t\t\tmedian: number) {\n\t\tsuper();\n\t\tthis.sum = this.setValueWithPrecision(sum);\n\t\tthis.min = this.setValueWithPrecision(min);\n\t\tthis.max = this.setValueWithPrecision(max);\n\t\tthis.average = this.setValueWithPrecision(average);\n\t\tthis.median = this.setValueWithPrecision(median);\n\t}\n\n\tprivate setValueWithPrecision(value: number): number {\n\t\tif (!value && value !== 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn +((value).toFixed(2));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { NumberAggregatedValues } from './number-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { AggregationType } from '../../aggregation.type';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class NumberAggregationCalculator extends AggregationCalculator<number, NumberAggregatedValues> {\n\n\tprivate readonly sum = new Map<string, number>();\n\tprivate readonly min = new Map<string, number>();\n\tprivate readonly max = new Map<string, number>();\n\tprivate readonly average = new Map<string, number>();\n\tprivate readonly median = new Map<string, number>();\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.NUMBER;\n\t}\n\n\tprepare(field: Field): void {\n\n\t\tconst key = field.getKey();\n\n\t\tthis.sum.set(key, 0);\n\t\tthis.min.set(key, Number.MAX_SAFE_INTEGER);\n\t\tthis.max.set(key, 0);\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\n\t\tconst key = field.getKey();\n\n\t\tif (field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.average.set(key, this.sum.get(key) / items.length);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MEDIAN)) {\n\t\t\tthis.median.set(key, field.getValue(items[Math.floor(items.length / 2)]));\n\t\t}\n\t}\n\n\taggregate(field: Field, value: number): void {\n\n\t\tconst numberValue = +value,\n\t\t\tkey = field.getKey(),\n\t\t\tsumForField = this.sum.get(key),\n\t\t\tminForField = this.min.get(key),\n\t\t\tmaxForField = this.max.get(key);\n\n\t\tif (field.isAggregation(AggregationType.SUM) || field.isAggregation(AggregationType.AVERAGE)) {\n\t\t\tthis.sum.set(key, sumForField + numberValue);\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MIN)) {\n\t\t\tif (minForField > numberValue) {\n\t\t\t\tthis.min.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t\tif (field.isAggregation(AggregationType.MAX)) {\n\t\t\tif (maxForField < numberValue) {\n\t\t\t\tthis.max.set(key, numberValue);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tgenerateAggregatedValues(field: Field): NumberAggregatedValues {\n\n\t\tconst key = field.getKey(),\n\t\t\tsum = field.isAggregation(AggregationType.SUM) ? this.sum.get(key) : undefined,\n\t\t\tmin = field.isAggregation(AggregationType.MIN) ? this.min.get(key) : undefined,\n\t\t\tmax = field.isAggregation(AggregationType.MAX) ? this.max.get(key) : undefined,\n\t\t\taverage = field.isAggregation(AggregationType.AVERAGE) ? this.average.get(key) : undefined,\n\t\t\tmedian = field.isAggregation(AggregationType.MEDIAN) ? this.median.get(key) : undefined;\n\n\t\treturn new NumberAggregatedValues(\n\t\t\tsum,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\taverage,\n\t\t\tmedian\n\t\t);\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class StringAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { StringAggregatedValues } from './string-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class StringAggregationCalculator extends AggregationCalculator<string, StringAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.STRING;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: string): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): StringAggregatedValues {\n\t\treturn new StringAggregatedValues();\n\t}\n\n}\n","import { AggregatedValues } from '../aggregated.values';\n\nexport class UnknownAggregatedValues extends AggregatedValues {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AggregationCalculator } from '../aggregation.calculator';\nimport { UnknownAggregatedValues } from './unknown-aggregated.values';\nimport { DataType } from '../../../field/data-type/data-type';\nimport { Field } from '../../../field/data-type/field';\nimport { OriginItemEntity } from '../../../../../source/command/origin/origin-item-entity';\n\n\n@Injectable()\nexport class UnknownAggregationCalculator extends AggregationCalculator<any, UnknownAggregatedValues> {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tforDataType(dataType: DataType): boolean {\n\t\treturn dataType === DataType.UNKNOWN;\n\t}\n\n\tprepare(field: Field): void {\n\t}\n\n\tpostCalculate(field: Field, items: Array<OriginItemEntity>): void {\n\t}\n\n\taggregate(field: Field, value: any): void {\n\t}\n\n\tgenerateAggregatedValues(field: Field): UnknownAggregatedValues {\n\t\treturn new UnknownAggregatedValues();\n\t}\n\n}\n","import { Provider, Type } from '@angular/core';\nimport { AGGREGATION_CALCULATORS } from './calculation/aggregation.calculators.token';\nimport { BooleanAggregationCalculator } from './calculation/boolean/boolean-aggregation.calculator';\nimport { DateAggregationCalculator } from './calculation/date/date-aggregation.calculator';\nimport { NumberAggregationCalculator } from './calculation/number/number-aggregation.calculator';\nimport { StringAggregationCalculator } from './calculation/string/string-aggregation.calculator';\nimport { UnknownAggregationCalculator } from './calculation/unknown/unknown-aggregation.calculator';\nimport { AggregationManagerFactory } from './aggregation.manager.factory';\n\n\nexport function provideAggregationCalculator(clazz: Type<any>): Provider {\n\treturn {\n\t\tprovide: AGGREGATION_CALCULATORS,\n\t\tuseClass: clazz,\n\t\tmulti: true\n\t};\n}\n\nexport const aggregationProviders = [\n\tprovideAggregationCalculator(BooleanAggregationCalculator),\n\tprovideAggregationCalculator(DateAggregationCalculator),\n\tprovideAggregationCalculator(NumberAggregationCalculator),\n\tprovideAggregationCalculator(StringAggregationCalculator),\n\tprovideAggregationCalculator(UnknownAggregationCalculator),\n\n\tAggregationManagerFactory\n];\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureFilterRepository } from './structure.filter.repository';\nimport { StructureConfigFilterSetEvent } from '../../command/filter/config/structure.config-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFilterRepository: StructureFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigFilterSetEvent) {\n\t\t\tthis.structureFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchingRepository } from './structure.searching.repository';\n\nimport { StructureConfigSearchingSetEvent } from '../../../command/search/config/structure.config-searching-set.event';\n\n\n@Injectable()\nexport class StructureConfigSearchingSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchingRepository: StructureSearchingRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigSearchingSetEvent): void {\n\n\t\tif (event instanceof StructureConfigSearchingSetEvent) {\n\t\t\tthis.structureSearchingRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureQuickFilterRepository } from './structure.quick-filter.repository';\nimport { StructureConfigQuickFilterSetEvent } from '../../command/filter/quick/structure.config-quick-filter-set.event';\n\n\n@Injectable()\nexport class StructureConfigQuickFilterSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureQuickFilterRepository: StructureQuickFilterRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureConfigQuickFilterSetEvent): void {\n\n\t\tif (event instanceof StructureConfigQuickFilterSetEvent) {\n\t\t\tthis.structureQuickFilterRepository.setEnabled(event.getEnabled(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { FieldId } from '../../../domain/structure/command/field/data-type/field.id';\nimport { DataType } from '../../../domain/structure/command/field/data-type/data-type';\n\n\nexport class StructureFieldUiModel {\n\n\tconstructor(private readonly id: FieldId,\n\t\t\t\tprivate readonly dataType: DataType) {\n\t}\n\n\tgetId(): string {\n\t\treturn this.id.getId();\n\t}\n\n\tgetDataType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Field } from '../../../domain/structure/command/field/data-type/field';\nimport { StructureFieldUiModel } from './structure.field.ui-model';\n\n\n@Injectable()\nexport class StructureFieldUiConverter {\n\n\tconvert(fields: Array<Field>): Array<StructureFieldUiModel> {\n\t\treturn fields.map((field: Field) => {\n\t\t\treturn this.convertOne(field);\n\t\t});\n\t}\n\n\tprivate convertOne(field: Field): StructureFieldUiModel {\n\n\t\treturn new StructureFieldUiModel(field.getId(), field.getDataType());\n\t}\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureFieldUiArchive } from './structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './structure.field.ui-converter';\nimport { FieldsInitedEvent } from '../../../domain/structure/command/field/init/fields-inited.event';\n\n\n@Injectable()\nexport class StructureFieldsInitedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureFieldsRepository: StructureFieldUiArchive,\n\t\t\t\tprivate structureFieldUiConverter: StructureFieldUiConverter) {\n\t\tsuper();\n\t}\n\n\thandle(event: FieldsInitedEvent): void {\n\n\t\tif (event instanceof FieldsInitedEvent) {\n\n\t\t\tconst fields = this.structureFieldUiConverter.convert(event.getFields());\n\n\t\t\tthis.structureFieldsRepository.next(event.getAggregateId(), fields);\n\t\t}\n\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DomainEvent, DomainEventBus } from '@generic-ui/hermes';\n\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\n\n\n@Injectable()\nexport class StructureAggregationUiEventsRepository {\n\n\tconstructor(private readonly domainEventBus: DomainEventBus) {\n\t}\n\n\tonAggregationsChanged(structureId: StructureId): Observable<DomainEvent> {\n\n\t\treturn this.domainEventBus\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((event: DomainEvent) => event instanceof StructureAggregationsChangedEvent),\n\t\t\t\t\t   filter((event: DomainEvent) => event.aggregateId.toString() === structureId.toString())\n\t\t\t\t   );\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetPagingCommand } from './set-paging.command';\nimport { PagingSetEvent } from './paging-set.event';\nimport { PagingConfig } from '../../paging-config';\n\n\n@Injectable()\nexport class SetPagingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetPagingCommand,\n\t\t\tPagingSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetPagingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst pagingConfig = command.payload as PagingConfig,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.changePaging(pagingConfig);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { NextPageCommand } from './next-page.command';\nimport { NextPageEvent } from './next-page.event';\n\n\n@Injectable()\nexport class NextPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(NextPageCommand,\n\t\t\tNextPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: NextPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.nextPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { PrevPageCommand } from './prev-page.command';\nimport { PrevPageEvent } from './prev-page.event';\n\n\n@Injectable()\nexport class PrevPageCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(PrevPageCommand,\n\t\t\tPrevPageEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: PrevPageCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.prevPage();\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateEvent, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ChangePagesizeCommand } from './change-pagesize.command';\nimport { PageChangedEvent } from '../page/page-changed.event';\nimport { PagesizeChangedEvent } from './pagesize-changed.event';\n\n\n@Injectable()\nexport class ChangePagesizeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangePagesizeCommand);\n\t}\n\n\thandle(command: ChangePagesizeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst newPageSize = command.pageSize as number,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.changePageSize(newPageSize);\n\n\t\t// aggregateEvents => DomainEvents\n\n\t\t// DomainEvent\n\t\t// causationId -> aka commandId\n\t\t// correlationId -> actual or previous commandId\n\n\t\t// event publisher should take aggregate events\n\t\t// and convert them to domain events\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\t// TODO\n\t\t(aggregateEvents as any).forEach((event: AggregateEvent) => {\n\t\t\t(event as any).aggregateId = structureId;\n\t\t});\n\n\t\tthis.publishAggregateEvents(aggregateEvents, command);\n\t}\n\n\tprivate publishAggregateEvents(events: ReadonlyArray<AggregateEvent>, command: ChangePagesizeCommand): void {\n\n\t\tfor (let event of events) {\n\t\t\tthis.publishAggregateEvent(event, command);\n\t\t}\n\t}\n\n\tprivate publishAggregateEvent(event: AggregateEvent, command: ChangePagesizeCommand): void {\n\n\t\tswitch (event.getType()) {\n\t\t\tcase 'PageChangedAggregateEvent':\n\n\t\t\t\tconst pageChangedEvent = new PageChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pageChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PagesizeChangedAggregateEvent':\n\n\t\t\t\tconst pagesizeChangedEvent = new PagesizeChangedEvent(command.getAggregateId());\n\n\t\t\t\tthis.domainEventPublisher.publish(pagesizeChangedEvent);\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { PagingDispatcher } from '../../domain/paging/command/paging.dispatcher';\nimport { SetPagingCommandHandler } from '../../domain/paging/command/set/set-paging.command-handler';\nimport { NextPageCommandHandler } from '../../domain/paging/command/next-page/next-page.command-handler';\nimport { PrevPageCommandHandler } from '../../domain/paging/command/prev-page/prev-page.command-handler';\nimport { ChangePagesizeCommandHandler } from '../../domain/paging/command/change-pagesize/change-pagesize.command-handler';\nimport { PagingRepository } from '../../domain/paging/read/paging.repository';\nimport { PagingAggregateFactory } from '../../domain/paging/command/paging.aggregate-factory';\nimport { PagingConverter } from '../../domain/paging/paging.converter';\nimport { PagingCommandService } from './paging-command.service';\nimport { PagingReadModelService } from './paging-read-model.service';\nimport { PagingEventService } from './paging-event.service';\n\n\nconst commandProviders = [\n\tPagingDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetPagingCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: NextPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: PrevPageCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangePagesizeCommandHandler,\n\t\tmulti: true\n\t}\n];\n\nconst readProviders = [\n\tPagingRepository\n];\n\nexport const pagingProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tPagingAggregateFactory,\n\tPagingConverter,\n\n\tPagingCommandService,\n\tPagingReadModelService,\n\tPagingEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaVerticalGridCommand } from './set-schema-vertical-grid.command';\nimport { SchemaVerticalGridSetEvent } from './schema-vertical-grid-set.event';\n\n\n@Injectable()\nexport class SetSchemaVerticalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaVerticalGridCommand,\n\t\t\tSchemaVerticalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaVerticalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setVerticalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetSchemaHorizontalGridCommand } from './set-schema-horizontal-grid.command';\nimport { SchemaHorizontalGridSetEvent } from './schema-horizontal-grid-set.event';\n\n@Injectable()\nexport class SetSchemaHorizontalGridCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaHorizontalGridCommand,\n\t\t\tSchemaHorizontalGridSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaHorizontalGridCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHorizontalGrid(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaThemeCommand } from './set-schema-theme.command';\nimport { SchemaThemeSetEvent } from './schema-theme-set.event';\n\n@Injectable()\nexport class SetSchemaThemeCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaThemeCommand,\n\t\t\tSchemaThemeSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaThemeCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst theme = command.theme,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setTheme(theme);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaBottomHeaderCommand } from './change-schema-bottom-header.command';\nimport { SchemaBottomHeaderChangedEvent } from './schema-bottom-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaBottomHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaBottomHeaderCommand,\n\t\t\tSchemaBottomHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaBottomHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderBottom(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { ChangeSchemaTopHeaderCommand } from './change-schema-top-header.command';\nimport { SchemaTopHeaderChangedEvent } from './schema-top-header-changed.event';\n\n\n@Injectable()\nexport class ChangeSchemaTopHeaderCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ChangeSchemaTopHeaderCommand,\n\t\t\tSchemaTopHeaderChangedEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ChangeSchemaTopHeaderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setHeaderTop(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\n\nimport { SetRowColoringCommand } from './set-row-coloring.command';\nimport { RowColoringSetEvent } from './row-coloring-set.event';\n\n\n@Injectable()\nexport class SetRowColoringCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowColoringCommand,\n\t\t\tRowColoringSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetRowColoringCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst coloring = command.coloring,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tschema = structure.getSchema();\n\n\t\tschema.setRowColoring(coloring);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSchemaCommand } from './set-schema.command';\nimport { SchemaSetEvent } from './schema-set.event';\n\n\n@Injectable()\nexport class SetSchemaCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSchemaCommand,\n\t\t\tSchemaSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetSchemaCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst height = command.height,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.setHeight(height);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { SchemaDispatcher } from '../../domain/schema/command/schema.dispatcher';\nimport { SetSchemaVerticalGridCommandHandler } from '../../domain/schema/command/grid/vertical/set-schema-vertical-grid.command-handler';\nimport { SetSchemaHorizontalGridCommandHandler } from '../../domain/schema/command/grid/horizontal/set-schema-horizontal-grid.command-handler';\nimport { SetSchemaThemeCommandHandler } from '../../domain/schema/command/theme/set-schema-theme.command-handler';\nimport { ChangeSchemaBottomHeaderCommandHandler } from '../../domain/schema/command/column-header/bottom/change-schema-bottom-header.command-handler';\nimport { ChangeSchemaTopHeaderCommandHandler } from '../../domain/schema/command/column-header/top/change-schema-top-header.command-handler';\nimport { SetRowColoringCommandHandler } from '../../domain/schema/command/coloring/set/set-row-coloring.command-handler';\nimport { SetSchemaCommandHandler } from '../../domain/schema/command/set/set-schema.command-handler';\nimport { SchemaRepository } from '../../domain/schema/read/schema-repository';\nimport { SchemaConverter } from '../../domain/schema/schema.converter';\nimport { SchemaCommandService } from './schema-command.service';\nimport { SchemaReadModelService } from './schema-read-model.service';\nimport { SchemaAggregateFactory } from '../../domain/schema/command/schema.aggregate-factory';\n\n\nconst commandProviders = [\n\tSchemaDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaVerticalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaHorizontalGridCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSchemaThemeCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaBottomHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ChangeSchemaTopHeaderCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowColoringCommandHandler,\n\t\tmulti: true\n\t},\n\tSchemaAggregateFactory\n];\n\nconst readProviders = [\n\tSchemaRepository\n];\n\nexport const schemaProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSchemaConverter,\n\n\tSchemaCommandService,\n\tSchemaReadModelService\n\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\n\nimport { SetFormationCommand } from './set-formation.command';\nimport { FormationSetEvent } from './formation-set.event';\n\n\n@Injectable()\nexport class SetFormationCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetFormationCommand,\n\t\t\tFormationSetEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SetFormationCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst rawFormation = command.payload as any,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\t// missing implementation\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { ToggleSelectedRowCommand } from './toggle-selected-row.command';\nimport { SelectedRowToggledEvent } from './selected-row-toggled.event';\n\n\n@Injectable()\nexport class ToggleSelectedRowCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(ToggleSelectedRowCommand,\n\t\t\tSelectedRowToggledEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: ToggleSelectedRowCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst selectedRow = command.selectedRow,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst formation = structure.getFormation();\n\n\t\tformation.toggleRow(selectedRow);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { COMMAND_HANDLERS } from '@generic-ui/hermes';\n\nimport { FormationDispatcher } from '../../domain/formation/command/formation.dispatcher';\nimport { SetFormationCommandHandler } from '../../domain/formation/command/set/set-formation.command-handler';\nimport { ToggleSelectedRowCommandHandler } from '../../domain/formation/command/toggle/toggle-selected-row.command-handler';\nimport { FormationRepository } from '../../domain/formation/read/formation-repository';\nimport { FormationAggregateFactory } from '../../domain/formation/command/formation.aggregate-factory';\nimport { FormationConverter } from '../../domain/formation/formation.converter';\nimport { FormationEventService } from './formation-event.service';\nimport { FormationCommandService } from './formation-command.service';\nimport { FormationReadModelService } from './formation-read-model.service';\n\nconst commandProviders = [\n\tFormationDispatcher,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetFormationCommandHandler,\n\t\tmulti: true\n\t},\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSelectedRowCommandHandler,\n\t\tmulti: true\n\t},\n\tFormationAggregateFactory\n];\n\nconst readProviders = [\n\tFormationRepository\n];\n\nexport const formationProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tFormationEventService,\n\n\tFormationConverter,\n\n\tFormationCommandService,\n\tFormationReadModelService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\nimport { SetOriginCommand } from './set-origin.command';\n\n\n@Injectable()\nexport class SetOriginCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(SetOriginCommand);\n\t}\n\n\thandle(command: SetOriginCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\titems = command.items as Array<any>;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tif (!structure) {\n\t\t\tconsole.error(`There is no aggregate 'Structure' for aggregateId: ${structureId}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst aggregateEvents = structure.setOrigin(items);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureEditSourceItemCommand } from './structure.edit-source-item.command';\nimport { StructureAggregateRepository } from '../../../../structure/command/structure-aggregate.repository';\nimport { StructureSourceDomainEventPublisher } from '../../structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureEditSourceItemCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher) {\n\t\tsuper(StructureEditSourceItemCommand);\n\t}\n\n\thandle(command: StructureEditSourceItemCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tparams = command.getParams();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst aggregateEvents = structure.editItem(params);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.structureSourceDomainEventPublisher.publish(aggregateEvents);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\nimport { StructureSourceOriginRepository } from './structure.source-origin.repository';\nimport { OriginSetEvent } from '../../command/origin/set-origin/origin-set.event';\n\n\n@Injectable()\nexport class StructureOriginChangedEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSourceOriginRepository: StructureSourceOriginRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: OriginSetEvent): void {\n\n\t\tif (event instanceof OriginSetEvent) {\n\t\t\tconst origin = event.getOrigin();\n\n\t\t\tthis.structureSourceOriginRepository.setOrigin(origin, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { StructureRepository } from '../../structure/read/structure.repository';\nimport { StructureId } from '../../structure-id';\nimport { Schema } from '../../schema/read/schema';\nimport { Structure } from '../../structure/read/structure';\n\n\n@Injectable()\nexport class SourceRepository {\n\n\tconstructor(private structureRepository: StructureRepository) {\n\t}\n\n\tselect(structureId: StructureId): Observable<Schema> {\n\n\t\treturn this.structureRepository\n\t\t\t\t   .onStructure(structureId)\n\t\t\t\t   .pipe(\n\t\t\t\t\t   filter((structure: Structure) => structure.getId().toString() === structureId.toString()),\n\t\t\t\t\t   map((structure: Structure) => structure.getSchema())\n\t\t\t\t   );\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../../structure/command/structure-aggregate.repository';\nimport { SetSourceLoadingEvent } from './set-source-loading.event';\nimport { SourceSetLoadingCommand } from './source-set-loading.command';\n\n\n@Injectable()\nexport class SourceSetLoadingCommandHandler extends CommandHandler {\n\n\tconstructor(private structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tdomainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SourceSetLoadingCommand,\n\t\t\tSetSourceLoadingEvent,\n\t\t\tdomainEventPublisher);\n\t}\n\n\thandle(command: SourceSetLoadingCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst enabled = command.enabled,\n\t\t\tstructureId = command.structureId;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId),\n\t\t\tsource = structure.getSource();\n\n\t\tsource.setLoading(enabled);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructurePreparedEntitiesSetEvent } from '../../command/prepared/structure.prepared-entities-set.event';\nimport { StructurePreparedItemsRepository } from './structure.prepared-items.repository';\n\n\n@Injectable()\nexport class StructurePreparedItemsEventHandler extends DomainEventHandler {\n\n\tconstructor(private structurePreparedItemsRepository: StructurePreparedItemsRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructurePreparedEntitiesSetEvent): void {\n\n\t\tif (event instanceof StructurePreparedEntitiesSetEvent) {\n\t\t\tconst preparedItems = event.getPreparedItems();\n\n\t\t\tthis.structurePreparedItemsRepository.setItems(preparedItems, event.getAggregateId());\n\t\t}\n\n\t}\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport { SourceDispatcher } from '../../domain/source/command/source.dispatcher';\nimport { SourceManagerFactory } from '../../domain/source/command/source.manager-factory';\nimport { SetOriginCommandHandler } from '../../domain/source/command/origin/set-origin/set-origin.command-handler';\nimport { StructureEditSourceItemCommandHandler } from '../../domain/source/command/origin/edit/structure.edit-source-item.command-handler';\nimport { StructureSourceDomainEventPublisher } from '../../domain/source/command/structure.source.domain-event.publisher';\nimport { StructureOriginChangedEventHandler } from '../../domain/source/read/origin/structure.origin-changed.event-handler';\nimport { SourceConverter } from '../../domain/source/source.converter';\nimport { SourceCommandService } from './source-command.service';\nimport { SourceReadModelService } from './source-read-model.service';\nimport { SourceEventService } from './event/source-event.service';\nimport { SourceRepository } from '../../domain/source/read/source.repository';\nimport { StructureSourceOriginRepository } from '../../domain/source/read/origin/structure.source-origin.repository';\nimport { SourceSetLoadingCommandHandler } from '../../domain/source/command/loading/source-set-loading.command-handler';\nimport { StructurePreparedItemsRepository } from '../../domain/source/read/prepared/structure.prepared-items.repository';\nimport { StructurePreparedItemsEventHandler } from '../../domain/source/read/prepared/structure.prepared-items.event-handler';\n\n\nconst commandProviders = [\n\tSourceDispatcher,\n\tSourceManagerFactory,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SourceSetLoadingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetOriginCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureEditSourceItemCommandHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceDomainEventPublisher\n];\n\nconst readProviders = [\n\tSourceRepository,\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureOriginChangedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructurePreparedItemsEventHandler,\n\t\tmulti: true\n\t},\n\tStructureSourceOriginRepository,\n\tStructurePreparedItemsRepository\n];\n\nexport const sourceProviders = [\n\t...commandProviders,\n\t...readProviders,\n\n\tSourceConverter,\n\n\tSourceCommandService,\n\tSourceReadModelService,\n\tSourceEventService\n];\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { StructureSetSearchPhraseCommand } from './structure.set-search-phrase.command';\nimport { StructureSearchPhraseSetDomainEvent } from './structure.search-phrase-set.domain-event';\nimport { StructureSourceDomainEventPublisher } from '../../../../source/command/structure.source.domain-event.publisher';\n\n\n@Injectable()\nexport class StructureSetSearchPhraseCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate structureSourceDomainEventPublisher: StructureSourceDomainEventPublisher,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(StructureSetSearchPhraseCommand);\n\t}\n\n\thandle(command: StructureSetSearchPhraseCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\tphrase = command.phrase,\n\t\t\tstructure = this.structureAggregateRepository.getById(structureId);\n\n\t\tstructure.addSearchPhrase(phrase);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\t\tthis.domainEventPublisher.publish(new StructureSearchPhraseSetDomainEvent(structureId, phrase));\n\t\tthis.structureSourceDomainEventPublisher.publish(structure.getEvents());\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { AggregateId, CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetSortOrderCommand } from './set-sort-order.command';\nimport { SortOrderSetEvent } from './sort-order-set.event';\nimport { CompositionId } from '../../../../../../composition/domain/composition-id';\nimport { FieldId } from '../../field/data-type/field.id';\nimport { StructureSorter } from '../structure.sorter';\n\n\n@Injectable()\nexport class SetSortOrderCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprivate domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetSortOrderCommand);\n\t}\n\n\thandle(command: SetSortOrderCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.getAggregateId(),\n\t\t\tcompositionId = command.getCompositionId(),\n\t\t\tfieldId = command.getFieldId(),\n\t\t\tsortOrder = command.getSortOrder();\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst sorters = structure.setSortOrder(fieldId, sortOrder);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.publishSortEvent(structureId, compositionId, fieldId, sorters);\n\t}\n\n\tpublishSortEvent(aggregateId: AggregateId, compositionId: CompositionId, fieldId: FieldId, sorters: Array<StructureSorter>): void {\n\n\t\tconst directions = sorters.map((sorter: StructureSorter) => {\n\t\t\treturn {\n\t\t\t\tdirection: sorter.hasDirection(),\n\t\t\t\tfieldId: sorter.getField().getId()\n\t\t\t};\n\t\t});\n\n\t\tthis.domainEventPublisher.publish(new SortOrderSetEvent(aggregateId, compositionId, directions));\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { CommandHandler, DomainEventPublisher, ExecuteResponse } from '@generic-ui/hermes';\n\nimport { StructureAggregateRepository } from '../../structure-aggregate.repository';\nimport { SetRowHeightCommand } from './set-row-height.command';\nimport { RowHeightSetEvent } from './row-height-set.event';\n\n\n@Injectable()\nexport class SetRowHeightCommandHandler extends CommandHandler {\n\n\tconstructor(private readonly structureAggregateRepository: StructureAggregateRepository,\n\t\t\t\tprotected domainEventPublisher: DomainEventPublisher) {\n\t\tsuper(SetRowHeightCommand);\n\t}\n\n\thandle(command: SetRowHeightCommand): ExecuteResponse | Observable<ExecuteResponse> {\n\n\t\tconst structureId = command.structureId,\n\t\t\trowHeight = command.rowHeight;\n\n\t\tconst structure = this.structureAggregateRepository.getById(structureId);\n\n\t\tconst formation = structure.getVerticalFormation();\n\n\t\tformation.setRowHeight(rowHeight);\n\n\t\tthis.structureAggregateRepository.save(structure);\n\n\t\tthis.domainEventPublisher.publish(new RowHeightSetEvent(structureId));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DomainEventHandler } from '@generic-ui/hermes';\n\nimport { StructureSearchPhraseRepository } from './structure.search-phrase.repository';\nimport { StructureSearchPhraseSetDomainEvent } from '../../../command/search/set-phrase/structure.search-phrase-set.domain-event';\n\n\n\n@Injectable()\nexport class StructureSearchPhraseSetEventHandler extends DomainEventHandler {\n\n\tconstructor(private structureSearchPhraseRepository: StructureSearchPhraseRepository) {\n\t\tsuper();\n\t}\n\n\thandle(event: StructureSearchPhraseSetDomainEvent): void {\n\n\t\tif (event instanceof StructureSearchPhraseSetDomainEvent) {\n\t\t\tthis.structureSearchPhraseRepository.setPhrase(event.getPhrase(), event.getAggregateId());\n\t\t}\n\n\t}\n\n}\n","import { COMMAND_HANDLERS, DOMAIN_EVENT_HANDLERS } from '@generic-ui/hermes';\nimport {\n\tinMemoryStructureCommandProviders,\n\tinMemoryStructureProviders,\n\tinMemoryStructureReadProviders\n} from '../../infrastructure/in-memory/structure/in-memory.structure.providers';\nimport { InitStructureCommandHandler } from '../../domain/structure/command/init/init-structure.command-handler';\nimport { SetVerticalScrollEnabledCommandHandler } from '../../domain/structure/command/vertical-formation/set-enabled/set-vertical-scroll-enabled.command-handler';\nimport { SetScrollPositionCommandHandler } from '../../domain/structure/command/vertical-formation/scroll-position/set-scroll-position.command-handler';\nimport { InitFieldsCommandHandler } from '../../domain/structure/command/field/init/init-fields.command-handler';\nimport { ToggleSortCommandHandler } from '../../domain/structure/command/sort/toggle/toggle-sort.command-handler';\nimport { SetSortingCommandHandler } from '../../domain/structure/command/sort/set-config/set-sorting.command-handler';\nimport { StructureSetConfigFilterCommandHandler } from '../../domain/structure/command/filter/config/structure.set-config-filter.command-handler';\nimport { StructureSetConfigSearchingCommandHandler } from '../../domain/structure/command/search/config/structure.set-config-searching.command-handler';\nimport { StructureSetConfigQuickFilterCommandHandler } from '../../domain/structure/command/filter/quick/structure.set-config-quick-filter.command-handler';\nimport { StructureToggleFilterCommandHandler } from '../../domain/structure/command/filter/toggle/structure.toggle-filter.command-handler';\nimport { StructureSetAggregationEnabledCommandHandler } from '../../domain/structure/command/aggregation/set/structure.set-aggregation-enabled.command-handler';\nimport { VerticalFormationFactory } from '../../domain/structure/command/vertical-formation/vertical-formation.factory';\nimport { FieldCollectionFactory } from '../../domain/structure/command/field/field-collection.factory';\nimport { FilterManagerFactory } from '../../domain/structure/command/filter/filter.manager-factory';\nimport { FieldIdGenerator } from '../../domain/structure/command/field/field-id.generator';\nimport { StructureFilterCommandService } from './filter/structure.filter.command.service';\nimport { FieldFactory } from '../../domain/structure/command/field/data-type/field.factory';\nimport { aggregationProviders } from '../../domain/structure/command/aggregation/aggregation.providers';\nimport { StructureConfigFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-filter-set.event-handler';\nimport { StructureConfigSearchingSetEventHandler } from '../../domain/structure/read/searching/enabled/structure.config-searching-set.event-handler';\nimport { StructureConfigQuickFilterSetEventHandler } from '../../domain/structure/read/filter/structure.config-quick-filter-set.event-handler';\nimport { StructureFieldsInitedEventHandler } from './field/structure.fields-inited.event-handler';\nimport { VerticalFormationConverter } from '../../domain/structure/read/vertical-formation/vertical-formation.converter';\nimport { StructureFilterReadModelRepository } from './filter/structure.filter.read-model.repository';\nimport { StructureFilterRepository } from '../../domain/structure/read/filter/structure.filter.repository';\nimport { StructureQuickFilterRepository } from '../../domain/structure/read/filter/structure.quick-filter.repository';\nimport { StructureSearchingRepository } from '../../domain/structure/read/searching/enabled/structure.searching.repository';\nimport { StructureSearchReadModelRepository } from './search/structure-search.read-model.repository';\nimport { StructureFieldUiArchive } from './field/structure.field.ui-archive';\nimport { StructureFieldUiConverter } from './field/structure.field.ui-converter';\nimport { StructureFieldUiRepository } from './field/structure.field.ui-repository';\nimport { StructureAggregationCommandService } from './aggregation/structure.aggregation.command-service';\nimport { StructureAggregationUiEventsRepository } from './aggregation/structure.aggregation.ui-events-repository';\nimport { StructureCommandService } from './structure-command.service';\nimport { StructureConverter } from '../../domain/structure/structure.converter';\nimport { StructureAggregateFactory } from '../../domain/structure/command/structure.aggregate-factory';\nimport { StructureReadModelService } from './structure-read-model.service';\nimport { pagingProviders } from '../paging/paging.providers';\nimport { schemaProviders } from '../schema/schema.providers';\nimport { formationProviders } from '../formation/formation.providers';\nimport { sourceProviders } from '../source/source.providers';\nimport { StructureSetSearchPhraseCommandHandler } from '../../domain/structure/command/search/set-phrase/structure.set-search-phrase.command-handler';\nimport { SearchManagerFactory } from '../../domain/structure/command/search/search.manager-factory';\nimport { SetSortOrderCommandHandler } from '../../domain/structure/command/sort/order/set-sort-order.command-handler';\nimport { VerticalFormationRepository } from '../../domain/structure/read/vertical-formation/vertical-formation.repository';\nimport { SetRowHeightCommandHandler } from '../../domain/structure/command/vertical-formation/set-row-height/set-row-height.command-handler';\nimport { StructureSearchPhraseRepository } from '../../domain/structure/read/searching/phrase/structure.search-phrase.repository';\nimport { StructureSearchPhraseSetEventHandler } from '../../domain/structure/read/searching/phrase/structure.search-phrase-set.event-handler';\n\n\nconst commandProviders = [\n\t...inMemoryStructureCommandProviders,\n\t{\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitStructureCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetVerticalScrollEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetScrollPositionCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: InitFieldsCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: ToggleSortCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigSearchingCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetConfigQuickFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureToggleFilterCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetAggregationEnabledCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: StructureSetSearchPhraseCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetSortOrderCommandHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: COMMAND_HANDLERS,\n\t\tuseClass: SetRowHeightCommandHandler,\n\t\tmulti: true\n\t},\n\tVerticalFormationFactory,\n\tFieldCollectionFactory,\n\tFilterManagerFactory,\n\tSearchManagerFactory,\n\tFieldIdGenerator,\n\tStructureFilterCommandService,\n\tFieldFactory,\n\n\t...aggregationProviders\n];\n\nconst readProviders = [\n\t{\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigSearchingSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureConfigQuickFilterSetEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureFieldsInitedEventHandler,\n\t\tmulti: true\n\t}, {\n\t\tprovide: DOMAIN_EVENT_HANDLERS,\n\t\tuseClass: StructureSearchPhraseSetEventHandler,\n\t\tmulti: true\n\t},\n\t...inMemoryStructureReadProviders,\n\tVerticalFormationConverter,\n\tVerticalFormationRepository,\n\tStructureFilterReadModelRepository,\n\tStructureFilterRepository,\n\tStructureQuickFilterRepository,\n\tStructureSearchingRepository,\n\tStructureSearchReadModelRepository,\n\tStructureFieldUiArchive,\n\tStructureFieldUiConverter,\n\tStructureFieldUiRepository,\n\tStructureSearchPhraseRepository\n];\n\nexport const structureProviders = [\n\t...inMemoryStructureProviders,\n\n\t...commandProviders,\n\t...readProviders,\n\n\tStructureAggregationCommandService,\n\tStructureAggregationUiEventsRepository,\n\n\tStructureAggregateFactory,\n\tStructureConverter,\n\n\tStructureReadModelService,\n\tStructureCommandService,\n\n\t...pagingProviders,\n\t...schemaProviders,\n\t...formationProviders,\n\t...sourceProviders\n];\n","import { Logger } from './logger';\n\nexport class ConsoleLogger extends Logger {\n\n\twarn(text: string): void {\n\t\tconsole.warn(text);\n\t}\n\n\terror(text: string): void {\n\t\tconsole.error(text);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Logger } from './logger';\nimport { ConsoleLogger } from './console.logger';\n\n\n@NgModule({\n\tproviders: [{\n\t\tprovide: Logger,\n\t\tuseClass: ConsoleLogger\n\t}]\n})\nexport class LoggerModule {\n}\n","import { Injectable } from '@angular/core';\n\nimport { ItemEntity } from './item.entity';\nimport { OriginItemEntity } from './command/origin/origin-item-entity';\n\n@Injectable()\nexport class ItemEntityFactory {\n\n\tcreate(data: any): ItemEntity;\n\tcreate(data: Array<any>): Array<ItemEntity>;\n\tcreate(data: any): any {\n\n\t\tif (Array.isArray(data)) {\n\t\t\treturn this.createEntities(data);\n\t\t} else {\n\t\t\treturn this.createEntity(data);\n\t\t}\n\t}\n\n\tcreateEntities(data: Array<any>): Array<ItemEntity> {\n\t\treturn data.map((data: any) => this.createEntity(data));\n\t}\n\n\tprivate createEntity(item: OriginItemEntity | any): ItemEntity {\n\n\t\tif (item instanceof OriginItemEntity) {\n\t\t\treturn new ItemEntity(item.rawData, item.getPosition(), item.id, item.getVersion());\n\t\t} else {\n\t\t\treturn new ItemEntity(item, 0);\n\t\t}\n\t}\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-top-panel',\n\ttemplate: `\n\t\t\n\t\t<gui-structure-search-bar></gui-structure-search-bar>\n\t\t\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureTopPanelComponent extends SmartComponent {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\n}\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, OnInit, Renderer2, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { StructureCommandService } from '../../../../ui-api/structure/structure-command.service';\nimport { StructureReadModelService } from '../../../../ui-api/structure/structure-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-search-bar',\n\ttemplate: `\n\t\t<form #formRef\n\t\t\t  [formGroup]=\"searchForm\">\n\t\t\t<div class=\"gui-search-icon\"></div>\n\t\t\t<input formControlName=\"searchPhrase\" [placeholder]=\"'Search ...'\">\n\t\t</form>\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureSearchComponent extends SmartComponent implements OnInit, AfterViewInit {\n\n\t@ViewChild('formRef', { static: false })\n\tformRef: ElementRef;\n\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate renderer2: Renderer2,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureReadModelService: StructureReadModelService) {\n\t\tsuper();\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\t'searchPhrase': ''\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.observeChanges();\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.structureReadModelService\n\t\t\t.onRowHeight()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((rowHeight: number) => {\n\t\t\t\tthis.renderer2.setStyle(this.formRef.nativeElement, 'height', '30px');\n\t\t\t});\n\t}\n\n\tprivate observeChanges(): void {\n\t\tthis.searchForm\n\t\t\t.controls['searchPhrase']\n\t\t\t.valueChanges\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(200),\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((phrase: string) => {\n\t\t\t\tthis.structureCommandService.search(phrase);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StructureTopPanelComponent } from './structure.top-panel.component';\nimport { StructureSearchComponent } from './search/structure.search.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule\n\t],\n\tdeclarations: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t],\n\texports: [\n\t\tStructureTopPanelComponent,\n\t\tStructureSearchComponent\n\t]\n})\nexport class StructureTopPanelModule {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n\tselector: 'gui-structure-empty-source',\n\ttemplateUrl: `structure-empty-source.component.html`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-empty-source]': 'true'\n\t}\n})\nexport class StructureEmptySourceComponent {\n}\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../ui-api/structure/structure-command.service';\nimport { StructureColumnConfigService } from './structure.column-config.service';\nimport { StructureColumnMenuConfig } from './config/structure.column-menu-config';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { StructureColumnMenuConfigArchive } from './config/structure.column-menu-config.archive';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-trigger',\n\ttemplate: `\n\t\t<div #headerDialogContainer\n\t\t\t *ngIf=\"isEnabled()\"\n\t\t\t class=\"gui-header-menu-icon-wrapper\"\n\t\t\t (click)=\"openConfigDialog()\">\n\t\t\t<span class=\"gui-header-menu-icon\"></span>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigTriggerComponent extends SmartComponent implements OnInit {\n\n\t@ViewChild('headerDialogContainer', { static: false })\n\theaderDialogContainer: ElementRef;\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconfig: StructureColumnMenuConfig;\n\n\tconstructor(private elementRef: ElementRef,\n\t\t\t\tprivate changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate structureColumnMenuConfigArchive: StructureColumnMenuConfigArchive,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.structureColumnMenuConfigArchive\n\t\t\t.onValue()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((config: StructureColumnMenuConfig) => {\n\t\t\t\tthis.config = config;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\topenConfigDialog(): void {\n\t\tthis.structureColumnConfigService.open(this.headerDialogContainer, this.column);\n\t}\n\n\tcloseConfigDialog(): void {\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.config && this.config.isEnabled();\n\t}\n\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\nimport { SmartComponent } from '../../../../../../common/cdk/smart-component';\n\nimport { CompositionReadModelService } from '../../../../../composition/ui-api/composition-read-model.service';\nimport { CellTemplateWithContext } from '../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../composition/ui-api/composition.command-service';\n\n\n@Component({\n\tselector: 'gui-structure-menu-column-manager',\n\ttemplate: `\n\n\t\t<div *ngFor=\"let column of columns\">\n\n\t\t\t<gui-checkbox [checked]=\"column.isEnabled()\"\n\t\t\t\t\t\t  [disabled]=\"enabledColumnsCount === 1 && column.isEnabled()\"\n\t\t\t\t\t\t  (click)=\"toggleColumn(column)\">\n\n\t\t\t\t<ng-container\n\t\t\t\t\t\t*ngTemplateOutlet=\"column.viewTemplate;\n\t\t\t\t\t\t\t\t\t\t\tcontext: column.context\">\n\t\t\t\t</ng-container>\n\t\t\t</gui-checkbox>\n\t\t\t\n\t\t</div>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\thost: {\n\t\t'[class.gui-structure-menu-column-manager]': 'true'\n\t}\n})\nexport class StructureMenuColumnManagerComponent extends SmartComponent implements OnInit {\n\n\tcolumns: Array<CellTemplateWithContext>;\n\n\tenabledColumnsCount: number;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.compositionReadModelService\n\t\t\t.onAllColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.columns = columns;\n\t\t\t\tthis.enabledColumnsCount = this.columns\n\t\t\t\t\t\t\t\t\t\t\t   .map((c) => +c.isEnabled())\n\t\t\t\t\t\t\t\t\t\t\t   .reduce((accumulator, currentValue) => accumulator + currentValue);\n\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\ttoggleColumn(column: CellTemplateWithContext): void {\n\t\tevent.stopPropagation();\n\t\tif (column.isEnabled()) {\n\t\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\t\t} else {\n\t\t\tthis.compositionCommandService.enableColumn(column.getColumnId());\n\t\t}\n\t}\n}\n","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\n\nimport { Placement } from '@generic-ui/fabric';\n\nimport { SortStatus } from '../../../../../../composition/domain/command/column/sort/sort-status';\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureCommandService } from '../../../../../ui-api/structure/structure-command.service';\nimport { CompositionReadModelService } from '../../../../../../composition/ui-api/composition-read-model.service';\nimport { SmartComponent } from '../../../../../../../common/cdk/smart-component';\n\n@Component({\n\tselector: 'gui-structure-column-config-sort',\n\ttemplate: `\n\n\t\t<gui-dropdown [placement]=\"placement\"\n\t\t\t\t\t  [dropdownText]=\"'Column Sort'\"\n\t\t\t\t\t  [width]=\"225\"\n\t\t\t\t\t  [showOnHover]=\"true\"\n\t\t\t\t\t  class=\"gui-header-menu-dropdown\">\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.ASC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isAscSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Ascending<span class=\"gui-sort gui-sort-asc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.DESC)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isDescSort()\">\n\t\t\t\t<div class=\"gui-sort-title\">Descending<span class=\"gui-sort gui-sort-desc\"></span></div>\n\t\t\t</gui-dropdown-item>\n\n\t\t\t<gui-dropdown-item (click)=\"setSortOrder(status.NONE)\"\n\t\t\t\t\t\t\t   [class.gui-header-item-active]=\"isNoneSort()\">\n\t\t\t\tNone\n\t\t\t</gui-dropdown-item>\n\n\t\t</gui-dropdown>\n\t`\n})\nexport class StructureColumnConfigSortComponent extends SmartComponent implements OnInit {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tplacement: Placement = Placement.Right;\n\n\tstatus = SortStatus;\n\n\tsortStatus: SortStatus;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureCommandService: StructureCommandService,\n\t\t\t\tprivate compositionReadModelService: CompositionReadModelService) {\n\t\tsuper();\n\t}\n\n\tngOnInit() {\n\t\tthis.sortStatus = this.column.getSortStatus();\n\n\t\tthis.compositionReadModelService\n\t\t\t.onSortOrder(this.column.getFieldId())\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((sortStatus: SortStatus) => {\n\t\t\t\tthis.sortStatus = sortStatus;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tisAscSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.ASC;\n\t}\n\n\tisDescSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.DESC;\n\t}\n\n\tisNoneSort(): boolean {\n\t\treturn this.sortStatus === SortStatus.NONE;\n\t}\n\n\tsetSortOrder(sort: SortStatus): void {\n\t\tevent.stopPropagation();\n\t\tthis.structureCommandService.setSortOrder(this.column.getFieldId(), sort);\n\t}\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n\n@Component({\n\tselector: 'gui-structure-column-config-column-hide',\n\ttemplate: `\n\n\t\t<div class=\"gui-header-menu-item\"\n\t\t\t (click)=\"hideColumn(column)\">\n\t\t\tHide Column\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnHideComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\thideColumn(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.disableColumn(column.getColumnId());\n\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../../../composition/domain/read/definition/cell-template-with-context';\nimport { CompositionCommandService } from '../../../../../../composition/ui-api/composition.command-service';\nimport { StructureColumnConfigService } from '../../structure.column-config.service';\n\n@Component({\n\tselector: 'gui-structure-column-config-column-move',\n\ttemplate: `\n\t\t<div class=\"gui-header-menu-column-move\">\n\t\t\t<div class=\"gui-header-menu-column-move-left\"\n\t\t\t\t (click)=\"moveLeft(column)\">\n\t\t\t\tMove Left\n\t\t\t</div>\n\n\t\t\t<div class=\"gui-header-menu-column-move-right\"\n\t\t\t\t (click)=\"moveRight(column)\">\n\t\t\t\tMove Right\n\t\t\t</div>\n\t\t</div>\n\t`\n})\nexport class StructureColumnConfigColumnMoveComponent {\n\n\t@Input()\n\tcolumn: CellTemplateWithContext;\n\n\tconstructor(private compositionCommandService: CompositionCommandService,\n\t\t\t\tprivate structureColumnConfigService: StructureColumnConfigService) {\n\t}\n\n\tmoveLeft(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveLeft(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n\tmoveRight(column: CellTemplateWithContext): void {\n\t\tthis.compositionCommandService.moveRight(column.getColumnId());\n\t\tthis.structureColumnConfigService.close();\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StructureColumnConfigComponent } from './structure.column-config.component';\nimport { StructureColumnConfigTriggerComponent } from './structure.column-config-trigger.component';\nimport { StructureMenuColumnManagerComponent } from './column-manager/structure.menu-column-manager.component';\nimport { StructureColumnConfigSortComponent } from './main/sort/structure.column-config-sort.component';\nimport { StructureColumnConfigColumnHideComponent } from './main/hide/structure.column-config-column-hide.component';\nimport { StructureColumnConfigColumnMoveComponent } from './main/move/structure.column-config-column-move.component';\nimport { fabricImports } from '../../structure-fabric.imports';\n\nconst declarations = [\n\tStructureColumnConfigComponent,\n\tStructureColumnConfigTriggerComponent,\n\tStructureMenuColumnManagerComponent,\n\tStructureColumnConfigSortComponent,\n\tStructureColumnConfigColumnHideComponent,\n\tStructureColumnConfigColumnMoveComponent\n];\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tfabricImports\n\t],\n\tdeclarations: declarations,\n\texports: declarations\n})\nexport class StructureColumnMenuModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CellTemplateWithContext } from '../../../../composition/domain/read/definition/cell-template-with-context';\nimport { StructureId } from '../../../domain/structure-id';\nimport { StructureAggregationUiEventsRepository } from '../../../ui-api/structure/aggregation/structure.aggregation.ui-events-repository';\nimport { CompositionReadModelService } from '../../../../composition/ui-api/composition-read-model.service';\nimport { StructureAggregationsChangedEvent } from '../../../domain/structure/command/aggregation/structure.aggregations-changed.event';\nimport { SmartComponent } from '../../../../../common/cdk/smart-component';\nimport { SourceReadModelService } from '../../../ui-api/source/source-read-model.service';\n\n\n@Component({\n\tselector: 'gui-structure-aggregation-panel',\n\ttemplate: `\n\n\t\t<ng-container *ngIf=\"enabled && aggregations && !sourceEmpty\">\n\n\t\t\t<div *ngFor=\"let column of headerColumns\"\n\t\t\t\t [style.width.px]=\"column.width\"\n\t\t\t\t class=\"gui-header-cell gui-structure-aggregation-cell\">\n\n\t\t\t\t<ng-container *ngIf=\"aggregations && !!aggregations.get(column.getFieldId().getId())\">\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).count)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tCount: <span>{{ aggregations.get(column.getFieldId().getId()).count }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).distinct)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tDistinct: <span>{{ aggregations.get(column.getFieldId().getId()).distinct }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).sum)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span [gui-tooltip]=\"'Sum'\" \n\t\t\t\t\t\t\t\t  class=\"gui-math-symbol\">&sum;</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).sum }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).average)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div [gui-tooltip]=\"'Average'\"\n\t\t\t\t\t\t\t class=\"gui-mean\">\n\t\t\t\t\t\t\t<span>_</span><span>X</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).average }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).min)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div [gui-tooltip]=\"'Min'\">\n\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&and;</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).min }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\" isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).max)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div [gui-tooltip]=\"'Max'\">\n\t\t\t\t\t\t\t<span class=\"gui-math-symbol\">&or;</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).max }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).median)\" class=\"gui-structure-aggregation-value\">\n\n\t\t\t\t\t\t<div [gui-tooltip]=\"'Median'\"\n\t\t\t\t\t\t\t class=\"gui-median\">\n\t\t\t\t\t\t\t<span>~</span>\n\t\t\t\t\t\t\t<span>X</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span>{{ aggregations.get(column.getFieldId().getId()).median }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).truthy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tTruthy: <span>{{ aggregations.get(column.getFieldId().getId()).truthy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div *ngIf=\"isAggregateTypePresent(aggregations.get(column.getFieldId().getId()).falsy)\" class=\"gui-structure-aggregation-value\">\n\t\t\t\t\t\tFalsy: <span>{{ aggregations.get(column.getFieldId().getId()).falsy }}</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t</ng-container>\n\t\t\t</div>\n\n\t\t</ng-container>\n\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None\n})\nexport class StructureAggregationPanelComponent extends SmartComponent {\n\n\t@Input()\n\tenabled: boolean;\n\n\tsourceEmpty: boolean = false;\n\n\theaderColumns: Array<CellTemplateWithContext>;\n\n\taggregations: Map<string, any>;\n\n\tconstructor(private changeDetectorRef: ChangeDetectorRef,\n\t\t\t\tprivate structureId: StructureId,\n\t\t\t\tprivate structureAggregationUiEventsRepository: StructureAggregationUiEventsRepository,\n\t\t\t\tprivate sourceReadModelService: SourceReadModelService,\n\t\t\t\tprivate readonly compositionQueryService: CompositionReadModelService) {\n\t\tsuper();\n\n\t\tthis.structureAggregationUiEventsRepository\n\t\t\t.onAggregationsChanged(this.structureId)\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((event: StructureAggregationsChangedEvent) => {\n\n\t\t\t\tthis.aggregations = event.getAggregations();\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\t}\n\n\tngOnInit() {\n\n\t\tthis.sourceReadModelService\n\t\t\t.onEntitiesSize()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((size: number) => {\n\t\t\t\tthis.sourceEmpty = size === 0;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t\tthis.compositionQueryService\n\t\t\t.onHeaderColumns()\n\t\t\t.pipe(\n\t\t\t\tthis.takeUntil()\n\t\t\t)\n\t\t\t.subscribe((columns: Array<CellTemplateWithContext>) => {\n\t\t\t\tthis.headerColumns = columns;\n\t\t\t\tthis.changeDetectorRef.detectChanges();\n\t\t\t});\n\n\t}\n\n\tisAggregateTypePresent(aggregation: number): boolean {\n\t\treturn aggregation !== undefined && aggregation !== null;\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { StructureAggregationArchive } from './structure.aggregation.archive';\nimport { StructureAggregationConfigService } from './structure.aggregation-config.service';\nimport { StructureAggregationPanelConfigConverter } from './structure.aggregation-panel.config-converter';\nimport { StructureAggregationPanelComponent } from './structure.aggregation-panel.component';\n\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFabricModule\n\t],\n\tdeclarations: [\n\t\tStructureAggregationPanelComponent\n\t],\n\texports: [\n\t\tStructureAggregationPanelComponent\n\t],\n\tproviders: [\n\t\tStructureAggregationArchive,\n\t\tStructureAggregationConfigService,\n\t\tStructureAggregationPanelConfigConverter\n\t]\n})\nexport class StructureAggregationPanelModule {\n}\n","import { Inject, ModuleWithProviders, NgModule, PLATFORM_ID } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FabricModule } from '@generic-ui/fabric';\n\nimport { COMMAND_LOGGER_ENABLED, EVENT_LOGGER_ENABLED, HermesModule } from '@generic-ui/hermes';\n\nimport { fabricImports } from './structure-fabric.imports';\nimport { StructurePagingModule } from './paging/structure-paging.module';\nimport { StructureInfoPanelModule } from './panel/info/structure.info-panel.module';\nimport { CompositionModule } from '../../composition/ui-api/composition.module';\nimport { StructureComponent } from './structure.component';\nimport { StructureHeaderComponent } from './header/structure-header.component';\nimport { StructureHeaderColumnsComponent } from './header/columns/structure-header-columns.component';\nimport { StructureHeaderFiltersComponent } from './header/filters/structure-header-filters.component';\nimport { StructureHeaderFilterComponent } from './header/filters/structure.header-filter.component';\nimport { StructureContentComponent } from './content/structure-content.component';\nimport { StructureRowComponent } from './content/row/structure-row.component';\nimport { StructureCellComponent } from './content/cell/structure.cell.component';\nimport { StructureContainerComponent } from './content/structure-container.component';\nimport { StructureQuickFiltersComponent } from './header/quick-filters/structure.quick-filters.component';\nimport { StructureBlueprintComponent } from './blueprint/structure.blueprint.component';\nimport { StructureColumnConfigComponent } from './header/menu/structure.column-config.component';\nimport { STRUCTURE_CSS_CLASS_NAME } from '../ui-api/structure/structure-tokens';\nimport { StructureDefinition } from './structure-definition';\nimport { SourceReadModelService } from '../ui-api/source/source-read-model.service';\nimport { StructureIdGenerator } from './structure-id.generator';\nimport { structureProviders } from '../ui-api/structure/structure.providers';\nimport { StructureModuleConfig } from './structure-module-config';\nimport { LoggerModule } from '../../../common/cdk/logger/logger.module';\nimport { ItemEntityFactory } from '../domain/source/item.entity-factory';\nimport { StructureTopPanelModule } from './panel/top/structure.top-panel.module';\nimport { StructureEmptySourceComponent } from './content/empty-source/structure-empty-source.component';\nimport { StructureColumnMenuModule } from './header/menu/structure.column-menu.module';\nimport { StructureAggregationPanelModule } from './panel/aggregation/structure.aggregation-panel.module';\n\nexport function createStructureDefinition() {\n\treturn new StructureDefinition.DefaultBuilder().build();\n}\n\n\nconst imports = [\n\tCommonModule,\n\tReactiveFormsModule,\n\tHermesModule,\n\t// .withConfig({\n\t// \tloggers: false\n\t// }),\n\t...fabricImports,\n\n\tStructurePagingModule,\n\tStructureInfoPanelModule,\n\tStructureAggregationPanelModule,\n\tStructureTopPanelModule,\n\tStructureColumnMenuModule,\n\n\tCompositionModule,\n\n\tLoggerModule\n];\n\nconst declarations = [\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureHeaderColumnsComponent,\n\tStructureHeaderFiltersComponent,\n\tStructureHeaderFilterComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureCellComponent,\n\tStructureContainerComponent,\n\tStructureEmptySourceComponent,\n\tStructureQuickFiltersComponent,\n\tStructureBlueprintComponent\n];\n\nconst entryComponents = [\n\tStructureColumnConfigComponent\n];\n\nconst providers = [\n\t{\n\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\tuseValue: 'structure'\n\t},\n\t{\n\t\tprovide: StructureDefinition,\n\t\tuseFactory: createStructureDefinition\n\t},\n\tItemEntityFactory,\n\n\tSourceReadModelService,\n\n\tStructureIdGenerator,\n\n\t...structureProviders\n\n];\n\nconst exportDeclarations = [\n\tFabricModule,\n\tStructureComponent,\n\tStructureHeaderComponent,\n\tStructureContentComponent,\n\tStructureRowComponent,\n\tStructureContainerComponent,\n\n\t...fabricImports,\n\tStructurePagingModule\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class StructureModule {\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic withConfig(structureConfig: StructureModuleConfig = { cssClassName: '', hermesModuleConfig: { loggers: false } }): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: StructureModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: STRUCTURE_CSS_CLASS_NAME,\n\t\t\t\t\tuseValue: structureConfig.cssClassName\n\t\t\t\t},\n\t\t\t\t{ provide: COMMAND_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t{ provide: EVENT_LOGGER_ENABLED, useValue: structureConfig.hermesModuleConfig.loggers },\n\t\t\t\t...providers\n\t\t\t]\n\t\t};\n\t}\n\n\tconstructor(@Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\twindow['hermesApi'].loggers = false;\n\t\t}\n\t}\n\n}\n","import { NgModule, Provider } from '@angular/core';\n\nimport { GridComponent } from '../ui/grid/grid.component';\n\nimport { StructureModule } from '../../../lib/structure/ui/structure.module';\n\nimport { GridIdGenerator } from '../ui/grid/register/grid-id.generator';\nimport { GridRegister } from '../ui/grid/register/grid.register';\n\n\nconst imports = [\n\tStructureModule.withConfig({\n\t\tcssClassName: 'grid',\n\t\thermesModuleConfig: {\n\t\t\tloggers: true\n\t\t}\n\t})\n];\n\nconst declarations = [\n\tGridComponent\n];\n\nconst providers = [\n\tGridIdGenerator,\n\tGridRegister\n] as Array<Provider>;\n\nconst exportDeclarations = [\n\tGridComponent\n];\n\nconst entryComponents = [] as Array<any>;\n\nconst elementComponents = [\n\tGridComponent\n];\n\n@NgModule({\n\timports,\n\tdeclarations,\n\tproviders,\n\texports: exportDeclarations,\n\tentryComponents\n})\nexport class GridModule {\n\n\tstatic entryComponents = [...entryComponents];\n\n\tstatic exportDeclarations = [...exportDeclarations];\n\n\tstatic elementComponents = [...elementComponents];\n}\n"]}